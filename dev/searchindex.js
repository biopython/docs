Search.setIndex({"docnames": ["Tutorial/chapter_align", "Tutorial/chapter_appendix", "Tutorial/chapter_bibliography", "Tutorial/chapter_blast", "Tutorial/chapter_cluster", "Tutorial/chapter_contributing", "Tutorial/chapter_cookbook", "Tutorial/chapter_entrez", "Tutorial/chapter_graphics", "Tutorial/chapter_introduction", "Tutorial/chapter_kegg", "Tutorial/chapter_motifs", "Tutorial/chapter_msa", "Tutorial/chapter_pairwise", "Tutorial/chapter_pairwise2", "Tutorial/chapter_pdb", "Tutorial/chapter_phenotype", "Tutorial/chapter_phylo", "Tutorial/chapter_popgen", "Tutorial/chapter_quick_start", "Tutorial/chapter_searchio", "Tutorial/chapter_seq_annot", "Tutorial/chapter_seq_objects", "Tutorial/chapter_seqio", "Tutorial/chapter_testing", "Tutorial/chapter_uniprot", "Tutorial/index", "api/Bio", "api/Bio.Affy", "api/Bio.Affy.CelFile", "api/Bio.Align", "api/Bio.Align.AlignInfo", "api/Bio.Align.Applications", "api/Bio.Align.a2m", "api/Bio.Align.analysis", "api/Bio.Align.bed", "api/Bio.Align.bigbed", "api/Bio.Align.bigmaf", "api/Bio.Align.bigpsl", "api/Bio.Align.chain", "api/Bio.Align.clustal", "api/Bio.Align.emboss", "api/Bio.Align.exonerate", "api/Bio.Align.fasta", "api/Bio.Align.hhr", "api/Bio.Align.interfaces", "api/Bio.Align.maf", "api/Bio.Align.mauve", "api/Bio.Align.msf", "api/Bio.Align.nexus", "api/Bio.Align.phylip", "api/Bio.Align.psl", "api/Bio.Align.sam", "api/Bio.Align.stockholm", "api/Bio.Align.substitution_matrices", "api/Bio.Align.tabular", "api/Bio.AlignIO", "api/Bio.AlignIO.ClustalIO", "api/Bio.AlignIO.EmbossIO", "api/Bio.AlignIO.FastaIO", "api/Bio.AlignIO.Interfaces", "api/Bio.AlignIO.MafIO", "api/Bio.AlignIO.MauveIO", "api/Bio.AlignIO.MsfIO", "api/Bio.AlignIO.NexusIO", "api/Bio.AlignIO.PhylipIO", "api/Bio.AlignIO.StockholmIO", "api/Bio.Application", "api/Bio.Blast", "api/Bio.Blast.Applications", "api/Bio.Blast.NCBIWWW", "api/Bio.Blast.NCBIXML", "api/Bio.CAPS", "api/Bio.Cluster", "api/Bio.Compass", "api/Bio.Data", "api/Bio.Data.CodonTable", "api/Bio.Data.IUPACData", "api/Bio.Data.PDBData", "api/Bio.Emboss", "api/Bio.Emboss.Applications", "api/Bio.Emboss.Primer3", "api/Bio.Emboss.PrimerSearch", "api/Bio.Entrez", "api/Bio.Entrez.Parser", "api/Bio.ExPASy", "api/Bio.ExPASy.Enzyme", "api/Bio.ExPASy.Prodoc", "api/Bio.ExPASy.Prosite", "api/Bio.ExPASy.ScanProsite", "api/Bio.ExPASy.cellosaurus", "api/Bio.File", "api/Bio.GenBank", "api/Bio.GenBank.Record", "api/Bio.GenBank.Scanner", "api/Bio.GenBank.utils", "api/Bio.Geo", "api/Bio.Geo.Record", "api/Bio.Graphics", "api/Bio.Graphics.BasicChromosome", "api/Bio.Graphics.ColorSpiral", "api/Bio.Graphics.Comparative", "api/Bio.Graphics.DisplayRepresentation", "api/Bio.Graphics.Distribution", "api/Bio.Graphics.GenomeDiagram", "api/Bio.Graphics.KGML_vis", "api/Bio.HMM", "api/Bio.HMM.DynamicProgramming", "api/Bio.HMM.MarkovModel", "api/Bio.HMM.Trainer", "api/Bio.HMM.Utilities", "api/Bio.KEGG", "api/Bio.KEGG.Compound", "api/Bio.KEGG.Enzyme", "api/Bio.KEGG.Gene", "api/Bio.KEGG.KGML", "api/Bio.KEGG.KGML.KGML_parser", "api/Bio.KEGG.KGML.KGML_pathway", "api/Bio.KEGG.Map", "api/Bio.KEGG.REST", "api/Bio.LogisticRegression", "api/Bio.MarkovModel", "api/Bio.MaxEntropy", "api/Bio.Medline", "api/Bio.NMR", "api/Bio.NMR.NOEtools", "api/Bio.NMR.xpktools", "api/Bio.NaiveBayes", "api/Bio.Nexus", "api/Bio.Nexus.Nexus", "api/Bio.Nexus.Nodes", "api/Bio.Nexus.StandardData", "api/Bio.Nexus.Trees", "api/Bio.PDB", "api/Bio.PDB.AbstractPropertyMap", "api/Bio.PDB.Atom", "api/Bio.PDB.Chain", "api/Bio.PDB.DSSP", "api/Bio.PDB.Dice", "api/Bio.PDB.Entity", "api/Bio.PDB.FragmentMapper", "api/Bio.PDB.HSExposure", "api/Bio.PDB.MMCIF2Dict", "api/Bio.PDB.MMCIFParser", "api/Bio.PDB.Model", "api/Bio.PDB.NACCESS", "api/Bio.PDB.NeighborSearch", "api/Bio.PDB.PDBExceptions", "api/Bio.PDB.PDBIO", "api/Bio.PDB.PDBList", "api/Bio.PDB.PDBMLParser", "api/Bio.PDB.PDBParser", "api/Bio.PDB.PICIO", "api/Bio.PDB.PSEA", "api/Bio.PDB.Polypeptide", "api/Bio.PDB.Residue", "api/Bio.PDB.ResidueDepth", "api/Bio.PDB.SASA", "api/Bio.PDB.SCADIO", "api/Bio.PDB.Selection", "api/Bio.PDB.Structure", "api/Bio.PDB.StructureAlignment", "api/Bio.PDB.StructureBuilder", "api/Bio.PDB.Superimposer", "api/Bio.PDB.alphafold_db", "api/Bio.PDB.cealign", "api/Bio.PDB.ic_data", "api/Bio.PDB.ic_rebuild", "api/Bio.PDB.internal_coords", "api/Bio.PDB.mmcifio", "api/Bio.PDB.mmtf", "api/Bio.PDB.mmtf.DefaultParser", "api/Bio.PDB.mmtf.mmtfio", "api/Bio.PDB.parse_pdb_header", "api/Bio.PDB.qcprot", "api/Bio.PDB.vectors", "api/Bio.Pathway", "api/Bio.Pathway.Rep", "api/Bio.Pathway.Rep.Graph", "api/Bio.Pathway.Rep.MultiGraph", "api/Bio.Phylo", "api/Bio.Phylo.Applications", "api/Bio.Phylo.BaseTree", "api/Bio.Phylo.CDAO", "api/Bio.Phylo.CDAOIO", "api/Bio.Phylo.Consensus", "api/Bio.Phylo.NeXML", "api/Bio.Phylo.NeXMLIO", "api/Bio.Phylo.Newick", "api/Bio.Phylo.NewickIO", "api/Bio.Phylo.NexusIO", "api/Bio.Phylo.PAML", "api/Bio.Phylo.PAML.baseml", "api/Bio.Phylo.PAML.chi2", "api/Bio.Phylo.PAML.codeml", "api/Bio.Phylo.PAML.yn00", "api/Bio.Phylo.PhyloXML", "api/Bio.Phylo.PhyloXMLIO", "api/Bio.Phylo.TreeConstruction", "api/Bio.PopGen", "api/Bio.PopGen.GenePop", "api/Bio.PopGen.GenePop.Controller", "api/Bio.PopGen.GenePop.EasyController", "api/Bio.PopGen.GenePop.FileParser", "api/Bio.PopGen.GenePop.LargeFileParser", "api/Bio.Restriction", "api/Bio.Restriction.PrintFormat", "api/Bio.Restriction.Restriction_Dictionary", "api/Bio.SCOP", "api/Bio.SCOP.Cla", "api/Bio.SCOP.Des", "api/Bio.SCOP.Dom", "api/Bio.SCOP.Hie", "api/Bio.SCOP.Raf", "api/Bio.SCOP.Residues", "api/Bio.SVDSuperimposer", "api/Bio.SearchIO", "api/Bio.SearchIO.BlastIO", "api/Bio.SearchIO.BlastIO.blast_tab", "api/Bio.SearchIO.BlastIO.blast_xml", "api/Bio.SearchIO.BlatIO", "api/Bio.SearchIO.ExonerateIO", "api/Bio.SearchIO.ExonerateIO.exonerate_cigar", "api/Bio.SearchIO.ExonerateIO.exonerate_text", "api/Bio.SearchIO.ExonerateIO.exonerate_vulgar", "api/Bio.SearchIO.FastaIO", "api/Bio.SearchIO.HHsuiteIO", "api/Bio.SearchIO.HHsuiteIO.hhsuite2_text", "api/Bio.SearchIO.HmmerIO", "api/Bio.SearchIO.HmmerIO.hmmer2_text", "api/Bio.SearchIO.HmmerIO.hmmer3_domtab", "api/Bio.SearchIO.HmmerIO.hmmer3_tab", "api/Bio.SearchIO.HmmerIO.hmmer3_text", "api/Bio.SearchIO.InterproscanIO", "api/Bio.SearchIO.InterproscanIO.interproscan_xml", "api/Bio.Seq", "api/Bio.SeqFeature", "api/Bio.SeqIO", "api/Bio.SeqIO.AbiIO", "api/Bio.SeqIO.AceIO", "api/Bio.SeqIO.FastaIO", "api/Bio.SeqIO.GckIO", "api/Bio.SeqIO.GfaIO", "api/Bio.SeqIO.IgIO", "api/Bio.SeqIO.InsdcIO", "api/Bio.SeqIO.Interfaces", "api/Bio.SeqIO.NibIO", "api/Bio.SeqIO.PdbIO", "api/Bio.SeqIO.PhdIO", "api/Bio.SeqIO.PirIO", "api/Bio.SeqIO.QualityIO", "api/Bio.SeqIO.SeqXmlIO", "api/Bio.SeqIO.SffIO", "api/Bio.SeqIO.SnapGeneIO", "api/Bio.SeqIO.SwissIO", "api/Bio.SeqIO.TabIO", "api/Bio.SeqIO.TwoBitIO", "api/Bio.SeqIO.UniprotIO", "api/Bio.SeqIO.XdnaIO", "api/Bio.SeqRecord", "api/Bio.SeqUtils", "api/Bio.SeqUtils.CheckSum", "api/Bio.SeqUtils.IsoelectricPoint", "api/Bio.SeqUtils.MeltingTemp", "api/Bio.SeqUtils.ProtParam", "api/Bio.SeqUtils.ProtParamData", "api/Bio.SeqUtils.lcc", "api/Bio.Sequencing", "api/Bio.Sequencing.Ace", "api/Bio.Sequencing.Applications", "api/Bio.Sequencing.Phd", "api/Bio.SwissProt", "api/Bio.SwissProt.KeyWList", "api/Bio.TogoWS", "api/Bio.UniGene", "api/Bio.UniProt", "api/Bio.UniProt.GOA", "api/Bio.bgzf", "api/Bio.codonalign", "api/Bio.codonalign.codonalignment", "api/Bio.codonalign.codonseq", "api/Bio.kNN", "api/Bio.motifs", "api/Bio.motifs.alignace", "api/Bio.motifs.applications", "api/Bio.motifs.clusterbuster", "api/Bio.motifs.jaspar", "api/Bio.motifs.jaspar.db", "api/Bio.motifs.mast", "api/Bio.motifs.matrix", "api/Bio.motifs.meme", "api/Bio.motifs.minimal", "api/Bio.motifs.pfm", "api/Bio.motifs.thresholds", "api/Bio.motifs.transfac", "api/Bio.motifs.xms", "api/Bio.pairwise2", "api/Bio.phenotype", "api/Bio.phenotype.phen_micro", "api/Bio.phenotype.pm_fitting", "api/BioSQL", "api/BioSQL.BioSeq", "api/BioSQL.BioSeqDatabase", "api/BioSQL.DBUtils", "api/BioSQL.Loader", "api/index", "index"], "filenames": ["Tutorial/chapter_align.rst", "Tutorial/chapter_appendix.rst", "Tutorial/chapter_bibliography.rst", "Tutorial/chapter_blast.rst", "Tutorial/chapter_cluster.rst", "Tutorial/chapter_contributing.rst", "Tutorial/chapter_cookbook.rst", "Tutorial/chapter_entrez.rst", "Tutorial/chapter_graphics.rst", "Tutorial/chapter_introduction.rst", "Tutorial/chapter_kegg.rst", "Tutorial/chapter_motifs.rst", "Tutorial/chapter_msa.rst", "Tutorial/chapter_pairwise.rst", "Tutorial/chapter_pairwise2.rst", "Tutorial/chapter_pdb.rst", "Tutorial/chapter_phenotype.rst", "Tutorial/chapter_phylo.rst", "Tutorial/chapter_popgen.rst", "Tutorial/chapter_quick_start.rst", "Tutorial/chapter_searchio.rst", "Tutorial/chapter_seq_annot.rst", "Tutorial/chapter_seq_objects.rst", "Tutorial/chapter_seqio.rst", "Tutorial/chapter_testing.rst", "Tutorial/chapter_uniprot.rst", "Tutorial/index.rst", "api/Bio.rst", "api/Bio.Affy.rst", "api/Bio.Affy.CelFile.rst", "api/Bio.Align.rst", "api/Bio.Align.AlignInfo.rst", "api/Bio.Align.Applications.rst", "api/Bio.Align.a2m.rst", "api/Bio.Align.analysis.rst", "api/Bio.Align.bed.rst", "api/Bio.Align.bigbed.rst", "api/Bio.Align.bigmaf.rst", "api/Bio.Align.bigpsl.rst", "api/Bio.Align.chain.rst", "api/Bio.Align.clustal.rst", "api/Bio.Align.emboss.rst", "api/Bio.Align.exonerate.rst", "api/Bio.Align.fasta.rst", "api/Bio.Align.hhr.rst", "api/Bio.Align.interfaces.rst", "api/Bio.Align.maf.rst", "api/Bio.Align.mauve.rst", "api/Bio.Align.msf.rst", "api/Bio.Align.nexus.rst", "api/Bio.Align.phylip.rst", "api/Bio.Align.psl.rst", "api/Bio.Align.sam.rst", "api/Bio.Align.stockholm.rst", "api/Bio.Align.substitution_matrices.rst", "api/Bio.Align.tabular.rst", "api/Bio.AlignIO.rst", "api/Bio.AlignIO.ClustalIO.rst", "api/Bio.AlignIO.EmbossIO.rst", "api/Bio.AlignIO.FastaIO.rst", "api/Bio.AlignIO.Interfaces.rst", "api/Bio.AlignIO.MafIO.rst", "api/Bio.AlignIO.MauveIO.rst", "api/Bio.AlignIO.MsfIO.rst", "api/Bio.AlignIO.NexusIO.rst", "api/Bio.AlignIO.PhylipIO.rst", "api/Bio.AlignIO.StockholmIO.rst", "api/Bio.Application.rst", "api/Bio.Blast.rst", "api/Bio.Blast.Applications.rst", "api/Bio.Blast.NCBIWWW.rst", "api/Bio.Blast.NCBIXML.rst", "api/Bio.CAPS.rst", "api/Bio.Cluster.rst", "api/Bio.Compass.rst", "api/Bio.Data.rst", "api/Bio.Data.CodonTable.rst", "api/Bio.Data.IUPACData.rst", "api/Bio.Data.PDBData.rst", "api/Bio.Emboss.rst", "api/Bio.Emboss.Applications.rst", "api/Bio.Emboss.Primer3.rst", "api/Bio.Emboss.PrimerSearch.rst", "api/Bio.Entrez.rst", "api/Bio.Entrez.Parser.rst", "api/Bio.ExPASy.rst", "api/Bio.ExPASy.Enzyme.rst", "api/Bio.ExPASy.Prodoc.rst", "api/Bio.ExPASy.Prosite.rst", "api/Bio.ExPASy.ScanProsite.rst", "api/Bio.ExPASy.cellosaurus.rst", "api/Bio.File.rst", "api/Bio.GenBank.rst", "api/Bio.GenBank.Record.rst", "api/Bio.GenBank.Scanner.rst", "api/Bio.GenBank.utils.rst", "api/Bio.Geo.rst", "api/Bio.Geo.Record.rst", "api/Bio.Graphics.rst", "api/Bio.Graphics.BasicChromosome.rst", "api/Bio.Graphics.ColorSpiral.rst", "api/Bio.Graphics.Comparative.rst", "api/Bio.Graphics.DisplayRepresentation.rst", "api/Bio.Graphics.Distribution.rst", "api/Bio.Graphics.GenomeDiagram.rst", "api/Bio.Graphics.KGML_vis.rst", "api/Bio.HMM.rst", "api/Bio.HMM.DynamicProgramming.rst", "api/Bio.HMM.MarkovModel.rst", "api/Bio.HMM.Trainer.rst", "api/Bio.HMM.Utilities.rst", "api/Bio.KEGG.rst", "api/Bio.KEGG.Compound.rst", "api/Bio.KEGG.Enzyme.rst", "api/Bio.KEGG.Gene.rst", "api/Bio.KEGG.KGML.rst", "api/Bio.KEGG.KGML.KGML_parser.rst", "api/Bio.KEGG.KGML.KGML_pathway.rst", "api/Bio.KEGG.Map.rst", "api/Bio.KEGG.REST.rst", "api/Bio.LogisticRegression.rst", "api/Bio.MarkovModel.rst", "api/Bio.MaxEntropy.rst", "api/Bio.Medline.rst", "api/Bio.NMR.rst", "api/Bio.NMR.NOEtools.rst", "api/Bio.NMR.xpktools.rst", "api/Bio.NaiveBayes.rst", "api/Bio.Nexus.rst", "api/Bio.Nexus.Nexus.rst", "api/Bio.Nexus.Nodes.rst", "api/Bio.Nexus.StandardData.rst", "api/Bio.Nexus.Trees.rst", "api/Bio.PDB.rst", "api/Bio.PDB.AbstractPropertyMap.rst", "api/Bio.PDB.Atom.rst", "api/Bio.PDB.Chain.rst", "api/Bio.PDB.DSSP.rst", "api/Bio.PDB.Dice.rst", "api/Bio.PDB.Entity.rst", "api/Bio.PDB.FragmentMapper.rst", "api/Bio.PDB.HSExposure.rst", "api/Bio.PDB.MMCIF2Dict.rst", "api/Bio.PDB.MMCIFParser.rst", "api/Bio.PDB.Model.rst", "api/Bio.PDB.NACCESS.rst", "api/Bio.PDB.NeighborSearch.rst", "api/Bio.PDB.PDBExceptions.rst", "api/Bio.PDB.PDBIO.rst", "api/Bio.PDB.PDBList.rst", "api/Bio.PDB.PDBMLParser.rst", "api/Bio.PDB.PDBParser.rst", "api/Bio.PDB.PICIO.rst", "api/Bio.PDB.PSEA.rst", "api/Bio.PDB.Polypeptide.rst", "api/Bio.PDB.Residue.rst", "api/Bio.PDB.ResidueDepth.rst", "api/Bio.PDB.SASA.rst", "api/Bio.PDB.SCADIO.rst", "api/Bio.PDB.Selection.rst", "api/Bio.PDB.Structure.rst", "api/Bio.PDB.StructureAlignment.rst", "api/Bio.PDB.StructureBuilder.rst", "api/Bio.PDB.Superimposer.rst", "api/Bio.PDB.alphafold_db.rst", "api/Bio.PDB.cealign.rst", "api/Bio.PDB.ic_data.rst", "api/Bio.PDB.ic_rebuild.rst", "api/Bio.PDB.internal_coords.rst", "api/Bio.PDB.mmcifio.rst", "api/Bio.PDB.mmtf.rst", "api/Bio.PDB.mmtf.DefaultParser.rst", "api/Bio.PDB.mmtf.mmtfio.rst", "api/Bio.PDB.parse_pdb_header.rst", "api/Bio.PDB.qcprot.rst", "api/Bio.PDB.vectors.rst", "api/Bio.Pathway.rst", "api/Bio.Pathway.Rep.rst", "api/Bio.Pathway.Rep.Graph.rst", "api/Bio.Pathway.Rep.MultiGraph.rst", "api/Bio.Phylo.rst", "api/Bio.Phylo.Applications.rst", "api/Bio.Phylo.BaseTree.rst", "api/Bio.Phylo.CDAO.rst", "api/Bio.Phylo.CDAOIO.rst", "api/Bio.Phylo.Consensus.rst", "api/Bio.Phylo.NeXML.rst", "api/Bio.Phylo.NeXMLIO.rst", "api/Bio.Phylo.Newick.rst", "api/Bio.Phylo.NewickIO.rst", "api/Bio.Phylo.NexusIO.rst", "api/Bio.Phylo.PAML.rst", "api/Bio.Phylo.PAML.baseml.rst", "api/Bio.Phylo.PAML.chi2.rst", "api/Bio.Phylo.PAML.codeml.rst", "api/Bio.Phylo.PAML.yn00.rst", "api/Bio.Phylo.PhyloXML.rst", "api/Bio.Phylo.PhyloXMLIO.rst", "api/Bio.Phylo.TreeConstruction.rst", "api/Bio.PopGen.rst", "api/Bio.PopGen.GenePop.rst", "api/Bio.PopGen.GenePop.Controller.rst", "api/Bio.PopGen.GenePop.EasyController.rst", "api/Bio.PopGen.GenePop.FileParser.rst", "api/Bio.PopGen.GenePop.LargeFileParser.rst", "api/Bio.Restriction.rst", "api/Bio.Restriction.PrintFormat.rst", "api/Bio.Restriction.Restriction_Dictionary.rst", "api/Bio.SCOP.rst", "api/Bio.SCOP.Cla.rst", "api/Bio.SCOP.Des.rst", "api/Bio.SCOP.Dom.rst", "api/Bio.SCOP.Hie.rst", "api/Bio.SCOP.Raf.rst", "api/Bio.SCOP.Residues.rst", "api/Bio.SVDSuperimposer.rst", "api/Bio.SearchIO.rst", "api/Bio.SearchIO.BlastIO.rst", "api/Bio.SearchIO.BlastIO.blast_tab.rst", "api/Bio.SearchIO.BlastIO.blast_xml.rst", "api/Bio.SearchIO.BlatIO.rst", "api/Bio.SearchIO.ExonerateIO.rst", "api/Bio.SearchIO.ExonerateIO.exonerate_cigar.rst", "api/Bio.SearchIO.ExonerateIO.exonerate_text.rst", "api/Bio.SearchIO.ExonerateIO.exonerate_vulgar.rst", "api/Bio.SearchIO.FastaIO.rst", "api/Bio.SearchIO.HHsuiteIO.rst", "api/Bio.SearchIO.HHsuiteIO.hhsuite2_text.rst", "api/Bio.SearchIO.HmmerIO.rst", "api/Bio.SearchIO.HmmerIO.hmmer2_text.rst", "api/Bio.SearchIO.HmmerIO.hmmer3_domtab.rst", "api/Bio.SearchIO.HmmerIO.hmmer3_tab.rst", "api/Bio.SearchIO.HmmerIO.hmmer3_text.rst", "api/Bio.SearchIO.InterproscanIO.rst", "api/Bio.SearchIO.InterproscanIO.interproscan_xml.rst", "api/Bio.Seq.rst", "api/Bio.SeqFeature.rst", "api/Bio.SeqIO.rst", "api/Bio.SeqIO.AbiIO.rst", "api/Bio.SeqIO.AceIO.rst", "api/Bio.SeqIO.FastaIO.rst", "api/Bio.SeqIO.GckIO.rst", "api/Bio.SeqIO.GfaIO.rst", "api/Bio.SeqIO.IgIO.rst", "api/Bio.SeqIO.InsdcIO.rst", "api/Bio.SeqIO.Interfaces.rst", "api/Bio.SeqIO.NibIO.rst", "api/Bio.SeqIO.PdbIO.rst", "api/Bio.SeqIO.PhdIO.rst", "api/Bio.SeqIO.PirIO.rst", "api/Bio.SeqIO.QualityIO.rst", "api/Bio.SeqIO.SeqXmlIO.rst", "api/Bio.SeqIO.SffIO.rst", "api/Bio.SeqIO.SnapGeneIO.rst", "api/Bio.SeqIO.SwissIO.rst", "api/Bio.SeqIO.TabIO.rst", "api/Bio.SeqIO.TwoBitIO.rst", "api/Bio.SeqIO.UniprotIO.rst", "api/Bio.SeqIO.XdnaIO.rst", "api/Bio.SeqRecord.rst", "api/Bio.SeqUtils.rst", "api/Bio.SeqUtils.CheckSum.rst", "api/Bio.SeqUtils.IsoelectricPoint.rst", "api/Bio.SeqUtils.MeltingTemp.rst", "api/Bio.SeqUtils.ProtParam.rst", "api/Bio.SeqUtils.ProtParamData.rst", "api/Bio.SeqUtils.lcc.rst", "api/Bio.Sequencing.rst", "api/Bio.Sequencing.Ace.rst", "api/Bio.Sequencing.Applications.rst", "api/Bio.Sequencing.Phd.rst", "api/Bio.SwissProt.rst", "api/Bio.SwissProt.KeyWList.rst", "api/Bio.TogoWS.rst", "api/Bio.UniGene.rst", "api/Bio.UniProt.rst", "api/Bio.UniProt.GOA.rst", "api/Bio.bgzf.rst", "api/Bio.codonalign.rst", "api/Bio.codonalign.codonalignment.rst", "api/Bio.codonalign.codonseq.rst", "api/Bio.kNN.rst", "api/Bio.motifs.rst", "api/Bio.motifs.alignace.rst", "api/Bio.motifs.applications.rst", "api/Bio.motifs.clusterbuster.rst", "api/Bio.motifs.jaspar.rst", "api/Bio.motifs.jaspar.db.rst", "api/Bio.motifs.mast.rst", "api/Bio.motifs.matrix.rst", "api/Bio.motifs.meme.rst", "api/Bio.motifs.minimal.rst", "api/Bio.motifs.pfm.rst", "api/Bio.motifs.thresholds.rst", "api/Bio.motifs.transfac.rst", "api/Bio.motifs.xms.rst", "api/Bio.pairwise2.rst", "api/Bio.phenotype.rst", "api/Bio.phenotype.phen_micro.rst", "api/Bio.phenotype.pm_fitting.rst", "api/BioSQL.rst", "api/BioSQL.BioSeq.rst", "api/BioSQL.BioSeqDatabase.rst", "api/BioSQL.DBUtils.rst", "api/BioSQL.Loader.rst", "api/index.rst", "index.rst"], "titles": ["Sequence alignments", "Appendix: Useful stuff about Python", "Bibliography", "BLAST (new)", "Cluster analysis", "Where to go from here \u2013 contributing to Biopython", "Cookbook \u2013 Cool things to do with it", "Accessing NCBI\u2019s Entrez databases", "Graphics including GenomeDiagram", "Introduction", "KEGG", "Sequence motif analysis using Bio.motifs", "Multiple Sequence Alignment objects", "Pairwise sequence alignment", "Pairwise alignments using pairwise2", "Going 3D: The PDB module", "Bio.phenotype: analyze phenotypic data", "Phylogenetics with Bio.Phylo", "Bio.PopGen: Population genetics", "Quick Start \u2013 What can you do with Biopython?", "BLAST and other sequence search tools", "Sequence annotation objects", "Sequence objects", "Sequence Input/Output", "The Biopython testing framework", "Swiss-Prot and ExPASy", "Biopython Tutorial &amp; Cookbook", "Bio package", "Bio.Affy package", "Bio.Affy.CelFile module", "Bio.Align package", "Bio.Align.AlignInfo module", "Bio.Align.Applications package", "Bio.Align.a2m module", "Bio.Align.analysis module", "Bio.Align.bed module", "Bio.Align.bigbed module", "Bio.Align.bigmaf module", "Bio.Align.bigpsl module", "Bio.Align.chain module", "Bio.Align.clustal module", "Bio.Align.emboss module", "Bio.Align.exonerate module", "Bio.Align.fasta module", "Bio.Align.hhr module", "Bio.Align.interfaces module", "Bio.Align.maf module", "Bio.Align.mauve module", "Bio.Align.msf module", "Bio.Align.nexus module", "Bio.Align.phylip module", "Bio.Align.psl module", "Bio.Align.sam module", "Bio.Align.stockholm module", "Bio.Align.substitution_matrices package", "Bio.Align.tabular module", "Bio.AlignIO package", "Bio.AlignIO.ClustalIO module", "Bio.AlignIO.EmbossIO module", "Bio.AlignIO.FastaIO module", "Bio.AlignIO.Interfaces module", "Bio.AlignIO.MafIO module", "Bio.AlignIO.MauveIO module", "Bio.AlignIO.MsfIO module", "Bio.AlignIO.NexusIO module", "Bio.AlignIO.PhylipIO module", "Bio.AlignIO.StockholmIO module", "Bio.Application package", "Bio.Blast package", "Bio.Blast.Applications module", "Bio.Blast.NCBIWWW module", "Bio.Blast.NCBIXML module", "Bio.CAPS package", "Bio.Cluster package", "Bio.Compass package", "Bio.Data package", "Bio.Data.CodonTable module", "Bio.Data.IUPACData module", "Bio.Data.PDBData module", "Bio.Emboss package", "Bio.Emboss.Applications module", "Bio.Emboss.Primer3 module", "Bio.Emboss.PrimerSearch module", "Bio.Entrez package", "Bio.Entrez.Parser module", "Bio.ExPASy package", "Bio.ExPASy.Enzyme module", "Bio.ExPASy.Prodoc module", "Bio.ExPASy.Prosite module", "Bio.ExPASy.ScanProsite module", "Bio.ExPASy.cellosaurus module", "Bio.File module", "Bio.GenBank package", "Bio.GenBank.Record module", "Bio.GenBank.Scanner module", "Bio.GenBank.utils module", "Bio.Geo package", "Bio.Geo.Record module", "Bio.Graphics package", "Bio.Graphics.BasicChromosome module", "Bio.Graphics.ColorSpiral module", "Bio.Graphics.Comparative module", "Bio.Graphics.DisplayRepresentation module", "Bio.Graphics.Distribution module", "Bio.Graphics.GenomeDiagram package", "Bio.Graphics.KGML_vis module", "Bio.HMM package", "Bio.HMM.DynamicProgramming module", "Bio.HMM.MarkovModel module", "Bio.HMM.Trainer module", "Bio.HMM.Utilities module", "Bio.KEGG package", "Bio.KEGG.Compound package", "Bio.KEGG.Enzyme package", "Bio.KEGG.Gene package", "Bio.KEGG.KGML package", "Bio.KEGG.KGML.KGML_parser module", "Bio.KEGG.KGML.KGML_pathway module", "Bio.KEGG.Map package", "Bio.KEGG.REST module", "Bio.LogisticRegression module", "Bio.MarkovModel module", "Bio.MaxEntropy module", "Bio.Medline package", "Bio.NMR package", "Bio.NMR.NOEtools module", "Bio.NMR.xpktools module", "Bio.NaiveBayes module", "Bio.Nexus package", "Bio.Nexus.Nexus module", "Bio.Nexus.Nodes module", "Bio.Nexus.StandardData module", "Bio.Nexus.Trees module", "Bio.PDB package", "Bio.PDB.AbstractPropertyMap module", "Bio.PDB.Atom module", "Bio.PDB.Chain module", "Bio.PDB.DSSP module", "Bio.PDB.Dice module", "Bio.PDB.Entity module", "Bio.PDB.FragmentMapper module", "Bio.PDB.HSExposure module", "Bio.PDB.MMCIF2Dict module", "Bio.PDB.MMCIFParser module", "Bio.PDB.Model module", "Bio.PDB.NACCESS module", "Bio.PDB.NeighborSearch module", "Bio.PDB.PDBExceptions module", "Bio.PDB.PDBIO module", "Bio.PDB.PDBList module", "Bio.PDB.PDBMLParser module", "Bio.PDB.PDBParser module", "Bio.PDB.PICIO module", "Bio.PDB.PSEA module", "Bio.PDB.Polypeptide module", "Bio.PDB.Residue module", "Bio.PDB.ResidueDepth module", "Bio.PDB.SASA module", "Bio.PDB.SCADIO module", "Bio.PDB.Selection module", "Bio.PDB.Structure module", "Bio.PDB.StructureAlignment module", "Bio.PDB.StructureBuilder module", "Bio.PDB.Superimposer module", "Bio.PDB.alphafold_db module", "Bio.PDB.cealign module", "Bio.PDB.ic_data module", "Bio.PDB.ic_rebuild module", "Bio.PDB.internal_coords module", "Bio.PDB.mmcifio module", "Bio.PDB.mmtf package", "Bio.PDB.mmtf.DefaultParser module", "Bio.PDB.mmtf.mmtfio module", "Bio.PDB.parse_pdb_header module", "Bio.PDB.qcprot module", "Bio.PDB.vectors module", "Bio.Pathway package", "Bio.Pathway.Rep package", "Bio.Pathway.Rep.Graph module", "Bio.Pathway.Rep.MultiGraph module", "Bio.Phylo package", "Bio.Phylo.Applications package", "Bio.Phylo.BaseTree module", "Bio.Phylo.CDAO module", "Bio.Phylo.CDAOIO module", "Bio.Phylo.Consensus module", "Bio.Phylo.NeXML module", "Bio.Phylo.NeXMLIO module", "Bio.Phylo.Newick module", "Bio.Phylo.NewickIO module", "Bio.Phylo.NexusIO module", "Bio.Phylo.PAML package", "Bio.Phylo.PAML.baseml module", "Bio.Phylo.PAML.chi2 module", "Bio.Phylo.PAML.codeml module", "Bio.Phylo.PAML.yn00 module", "Bio.Phylo.PhyloXML module", "Bio.Phylo.PhyloXMLIO module", "Bio.Phylo.TreeConstruction module", "Bio.PopGen package", "Bio.PopGen.GenePop package", "Bio.PopGen.GenePop.Controller module", "Bio.PopGen.GenePop.EasyController module", "Bio.PopGen.GenePop.FileParser module", "Bio.PopGen.GenePop.LargeFileParser module", "Bio.Restriction package", "Bio.Restriction.PrintFormat module", "Bio.Restriction.Restriction_Dictionary module", "Bio.SCOP package", "Bio.SCOP.Cla module", "Bio.SCOP.Des module", "Bio.SCOP.Dom module", "Bio.SCOP.Hie module", "Bio.SCOP.Raf module", "Bio.SCOP.Residues module", "Bio.SVDSuperimposer package", "Bio.SearchIO package", "Bio.SearchIO.BlastIO package", "Bio.SearchIO.BlastIO.blast_tab module", "Bio.SearchIO.BlastIO.blast_xml module", "Bio.SearchIO.BlatIO module", "Bio.SearchIO.ExonerateIO package", "Bio.SearchIO.ExonerateIO.exonerate_cigar module", "Bio.SearchIO.ExonerateIO.exonerate_text module", "Bio.SearchIO.ExonerateIO.exonerate_vulgar module", "Bio.SearchIO.FastaIO module", "Bio.SearchIO.HHsuiteIO package", "Bio.SearchIO.HHsuiteIO.hhsuite2_text module", "Bio.SearchIO.HmmerIO package", "Bio.SearchIO.HmmerIO.hmmer2_text module", "Bio.SearchIO.HmmerIO.hmmer3_domtab module", "Bio.SearchIO.HmmerIO.hmmer3_tab module", "Bio.SearchIO.HmmerIO.hmmer3_text module", "Bio.SearchIO.InterproscanIO package", "Bio.SearchIO.InterproscanIO.interproscan_xml module", "Bio.Seq module", "Bio.SeqFeature module", "Bio.SeqIO package", "Bio.SeqIO.AbiIO module", "Bio.SeqIO.AceIO module", "Bio.SeqIO.FastaIO module", "Bio.SeqIO.GckIO module", "Bio.SeqIO.GfaIO module", "Bio.SeqIO.IgIO module", "Bio.SeqIO.InsdcIO module", "Bio.SeqIO.Interfaces module", "Bio.SeqIO.NibIO module", "Bio.SeqIO.PdbIO module", "Bio.SeqIO.PhdIO module", "Bio.SeqIO.PirIO module", "Bio.SeqIO.QualityIO module", "Bio.SeqIO.SeqXmlIO module", "Bio.SeqIO.SffIO module", "Bio.SeqIO.SnapGeneIO module", "Bio.SeqIO.SwissIO module", "Bio.SeqIO.TabIO module", "Bio.SeqIO.TwoBitIO module", "Bio.SeqIO.UniprotIO module", "Bio.SeqIO.XdnaIO module", "Bio.SeqRecord module", "Bio.SeqUtils package", "Bio.SeqUtils.CheckSum module", "Bio.SeqUtils.IsoelectricPoint module", "Bio.SeqUtils.MeltingTemp module", "Bio.SeqUtils.ProtParam module", "Bio.SeqUtils.ProtParamData module", "Bio.SeqUtils.lcc module", "Bio.Sequencing package", "Bio.Sequencing.Ace module", "Bio.Sequencing.Applications package", "Bio.Sequencing.Phd module", "Bio.SwissProt package", "Bio.SwissProt.KeyWList module", "Bio.TogoWS package", "Bio.UniGene package", "Bio.UniProt package", "Bio.UniProt.GOA module", "Bio.bgzf module", "Bio.codonalign package", "Bio.codonalign.codonalignment module", "Bio.codonalign.codonseq module", "Bio.kNN module", "Bio.motifs package", "Bio.motifs.alignace module", "Bio.motifs.applications package", "Bio.motifs.clusterbuster module", "Bio.motifs.jaspar package", "Bio.motifs.jaspar.db module", "Bio.motifs.mast module", "Bio.motifs.matrix module", "Bio.motifs.meme module", "Bio.motifs.minimal module", "Bio.motifs.pfm module", "Bio.motifs.thresholds module", "Bio.motifs.transfac module", "Bio.motifs.xms module", "Bio.pairwise2 module", "Bio.phenotype package", "Bio.phenotype.phen_micro module", "Bio.phenotype.pm_fitting module", "BioSQL package", "BioSQL.BioSeq module", "BioSQL.BioSeqDatabase module", "BioSQL.DBUtils module", "BioSQL.Loader module", "API documentation", "Biopython Documentation"], "terms": {"ar": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 80, 81, 82, 83, 84, 88, 91, 92, 93, 94, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 149, 151, 152, 154, 155, 157, 158, 160, 164, 165, 166, 167, 168, 171, 173, 176, 177, 181, 182, 196, 197, 198, 200, 203, 206, 208, 209, 213, 214, 216, 217, 220, 221, 225, 226, 228, 230, 233, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 257, 259, 260, 261, 262, 263, 264, 268, 269, 271, 272, 273, 274, 276, 277, 279, 280, 282, 286, 287, 288, 289, 291, 293, 294, 296, 297, 298, 302], "collect": [0, 5, 6, 9, 11, 12, 13, 16, 25, 27, 30, 75, 102, 110, 117, 139, 149, 160, 176, 177, 208, 213, 214, 236, 269, 278, 286, 287, 298], "two": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 30, 32, 34, 56, 61, 67, 68, 73, 76, 80, 81, 92, 94, 99, 101, 102, 108, 109, 117, 130, 132, 135, 139, 140, 146, 155, 161, 163, 165, 168, 174, 175, 176, 181, 182, 196, 197, 208, 215, 216, 221, 225, 236, 237, 240, 243, 246, 249, 250, 251, 255, 256, 259, 260, 262, 264, 268, 269, 277, 279, 280, 281, 294, 296, 298, 299], "more": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 35, 36, 38, 45, 46, 49, 50, 51, 52, 53, 56, 59, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 76, 80, 83, 84, 90, 91, 93, 99, 107, 108, 113, 117, 123, 129, 149, 155, 157, 168, 176, 181, 196, 197, 203, 206, 211, 213, 214, 216, 217, 220, 221, 225, 226, 228, 233, 236, 237, 238, 239, 250, 251, 252, 254, 259, 261, 268, 269, 270, 272, 273, 274, 277, 282, 287, 294, 296, 297, 298], "have": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 35, 36, 37, 38, 43, 46, 47, 51, 56, 61, 62, 66, 67, 68, 69, 71, 72, 73, 80, 83, 92, 94, 99, 102, 104, 107, 108, 109, 117, 123, 135, 136, 137, 143, 144, 146, 148, 149, 152, 154, 155, 157, 158, 160, 167, 168, 169, 171, 172, 174, 175, 181, 182, 190, 194, 196, 198, 201, 204, 206, 213, 216, 217, 220, 221, 228, 235, 236, 237, 245, 246, 250, 252, 259, 260, 263, 264, 269, 277, 284, 287, 289, 296, 298, 299], "been": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 21, 24, 25, 30, 32, 67, 68, 83, 94, 104, 108, 120, 122, 127, 132, 149, 154, 181, 198, 211, 216, 247, 250, 252, 259, 263, 269, 276, 277, 281, 289], "each": [0, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 46, 51, 52, 53, 56, 60, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 80, 81, 83, 84, 86, 90, 94, 99, 100, 101, 102, 103, 104, 108, 109, 116, 117, 120, 121, 122, 127, 129, 130, 131, 139, 146, 155, 157, 158, 161, 167, 168, 174, 175, 176, 181, 182, 184, 185, 197, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 235, 237, 239, 240, 243, 244, 246, 247, 249, 250, 252, 255, 256, 257, 259, 260, 264, 268, 269, 270, 273, 275, 277, 279, 281, 282, 289, 296, 298, 302], "other": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 30, 31, 32, 40, 52, 56, 57, 65, 66, 67, 69, 72, 73, 83, 84, 88, 91, 93, 99, 100, 102, 104, 105, 108, 117, 119, 123, 133, 135, 136, 139, 140, 146, 149, 155, 161, 165, 168, 174, 175, 180, 181, 182, 194, 196, 197, 198, 210, 213, 215, 216, 217, 221, 225, 228, 235, 236, 237, 240, 249, 255, 259, 260, 263, 264, 277, 279, 286, 287, 289, 294, 296, 298, 306], "usual": [0, 3, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 30, 68, 158, 168, 182, 196, 235, 236, 237, 250, 252, 259, 268, 269], "insert": [0, 12, 15, 22, 27, 30, 32, 33, 55, 133, 136, 139, 143, 162, 168, 171, 213, 214, 220, 235, 269, 274, 294], "addit": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 32, 35, 36, 38, 45, 60, 62, 66, 68, 69, 73, 80, 97, 99, 158, 168, 176, 181, 182, 184, 197, 208, 210, 213, 214, 216, 220, 236, 245, 247, 252, 259, 263, 268, 269, 271, 277, 286], "lead": [0, 3, 6, 12, 13, 15, 17, 32, 67, 94, 135, 181, 182, 235, 240, 259, 269, 296], "trail": [0, 6, 12, 15, 94, 135, 206, 229, 235, 259, 296], "all": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 36, 42, 56, 59, 61, 68, 69, 70, 71, 72, 73, 76, 80, 83, 88, 91, 93, 94, 97, 98, 99, 102, 104, 108, 109, 112, 117, 123, 129, 130, 132, 135, 139, 146, 149, 152, 154, 155, 156, 157, 158, 161, 164, 165, 166, 168, 176, 178, 179, 181, 182, 184, 185, 194, 196, 197, 198, 201, 202, 205, 208, 210, 213, 216, 217, 220, 221, 228, 235, 236, 237, 247, 250, 251, 252, 259, 260, 261, 263, 264, 268, 269, 270, 273, 275, 276, 277, 279, 281, 286, 287, 289, 294, 296, 297, 298, 302], "string": [0, 3, 4, 6, 7, 9, 11, 13, 15, 17, 19, 20, 21, 25, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 61, 66, 67, 68, 69, 71, 73, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 99, 104, 112, 113, 114, 116, 117, 119, 121, 126, 129, 131, 135, 136, 137, 140, 141, 143, 148, 149, 151, 153, 154, 155, 162, 167, 168, 169, 171, 172, 176, 178, 179, 181, 182, 184, 189, 190, 192, 194, 195, 196, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 231, 233, 235, 236, 237, 240, 243, 247, 250, 252, 255, 259, 260, 261, 262, 263, 264, 266, 269, 271, 273, 274, 275, 277, 279, 282, 285, 286, 287, 289, 292, 294, 295, 296, 297, 298, 302], "same": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 30, 31, 32, 43, 45, 54, 56, 65, 66, 68, 69, 71, 73, 84, 90, 94, 99, 102, 104, 119, 120, 126, 127, 129, 132, 135, 155, 168, 181, 182, 196, 198, 201, 208, 213, 215, 216, 220, 221, 225, 233, 236, 237, 240, 243, 247, 250, 259, 260, 263, 264, 266, 269, 276, 277, 279, 281, 282, 286, 287, 289, 296, 298], "length": [0, 3, 4, 7, 8, 11, 12, 13, 14, 17, 20, 21, 22, 23, 25, 27, 30, 31, 32, 35, 36, 37, 38, 39, 43, 46, 51, 52, 55, 56, 59, 61, 65, 68, 69, 70, 71, 72, 73, 74, 80, 81, 85, 99, 104, 126, 127, 131, 135, 136, 140, 144, 152, 160, 162, 168, 171, 181, 182, 185, 196, 200, 203, 204, 217, 218, 219, 220, 225, 228, 231, 235, 236, 237, 240, 243, 249, 250, 255, 256, 259, 260, 263, 264, 269, 271, 274, 277, 279, 280, 282, 287, 289, 294, 296, 299], "mai": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 36, 37, 38, 45, 46, 52, 53, 56, 60, 65, 66, 67, 68, 70, 71, 73, 76, 81, 83, 84, 92, 93, 100, 104, 107, 116, 119, 137, 158, 168, 181, 182, 192, 194, 195, 196, 197, 208, 210, 213, 216, 217, 220, 221, 225, 228, 233, 236, 237, 239, 245, 247, 250, 259, 260, 263, 269, 271, 276, 277, 287, 296, 297, 302], "over": [0, 1, 4, 6, 7, 8, 9, 11, 12, 17, 19, 20, 21, 22, 25, 30, 36, 44, 45, 56, 60, 61, 65, 66, 67, 68, 70, 73, 74, 81, 83, 84, 85, 87, 88, 92, 104, 116, 123, 129, 131, 134, 139, 149, 161, 164, 184, 187, 189, 196, 197, 204, 206, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 225, 227, 229, 231, 232, 236, 237, 239, 240, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 263, 266, 268, 270, 273, 275, 276, 277, 287, 297, 298, 302], "full": [0, 3, 4, 6, 8, 9, 10, 12, 13, 15, 17, 20, 22, 23, 24, 25, 32, 45, 59, 67, 80, 104, 108, 123, 131, 135, 139, 140, 152, 155, 167, 187, 196, 216, 220, 225, 228, 235, 236, 237, 255, 256, 259, 260, 268, 277, 280, 287], "limit": [0, 3, 6, 7, 11, 12, 15, 17, 18, 20, 23, 32, 50, 65, 68, 69, 70, 83, 119, 152, 158, 196, 216, 235, 250, 269, 273, 277], "subsect": [0, 3, 11, 235], "In": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 30, 31, 56, 60, 65, 66, 67, 68, 73, 94, 107, 135, 144, 154, 175, 181, 182, 196, 200, 204, 213, 214, 216, 217, 220, 221, 233, 235, 236, 237, 247, 250, 259, 263, 269, 273, 276, 277, 296], "biopython": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 27, 30, 31, 32, 56, 65, 67, 68, 69, 70, 80, 81, 83, 84, 92, 104, 112, 113, 114, 118, 119, 152, 156, 158, 166, 167, 168, 170, 171, 176, 177, 180, 181, 197, 209, 216, 225, 233, 235, 236, 237, 239, 248, 250, 252, 255, 263, 269, 273, 279, 280, 296, 297, 300, 301, 302, 303, 304, 305], "repres": [0, 3, 6, 7, 8, 11, 12, 13, 15, 17, 19, 20, 21, 22, 25, 30, 31, 33, 43, 45, 61, 67, 68, 73, 76, 81, 82, 83, 84, 89, 99, 100, 102, 104, 108, 117, 122, 127, 129, 130, 131, 132, 135, 139, 140, 144, 148, 155, 156, 158, 160, 168, 175, 176, 182, 196, 198, 208, 209, 210, 211, 212, 213, 214, 216, 221, 235, 236, 237, 239, 246, 252, 255, 259, 263, 271, 274, 277, 282, 286, 287, 293, 298, 302], "describ": [0, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 17, 22, 23, 25, 30, 32, 36, 39, 46, 51, 55, 56, 61, 68, 69, 72, 73, 74, 80, 81, 84, 87, 88, 100, 104, 107, 109, 117, 121, 123, 136, 144, 149, 158, 160, 168, 174, 181, 184, 196, 209, 210, 212, 233, 236, 237, 249, 250, 252, 259, 260, 269, 271, 273, 277, 290, 295, 297, 298], "section": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 23, 24, 25, 30, 62, 71, 94, 109, 158, 168, 235, 236, 237, 244, 254], "can": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 34, 35, 45, 46, 51, 54, 56, 59, 60, 61, 66, 67, 68, 69, 71, 72, 73, 80, 81, 83, 84, 88, 89, 91, 92, 94, 99, 101, 102, 104, 107, 108, 109, 119, 121, 130, 134, 135, 137, 140, 146, 148, 149, 152, 154, 157, 158, 168, 171, 179, 181, 182, 184, 185, 196, 198, 201, 204, 206, 208, 209, 210, 211, 212, 213, 216, 217, 220, 221, 228, 235, 236, 237, 240, 241, 244, 245, 246, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 262, 263, 264, 268, 269, 270, 271, 272, 273, 277, 280, 287, 288, 289, 290, 291, 296, 297, 298, 304, 305, 306], "obtain": [0, 12, 13, 14, 22, 25, 30, 68, 92, 119, 140, 181, 202, 208, 220, 221, 269, 298], "pars": [0, 1, 8, 9, 11, 13, 17, 18, 20, 21, 24, 27, 29, 30, 32, 38, 45, 50, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 68, 69, 71, 74, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 111, 112, 113, 114, 115, 116, 118, 121, 123, 129, 137, 142, 143, 149, 150, 151, 152, 153, 162, 173, 180, 184, 187, 189, 190, 192, 194, 195, 197, 200, 203, 204, 208, 209, 210, 211, 212, 213, 216, 217, 220, 221, 222, 223, 224, 225, 226, 228, 229, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 268, 270, 271, 272, 274, 277, 278, 282, 283, 285, 288, 290, 291, 292, 294, 295, 297, 298, 302], "softwar": [0, 2, 7, 9, 11, 12, 15, 16, 17, 18, 32, 33, 69, 123, 129, 132, 153, 158, 168, 176, 181, 228, 237, 241, 250, 293], "clustal": [0, 12, 13, 23, 27, 30, 32, 56, 57, 237, 245], "blat": [0, 2, 3, 20, 30, 45, 216, 220], "us": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 16, 18, 19, 20, 21, 22, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 83, 84, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 121, 122, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 162, 164, 165, 167, 168, 171, 174, 175, 176, 177, 181, 182, 185, 188, 190, 192, 194, 195, 196, 197, 198, 201, 203, 206, 207, 208, 209, 213, 215, 216, 217, 220, 221, 225, 228, 230, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 286, 287, 289, 290, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306], "": [0, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 55, 56, 59, 61, 65, 66, 67, 68, 69, 70, 71, 73, 76, 80, 81, 83, 84, 90, 93, 96, 99, 100, 104, 111, 112, 113, 114, 115, 117, 119, 122, 129, 130, 132, 137, 139, 140, 141, 146, 149, 152, 154, 156, 157, 159, 167, 168, 171, 176, 177, 181, 182, 184, 187, 189, 192, 194, 195, 196, 198, 201, 204, 208, 216, 217, 219, 220, 221, 225, 228, 233, 236, 237, 238, 239, 240, 243, 244, 246, 247, 248, 249, 250, 252, 255, 256, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 271, 273, 274, 277, 279, 280, 286, 287, 289, 292, 295, 296, 297, 298, 303, 304, 306], "which": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 35, 37, 39, 42, 43, 45, 46, 49, 51, 52, 53, 56, 59, 63, 64, 66, 67, 68, 69, 70, 71, 73, 76, 80, 83, 84, 91, 92, 93, 94, 96, 99, 100, 101, 102, 104, 107, 108, 109, 110, 119, 120, 125, 126, 129, 132, 134, 135, 143, 148, 149, 152, 157, 165, 168, 169, 172, 174, 176, 181, 185, 196, 198, 205, 206, 208, 209, 215, 216, 228, 230, 235, 236, 237, 239, 243, 245, 247, 249, 250, 251, 252, 254, 256, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 276, 277, 282, 287, 289, 293, 294, 296, 297, 298, 302], "chapter": [0, 3, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 56, 235, 237], "see": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 35, 36, 37, 38, 39, 46, 49, 50, 51, 52, 53, 56, 59, 61, 64, 65, 66, 67, 68, 69, 70, 73, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 97, 99, 104, 108, 109, 119, 129, 135, 137, 145, 150, 152, 153, 156, 158, 164, 167, 168, 169, 180, 181, 183, 184, 186, 187, 188, 189, 198, 200, 201, 203, 208, 209, 211, 213, 216, 220, 221, 225, 228, 235, 236, 237, 239, 244, 246, 247, 248, 250, 251, 252, 254, 257, 259, 260, 261, 263, 264, 268, 269, 271, 272, 273, 274, 275, 277, 282, 294, 296, 300], "descript": [0, 3, 4, 6, 7, 10, 11, 13, 15, 17, 19, 20, 21, 23, 25, 27, 30, 33, 43, 68, 69, 70, 71, 72, 73, 88, 89, 93, 94, 104, 109, 113, 117, 121, 123, 132, 168, 171, 178, 179, 180, 196, 197, 208, 209, 210, 216, 217, 221, 225, 228, 233, 237, 240, 246, 249, 250, 251, 252, 255, 259, 269, 271, 274, 276, 294, 296, 302, 304], "older": [0, 1, 3, 5, 7, 8, 9, 11, 12, 21, 22, 25, 56, 65, 69, 71, 209, 211, 235, 237, 250, 294, 297], "multipleseqalign": [0, 3, 9, 12, 20, 27, 30, 56, 59, 60, 61, 64, 65, 66, 71, 185, 196, 198, 216, 278, 279], "parser": [0, 1, 2, 3, 6, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 25, 27, 29, 30, 41, 42, 45, 50, 52, 55, 56, 58, 59, 60, 63, 66, 68, 71, 83, 85, 88, 89, 90, 92, 96, 123, 128, 133, 140, 143, 148, 150, 151, 156, 164, 168, 169, 172, 180, 184, 187, 189, 190, 197, 204, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 268, 270, 274, 275, 276, 282, 294, 297, 298], "bio": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 302, 305, 306], "alignio": [0, 1, 9, 12, 17, 19, 20, 27, 30, 32, 91, 198, 216, 237, 249, 273], "gener": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 44, 45, 52, 55, 56, 59, 60, 61, 66, 67, 68, 71, 76, 80, 83, 91, 93, 96, 99, 100, 107, 108, 109, 110, 116, 123, 125, 126, 127, 132, 139, 158, 167, 168, 175, 177, 181, 182, 184, 185, 187, 189, 196, 197, 204, 216, 217, 221, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 263, 268, 269, 271, 272, 273, 282, 287, 289, 295, 296, 298], "i": [0, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 59, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 187, 189, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 225, 228, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 273, 274, 276, 277, 279, 280, 281, 282, 286, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305], "defin": [0, 2, 3, 4, 6, 7, 10, 11, 14, 15, 16, 21, 23, 24, 27, 30, 31, 32, 35, 36, 37, 38, 39, 45, 46, 51, 52, 55, 61, 73, 84, 89, 91, 99, 100, 104, 116, 117, 132, 134, 135, 136, 141, 145, 147, 152, 153, 165, 166, 168, 171, 175, 176, 181, 182, 196, 201, 202, 208, 235, 236, 237, 246, 250, 252, 259, 260, 262, 264, 268, 269, 271, 277, 289, 290, 295, 296, 299, 302], "you": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 80, 81, 83, 90, 92, 93, 94, 95, 97, 99, 101, 102, 108, 109, 110, 119, 121, 123, 137, 140, 143, 146, 149, 151, 154, 157, 158, 159, 168, 175, 181, 182, 185, 196, 204, 206, 208, 213, 216, 217, 220, 221, 225, 228, 235, 236, 237, 239, 240, 243, 244, 245, 246, 248, 249, 250, 252, 254, 255, 259, 260, 263, 264, 268, 269, 273, 277, 280, 282, 287, 288, 289, 290, 291, 296, 297, 298, 301, 302, 304, 305, 306], "would": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 35, 46, 51, 56, 61, 62, 63, 66, 67, 68, 69, 80, 94, 125, 149, 152, 181, 216, 235, 236, 237, 249, 250, 252, 259, 263, 269, 273, 277, 282, 297, 302], "program": [0, 1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 15, 17, 19, 20, 22, 23, 30, 32, 44, 55, 59, 65, 67, 68, 69, 70, 73, 74, 79, 80, 81, 82, 83, 107, 109, 137, 145, 153, 156, 158, 168, 181, 182, 198, 201, 202, 216, 217, 220, 221, 225, 228, 233, 237, 251, 253, 258, 261, 267, 268, 269, 282, 290, 291, 293, 295, 296], "run": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 23, 25, 27, 32, 55, 67, 68, 69, 73, 80, 81, 83, 133, 137, 145, 153, 168, 174, 181, 191, 192, 194, 195, 215, 216, 217, 236, 237, 246, 250, 269, 273, 288, 290, 291], "For": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 30, 31, 41, 50, 53, 54, 55, 56, 58, 59, 61, 62, 65, 66, 67, 68, 69, 70, 73, 81, 83, 85, 94, 99, 108, 112, 113, 114, 117, 119, 125, 137, 157, 167, 168, 176, 181, 182, 196, 204, 211, 214, 216, 217, 220, 221, 228, 233, 236, 237, 238, 240, 246, 248, 250, 251, 252, 254, 255, 259, 261, 263, 264, 269, 273, 274, 277, 282, 294, 296, 297, 298, 304], "benefit": [0, 1, 5, 6, 13, 15, 19, 158, 168, 216, 237, 277], "thi": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 143, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 166, 168, 171, 174, 176, 178, 179, 181, 182, 184, 185, 187, 189, 190, 196, 197, 198, 201, 202, 203, 204, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 220, 221, 225, 226, 228, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 287, 289, 290, 291, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305], "howev": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 25, 30, 56, 66, 68, 73, 94, 181, 216, 217, 220, 221, 235, 236, 237, 239, 242, 250, 252, 259, 260, 268, 273, 277, 282, 297, 298], "we": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 35, 45, 46, 51, 59, 61, 64, 66, 67, 68, 69, 80, 84, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 105, 107, 108, 109, 117, 165, 168, 181, 182, 190, 198, 216, 221, 235, 236, 237, 239, 240, 242, 246, 248, 250, 252, 254, 259, 264, 269, 277, 284, 286, 287, 289, 297, 301], "scratch": [0, 12, 17, 20], "suppos": [0, 1, 6, 7, 11, 12, 13, 14, 15, 19, 21, 22, 23, 108, 251, 277], "three": [0, 3, 4, 6, 7, 8, 11, 12, 13, 15, 16, 17, 20, 22, 23, 25, 30, 62, 73, 83, 94, 104, 119, 141, 149, 154, 168, 204, 208, 221, 235, 247, 250, 260, 263, 264, 271, 273, 277, 280, 298], "seqa": [0, 14, 27, 30, 68, 296], "ccggttttt": 0, "seqb": [0, 14, 27, 30, 68, 296], "agtttaa": 0, "seqc": [0, 30, 68], "aggttt": 0, "To": [0, 3, 4, 5, 6, 7, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 61, 68, 70, 84, 92, 108, 119, 146, 149, 156, 168, 175, 181, 182, 197, 203, 208, 220, 228, 235, 250, 251, 259, 263, 273, 277, 287, 296, 298], "also": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 49, 52, 56, 59, 64, 65, 66, 68, 69, 71, 72, 73, 76, 83, 89, 94, 99, 100, 103, 104, 119, 135, 149, 150, 154, 168, 175, 180, 181, 182, 184, 188, 208, 216, 217, 220, 221, 225, 228, 233, 235, 236, 237, 239, 244, 246, 248, 250, 252, 254, 256, 257, 258, 259, 260, 263, 269, 273, 275, 277, 279, 280, 282, 287, 289, 296, 298], "need": [0, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 55, 61, 67, 73, 84, 90, 95, 99, 109, 137, 140, 152, 158, 167, 168, 171, 175, 177, 181, 190, 206, 208, 217, 220, 228, 235, 236, 237, 250, 259, 263, 268, 276, 277, 279, 297], "how": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 23, 25, 30, 31, 68, 73, 80, 83, 84, 100, 104, 132, 137, 181, 218, 230, 231, 236, 242, 247, 250, 252, 263, 273, 277], "numpi": [0, 4, 5, 12, 13, 15, 24, 30, 54, 68, 73, 135, 139, 140, 146, 156, 162, 167, 168, 175, 215, 237, 289, 298], "import": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 32, 45, 53, 54, 56, 59, 62, 66, 67, 68, 69, 73, 76, 80, 83, 85, 90, 91, 92, 99, 104, 116, 122, 123, 126, 135, 137, 139, 140, 148, 154, 156, 157, 168, 169, 172, 175, 181, 182, 198, 205, 206, 215, 216, 217, 220, 221, 235, 236, 237, 239, 244, 246, 247, 248, 250, 252, 259, 260, 261, 262, 263, 264, 268, 269, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 287, 288, 290, 291, 294, 296, 297, 298, 302, 304], "np": [0, 12, 13, 15, 30, 32, 68, 168], "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 45, 46, 51, 53, 55, 56, 61, 62, 65, 66, 68, 69, 70, 71, 73, 74, 76, 80, 83, 92, 93, 94, 99, 100, 101, 102, 104, 105, 108, 109, 113, 120, 122, 126, 129, 132, 135, 136, 137, 139, 148, 149, 152, 154, 155, 156, 157, 158, 161, 168, 169, 171, 172, 175, 181, 182, 183, 185, 186, 188, 189, 194, 196, 198, 200, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 233, 235, 236, 237, 240, 242, 244, 246, 250, 251, 252, 255, 259, 260, 263, 264, 269, 273, 276, 277, 280, 281, 282, 287, 288, 289, 290, 291, 293, 294, 296, 298, 302, 303], "3": [0, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 29, 30, 31, 32, 35, 36, 45, 53, 55, 56, 62, 65, 68, 69, 73, 80, 83, 84, 93, 94, 101, 104, 109, 112, 113, 126, 135, 137, 139, 140, 154, 157, 162, 167, 168, 175, 181, 182, 196, 200, 203, 204, 206, 213, 216, 217, 220, 221, 227, 228, 232, 235, 236, 237, 240, 246, 248, 250, 252, 259, 260, 262, 263, 268, 269, 271, 274, 277, 278, 279, 280, 282, 287, 289, 290, 293, 296, 298], "4": [0, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 29, 30, 31, 32, 45, 53, 55, 68, 69, 73, 76, 80, 101, 104, 113, 126, 129, 137, 149, 154, 158, 168, 174, 175, 181, 200, 203, 205, 206, 208, 213, 215, 216, 217, 220, 221, 236, 237, 246, 250, 252, 259, 262, 263, 264, 269, 271, 277, 282, 287, 289, 296, 298], "7": [0, 2, 3, 4, 6, 7, 8, 11, 12, 13, 17, 20, 27, 29, 30, 31, 32, 55, 69, 73, 74, 101, 104, 105, 113, 116, 117, 126, 137, 140, 154, 168, 205, 206, 216, 235, 236, 237, 248, 250, 252, 259, 262, 263, 264, 287, 290], "9": [0, 2, 3, 4, 7, 8, 11, 12, 13, 16, 20, 21, 22, 24, 29, 30, 32, 73, 80, 84, 93, 104, 113, 126, 137, 156, 157, 165, 168, 205, 206, 216, 236, 244, 246, 248, 250, 252, 259, 262, 263, 264, 269, 278, 279, 280, 287], "0": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 30, 31, 32, 35, 36, 46, 51, 53, 54, 61, 62, 66, 67, 68, 69, 70, 71, 73, 80, 83, 87, 88, 89, 90, 92, 94, 99, 100, 104, 105, 108, 112, 113, 114, 120, 122, 126, 129, 132, 135, 137, 138, 139, 140, 141, 148, 152, 154, 156, 157, 161, 167, 168, 169, 172, 175, 176, 181, 182, 183, 185, 186, 188, 189, 194, 196, 198, 201, 202, 203, 206, 213, 215, 216, 221, 228, 229, 232, 233, 235, 236, 237, 239, 242, 245, 246, 248, 250, 251, 252, 259, 260, 262, 263, 264, 269, 276, 277, 279, 280, 282, 287, 288, 289, 290, 291, 293, 296, 298, 302], "2": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 36, 42, 45, 53, 55, 56, 59, 62, 66, 68, 69, 71, 73, 80, 83, 93, 101, 104, 108, 112, 113, 114, 117, 118, 122, 132, 137, 139, 140, 149, 157, 167, 168, 175, 181, 182, 194, 196, 200, 201, 203, 204, 205, 208, 209, 210, 215, 216, 217, 221, 226, 227, 229, 233, 235, 236, 237, 240, 242, 246, 250, 251, 252, 259, 263, 264, 268, 269, 276, 277, 278, 286, 287, 290, 296, 298, 302], "5": [0, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 67, 68, 69, 73, 80, 93, 94, 99, 100, 101, 104, 108, 113, 122, 126, 132, 135, 137, 140, 168, 175, 181, 182, 185, 198, 206, 208, 215, 216, 217, 233, 235, 236, 237, 244, 250, 259, 260, 263, 264, 269, 271, 274, 287, 289, 290, 296, 298], "6": [0, 2, 3, 4, 7, 8, 11, 12, 13, 17, 20, 21, 29, 30, 32, 68, 69, 73, 80, 93, 101, 104, 105, 113, 126, 129, 135, 137, 149, 154, 171, 206, 216, 217, 236, 237, 244, 248, 250, 252, 259, 260, 263, 264, 269, 277, 280, 287, 289, 290, 296, 298], "These": [0, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30, 31, 66, 67, 73, 76, 80, 91, 94, 99, 103, 104, 109, 122, 123, 143, 148, 151, 168, 169, 172, 177, 214, 216, 217, 220, 225, 235, 236, 244, 250, 263, 269, 282, 294], "follow": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 42, 43, 45, 52, 54, 56, 59, 62, 65, 66, 68, 73, 76, 80, 86, 88, 90, 92, 94, 99, 104, 123, 135, 137, 140, 148, 158, 168, 169, 172, 176, 181, 196, 203, 206, 216, 217, 220, 221, 225, 228, 233, 235, 236, 237, 240, 245, 246, 247, 249, 250, 252, 255, 259, 260, 271, 273, 279, 282, 289, 294, 296, 297, 298], "segment": [0, 3, 13, 15, 22, 30, 32, 39, 61, 68, 93, 99, 102, 103, 155, 158, 168, 235, 237, 242, 268], "one": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 35, 39, 42, 43, 45, 46, 51, 52, 56, 61, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 80, 81, 83, 86, 87, 88, 90, 92, 93, 101, 104, 112, 113, 114, 116, 117, 119, 123, 130, 137, 139, 146, 149, 154, 157, 161, 163, 165, 168, 171, 176, 181, 182, 185, 196, 200, 203, 204, 206, 209, 210, 211, 212, 213, 214, 216, 220, 221, 227, 236, 237, 241, 244, 246, 248, 249, 250, 251, 253, 255, 258, 260, 263, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 281, 282, 286, 287, 289, 294, 296, 297, 298, 299, 302], "nucleotid": [0, 2, 3, 11, 12, 19, 20, 21, 23, 30, 32, 34, 61, 68, 69, 71, 76, 80, 83, 93, 94, 154, 181, 192, 194, 221, 225, 235, 236, 237, 244, 246, 250, 259, 260, 261, 263, 269, 271, 273, 274, 278, 282, 286, 289], "note": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 30, 32, 45, 49, 56, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 73, 76, 81, 83, 90, 94, 95, 99, 108, 117, 121, 123, 125, 129, 135, 137, 143, 149, 153, 158, 159, 167, 168, 176, 181, 201, 209, 210, 211, 212, 213, 216, 217, 220, 221, 225, 228, 235, 236, 237, 239, 241, 244, 245, 246, 247, 248, 250, 252, 253, 256, 258, 259, 260, 261, 262, 263, 264, 268, 269, 271, 273, 277, 286, 287, 289, 293, 296, 297, 298, 301], "doe": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 30, 54, 59, 66, 68, 70, 76, 83, 85, 99, 119, 136, 144, 152, 158, 160, 167, 168, 181, 201, 203, 216, 221, 228, 235, 236, 237, 240, 249, 250, 259, 260, 268, 269, 273, 277, 282, 287, 296, 302], "includ": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 34, 36, 38, 47, 52, 56, 59, 66, 67, 68, 69, 72, 76, 80, 83, 94, 99, 129, 130, 133, 135, 136, 139, 145, 149, 152, 154, 158, 162, 168, 175, 182, 196, 206, 213, 236, 237, 239, 242, 247, 250, 252, 259, 260, 263, 268, 269, 271, 273, 275, 277, 279, 280, 282, 287, 290, 294, 296, 298, 306], "first": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 30, 31, 32, 35, 46, 51, 56, 61, 65, 67, 68, 69, 73, 80, 99, 104, 109, 117, 126, 129, 132, 137, 149, 154, 168, 171, 179, 181, 182, 196, 203, 220, 221, 235, 236, 237, 240, 246, 248, 250, 255, 259, 260, 264, 268, 269, 273, 275, 276, 277, 282, 287, 296, 297, 298, 302], "last": [0, 3, 4, 5, 7, 8, 13, 14, 15, 17, 20, 21, 22, 23, 30, 32, 45, 56, 67, 68, 69, 76, 80, 83, 85, 88, 123, 126, 129, 154, 181, 182, 216, 220, 221, 235, 236, 237, 240, 250, 259, 263, 268, 269, 277, 282, 297, 302, 303], "now": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 45, 67, 71, 83, 92, 108, 149, 168, 235, 236, 237, 249, 250, 252, 259, 277, 296], "row": [0, 3, 4, 7, 12, 13, 16, 20, 22, 30, 56, 62, 66, 68, 73, 83, 126, 175, 198, 220, 228, 237, 276, 278, 279, 282, 298, 302], "x": [0, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 25, 30, 31, 32, 36, 56, 68, 69, 71, 73, 80, 99, 104, 115, 117, 118, 120, 127, 129, 133, 135, 136, 144, 149, 160, 168, 171, 175, 181, 184, 208, 213, 215, 220, 228, 235, 237, 242, 247, 259, 260, 263, 264, 269, 276, 278, 281, 289, 296, 299], "8": [0, 2, 3, 4, 7, 8, 11, 12, 13, 16, 17, 19, 20, 21, 23, 24, 25, 29, 30, 31, 32, 73, 90, 101, 104, 109, 126, 137, 154, 165, 168, 181, 205, 225, 235, 236, 237, 246, 248, 250, 259, 260, 263, 277, 280, 287, 290, 298], "column": [0, 3, 4, 6, 7, 10, 11, 12, 13, 16, 20, 30, 31, 32, 33, 35, 36, 38, 49, 51, 52, 53, 56, 61, 62, 64, 66, 68, 69, 73, 129, 149, 175, 181, 198, 206, 208, 217, 220, 228, 237, 255, 275, 278, 279, 282, 289, 295, 298, 302], "ha": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 32, 45, 56, 67, 68, 73, 83, 92, 99, 100, 104, 107, 108, 109, 117, 120, 122, 127, 130, 132, 134, 139, 143, 149, 158, 168, 171, 181, 182, 200, 201, 204, 208, 211, 216, 220, 221, 228, 235, 236, 247, 250, 252, 259, 260, 264, 269, 273, 276, 277, 281, 282, 289, 298], "point": [0, 3, 4, 5, 6, 7, 8, 11, 12, 13, 16, 17, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 65, 68, 73, 80, 84, 100, 101, 104, 129, 155, 157, 168, 174, 175, 176, 180, 181, 196, 197, 206, 215, 236, 250, 259, 262, 264, 277, 280, 281, 296, 298, 299], "show": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 67, 68, 69, 70, 72, 73, 80, 89, 99, 103, 104, 168, 181, 182, 196, 248, 250, 252, 259, 260, 277, 296], "explicitli": [0, 3, 7, 8, 9, 12, 20, 21, 22, 23, 32, 104, 158, 176, 217, 236, 250, 259, 287], "cggttttt": 0, "ag": [0, 7, 12, 30, 90, 181, 221], "ttt": [0, 12, 13, 21, 22, 30, 68, 76, 235], "start": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 35, 36, 39, 43, 46, 51, 52, 53, 56, 61, 62, 65, 66, 69, 71, 72, 73, 80, 84, 89, 90, 93, 94, 99, 100, 104, 108, 129, 130, 136, 138, 139, 152, 154, 158, 168, 181, 182, 196, 198, 203, 214, 215, 216, 218, 220, 221, 225, 228, 231, 233, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 258, 259, 269, 272, 273, 277, 278, 282, 294, 296, 298, 302, 306], "end": [0, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 27, 30, 31, 32, 35, 36, 46, 51, 56, 61, 62, 63, 66, 68, 71, 80, 84, 89, 90, 94, 95, 99, 104, 125, 130, 136, 138, 154, 168, 181, 182, 196, 203, 213, 214, 216, 220, 221, 225, 228, 233, 235, 236, 237, 244, 251, 259, 260, 263, 264, 268, 269, 273, 274, 277, 296, 298, 302], "shown": [0, 3, 4, 6, 7, 8, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 30, 33, 59, 66, 68, 71, 104, 143, 151, 154, 235, 236, 237, 249, 250, 252, 259, 279, 282, 296, 297, 298], "left": [0, 4, 6, 8, 11, 12, 13, 15, 21, 24, 30, 73, 94, 99, 104, 149, 152, 175, 236, 245, 250, 252, 259, 264, 298], "right": [0, 3, 4, 5, 6, 8, 11, 12, 13, 15, 19, 21, 22, 30, 68, 71, 73, 99, 104, 135, 138, 139, 174, 215, 236, 237, 259, 268], "respect": [0, 4, 11, 12, 13, 15, 17, 20, 21, 22, 30, 32, 45, 68, 83, 92, 122, 165, 181, 182, 208, 216, 237, 263, 264, 269, 289], "If": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 36, 37, 38, 44, 45, 47, 51, 52, 54, 56, 66, 67, 68, 69, 73, 80, 81, 83, 84, 92, 93, 94, 95, 99, 101, 102, 104, 108, 109, 113, 117, 127, 129, 132, 135, 136, 137, 139, 143, 149, 151, 154, 158, 165, 168, 175, 179, 181, 182, 192, 194, 195, 196, 204, 206, 208, 213, 216, 217, 220, 221, 228, 235, 236, 237, 240, 250, 252, 259, 260, 262, 263, 264, 268, 269, 276, 277, 280, 281, 282, 287, 289, 296, 297, 298, 299], "out": [0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 19, 20, 21, 23, 24, 25, 30, 31, 32, 68, 69, 73, 80, 82, 92, 99, 102, 103, 110, 116, 131, 138, 148, 152, 169, 172, 180, 181, 194, 217, 220, 250, 252, 259, 264, 269, 277, 282, 291, 296, 302], "dash": [0, 12, 15, 30, 33, 43, 68, 117], "calcul": [0, 6, 9, 11, 17, 20, 22, 23, 27, 30, 31, 32, 34, 36, 44, 45, 52, 73, 80, 107, 108, 109, 120, 122, 127, 129, 132, 134, 135, 137, 141, 145, 156, 157, 165, 168, 174, 175, 181, 182, 185, 193, 198, 201, 202, 215, 220, 256, 260, 261, 262, 263, 264, 266, 269, 280, 281, 282, 286, 289, 293, 296, 298, 299], "infer_coordin": [0, 27, 30], "method": [0, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 15, 16, 19, 20, 22, 23, 24, 25, 30, 31, 32, 34, 36, 45, 53, 54, 60, 61, 66, 67, 71, 73, 79, 80, 83, 91, 94, 99, 100, 104, 108, 109, 122, 126, 132, 135, 136, 139, 143, 148, 149, 151, 154, 168, 169, 171, 172, 175, 180, 181, 182, 185, 193, 196, 197, 198, 203, 206, 208, 235, 236, 237, 240, 245, 248, 250, 251, 252, 256, 259, 262, 263, 264, 269, 277, 279, 280, 281, 282, 287, 290, 293, 296, 298, 302, 304], "primarili": [0, 24, 30, 158], "emploi": [0, 30, 167, 196], "purpos": [0, 7, 12, 13, 15, 17, 20, 24, 25, 30, 61, 84, 99, 108, 146, 196, 260, 280, 296, 304], "exampl": [0, 1, 3, 6, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 38, 41, 46, 51, 53, 56, 58, 59, 60, 61, 62, 66, 67, 68, 69, 73, 80, 83, 85, 91, 94, 101, 104, 108, 109, 112, 113, 114, 116, 117, 122, 125, 126, 133, 134, 135, 139, 140, 148, 152, 154, 157, 158, 168, 169, 172, 175, 181, 182, 196, 198, 200, 203, 206, 214, 216, 217, 220, 221, 228, 233, 235, 236, 237, 240, 243, 245, 248, 249, 250, 251, 252, 255, 259, 260, 262, 263, 269, 271, 273, 276, 278, 281, 282, 287, 290, 291, 296, 297, 298, 302, 304], "construct": [0, 3, 6, 11, 12, 15, 17, 22, 23, 30, 32, 67, 68, 69, 119, 129, 143, 151, 154, 162, 182, 187, 189, 196, 197, 198, 208, 236, 237, 241, 269, 273, 279, 280, 286, 287], "aligned_sequ": 0, "replac": [0, 3, 4, 5, 7, 10, 11, 13, 15, 22, 23, 27, 30, 31, 32, 60, 63, 65, 69, 80, 83, 93, 126, 129, 135, 157, 217, 235, 237, 250, 257, 259, 263, 269, 277, 303], "fmt": [0, 4, 13, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 182, 245, 282], "skip": [0, 4, 7, 8, 13, 17, 21, 24, 27, 30, 32, 83, 84, 94, 129, 143, 167, 203, 257, 269], "agttt": 0, "initi": [0, 4, 13, 15, 17, 20, 21, 29, 30, 31, 32, 36, 60, 62, 67, 68, 69, 71, 72, 73, 74, 76, 80, 81, 82, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 116, 117, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 144, 145, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 167, 168, 171, 174, 175, 176, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 225, 227, 229, 230, 231, 232, 234, 236, 246, 248, 251, 252, 257, 258, 262, 263, 264, 268, 269, 270, 271, 272, 274, 277, 279, 280, 281, 282, 283, 286, 288, 289, 290, 291, 293, 294, 296, 298, 304], "g": [0, 1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 17, 20, 21, 22, 23, 24, 30, 31, 32, 53, 56, 62, 66, 67, 68, 69, 70, 73, 76, 80, 88, 94, 99, 104, 108, 109, 119, 123, 129, 132, 135, 137, 139, 145, 146, 149, 152, 153, 155, 158, 159, 162, 164, 168, 171, 178, 179, 181, 182, 196, 198, 201, 202, 208, 209, 210, 211, 213, 214, 215, 216, 220, 225, 228, 235, 236, 237, 240, 246, 247, 248, 249, 250, 252, 259, 260, 262, 263, 264, 267, 268, 269, 271, 273, 277, 279, 286, 287, 295, 296, 298], "final": [0, 3, 4, 7, 12, 15, 17, 20, 21, 23, 32, 45, 66, 69, 99, 100, 104, 168, 181, 189, 192, 194, 195, 201, 213, 220, 245, 250, 252, 259, 268, 269, 277], "cc": [0, 11, 22, 25, 30, 53, 86, 90, 221, 294], "were": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 20, 22, 23, 30, 42, 63, 71, 94, 168, 218, 221, 230, 231, 236, 250, 259, 277], "therefor": [0, 3, 4, 6, 7, 11, 12, 15, 16, 21, 23, 30, 32, 35, 46, 51, 61, 68, 69, 73, 83, 99, 208, 233, 237, 239, 250, 277, 287], "miss": [0, 5, 11, 12, 15, 18, 27, 56, 63, 73, 129, 151, 152, 158, 168, 196, 236, 237, 247, 250, 252, 269, 277], "here": [0, 1, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 26, 30, 66, 68, 73, 83, 99, 137, 143, 158, 168, 181, 196, 200, 203, 206, 216, 217, 220, 221, 233, 236, 237, 250, 259, 263, 274, 275, 276, 277, 287, 298, 306], "But": [0, 3, 7, 15, 17, 20, 23, 216, 221, 236, 250, 304], "easi": [0, 5, 6, 7, 8, 9, 11, 12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 56, 82, 93, 97, 99, 102, 137, 216, 236, 237, 250], "fix": [0, 11, 15, 21, 24, 32, 146, 152, 163, 174, 175, 181, 269, 276, 277, 302], "c": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 17, 19, 22, 23, 29, 30, 31, 32, 46, 62, 66, 67, 69, 73, 76, 80, 84, 118, 129, 135, 137, 139, 140, 146, 149, 152, 154, 157, 159, 165, 167, 168, 171, 174, 176, 181, 182, 217, 221, 228, 235, 246, 250, 259, 260, 262, 263, 267, 268, 269, 277, 279, 287, 295, 296, 298], "aa": [0, 7, 11, 13, 22, 30, 31, 32, 66, 104, 137, 154, 181, 274], "abov": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 56, 66, 83, 94, 104, 108, 152, 167, 168, 176, 201, 204, 216, 220, 236, 237, 249, 250, 251, 252, 255, 259, 262, 264, 269, 277, 282, 289, 296, 297], "By": [0, 3, 4, 6, 7, 8, 11, 12, 13, 15, 17, 20, 22, 23, 24, 25, 30, 32, 54, 67, 69, 83, 92, 99, 102, 108, 109, 127, 135, 149, 181, 182, 216, 236, 240, 249, 250, 259, 260, 264, 269, 273, 277, 289, 296, 298, 302], "default": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 16, 17, 20, 21, 22, 23, 24, 27, 30, 31, 32, 35, 36, 37, 38, 42, 49, 51, 52, 54, 64, 65, 67, 68, 69, 70, 72, 73, 80, 83, 84, 89, 92, 99, 102, 104, 108, 109, 127, 129, 132, 135, 136, 137, 138, 140, 143, 144, 145, 148, 149, 151, 152, 154, 157, 158, 160, 164, 165, 167, 168, 181, 182, 185, 194, 196, 198, 206, 216, 217, 220, 221, 228, 235, 236, 237, 240, 249, 250, 259, 260, 262, 263, 264, 269, 273, 275, 276, 277, 281, 282, 287, 289, 296, 297, 298, 302, 303], "argument": [0, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 42, 45, 47, 49, 51, 52, 54, 55, 56, 60, 64, 67, 68, 69, 71, 73, 80, 83, 85, 86, 88, 89, 90, 91, 92, 94, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 116, 119, 120, 126, 127, 135, 136, 137, 142, 143, 144, 146, 149, 151, 155, 156, 162, 168, 181, 182, 192, 194, 196, 200, 203, 204, 205, 206, 209, 210, 211, 212, 213, 216, 217, 220, 235, 236, 237, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 268, 269, 270, 271, 273, 277, 278, 279, 280, 281, 282, 287, 289, 296, 298, 301, 302], "none": [0, 3, 4, 6, 8, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 76, 84, 85, 92, 94, 99, 102, 103, 104, 108, 119, 120, 121, 122, 127, 129, 130, 132, 135, 136, 137, 139, 143, 144, 145, 149, 151, 152, 155, 156, 157, 158, 160, 162, 164, 167, 168, 171, 175, 176, 178, 179, 182, 183, 184, 185, 186, 188, 189, 192, 194, 195, 196, 198, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 216, 235, 236, 237, 239, 240, 245, 247, 248, 249, 250, 251, 252, 257, 259, 260, 262, 263, 268, 269, 271, 273, 274, 275, 277, 278, 279, 280, 281, 282, 286, 287, 289, 290, 291, 293, 294, 298, 302, 303], "assum": [0, 3, 4, 6, 7, 11, 12, 15, 19, 23, 24, 30, 32, 60, 67, 71, 94, 125, 135, 151, 153, 157, 182, 208, 216, 230, 236, 237, 250, 251, 252, 260, 264, 269, 276, 286, 289, 302], "ungap": [0, 11, 42, 68, 69, 221, 278, 280], "must": [0, 3, 5, 8, 10, 11, 12, 13, 14, 17, 20, 21, 23, 24, 30, 32, 35, 36, 37, 38, 47, 53, 54, 56, 61, 66, 67, 68, 69, 83, 92, 104, 107, 108, 117, 122, 127, 152, 168, 174, 181, 182, 185, 198, 206, 208, 213, 216, 228, 235, 236, 237, 246, 247, 249, 250, 259, 263, 269, 277, 287, 289, 296, 298, 302], "fill": [0, 5, 11, 15, 89, 99, 102, 104, 168, 247, 269, 286], "ungapped_align": [0, 68, 70], "acgtacgt": [0, 22, 259], "aagtacgt": 0, "acgtacct": 0, "commonli": [0, 1, 4, 8, 17, 23, 30, 73, 83, 294], "found": [0, 3, 4, 5, 6, 7, 9, 12, 13, 15, 17, 18, 22, 23, 24, 25, 30, 53, 54, 56, 67, 68, 71, 72, 73, 80, 84, 102, 104, 140, 168, 171, 181, 182, 194, 197, 209, 210, 211, 212, 213, 216, 235, 236, 237, 250, 251, 252, 257, 269, 270, 273, 274, 282, 289, 294, 297, 298, 299], "list": [0, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47, 49, 51, 54, 56, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72, 73, 76, 80, 81, 82, 83, 84, 87, 88, 89, 93, 94, 99, 100, 101, 102, 103, 104, 108, 109, 112, 113, 114, 117, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 144, 146, 149, 152, 154, 155, 156, 159, 160, 163, 166, 168, 171, 174, 176, 178, 179, 181, 182, 185, 196, 197, 200, 201, 202, 203, 204, 206, 208, 209, 213, 216, 217, 221, 225, 235, 236, 237, 245, 247, 250, 256, 258, 259, 260, 264, 266, 268, 269, 271, 272, 273, 275, 276, 279, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 298, 301, 302], "depend": [0, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 17, 20, 22, 23, 24, 25, 27, 30, 32, 71, 73, 80, 83, 104, 157, 168, 216, 228, 235, 236, 237, 263, 273, 277, 286, 296, 298, 299], "wa": [0, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 17, 19, 20, 21, 22, 23, 25, 27, 42, 48, 63, 65, 67, 68, 69, 71, 73, 80, 84, 88, 100, 102, 103, 108, 134, 137, 182, 184, 187, 189, 216, 217, 220, 221, 225, 228, 233, 236, 237, 239, 249, 250, 252, 259, 260, 267, 268, 277, 282, 295, 298, 302], "type": [0, 3, 7, 8, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 38, 45, 53, 54, 56, 62, 68, 69, 73, 76, 80, 83, 84, 88, 93, 94, 101, 104, 107, 116, 117, 122, 123, 125, 127, 131, 134, 135, 136, 137, 139, 140, 149, 150, 151, 154, 155, 164, 171, 175, 176, 180, 181, 182, 196, 197, 208, 210, 213, 216, 224, 228, 233, 235, 236, 237, 245, 249, 251, 259, 260, 261, 262, 263, 264, 271, 274, 275, 277, 287, 293, 294, 296], "plain": [0, 1, 3, 6, 7, 8, 9, 13, 17, 19, 22, 23, 25, 30, 36, 68, 69, 70, 71, 83, 84, 89, 90, 94, 132, 184, 187, 189, 190, 196, 216, 221, 223, 227, 228, 232, 236, 237, 255, 257, 259, 260, 273, 275, 277, 296], "python": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 35, 39, 46, 51, 52, 61, 67, 68, 69, 80, 83, 84, 86, 89, 90, 123, 131, 158, 165, 171, 173, 174, 181, 182, 184, 196, 199, 217, 220, 235, 236, 237, 252, 259, 260, 269, 272, 273, 277, 283, 294, 296, 298, 302, 305, 306], "seq": [0, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 27, 30, 31, 36, 37, 38, 53, 59, 60, 66, 68, 80, 88, 89, 91, 92, 94, 108, 109, 154, 168, 196, 205, 206, 208, 236, 237, 239, 240, 245, 246, 248, 250, 252, 255, 259, 260, 261, 262, 263, 264, 266, 278, 279, 280, 282, 287, 290, 296, 300, 301, 302, 303], "mutableseq": [0, 9, 27, 30, 235, 236, 259, 260], "seqrecord": [0, 3, 6, 7, 8, 9, 12, 13, 15, 19, 20, 22, 25, 27, 30, 36, 37, 38, 49, 61, 64, 66, 68, 92, 94, 152, 168, 196, 216, 221, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 270, 278, 279, 280, 301, 302, 304], "byte": [0, 3, 6, 17, 22, 23, 36, 90, 91, 104, 150, 164, 196, 218, 219, 220, 224, 225, 231, 235, 237, 240, 244, 245, 246, 248, 250, 255, 256, 259, 277, 302], "bytearrai": [0, 22, 235, 302], "int32": [0, 13], "ani": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 45, 52, 53, 56, 60, 65, 66, 67, 68, 73, 80, 83, 86, 93, 94, 103, 104, 105, 108, 117, 119, 129, 132, 136, 139, 140, 144, 150, 152, 155, 160, 167, 168, 171, 175, 176, 181, 182, 185, 196, 197, 216, 217, 221, 228, 235, 236, 237, 239, 240, 245, 247, 250, 251, 252, 255, 257, 259, 260, 261, 263, 264, 268, 271, 273, 276, 277, 280, 287, 296, 298, 304], "contigu": [0, 16, 20, 168, 216, 269], "buffer": [0, 129, 167], "b": [0, 2, 3, 4, 7, 8, 11, 13, 17, 22, 27, 30, 32, 36, 37, 45, 53, 62, 67, 73, 80, 83, 84, 98, 100, 104, 107, 108, 109, 118, 126, 135, 136, 137, 149, 152, 162, 168, 171, 176, 181, 182, 205, 208, 209, 210, 214, 219, 229, 232, 235, 237, 246, 247, 248, 249, 260, 262, 263, 264, 267, 268, 269, 277, 279, 294], "tupl": [0, 4, 6, 8, 13, 14, 15, 16, 20, 21, 23, 30, 36, 54, 71, 73, 87, 88, 94, 99, 101, 102, 104, 105, 108, 109, 112, 113, 114, 117, 121, 134, 135, 137, 139, 149, 168, 175, 176, 182, 201, 204, 208, 209, 214, 216, 221, 230, 231, 235, 237, 240, 250, 259, 260, 263, 264, 271, 277, 296, 298, 302], "alphabet": [0, 11, 12, 30, 54, 76, 77, 78, 94, 108, 121, 135, 206, 213, 237, 240, 245, 250, 252, 257, 282, 286, 289, 290, 294], "pairwisealign": [0, 12, 13, 14, 27, 30, 68], "mean": [0, 3, 6, 7, 8, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 30, 64, 65, 69, 73, 76, 98, 104, 149, 152, 174, 181, 185, 196, 197, 198, 201, 202, 215, 216, 221, 235, 236, 237, 240, 249, 250, 259, 260, 262, 263, 264, 277, 282, 289, 296, 299], "properti": [0, 3, 8, 11, 12, 13, 17, 20, 21, 22, 27, 30, 32, 54, 67, 68, 69, 80, 84, 100, 104, 117, 129, 134, 137, 139, 145, 168, 180, 181, 182, 192, 194, 195, 196, 197, 220, 221, 235, 236, 251, 255, 259, 264, 269, 282, 286, 289, 295, 301], "target": [0, 3, 7, 12, 13, 15, 17, 20, 27, 30, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 68, 69, 71, 79, 80, 81, 119, 129, 158, 168, 182, 185, 217, 221, 225, 228, 233, 240, 244, 245, 246, 250, 251, 252, 255, 258, 263, 269], "queri": [0, 3, 5, 12, 13, 20, 25, 27, 30, 38, 44, 45, 51, 52, 59, 61, 68, 69, 70, 71, 74, 83, 89, 119, 146, 168, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 259, 269, 273, 275, 298], "alias": 0, "A": [0, 1, 2, 3, 4, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 30, 31, 32, 33, 35, 36, 37, 38, 45, 46, 47, 49, 51, 53, 55, 56, 60, 61, 64, 65, 66, 68, 71, 72, 73, 76, 80, 81, 84, 92, 93, 94, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 117, 118, 119, 121, 123, 127, 129, 130, 135, 137, 139, 140, 141, 146, 149, 150, 152, 154, 155, 156, 157, 159, 164, 168, 171, 174, 176, 178, 179, 181, 182, 196, 198, 201, 206, 208, 209, 211, 213, 214, 216, 221, 235, 236, 237, 245, 246, 247, 250, 259, 260, 261, 262, 263, 264, 267, 269, 270, 271, 274, 276, 279, 280, 282, 286, 287, 288, 289, 290, 295, 296, 297, 298, 299, 301, 302], "integ": [0, 3, 4, 6, 8, 12, 15, 17, 20, 21, 23, 30, 32, 34, 54, 56, 68, 69, 71, 73, 80, 83, 84, 85, 89, 104, 117, 136, 152, 171, 181, 182, 196, 216, 235, 236, 237, 250, 259, 262, 266, 271, 273, 277, 281, 297, 298, 301], "store": [0, 1, 3, 4, 7, 12, 13, 14, 15, 20, 21, 23, 24, 25, 29, 30, 32, 35, 36, 37, 38, 39, 42, 45, 46, 51, 52, 53, 54, 56, 59, 61, 67, 68, 69, 71, 73, 76, 83, 84, 89, 93, 104, 123, 129, 130, 132, 135, 136, 149, 155, 164, 168, 170, 184, 196, 197, 216, 221, 233, 237, 238, 239, 246, 250, 256, 268, 271, 272, 274, 277, 279, 285, 286, 287, 292, 294, 295, 298, 300, 301, 304], "score": [0, 2, 3, 8, 14, 20, 21, 23, 25, 27, 30, 31, 32, 35, 36, 37, 39, 42, 46, 51, 53, 68, 69, 71, 80, 83, 121, 181, 198, 216, 217, 220, 221, 225, 228, 233, 237, 239, 248, 250, 252, 259, 264, 269, 274, 282, 289, 293, 296, 301], "basic": [0, 1, 2, 3, 6, 8, 9, 11, 12, 15, 17, 18, 19, 21, 22, 23, 24, 67, 94, 101, 107, 139, 176, 217, 235, 236], "usag": [0, 1, 7, 10, 12, 17, 21, 23, 24, 25, 27, 29, 30, 45, 60, 67, 69, 83, 107, 119, 123, 133, 152, 168, 181, 198, 216, 237, 239, 245, 268, 270, 271, 273, 297], "annot": [0, 2, 3, 6, 12, 17, 19, 20, 22, 23, 25, 26, 27, 30, 32, 37, 39, 46, 52, 53, 56, 62, 66, 68, 99, 104, 133, 149, 153, 180, 182, 187, 196, 197, 220, 221, 228, 236, 243, 244, 247, 249, 250, 251, 252, 254, 255, 259, 271, 276, 300, 301, 302, 306], "dictionari": [0, 3, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 20, 21, 22, 25, 30, 31, 39, 52, 53, 66, 67, 68, 76, 82, 83, 84, 86, 90, 100, 102, 104, 107, 108, 109, 117, 121, 123, 126, 127, 134, 137, 139, 141, 142, 157, 161, 168, 169, 171, 173, 184, 196, 200, 201, 202, 206, 209, 213, 216, 221, 235, 236, 237, 239, 243, 247, 250, 252, 256, 259, 260, 262, 263, 264, 271, 272, 276, 281, 286, 289, 294, 296, 298, 302], "most": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 30, 31, 45, 50, 56, 59, 65, 66, 67, 68, 69, 80, 83, 85, 99, 101, 108, 139, 149, 152, 176, 181, 182, 196, 200, 208, 216, 220, 221, 235, 236, 237, 240, 247, 250, 259, 263, 264, 277, 282, 297, 302], "associ": [0, 6, 12, 13, 21, 27, 30, 32, 52, 54, 66, 68, 69, 73, 80, 129, 132, 139, 149, 176, 181, 196, 197, 208, 216, 236, 244, 254, 256, 269, 274, 276, 289, 294, 302], "column_annot": [0, 27, 30, 53, 66], "along": [0, 4, 5, 6, 8, 11, 12, 15, 17, 20, 21, 31, 73, 100, 102, 168, 182, 196, 236, 260, 264, 298], "consensu": [0, 2, 17, 27, 30, 31, 53, 66, 80, 128, 132, 180, 239, 268, 269, 282, 289], "form": [0, 3, 4, 6, 7, 9, 11, 15, 16, 25, 30, 45, 69, 72, 84, 93, 107, 126, 137, 140, 168, 181, 196, 236, 271, 277, 289], "k": [0, 2, 3, 7, 9, 11, 12, 13, 14, 15, 17, 20, 22, 23, 25, 30, 32, 34, 53, 68, 71, 73, 80, 100, 109, 168, 181, 182, 259, 263, 264, 266, 267, 269, 280, 281], "j": [0, 2, 3, 4, 6, 7, 11, 12, 13, 17, 30, 32, 59, 68, 73, 74, 80, 125, 126, 129, 140, 149, 153, 157, 176, 181, 196, 250, 260, 262, 263, 268, 269], "where": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 30, 36, 56, 59, 65, 67, 72, 82, 83, 84, 92, 93, 94, 99, 100, 103, 104, 108, 118, 121, 125, 126, 127, 129, 139, 140, 149, 154, 156, 168, 175, 176, 181, 182, 200, 201, 202, 211, 216, 220, 221, 235, 236, 237, 247, 250, 255, 259, 262, 268, 269, 271, 277, 287, 294, 296, 299, 302, 306], "absent": [0, 69, 181, 196, 269, 272], "return": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 73, 74, 76, 80, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 107, 108, 109, 112, 113, 114, 116, 117, 119, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 208, 209, 213, 216, 218, 219, 220, 222, 223, 224, 225, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 302, 303], "onli": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 36, 40, 45, 49, 52, 56, 59, 60, 64, 65, 68, 69, 70, 71, 73, 76, 80, 81, 83, 91, 92, 104, 116, 117, 119, 125, 129, 137, 138, 140, 143, 144, 149, 152, 158, 167, 168, 176, 181, 182, 196, 197, 198, 201, 204, 216, 221, 225, 227, 235, 236, 237, 240, 241, 244, 246, 248, 250, 251, 252, 253, 255, 256, 258, 259, 260, 264, 268, 269, 271, 273, 274, 276, 277, 280, 282, 286, 287, 289, 296, 297, 298], "through": [0, 3, 5, 6, 7, 10, 11, 16, 17, 19, 20, 21, 23, 25, 30, 31, 62, 71, 84, 92, 100, 104, 107, 135, 152, 168, 182, 190, 196, 202, 214, 217, 225, 226, 228, 233, 235, 237, 277], "illustr": [0, 2, 6, 7, 8, 13, 20, 21, 23, 30, 134, 135, 139, 140, 250], "individu": [0, 4, 8, 13, 15, 18, 20, 21, 24, 25, 30, 45, 83, 90, 157, 158, 166, 176, 181, 196, 200, 201, 203, 204, 216, 221, 237, 259, 285, 288, 290, 291, 292, 294, 295], "ggtttt": 0, "select": [0, 8, 12, 13, 17, 23, 27, 30, 31, 32, 54, 59, 100, 106, 133, 135, 138, 139, 148, 149, 158, 168, 169, 172, 181, 182, 252, 287, 293, 298, 302], "iter": [0, 3, 4, 6, 7, 9, 10, 12, 16, 17, 20, 22, 25, 27, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 81, 83, 87, 88, 92, 94, 100, 108, 109, 112, 113, 114, 116, 120, 121, 122, 123, 129, 131, 134, 135, 139, 154, 159, 161, 164, 168, 182, 184, 185, 187, 189, 196, 197, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 225, 227, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 268, 269, 270, 272, 273, 275, 276, 277, 285, 292, 295, 297, 298, 302], "ggt": [0, 22, 23, 30], "rang": [0, 2, 3, 6, 7, 11, 12, 13, 15, 18, 20, 21, 30, 32, 61, 69, 80, 88, 98, 99, 100, 102, 103, 104, 119, 168, 181, 235, 236, 250, 263, 269, 273], "t": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 30, 31, 32, 45, 46, 48, 56, 61, 63, 65, 66, 67, 69, 71, 76, 80, 99, 100, 102, 104, 108, 119, 122, 129, 131, 137, 143, 149, 152, 175, 181, 182, 190, 196, 197, 220, 221, 235, 236, 245, 246, 250, 259, 260, 263, 264, 267, 268, 269, 274, 277, 287, 291, 295, 296, 301, 304], "posit": [0, 3, 4, 6, 8, 13, 14, 15, 17, 18, 22, 27, 30, 31, 32, 35, 36, 39, 44, 45, 46, 51, 52, 61, 66, 68, 69, 71, 73, 88, 99, 100, 104, 107, 114, 117, 125, 129, 135, 136, 139, 141, 146, 152, 158, 162, 168, 176, 181, 200, 202, 203, 216, 217, 221, 233, 235, 236, 239, 252, 256, 260, 262, 263, 264, 268, 269, 271, 277, 282, 285, 289, 292, 293, 294, 296, 302], "specif": [0, 3, 5, 7, 8, 9, 13, 17, 19, 20, 21, 23, 24, 25, 30, 31, 32, 37, 46, 53, 56, 66, 67, 68, 69, 76, 83, 92, 93, 99, 102, 105, 117, 139, 147, 152, 158, 168, 171, 176, 181, 182, 196, 197, 216, 221, 228, 236, 237, 238, 247, 256, 259, 264, 269, 271, 273, 277, 282, 287, 289, 290, 297, 298], "caa": [0, 22], "ggg": [0, 3, 20, 22, 76], "new": [0, 2, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 23, 25, 26, 30, 32, 36, 45, 54, 60, 67, 68, 69, 70, 71, 76, 84, 94, 104, 105, 109, 112, 113, 114, 120, 126, 127, 129, 132, 149, 153, 162, 168, 175, 176, 178, 179, 181, 182, 187, 189, 190, 196, 198, 204, 206, 235, 236, 237, 243, 245, 250, 251, 259, 260, 263, 264, 269, 277, 281, 282, 287, 294, 296, 298, 302, 306], "extract": [0, 3, 6, 7, 8, 10, 12, 13, 17, 19, 20, 21, 22, 25, 27, 30, 31, 62, 68, 94, 126, 133, 138, 181, 190, 200, 204, 213, 216, 217, 225, 236, 237, 250, 252, 259, 269, 273, 295, 298, 299, 305], "give": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24, 27, 30, 35, 46, 51, 56, 61, 67, 68, 70, 71, 83, 94, 99, 100, 104, 107, 112, 113, 114, 117, 122, 126, 132, 213, 216, 236, 237, 240, 249, 250, 259, 268, 270, 273, 277, 281, 296, 297, 298, 302], "cggt": [0, 30], "aggt": 0, "similarli": [0, 3, 4, 7, 11, 12, 14, 15, 20, 21, 23, 25, 30, 67, 184, 216, 235, 236, 250, 255, 269], "gttttt": 0, "gttt": 0, "gtc": [0, 22], "gta": [0, 22, 76], "call": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 21, 22, 23, 24, 25, 30, 41, 45, 49, 54, 56, 58, 59, 60, 61, 64, 66, 67, 68, 71, 73, 80, 84, 85, 89, 99, 104, 108, 119, 121, 122, 135, 139, 143, 149, 151, 153, 156, 157, 158, 167, 168, 175, 181, 184, 196, 198, 201, 202, 204, 208, 216, 235, 236, 237, 240, 244, 245, 246, 247, 249, 250, 251, 252, 254, 259, 263, 264, 267, 269, 270, 273, 276, 277, 280, 282, 286, 287, 292, 296, 297, 298, 302, 304], "copi": [0, 3, 6, 8, 12, 17, 19, 21, 24, 30, 36, 54, 133, 135, 139, 149, 157, 168, 175, 235, 236, 259, 269, 280, 296, 298], "number": [0, 2, 3, 6, 7, 8, 9, 11, 12, 15, 16, 17, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 35, 36, 42, 44, 45, 47, 49, 51, 54, 56, 60, 61, 68, 69, 70, 71, 73, 80, 83, 84, 86, 87, 88, 90, 93, 99, 100, 102, 104, 108, 109, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 126, 130, 132, 134, 135, 139, 140, 141, 143, 149, 151, 157, 158, 168, 171, 174, 175, 176, 181, 182, 184, 185, 187, 189, 196, 201, 202, 206, 208, 213, 214, 215, 216, 220, 221, 228, 235, 236, 237, 245, 246, 247, 250, 251, 252, 256, 259, 264, 268, 269, 271, 273, 274, 275, 277, 279, 280, 281, 286, 287, 289, 290, 293, 294, 296, 297, 298, 302], "len": [0, 1, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 30, 45, 59, 62, 66, 68, 81, 116, 131, 168, 185, 216, 217, 220, 235, 236, 237, 239, 243, 246, 249, 250, 252, 255, 259, 269, 277, 282, 297], "equal": [0, 4, 6, 7, 11, 12, 13, 14, 15, 17, 20, 22, 25, 30, 68, 73, 84, 104, 108, 135, 136, 139, 150, 155, 157, 167, 168, 176, 178, 179, 182, 236, 250, 259, 260, 263, 269, 281, 289, 293, 296, 298], "sum": [0, 4, 11, 12, 13, 17, 21, 23, 30, 31, 32, 69, 73, 107, 108, 109, 128, 129, 132, 157, 182, 236, 264, 298], "match": [0, 3, 6, 7, 8, 9, 12, 14, 15, 17, 20, 21, 22, 24, 25, 27, 30, 32, 33, 38, 42, 51, 55, 68, 69, 71, 79, 80, 83, 99, 104, 119, 132, 138, 167, 168, 174, 180, 182, 187, 213, 216, 217, 220, 225, 233, 236, 237, 246, 247, 250, 252, 259, 269, 273, 274, 276, 277, 287, 288, 289, 296], "total": [0, 4, 7, 11, 12, 13, 17, 23, 25, 30, 71, 108, 109, 182, 196, 201, 202, 220, 260, 263, 269, 274, 286, 289], "consist": [0, 3, 4, 6, 7, 11, 12, 13, 14, 15, 17, 20, 24, 30, 32, 38, 51, 52, 63, 66, 68, 73, 83, 99, 102, 135, 158, 168, 213, 214, 216, 220, 236, 237, 250, 254, 255, 259, 296], "alignment1": [0, 13, 30], "alignment2": [0, 13, 30], "evalu": [0, 3, 4, 11, 17, 20, 68, 69, 143, 151, 181, 182, 208, 217, 225, 228, 233, 236, 259, 263, 290, 291], "true": [0, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 17, 20, 21, 22, 24, 25, 29, 30, 31, 32, 36, 37, 38, 49, 51, 52, 64, 67, 68, 69, 70, 73, 76, 80, 83, 88, 91, 94, 104, 105, 117, 125, 127, 129, 132, 135, 139, 140, 143, 148, 149, 151, 152, 153, 154, 158, 165, 167, 168, 175, 176, 178, 179, 182, 187, 189, 192, 194, 195, 196, 197, 198, 201, 202, 203, 208, 216, 217, 219, 220, 229, 230, 235, 236, 237, 250, 252, 257, 259, 260, 263, 264, 275, 276, 277, 280, 282, 286, 289, 294, 296, 298, 302, 303], "contain": [0, 1, 3, 4, 6, 8, 11, 12, 13, 14, 16, 17, 19, 20, 21, 23, 24, 25, 30, 32, 33, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 73, 74, 76, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 99, 100, 101, 104, 105, 107, 108, 109, 113, 120, 121, 124, 128, 135, 139, 141, 144, 146, 149, 150, 155, 160, 168, 181, 182, 184, 185, 190, 196, 197, 198, 200, 201, 203, 204, 208, 216, 221, 225, 233, 235, 237, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 258, 262, 263, 264, 268, 269, 270, 272, 273, 274, 276, 277, 279, 280, 281, 282, 285, 289, 292, 294, 295, 296, 297, 298, 302], "either": [0, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 25, 31, 32, 56, 67, 69, 73, 76, 80, 83, 91, 99, 104, 123, 126, 129, 137, 181, 182, 192, 194, 196, 197, 198, 204, 208, 216, 217, 221, 225, 228, 235, 236, 237, 240, 249, 260, 262, 268, 271, 273, 277, 296, 297, 302], "condit": [0, 4, 14, 17, 20, 23, 24, 69, 73, 127, 181, 182, 185, 216, 228], "fulfil": [0, 3], "fals": [0, 3, 4, 7, 8, 11, 15, 17, 20, 21, 22, 30, 31, 32, 36, 37, 38, 49, 51, 52, 64, 67, 68, 69, 70, 73, 80, 83, 88, 91, 94, 104, 105, 127, 129, 132, 135, 136, 139, 140, 143, 144, 148, 149, 151, 152, 153, 154, 155, 158, 160, 162, 165, 167, 168, 169, 175, 182, 183, 184, 186, 187, 188, 189, 192, 194, 195, 198, 201, 203, 217, 218, 219, 220, 225, 230, 235, 236, 237, 238, 252, 257, 259, 260, 263, 264, 269, 276, 278, 280, 282, 287, 293, 296, 298, 302, 304], "inequ": [0, 4, 17, 109, 135, 139, 168, 236], "e": [0, 1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 30, 31, 32, 34, 45, 53, 54, 56, 67, 68, 69, 70, 71, 73, 76, 80, 81, 83, 88, 94, 99, 104, 108, 109, 118, 119, 126, 129, 132, 135, 137, 139, 145, 146, 149, 155, 158, 159, 162, 164, 165, 168, 171, 181, 182, 196, 198, 206, 208, 209, 210, 211, 213, 214, 216, 220, 225, 228, 235, 236, 237, 240, 247, 249, 250, 252, 259, 260, 262, 263, 264, 267, 268, 269, 271, 273, 277, 279, 282, 286, 287, 296, 298, 302], "establish": [0, 11], "thei": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 35, 36, 37, 38, 39, 41, 51, 52, 58, 67, 68, 70, 71, 88, 94, 107, 108, 121, 143, 151, 152, 155, 164, 168, 177, 181, 182, 213, 216, 220, 221, 225, 236, 250, 259, 263, 269, 277, 296, 302], "subsequ": [0, 2, 4, 7, 13, 21, 27, 30, 83, 158, 181, 235, 259, 264, 269, 296], "between": [0, 3, 6, 7, 11, 13, 14, 15, 16, 17, 20, 21, 22, 30, 32, 35, 36, 56, 68, 69, 73, 80, 83, 94, 99, 100, 101, 104, 108, 109, 117, 127, 130, 132, 135, 138, 140, 143, 156, 161, 163, 165, 168, 171, 174, 175, 176, 181, 182, 185, 196, 197, 203, 208, 213, 216, 221, 225, 236, 237, 250, 260, 263, 264, 269, 277, 281, 288, 296, 298, 299], "q": [0, 12, 13, 22, 30, 175, 181, 220, 236, 250, 260, 267, 269], "n": [0, 1, 3, 4, 6, 7, 10, 11, 12, 13, 14, 15, 17, 22, 23, 25, 30, 32, 38, 46, 51, 74, 80, 94, 119, 126, 129, 132, 135, 136, 149, 152, 153, 154, 165, 168, 174, 180, 181, 182, 184, 200, 206, 215, 220, 228, 236, 237, 244, 246, 250, 256, 259, 260, 262, 263, 264, 267, 269, 277, 289, 296], "chunk": [0, 23, 30, 94], "t_start1": [0, 30], "t_end1": [0, 30], "t_start2": [0, 30], "t_end2": [0, 30], "t_startn": [0, 30], "t_endn": [0, 30], "q_start1": [0, 30], "q_end1": [0, 30], "q_start2": [0, 30], "q_end2": [0, 30], "q_startn": [0, 30], "q_endn": [0, 30], "pairwise_align": 0, "differ": [0, 1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 42, 56, 65, 66, 68, 69, 72, 73, 80, 83, 84, 94, 99, 100, 101, 102, 104, 121, 126, 133, 135, 143, 144, 146, 167, 168, 176, 181, 198, 203, 206, 213, 216, 221, 225, 228, 237, 242, 247, 250, 252, 259, 260, 262, 263, 264, 269, 271, 273, 277, 280, 286, 287, 296, 299], "particular": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 19, 20, 21, 23, 30, 31, 83, 104, 108, 109, 182, 213, 235, 237, 259, 277, 298], "occur": [0, 4, 7, 11, 12, 13, 15, 17, 21, 23, 30, 73, 83, 84, 145, 221, 235, 236, 271], "term": [0, 4, 6, 8, 11, 13, 17, 18, 19, 20, 25, 30, 32, 35, 39, 46, 51, 52, 61, 83, 113, 119, 123, 168, 208, 212, 228, 251, 263, 273, 277], "placement": [0, 8, 13, 30, 32], "pairwise_alignment1": 0, "aaacaaa": [0, 13, 30], "aaagaaa": [0, 13, 30], "pairwise_alignment2": 0, "aaac": [0, 13, 30], "aaa": [0, 13, 22, 30, 221, 259, 279, 280], "gaaa": [0, 13, 30], "caaa": [0, 13, 30], "aaag": [0, 13, 30], "2d": [0, 2, 4, 11, 12, 13, 15, 30, 73, 101, 168, 176, 302], "inverse_indic": [0, 27, 30], "1d": [0, 4, 30, 73], "than": [0, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 17, 19, 20, 21, 23, 24, 25, 27, 30, 31, 32, 34, 35, 46, 49, 51, 56, 61, 62, 64, 65, 66, 68, 69, 71, 83, 88, 92, 113, 135, 136, 139, 152, 165, 168, 181, 196, 197, 202, 206, 208, 216, 221, 236, 237, 239, 240, 250, 254, 259, 264, 268, 269, 270, 274, 279, 282, 287, 289, 296, 297, 302], "pair": [0, 3, 6, 8, 12, 13, 14, 15, 18, 20, 23, 30, 32, 41, 54, 56, 58, 68, 79, 80, 81, 95, 99, 146, 161, 168, 175, 176, 178, 179, 181, 196, 198, 200, 201, 202, 203, 229, 250, 252, 269, 294, 296, 298, 302], "alignmentcount": [0, 27, 30], "namedtupl": [0, 30, 168], "field": [0, 2, 4, 7, 15, 17, 18, 20, 23, 25, 27, 30, 36, 38, 51, 61, 66, 83, 119, 126, 133, 139, 162, 168, 217, 218, 247, 250, 251, 255, 257, 262, 269, 273, 274, 275, 276, 277, 294, 296], "current": [0, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 24, 29, 32, 34, 37, 46, 66, 67, 68, 80, 85, 99, 100, 102, 103, 104, 107, 108, 109, 119, 122, 124, 125, 126, 139, 149, 153, 162, 164, 168, 181, 192, 194, 195, 196, 197, 198, 203, 210, 236, 249, 262, 269, 273, 275, 277, 280, 282, 301, 302, 303], "take": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 56, 83, 99, 104, 105, 120, 121, 122, 168, 181, 203, 216, 236, 237, 250, 259, 264, 269, 273, 277, 281, 287, 296, 297], "futur": [0, 3, 7, 15, 16, 23, 27, 30, 32, 67, 68, 69, 70, 80, 83, 92, 176, 181, 208, 235, 236, 259, 269, 276, 284], "like": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 30, 31, 32, 35, 39, 45, 46, 51, 56, 61, 66, 67, 68, 69, 70, 76, 80, 83, 84, 91, 92, 93, 95, 99, 101, 103, 104, 110, 120, 123, 129, 134, 135, 139, 145, 146, 149, 158, 168, 176, 181, 196, 198, 200, 204, 208, 209, 210, 211, 212, 213, 216, 217, 220, 228, 235, 236, 237, 240, 243, 244, 246, 247, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 268, 269, 270, 271, 277, 281, 282, 295, 296, 301, 302], "modifi": [0, 3, 4, 11, 12, 13, 17, 20, 21, 24, 80, 93, 149, 154, 158, 165, 168, 181, 182, 190, 208, 213, 216, 217, 235, 240, 250, 277, 282, 293], "accept": [0, 3, 4, 7, 9, 13, 15, 17, 20, 22, 23, 30, 38, 46, 51, 61, 67, 68, 80, 83, 99, 104, 138, 168, 216, 217, 236, 250, 269, 276, 280, 302], "option": [0, 3, 4, 6, 7, 9, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 30, 31, 32, 33, 43, 45, 48, 54, 56, 59, 60, 63, 65, 67, 68, 69, 72, 73, 76, 79, 80, 83, 90, 92, 93, 97, 99, 104, 108, 109, 118, 119, 120, 121, 127, 129, 135, 136, 139, 143, 149, 151, 152, 158, 164, 165, 168, 181, 185, 187, 189, 192, 194, 195, 196, 213, 214, 216, 224, 235, 236, 237, 240, 243, 245, 246, 249, 250, 251, 252, 257, 259, 260, 264, 268, 269, 272, 273, 274, 275, 281, 296, 302], "allow": [0, 1, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 30, 31, 32, 42, 45, 56, 61, 65, 66, 68, 69, 70, 71, 80, 83, 84, 99, 102, 103, 104, 105, 107, 108, 117, 119, 121, 123, 139, 181, 182, 196, 206, 216, 221, 235, 236, 237, 245, 250, 252, 256, 257, 260, 263, 268, 269, 273, 277, 279, 280, 287, 296, 301, 302], "its": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 32, 36, 44, 45, 49, 52, 53, 61, 64, 65, 68, 69, 80, 83, 99, 104, 117, 119, 132, 135, 139, 141, 149, 155, 156, 157, 168, 181, 182, 197, 208, 216, 217, 221, 228, 236, 237, 250, 251, 259, 262, 263, 268, 269, 277, 281, 286, 287, 288, 290, 291, 297, 298, 302], "behavior": [0, 4, 11, 16, 17, 20, 23, 30, 182, 216, 217, 236], "custom": [0, 7, 8, 10, 11, 16, 17, 30, 36, 38, 67, 99, 149, 158, 168, 181, 216, 217, 240, 250, 260, 303], "14": [0, 2, 3, 7, 8, 11, 13, 15, 20, 22, 30, 32, 68, 69, 71, 104, 113, 149, 205, 236, 248, 250, 252, 259, 262, 263, 280, 298], "often": [0, 1, 3, 4, 6, 7, 9, 11, 12, 15, 17, 19, 20, 21, 22, 23, 24, 132, 145, 181, 250, 263], "appear": [0, 3, 11, 12, 13, 15, 17, 36, 37, 38, 73, 80, 93, 108, 123, 126, 132, 182, 206, 237, 243, 250, 268, 272], "m": [0, 2, 3, 4, 7, 11, 12, 13, 14, 15, 16, 22, 25, 30, 32, 46, 55, 56, 59, 68, 73, 80, 111, 115, 119, 139, 140, 146, 149, 152, 153, 154, 157, 159, 167, 175, 181, 182, 196, 200, 216, 217, 225, 235, 236, 250, 252, 260, 264, 267, 269, 278, 282, 293, 296], "matrix": [0, 2, 3, 6, 14, 15, 27, 30, 31, 32, 49, 54, 56, 64, 68, 69, 70, 71, 73, 80, 88, 121, 129, 131, 135, 139, 158, 165, 168, 174, 175, 176, 180, 181, 198, 215, 269, 282, 285, 286, 287, 292, 294, 295, 296, 298], "symmetr": [0, 13, 30, 181, 296], "r": [0, 1, 2, 4, 6, 7, 11, 12, 13, 15, 22, 23, 30, 32, 53, 59, 60, 67, 68, 74, 80, 91, 100, 116, 139, 140, 146, 149, 152, 157, 159, 167, 168, 171, 175, 176, 181, 182, 236, 237, 245, 252, 260, 267, 269, 276, 277, 278, 282, 298], "time": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 32, 56, 69, 73, 80, 83, 84, 92, 99, 109, 168, 181, 185, 196, 208, 221, 237, 250, 252, 257, 264, 266, 269, 273, 287, 293, 298], "below": [0, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 19, 21, 22, 23, 24, 71, 72, 80, 90, 119, 149, 158, 168, 197, 202, 216, 250, 252, 262, 273, 277, 278, 287, 289], "later": [0, 4, 6, 7, 8, 9, 13, 15, 17, 19, 20, 21, 23, 32, 48, 63, 65, 67, 69, 73, 168, 259, 277], "while": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 27, 30, 32, 45, 56, 73, 83, 90, 94, 122, 149, 153, 158, 168, 216, 217, 228, 237, 250, 256, 259, 263, 264, 271, 277, 297], "transpos": [0, 4, 13, 15, 30, 54, 73, 168], "turn": [0, 1, 6, 7, 8, 9, 11, 12, 15, 17, 20, 23, 30, 32, 53, 56, 67, 68, 69, 70, 76, 80, 100, 137, 142, 181, 216, 237, 240, 250, 259, 264, 269, 271, 294, 297], "fast": [0, 2, 12, 14, 23, 30, 31, 32, 69, 146, 181, 252, 269, 277], "content": [0, 2, 3, 11, 13, 15, 18, 23, 29, 31, 36, 37, 38, 50, 84, 89, 90, 129, 149, 158, 201, 219, 220, 235, 263, 264, 272, 277, 287, 289], "align_arrai": [0, 12], "dtype": [0, 4, 11, 13, 15, 30, 54, 73, 79, 80, 168], "s1": [0, 13, 176, 206], "charact": [0, 4, 6, 11, 12, 13, 14, 15, 16, 17, 22, 23, 30, 31, 32, 38, 50, 51, 56, 65, 66, 83, 84, 85, 89, 94, 129, 175, 181, 196, 197, 213, 235, 237, 240, 243, 247, 249, 250, 251, 252, 259, 260, 263, 268, 277, 280, 289, 296, 298], "unicod": [0, 13, 68, 83, 277], "u": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 17, 19, 21, 22, 23, 25, 32, 73, 76, 80, 83, 122, 181, 235, 236, 259, 260, 267, 268, 269, 277, 299], "u1": [0, 30], "separ": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 15, 16, 20, 23, 32, 36, 65, 69, 80, 104, 108, 158, 168, 181, 182, 206, 209, 210, 211, 216, 217, 220, 225, 229, 236, 237, 249, 250, 255, 273, 296], "memori": [0, 1, 3, 4, 6, 7, 12, 14, 15, 21, 30, 56, 67, 68, 167, 168, 181, 197, 203, 204, 208, 213, 216, 237, 250, 252, 256, 268, 269, 277, 296], "edit": [0, 2, 6, 8, 12, 21, 22, 94, 235, 236, 250, 259, 269], "updat": [0, 3, 7, 8, 9, 11, 12, 24, 30, 32, 54, 76, 83, 88, 123, 136, 144, 149, 160, 168, 175, 181, 263, 294, 298], "done": [0, 1, 3, 4, 5, 6, 7, 8, 11, 15, 17, 19, 21, 22, 23, 24, 67, 95, 125, 127, 181, 203, 220, 235, 247, 252, 298, 301, 302], "base": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 116, 117, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304], "id": [0, 1, 3, 4, 6, 8, 9, 11, 12, 13, 15, 16, 19, 20, 21, 22, 23, 25, 27, 30, 32, 34, 36, 37, 38, 39, 45, 47, 53, 59, 60, 61, 62, 65, 66, 68, 69, 71, 76, 83, 85, 86, 88, 90, 93, 94, 104, 112, 113, 114, 115, 116, 117, 118, 123, 130, 132, 133, 134, 135, 136, 137, 139, 140, 143, 144, 149, 151, 152, 155, 160, 162, 167, 168, 170, 171, 180, 182, 183, 186, 188, 196, 197, 208, 210, 211, 213, 214, 216, 217, 220, 221, 222, 223, 224, 225, 228, 233, 236, 237, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 259, 269, 271, 272, 273, 274, 277, 278, 279, 286, 287, 294, 297, 298, 301, 302, 303, 304], "avail": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 30, 34, 52, 62, 67, 68, 70, 71, 73, 76, 83, 84, 88, 99, 104, 126, 134, 149, 158, 165, 167, 171, 181, 198, 201, 216, 217, 220, 221, 225, 226, 228, 233, 250, 262, 263, 269, 273, 279, 280, 286, 289, 298, 299], "otherwis": [0, 8, 11, 15, 16, 17, 23, 30, 31, 32, 54, 67, 68, 83, 95, 99, 104, 108, 132, 135, 148, 149, 162, 168, 169, 172, 181, 182, 192, 194, 195, 235, 236, 250, 259, 263, 269, 274, 276, 287, 289, 296, 298], "altern": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 25, 30, 31, 32, 45, 67, 76, 81, 83, 86, 90, 92, 99, 117, 120, 134, 135, 152, 158, 162, 167, 168, 171, 181, 235, 236, 237, 245, 250, 251, 270, 271, 281, 288, 289, 290], "suppli": [0, 3, 4, 7, 8, 12, 14, 15, 18, 19, 20, 21, 23, 30, 32, 108, 109, 152, 158, 168, 216, 217, 236, 259, 260, 277, 296], "kei": [0, 3, 6, 7, 8, 11, 13, 15, 17, 18, 20, 21, 22, 24, 25, 27, 30, 37, 39, 46, 53, 54, 66, 68, 76, 82, 83, 84, 85, 86, 90, 93, 94, 95, 100, 104, 107, 108, 117, 121, 126, 127, 133, 134, 137, 141, 155, 168, 173, 180, 182, 196, 200, 201, 208, 209, 213, 216, 218, 220, 225, 229, 231, 232, 235, 236, 237, 239, 243, 244, 250, 256, 259, 262, 263, 264, 269, 271, 272, 276, 277, 282, 286, 288, 289, 290, 291, 294, 296, 298, 300, 302], "function": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 35, 36, 38, 39, 40, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 104, 105, 108, 109, 110, 112, 113, 114, 116, 119, 120, 121, 122, 123, 127, 130, 138, 149, 168, 171, 175, 181, 182, 184, 185, 187, 189, 190, 193, 197, 200, 203, 204, 208, 216, 217, 236, 237, 239, 240, 243, 244, 246, 247, 248, 249, 250, 252, 254, 255, 258, 259, 260, 261, 262, 268, 269, 270, 271, 272, 273, 276, 277, 279, 281, 282, 289, 290, 291, 296, 297, 298, 299, 302, 304], "determin": [0, 4, 11, 12, 20, 23, 50, 56, 80, 84, 104, 146, 152, 168, 181, 206, 237, 260, 264, 269, 287], "order": [0, 3, 4, 5, 6, 8, 11, 12, 15, 17, 19, 20, 23, 24, 27, 30, 31, 32, 36, 37, 38, 60, 61, 73, 76, 80, 84, 102, 103, 108, 119, 137, 159, 166, 168, 171, 176, 179, 182, 196, 197, 201, 206, 208, 217, 221, 236, 237, 259, 269, 277, 298], "increas": [0, 4, 7, 30, 73, 182, 269, 296], "gc": [0, 8, 11, 12, 22, 23, 30, 53, 66, 76, 80, 260, 263, 289], "sequtil": [0, 6, 8, 22, 23, 27, 30, 237], "gc_fraction": [0, 6, 22, 27, 30, 260], "cheempi": 0, "appli": [0, 3, 4, 6, 11, 12, 13, 15, 16, 17, 20, 21, 23, 32, 56, 68, 69, 73, 80, 133, 135, 139, 153, 163, 165, 168, 174, 182, 196, 216, 236, 237, 238, 250, 259, 263, 266, 269, 273, 277, 279, 280, 287], "gg": [0, 30], "just": [0, 3, 5, 6, 7, 8, 9, 11, 12, 15, 17, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 49, 56, 64, 67, 71, 80, 83, 93, 94, 97, 99, 101, 104, 107, 108, 110, 129, 132, 152, 168, 181, 182, 190, 196, 202, 217, 235, 236, 237, 239, 240, 242, 250, 252, 254, 259, 263, 264, 277, 287, 296, 297, 302, 303, 304], "part": [0, 4, 6, 8, 9, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 37, 44, 46, 56, 59, 66, 73, 99, 117, 168, 182, 192, 194, 195, 196, 216, 220, 221, 235, 236, 237, 249, 251, 263, 268, 274, 277, 296, 298], "let": [0, 3, 5, 6, 7, 8, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 45, 84, 182, 235, 237, 250, 252, 259, 277], "decreas": [0, 4, 30, 181, 221, 263], "recalcul": [0, 11, 21, 264], "rc_align": [0, 30], "reverse_compl": [0, 6, 8, 11, 13, 19, 21, 22, 23, 27, 30, 235, 259, 282, 289], "aaaaaccgg": 0, "aaacct": 0, "ttaaact": 0, "aaaaaccg": 0, "ct": [0, 12, 27, 181, 239, 267, 268], "accg": [0, 30, 296], "acct": 0, "preserv": [0, 8, 15, 17, 20, 21, 23, 30, 84, 159, 182, 216, 221, 237, 252, 259], "discard": [0, 6, 32, 225, 263, 269], "togeth": [0, 6, 7, 8, 9, 11, 12, 13, 14, 21, 22, 23, 30, 61, 62, 66, 71, 83, 130, 168, 213, 216, 217, 237, 242, 250, 259, 277, 296], "As": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 35, 36, 38, 39, 45, 46, 51, 61, 68, 73, 81, 168, 216, 221, 235, 237, 246, 249, 250, 252, 269, 274, 277, 282], "a1": [0, 17, 30, 168, 175, 182, 263], "aaaac": [0, 30], "alpha": [0, 3, 8, 12, 13, 14, 15, 27, 30, 105, 113, 122, 137, 140, 154, 165, 168, 171, 180, 181, 198, 237, 240, 249, 259, 271, 279], "b1": [0, 30, 267, 269], "beta": [0, 4, 12, 13, 14, 15, 27, 30, 112, 120, 137, 152, 168, 171, 198, 210, 237, 240, 271, 279], "c1": [0, 30], "aaaag": [0, 30], "gamma": [0, 12, 30, 79, 80, 171, 180, 181, 198, 240, 279], "a2": [0, 30, 168, 175], "gtt": [0, 22, 30], "b2": [0, 30, 267, 269], "tt": [0, 21, 30, 123, 263], "c2": [0, 30], "gt": [0, 30, 68, 181, 221], "tool": [0, 2, 3, 5, 6, 7, 9, 11, 14, 15, 17, 19, 23, 26, 27, 30, 32, 40, 41, 42, 48, 50, 55, 56, 57, 58, 59, 63, 65, 66, 67, 68, 69, 70, 74, 80, 83, 126, 156, 181, 216, 217, 220, 221, 225, 249, 250, 252, 263, 277, 282, 284, 288, 289, 306], "demo": [0, 30], "name": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 42, 43, 45, 47, 49, 50, 51, 52, 53, 54, 56, 59, 61, 65, 67, 68, 69, 71, 73, 76, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 99, 100, 101, 102, 103, 104, 112, 113, 114, 115, 117, 119, 121, 123, 125, 126, 129, 132, 135, 137, 139, 140, 141, 142, 143, 149, 151, 152, 154, 155, 158, 162, 166, 168, 171, 174, 180, 181, 182, 183, 184, 186, 188, 196, 197, 198, 200, 201, 203, 204, 206, 210, 216, 217, 220, 228, 233, 235, 236, 237, 240, 246, 248, 249, 250, 251, 252, 255, 256, 258, 259, 262, 268, 269, 271, 274, 277, 279, 286, 287, 288, 290, 291, 294, 295, 296, 298, 302, 303], "stat": [0, 3, 7, 17, 20, 30, 32, 68, 123, 126, 193, 201, 202, 269], "cccxc": [0, 30], "cxc": [0, 30], "look": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 38, 53, 66, 80, 84, 93, 97, 101, 149, 168, 208, 250, 252, 259, 260, 277, 281, 296], "combin": [0, 2, 4, 6, 7, 8, 10, 12, 15, 22, 23, 25, 27, 30, 32, 52, 56, 80, 95, 128, 129, 168, 181, 198, 236, 237, 240, 249, 250, 259, 263, 271, 277, 279], "wise": [0, 4, 13, 30, 181], "aaaacgtt": [0, 30], "aaaagg": [0, 30], "work": [0, 3, 5, 7, 8, 9, 12, 14, 15, 16, 17, 20, 21, 23, 24, 30, 32, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 76, 87, 92, 93, 103, 107, 109, 110, 111, 112, 113, 114, 115, 119, 123, 124, 127, 137, 149, 158, 164, 168, 171, 180, 181, 192, 194, 195, 200, 204, 214, 216, 235, 236, 237, 239, 247, 248, 250, 259, 266, 269, 271, 273, 277, 297, 298], "both": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 20, 21, 23, 25, 30, 32, 56, 59, 63, 65, 69, 71, 80, 104, 109, 135, 158, 168, 181, 182, 187, 196, 213, 216, 217, 220, 221, 228, 233, 236, 250, 259, 263, 269, 277, 289, 296, 298], "refer": [0, 3, 4, 6, 7, 8, 9, 12, 13, 15, 17, 23, 24, 25, 27, 30, 32, 36, 39, 52, 53, 59, 61, 68, 71, 84, 85, 87, 88, 90, 92, 93, 109, 111, 115, 117, 119, 123, 132, 133, 135, 140, 152, 157, 168, 174, 176, 180, 181, 189, 196, 197, 200, 208, 215, 217, 221, 247, 251, 259, 262, 266, 267, 269, 271, 274, 282, 294, 301], "detail": [0, 3, 6, 7, 8, 11, 12, 13, 14, 15, 17, 19, 20, 21, 23, 24, 27, 30, 59, 67, 68, 69, 70, 83, 92, 135, 168, 181, 200, 201, 216, 220, 221, 238, 246, 247, 250, 252, 259, 263, 268, 269, 273, 275, 302], "handl": [0, 3, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 21, 23, 24, 25, 29, 30, 32, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 73, 74, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 99, 101, 103, 104, 112, 113, 114, 116, 118, 119, 121, 123, 126, 129, 132, 137, 143, 152, 158, 168, 171, 181, 182, 184, 187, 189, 190, 197, 198, 200, 204, 208, 209, 210, 211, 212, 213, 216, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 258, 259, 260, 268, 270, 271, 272, 273, 274, 276, 277, 282, 283, 285, 286, 288, 290, 291, 292, 294, 295, 297, 298, 304], "special": [0, 4, 11, 13, 15, 17, 19, 23, 24, 30, 32, 38, 56, 65, 95, 99, 149, 176, 236, 240, 250, 259, 277], "case": [0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 17, 19, 20, 21, 23, 24, 30, 32, 33, 38, 51, 56, 67, 68, 69, 70, 73, 83, 94, 95, 104, 107, 117, 135, 154, 162, 168, 175, 181, 182, 196, 204, 213, 216, 217, 220, 221, 225, 233, 235, 236, 237, 240, 250, 252, 259, 260, 261, 269, 274, 282, 287, 289, 296, 297], "origin": [0, 3, 4, 6, 7, 8, 9, 11, 12, 15, 17, 19, 20, 21, 23, 30, 36, 44, 45, 56, 59, 63, 69, 76, 90, 93, 94, 95, 97, 102, 123, 125, 126, 133, 136, 158, 165, 167, 168, 173, 174, 175, 181, 182, 213, 216, 235, 236, 237, 250, 251, 252, 257, 259, 264, 269, 270, 271, 274, 276, 298], "share": [0, 6, 7, 12, 15, 30, 32, 94, 132, 168, 220], "when": [0, 1, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 45, 55, 56, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 73, 80, 81, 83, 84, 91, 93, 97, 99, 102, 104, 108, 109, 117, 132, 149, 152, 165, 168, 181, 182, 185, 187, 189, 197, 208, 213, 216, 217, 220, 221, 228, 235, 236, 237, 245, 250, 251, 252, 255, 259, 260, 262, 268, 269, 280, 281, 289, 294, 296, 297, 301, 302], "lost": [0, 21, 30, 135, 168, 196, 259], "design": [0, 4, 6, 8, 9, 11, 12, 15, 19, 21, 24, 30, 73, 81, 95, 101, 102, 103, 108, 176, 221, 237, 250, 252, 260, 262, 263, 277, 280], "prevent": [0, 7, 11, 12, 24, 30, 32, 107, 235, 239, 250, 302], "accident": [0, 22, 30], "propag": [0, 12, 21, 30], "inappropri": [0, 30], "valu": [0, 2, 3, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 27, 30, 31, 32, 34, 35, 36, 37, 38, 42, 51, 53, 54, 55, 65, 67, 68, 69, 70, 71, 73, 76, 80, 82, 83, 84, 92, 93, 94, 95, 99, 100, 102, 103, 104, 105, 107, 108, 117, 119, 121, 122, 126, 127, 129, 132, 137, 141, 145, 152, 157, 158, 168, 175, 176, 180, 181, 182, 183, 185, 193, 196, 197, 198, 209, 215, 217, 220, 221, 225, 228, 229, 235, 236, 237, 240, 250, 252, 259, 260, 262, 263, 264, 266, 269, 271, 274, 276, 277, 279, 282, 287, 289, 291, 294, 295, 296, 298, 299, 300, 302], "per": [0, 6, 7, 15, 18, 21, 30, 53, 56, 60, 64, 66, 69, 83, 85, 104, 119, 121, 149, 158, 166, 168, 181, 196, 200, 201, 203, 204, 216, 228, 237, 240, 250, 258, 259, 263, 269, 272, 273, 274, 277, 301], "cccxccxc": [0, 30], "transcript": [0, 2, 7, 9, 11, 13, 21, 30, 35, 36, 51, 68, 274], "chromosom": [0, 3, 7, 13, 22, 23, 27, 30, 36, 37, 38, 46, 61, 98, 99, 102, 103, 196, 237, 244, 269, 274], "aaaaaaaacccccccaaaaaaaaaaaggggggaaaaaaaa": [0, 13, 30], "cccccccgggggg": [0, 13, 30], "sequences1": 0, "coordinates1": 0, "15": [0, 2, 3, 7, 8, 11, 13, 16, 20, 31, 32, 53, 69, 83, 87, 88, 104, 205, 236, 248, 250, 252, 259, 260, 262, 263, 269, 277, 280, 282, 298], "26": [0, 3, 6, 7, 8, 11, 13, 20, 21, 29, 30, 32, 69, 205, 216, 217, 233, 250, 252, 259], "32": [0, 2, 11, 12, 13, 22, 30, 32, 69, 168, 250, 259, 263], "13": [0, 2, 3, 7, 8, 11, 12, 13, 14, 15, 20, 21, 22, 30, 38, 68, 87, 104, 113, 137, 153, 182, 198, 205, 216, 221, 236, 248, 250, 259, 296, 298], "cccccccaaaaaaaaaaagggggg": [0, 13, 30], "24": [0, 3, 6, 7, 8, 11, 12, 13, 17, 20, 21, 25, 29, 30, 32, 69, 74, 182, 205, 248, 250, 259, 260], "ccccccc": [0, 13, 30], "gggggg": [0, 13, 30], "rna": [0, 13, 22, 23, 30, 32, 53, 56, 76, 93, 104, 154, 196, 235, 236, 237, 249, 251, 259, 260, 263], "rnaseq": 0, "ccccgggg": [0, 13, 30], "sequences2": 0, "coordinates2": 0, "11": [0, 2, 3, 4, 6, 7, 8, 11, 13, 20, 21, 22, 30, 32, 36, 67, 68, 73, 94, 104, 137, 157, 165, 208, 235, 236, 250, 259, 260, 263, 269, 280, 298], "genom": [0, 2, 3, 7, 8, 10, 11, 13, 20, 21, 22, 30, 32, 35, 36, 37, 38, 39, 46, 51, 52, 61, 79, 80, 93, 104, 111, 115, 119, 196, 199, 220, 236, 237, 244, 246, 269, 274, 277], "alignment3": [0, 13], "ccccaaaaaaaaaaagggg": [0, 13, 30], "30": [0, 2, 4, 6, 8, 11, 12, 13, 21, 23, 30, 32, 59, 68, 69, 70, 165, 168, 181, 215, 236, 250, 259, 269], "19": [0, 2, 3, 8, 11, 12, 13, 20, 29, 30, 88, 152, 154, 168, 205, 220, 248, 250, 259, 263, 269, 298], "cccc": [0, 4, 13, 30], "gggg": [0, 13, 30], "t0": [0, 13, 30], "t1": [0, 13, 30, 182, 263], "t11": [0, 13, 30], "tqueri": [0, 13, 30], "t8": [0, 13, 30], "ttarget": [0, 13, 30], "t40": [0, 13, 30], "t30": [0, 13, 30], "t2": [0, 13, 30, 182], "t4": [0, 13, 30], "abl": [0, 1, 3, 5, 7, 12, 17, 20, 23, 31, 42, 66, 108, 217, 220, 221, 263], "lift": [0, 30], "assembli": [0, 6, 13, 30, 136, 149, 152, 158, 168, 237, 242, 252, 267, 268], "self": [0, 2, 8, 11, 15, 17, 23, 24, 30, 31, 36, 45, 54, 67, 68, 73, 80, 104, 125, 126, 132, 168, 175, 176, 182, 184, 196, 213, 235, 259, 260, 263, 264, 274, 282, 287, 289, 296, 298], "dna": [0, 2, 6, 7, 10, 11, 12, 13, 19, 21, 22, 23, 30, 31, 32, 56, 76, 80, 83, 93, 154, 167, 181, 195, 196, 198, 235, 236, 237, 244, 249, 250, 251, 252, 258, 259, 260, 263, 266, 271, 277, 280, 289], "against": [0, 3, 4, 6, 11, 12, 13, 17, 20, 24, 25, 30, 32, 68, 69, 70, 83, 167, 182, 217, 269, 289], "pantro5topantro6": [0, 30], "chr1": [0, 13, 30, 36, 37, 38], "228573443": [0, 30], "224244399": [0, 30], "set_printopt": [0, 30, 215], "threshold": [0, 3, 6, 9, 12, 27, 30, 31, 32, 68, 69, 70, 71, 79, 80, 109, 132, 181, 228, 267, 269, 282, 289], "element": [0, 2, 4, 6, 7, 9, 12, 13, 15, 17, 18, 22, 23, 25, 30, 31, 53, 54, 69, 73, 83, 84, 104, 105, 108, 115, 116, 117, 120, 126, 135, 139, 158, 162, 167, 168, 171, 182, 196, 197, 198, 200, 201, 217, 233, 251, 264, 281, 296], "122250000": [0, 30], "122250400": [0, 30], "122909818": [0, 30], "122909819": [0, 30], "122909835": [0, 30], "111776384": [0, 30], "111776784": [0, 30], "111776785": [0, 30], "112019962": [0, 30], "112019978": [0, 30], "chimpanze": [0, 30], "pantro5": [0, 30], "pantro6": [0, 30], "est": [0, 7, 30, 79, 80, 274], "dc525629": [0, 30], "407": [0, 30], "122835789": [0, 30], "122835847": [0, 30], "122840993": [0, 30], "122841145": [0, 30], "122907212": [0, 30], "122907314": [0, 30], "90": [0, 6, 7, 8, 17, 30, 53, 168, 205, 215, 239, 250, 255], "242": [0, 30], "344": [0, 30], "express": [0, 2, 4, 5, 6, 7, 17, 20, 21, 23, 30, 56, 73, 96, 168, 182, 196, 214, 237, 250, 260, 274], "tag": [0, 7, 8, 15, 22, 24, 30, 52, 68, 71, 76, 80, 83, 84, 196, 239, 251, 259, 268, 269], "swap": [0, 30], "correspond": [0, 3, 4, 7, 10, 11, 13, 15, 16, 17, 21, 22, 25, 30, 37, 46, 61, 67, 68, 73, 83, 84, 86, 104, 108, 117, 139, 141, 154, 158, 161, 166, 175, 181, 182, 183, 186, 188, 196, 236, 247, 252, 269, 277, 278, 279, 286, 294, 302], "1000": [0, 4, 11, 13, 14, 15, 22, 32, 36, 49, 53, 64, 69, 214, 236, 260, 269], "reset": [0, 3, 11, 13, 68, 71, 108, 196], "lifted_transcript": 0, "111982717": [0, 30], "111982775": [0, 30], "111987921": [0, 30], "111988073": [0, 30], "112009200": [0, 30], "112009302": [0, 30], "span": [0, 3, 8, 20, 30, 158, 168, 236, 298], "71525": [0, 30], "bp": [0, 6, 7, 8, 21, 23, 30, 83, 206, 221, 269, 277], "26585": [0, 30], "consid": [0, 2, 4, 5, 7, 9, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 30, 32, 53, 62, 66, 73, 120, 182, 220, 225, 235, 236, 237, 250, 255, 259, 263, 269, 275, 277, 280, 281, 297, 298], "human": [0, 7, 10, 11, 13, 15, 20, 21, 22, 23, 25, 30, 45, 68, 93, 117, 119, 196, 220, 237, 259, 262, 263, 269, 271, 273, 298], "macaqu": [0, 22], "marmoset": 0, "mous": [0, 11, 22, 30, 181], "rat": [0, 22, 181], "path": [0, 3, 4, 7, 8, 12, 15, 17, 24, 30, 32, 37, 45, 67, 68, 83, 91, 100, 108, 109, 110, 112, 116, 117, 119, 149, 152, 153, 158, 164, 165, 170, 181, 182, 192, 194, 208, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 268, 269, 270, 271, 302], "genome_align": 0, "record": [0, 1, 4, 6, 8, 9, 11, 12, 13, 15, 16, 18, 19, 21, 22, 27, 28, 29, 30, 37, 46, 50, 52, 53, 56, 59, 60, 61, 62, 65, 66, 68, 69, 71, 73, 74, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 94, 96, 111, 112, 113, 114, 123, 145, 148, 152, 168, 176, 196, 199, 200, 203, 204, 208, 209, 210, 211, 212, 213, 214, 216, 219, 225, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 258, 259, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 282, 283, 285, 286, 287, 288, 290, 291, 292, 294, 295, 298, 301, 302, 304], "hg19": [0, 20], "249250621": 0, "rhemac8": 0, "225584828": 0, "caljac3": 0, "chr18": 0, "47448759": 0, "mm10": [0, 22], "chr3": [0, 13, 22, 45], "160039680": 0, "rn6": 0, "chr2": [0, 13], "266435125": 0, "133922962": 0, "133922970": 0, "133922972": 0, "133922995": 0, "133922998": 0, "133923010": 0, "155784573": 0, "155784581": 0, "155784583": 0, "155784606": 0, "155784609": 0, "155784621": 0, "130383910": 0, "130383918": 0, "130383920": 0, "130383943": 0, "130383946": 0, "130383958": 0, "9790455": 0, "9790463": 0, "9790465": 0, "9790488": 0, "9790491": 0, "9790503": 0, "88858039": 0, "88858036": 0, "88858028": 0, "88858026": 0, "88858024": 0, "88858020": 0, "88857997": 0, "88857985": 0, "188162970": 0, "188162967": 0, "188162959": 0, "188162957": 0, "188162953": 0, "188162930": 0, "188162918": 0, "actagtta": 0, "ca": [0, 11, 25, 86, 90, 135, 136, 140, 141, 152, 154, 156, 162, 165, 168, 171, 272], "gtaacagaaaataaaatttaaatagaaacttaaaggcc": 0, "gtaacagaaaataaaatttaaatagaagcttaaaggct": 0, "tataataattgtatatgtcacagaaaaaaatgaattttcaat": 0, "gacttaatagcc": 0, "tacaataattg": 0, "tatgtcatagaaaaaaatgaattttcaat": 0, "aacttaatagcc": 0, "want": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 30, 32, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 92, 99, 102, 108, 149, 151, 154, 168, 181, 182, 204, 206, 217, 220, 236, 237, 240, 250, 252, 259, 277, 280, 282, 296, 297, 302], "version": [0, 1, 6, 7, 8, 9, 11, 12, 14, 15, 17, 20, 21, 23, 24, 25, 27, 29, 30, 32, 42, 45, 51, 54, 56, 65, 68, 69, 70, 71, 76, 80, 83, 84, 88, 90, 93, 132, 133, 137, 158, 168, 180, 181, 207, 208, 209, 213, 216, 217, 220, 221, 225, 226, 227, 228, 233, 235, 237, 239, 242, 250, 251, 252, 266, 268, 269, 276, 277, 282, 286, 287, 294, 297, 302], "hg38": [0, 13, 22], "rhemac10": 0, "caljac4": 0, "mm39": 0, "rn7": 0, "do": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 36, 37, 38, 39, 46, 49, 51, 52, 60, 64, 68, 70, 80, 84, 92, 117, 120, 129, 158, 168, 181, 196, 205, 206, 215, 216, 220, 228, 235, 236, 237, 239, 244, 245, 247, 248, 250, 259, 263, 268, 269, 270, 277, 281, 287, 296, 301, 302, 304, 306], "so": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 45, 53, 54, 56, 62, 66, 68, 79, 80, 83, 84, 90, 93, 99, 101, 104, 107, 108, 109, 117, 123, 155, 158, 168, 181, 182, 196, 208, 216, 217, 228, 236, 237, 241, 250, 253, 259, 276, 277, 287, 288, 290, 293, 296], "old": [0, 6, 9, 12, 19, 21, 23, 26, 32, 68, 69, 70, 94, 181, 190, 235, 236, 250, 257, 259, 263, 277, 306], "speci": [0, 7, 11, 13, 17, 23, 27, 34, 61, 90, 92, 93, 176, 182, 196, 208, 210, 251, 274, 279, 286, 287, 294], "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 20, 21, 23, 24, 25, 27, 30, 36, 37, 38, 42, 45, 53, 56, 60, 61, 65, 66, 67, 68, 70, 73, 80, 83, 91, 93, 94, 95, 99, 100, 104, 109, 119, 126, 130, 132, 137, 143, 148, 149, 150, 151, 152, 157, 158, 168, 181, 185, 196, 198, 203, 204, 208, 213, 214, 216, 217, 220, 221, 225, 228, 235, 236, 237, 245, 250, 252, 260, 267, 271, 273, 274, 277, 286, 287, 293, 296, 297, 298, 299, 302], "typic": [0, 3, 4, 7, 8, 11, 12, 13, 15, 16, 17, 21, 22, 23, 24, 25, 27, 30, 32, 34, 35, 36, 39, 45, 51, 52, 56, 67, 69, 80, 83, 112, 113, 114, 117, 123, 126, 137, 148, 149, 156, 169, 172, 181, 194, 208, 213, 235, 237, 244, 247, 249, 250, 259, 263, 269, 270, 276, 277, 297], "liftov": 0, "test": [0, 3, 4, 6, 7, 8, 11, 14, 16, 17, 18, 20, 25, 26, 27, 34, 42, 71, 74, 79, 80, 86, 87, 88, 90, 91, 112, 113, 114, 126, 135, 139, 156, 167, 168, 181, 182, 193, 201, 202, 216, 217, 220, 221, 225, 228, 233, 235, 236, 237, 240, 248, 250, 259, 264, 274, 279, 280, 304, 306], "subdirectori": [0, 4, 8, 12, 13, 15, 24], "sourc": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 16, 17, 19, 20, 21, 23, 24, 27, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 61, 68, 83, 84, 93, 101, 108, 119, 123, 150, 165, 176, 178, 179, 182, 196, 216, 220, 228, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 268, 270, 271, 276, 286, 305], "distribut": [0, 4, 6, 7, 9, 11, 12, 13, 17, 25, 27, 98, 100, 101, 108, 152, 166, 180, 181, 193, 196, 197, 269, 282, 289, 293], "relev": [0, 7, 9, 10, 11, 15, 18, 21, 22, 24, 83, 117, 132, 158, 168, 213, 237, 259, 272, 297], "region": [0, 3, 6, 8, 12, 15, 20, 21, 30, 31, 32, 35, 36, 38, 39, 46, 51, 59, 61, 68, 80, 88, 102, 103, 104, 158, 196, 216, 221, 225, 235, 236, 247, 250, 252, 256, 267, 269, 271, 274, 296], "1198066": 0, "133919957": 0, "133932620": 0, "130607995": 0, "130620657": 0, "4990": 0, "1362": 0, "6308": 0, "hg19tohg38": 0, "rhemac8torhemac10": 0, "caljac3tocaljac4": 0, "mm10tomm39": 0, "rn6torn7": 0, "liftover_align": 0, "133924947": 0, "133926309": 0, "133926312": 0, "155184381": 0, "156354347": 0, "156354348": 0, "157128497": 0, "157137496": 0, "130382477": 0, "130383872": 0, "130384222": 0, "130388520": 0, "9786631": 0, "9787941": 0, "9788508": 0, "9795062": 0, "9795065": 0, "9795737": 0, "66807541": 0, "74196805": 0, "74196831": 0, "94707528": 0, "94708176": 0, "94708178": 0, "94708718": 0, "188111581": 0, "188158351": 0, "188171225": 0, "188228261": 0, "188236997": 0, "mapal": [0, 13, 27, 30], "248956422": [0, 13, 36, 37, 38], "223616942": 0, "47031477": 0, "159745316": 0, "249053267": 0, "130611000": 0, "130611008": 0, "130611010": 0, "130611033": 0, "130611036": 0, "130611048": 0, "155814782": 0, "155814790": 0, "155814792": 0, "155814815": 0, "155814818": 0, "155814830": 0, "95186253": 0, "95186245": 0, "95186243": 0, "95186220": 0, "95186217": 0, "95186205": 0, "9758318": 0, "9758326": 0, "9758328": 0, "9758351": 0, "9758354": 0, "9758366": 0, "88765346": 0, "88765343": 0, "88765335": 0, "88765333": 0, "88765331": 0, "88765327": 0, "88765304": 0, "88765292": 0, "174256702": 0, "174256699": 0, "174256691": 0, "174256689": 0, "174256685": 0, "174256662": 0, "174256650": 0, "cannot": [0, 3, 4, 7, 12, 15, 23, 27, 30, 45, 56, 68, 72, 152, 168, 187, 189, 197, 235, 237, 245, 250, 268, 277], "directli": [0, 3, 4, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 20, 21, 23, 24, 30, 32, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 80, 83, 84, 92, 99, 105, 107, 108, 125, 168, 181, 182, 184, 190, 196, 217, 221, 235, 237, 246, 250, 252, 254, 255, 259, 269, 270, 282, 284, 293, 297, 304], "instead": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 38, 45, 51, 56, 63, 65, 67, 69, 71, 73, 80, 83, 84, 92, 102, 108, 132, 139, 143, 151, 168, 181, 182, 184, 185, 196, 216, 217, 220, 228, 235, 237, 239, 240, 249, 250, 252, 254, 255, 264, 268, 269, 274, 277, 282, 284, 289, 293, 297, 302], "2bit": [0, 23, 256], "lazi": [0, 30, 108, 181, 235, 237], "load": [0, 1, 3, 4, 6, 7, 8, 11, 12, 14, 15, 18, 19, 23, 27, 30, 35, 36, 37, 38, 39, 42, 46, 51, 52, 53, 54, 61, 62, 66, 84, 104, 118, 121, 152, 158, 167, 168, 170, 171, 192, 194, 195, 198, 204, 208, 213, 216, 235, 237, 247, 250, 256, 259, 274, 277, 296, 300, 302, 304], "seqio": [0, 1, 3, 6, 7, 8, 9, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 27, 40, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 80, 91, 92, 94, 216, 235, 236, 259, 270, 273, 275, 277, 278, 302], "enumer": [0, 6, 8, 12, 22, 55, 68, 158, 168, 201], "filenam": [0, 1, 6, 7, 8, 9, 12, 13, 15, 17, 19, 20, 23, 30, 32, 56, 67, 68, 73, 80, 83, 84, 104, 105, 126, 129, 137, 138, 141, 142, 143, 149, 153, 158, 170, 181, 208, 209, 213, 216, 218, 219, 220, 222, 223, 224, 225, 230, 231, 237, 240, 249, 250, 269, 277, 297, 302], "f": [0, 2, 3, 7, 8, 11, 12, 13, 14, 15, 17, 22, 30, 32, 54, 68, 69, 76, 80, 107, 135, 139, 149, 168, 181, 202, 215, 236, 250, 252, 259, 260, 262, 263, 264, 267, 269, 277, 288, 290, 291, 298], "twobit": [0, 23, 237, 256], "assert": [0, 12, 13, 15, 23, 59, 168, 237, 277], "codon": [0, 2, 6, 21, 22, 30, 32, 34, 36, 76, 194, 221, 235, 236, 260, 278, 279, 280], "amino": [0, 2, 3, 11, 12, 14, 15, 23, 30, 32, 68, 71, 76, 79, 80, 137, 154, 168, 181, 213, 221, 235, 244, 247, 259, 260, 261, 262, 264, 271, 289, 296], "acid": [0, 2, 3, 11, 12, 14, 15, 23, 30, 32, 68, 71, 76, 111, 115, 119, 137, 154, 165, 168, 181, 213, 221, 235, 244, 247, 250, 260, 261, 262, 264, 271, 282, 289, 296], "plural": [0, 3, 11, 289], "inherit": [0, 3, 11, 15, 17, 45, 68, 71, 182, 236, 279, 280, 285, 288, 290, 292, 294, 295], "alignmentsabstractbaseclass": [0, 27, 30, 45], "wai": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 30, 34, 56, 65, 73, 92, 93, 99, 102, 135, 163, 168, 174, 176, 181, 182, 190, 206, 221, 228, 235, 236, 237, 259, 268, 280, 302], "own": [0, 3, 6, 7, 11, 12, 13, 14, 17, 19, 20, 22, 23, 24, 61, 117, 123, 143, 151, 168, 217, 221, 228, 250, 252, 259, 263, 277, 290, 296], "alwai": [0, 3, 4, 6, 7, 8, 13, 14, 15, 20, 30, 32, 83, 157, 168, 181, 182, 216, 217, 221, 235, 236, 237, 240, 241, 246, 250, 253, 258, 259, 264, 277, 287, 296], "itself": [0, 1, 3, 4, 7, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 24, 25, 30, 59, 68, 84, 93, 108, 117, 143, 151, 182, 184, 196, 200, 208, 213, 221, 235, 249, 250, 259, 262, 263], "contrast": [0, 3, 11, 20, 235], "independ": [0, 17, 80, 127, 168, 228], "given": [0, 4, 6, 7, 8, 11, 12, 14, 15, 17, 20, 22, 23, 30, 31, 32, 34, 56, 60, 64, 69, 71, 73, 76, 83, 91, 94, 102, 104, 108, 116, 119, 120, 121, 122, 126, 127, 129, 136, 139, 140, 146, 149, 150, 159, 162, 168, 170, 179, 181, 182, 184, 185, 186, 187, 189, 190, 196, 198, 200, 202, 208, 213, 216, 218, 220, 223, 224, 231, 235, 236, 237, 244, 250, 252, 256, 260, 261, 262, 263, 264, 269, 280, 281, 282, 287, 289, 293, 296, 298, 299, 302, 304], "alignment_iterator1": 0, "alignment_iterator2": 0, "act": [0, 6, 12, 13, 23, 30, 105, 117, 236, 240, 259, 273, 277, 302], "alignment_list": 0, "next": [0, 3, 4, 6, 7, 8, 11, 12, 13, 14, 17, 20, 21, 22, 23, 25, 30, 37, 45, 46, 52, 53, 56, 57, 58, 60, 62, 63, 65, 66, 68, 92, 129, 131, 168, 182, 203, 217, 221, 229, 237, 245, 250, 257, 266, 277, 297, 298, 299], "traceback": [0, 3, 4, 7, 13, 21, 22, 23, 30, 45, 56, 67, 68, 69, 80, 85, 216, 235, 236, 237, 240, 250, 259, 263, 277, 282, 297], "recent": [0, 3, 4, 6, 7, 12, 13, 14, 17, 19, 21, 22, 23, 30, 32, 45, 56, 67, 68, 80, 85, 137, 149, 182, 216, 235, 236, 237, 240, 250, 259, 263, 277, 282, 297], "stdin": [0, 3, 4, 12, 67], "line": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 27, 30, 32, 33, 35, 37, 42, 43, 46, 51, 52, 53, 56, 59, 61, 65, 66, 67, 68, 69, 71, 80, 81, 83, 88, 90, 94, 99, 103, 104, 117, 123, 126, 129, 132, 143, 149, 152, 154, 156, 162, 167, 168, 173, 175, 181, 189, 200, 203, 204, 206, 209, 210, 211, 212, 213, 216, 217, 221, 222, 223, 224, 225, 229, 233, 237, 240, 243, 244, 247, 249, 250, 254, 255, 259, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 284, 294, 296], "modul": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 306], "stopiter": [0, 3, 23, 30, 68], "item": [0, 3, 4, 9, 15, 20, 22, 30, 36, 54, 71, 73, 83, 109, 131, 136, 159, 180, 196, 198, 200, 209, 213, 216, 235, 237, 300, 301, 302], "loop": [0, 3, 6, 7, 8, 11, 12, 21, 22, 23, 25, 30, 32, 45, 56, 112, 113, 114, 168, 237, 263, 273, 297], "again": [0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 25, 30, 68, 71, 216, 217, 220, 236, 240, 250, 263], "implicitli": 0, "repr": [0, 19, 23, 54, 68, 168, 182, 259], "regular": [0, 3, 4, 6, 11, 17, 20, 79, 80, 99, 104, 143, 168, 181, 182, 216], "metadata": [0, 45, 46, 47, 61, 251, 286, 298], "wherea": [0, 4, 7, 15, 63, 83, 236], "100": [0, 3, 4, 6, 7, 8, 11, 15, 20, 21, 22, 23, 25, 32, 61, 69, 80, 122, 157, 181, 182, 206, 216, 236, 237, 252, 260, 263, 269, 273, 277], "attributeerror": [0, 17], "Their": [0, 176], "analog": [0, 3, 20, 21, 236], "singl": [0, 2, 3, 4, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 25, 27, 30, 31, 33, 35, 36, 39, 40, 44, 45, 46, 47, 49, 50, 51, 52, 53, 56, 57, 60, 61, 62, 65, 66, 68, 71, 73, 76, 80, 81, 82, 83, 92, 99, 102, 103, 104, 116, 119, 123, 126, 129, 130, 137, 144, 149, 158, 159, 168, 171, 175, 181, 182, 197, 200, 201, 208, 213, 214, 216, 220, 221, 225, 233, 235, 236, 239, 240, 241, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 258, 259, 260, 269, 270, 273, 274, 276, 277, 279, 282, 287, 289, 298, 302], "ucsc_mm9_chr10": 0, "48": [0, 2, 8, 13, 16, 215, 263, 277], "alignmentiter": [0, 27, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 62, 63, 65, 66], "0x": [0, 30, 68], "scheme": [0, 6, 8, 13, 15, 30, 32, 102, 104, 137, 228, 236, 250, 277], "automz": 0, "v1": [0, 175, 264], "veri": [0, 5, 6, 7, 8, 9, 12, 13, 15, 19, 20, 21, 22, 23, 25, 30, 32, 56, 94, 149, 158, 168, 176, 181, 208, 237, 239, 250, 252, 259, 263, 277], "larg": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 19, 21, 23, 25, 30, 32, 83, 84, 104, 116, 149, 158, 181, 204, 216, 237, 273, 277, 279, 289], "won": [0, 5, 6, 7, 8, 9, 12, 18, 20, 21, 23, 61, 65, 66, 149, 250, 291], "them": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 32, 45, 56, 66, 67, 68, 84, 92, 103, 104, 108, 136, 139, 149, 168, 181, 182, 184, 190, 216, 217, 220, 221, 228, 236, 237, 248, 250, 259, 269, 277, 279, 281, 302, 304], "onc": [0, 1, 3, 4, 5, 6, 7, 11, 12, 16, 19, 21, 22, 23, 30, 32, 56, 60, 61, 67, 73, 84, 90, 121, 158, 168, 204, 216, 237, 247, 250, 268, 272, 287, 297], "consider": [0, 3, 4], "amount": [0, 6, 11, 13, 71, 92, 100, 168, 236, 263], "cach": [0, 6, 7, 36, 44, 45, 84, 149, 168, 264, 277, 296], "quickli": [0, 7, 13, 15, 17, 19, 21, 30, 152], "excess": [0, 4, 7, 201, 240, 269], "fit": [0, 2, 4, 5, 7, 8, 16, 21, 27, 30, 120, 127, 177, 201, 202, 215, 228, 236, 242, 250, 269, 279, 297, 298, 299], "convert": [0, 3, 4, 7, 9, 11, 13, 15, 17, 22, 27, 30, 32, 52, 56, 68, 69, 83, 90, 93, 119, 132, 152, 158, 167, 168, 182, 187, 190, 197, 208, 213, 216, 235, 236, 237, 247, 250, 252, 260, 261, 263, 269, 273, 279, 280, 298, 302], "could": [0, 1, 3, 6, 7, 8, 9, 12, 15, 20, 21, 22, 23, 24, 25, 30, 31, 56, 63, 76, 88, 99, 103, 137, 196, 216, 235, 236, 247, 250, 252, 263, 273, 277], "27": [0, 3, 7, 11, 12, 13, 16, 20, 68, 69, 205, 235, 250, 252, 259, 263], "91": [0, 4, 8, 11], "mm9": 0, "chr10": 0, "3019377": 0, "ccccagcattctggcagacacagtg": 0, "aaaagagacagatggtcactaataaaatctgt": 0, "felcat3": 0, "46845": 0, "cccaagtgttctgatagctaatgtgaaaaagaagcatgtgcccaccagtaagctttgtgg": 0, "canfam2": 0, "47545247": 0, "cccaagtgttctgattgcctctgtgaaaaagaaacatgggcccgctaataagatttgcaa": 0, "3019435": 0, "taaattag": 0, "atctcagaggatggatggacca": 0, "3019465": 0, "46785": 0, "tgaactagaatctcagaggatg": 0, "ggactc": 0, "46757": 0, "47545187": 0, "tgacctagaatctcagaggatg": 0, "47545159": 0, "lose": [0, 13, 20, 30, 221], "ask": [0, 6, 7, 8, 11, 19, 20, 23, 61, 206], "keep": [0, 3, 4, 6, 7, 9, 10, 11, 12, 17, 19, 20, 21, 23, 24, 67, 69, 133, 182, 196, 221, 237, 248, 250, 259, 269], "3014742": 0, "aagttccctccataattccttcctcccacccccaca": 0, "3014778": 0, "caljac1": 0, "6283": 0, "aaatgta": 0, "tgatctccccatcctgccctg": 0, "6311": 0, "otogar1": 0, "175262": 0, "agatttc": 0, "tgatgccctcaccccctccgtgca": 0, "175231": 0, "loxafr1": 0, "9317": 0, "aggctta": 0, "tg": [0, 11, 30, 221], "ccaccccccacccccaca": 0, "9290": 0, "myfil": [0, 7, 60, 245], "txt": [0, 4, 6, 7, 10, 11, 12, 17, 20, 25, 56, 67, 80, 85, 90, 93, 104, 123, 149, 181, 216, 217, 243, 269, 271, 272, 288], "open": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 24, 25, 27, 29, 30, 32, 56, 57, 60, 61, 62, 65, 66, 68, 69, 71, 80, 83, 84, 85, 90, 91, 92, 112, 113, 114, 116, 123, 129, 142, 143, 151, 158, 165, 197, 198, 203, 204, 216, 217, 220, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 258, 259, 268, 269, 270, 271, 276, 277, 282, 288, 290, 291, 296, 297, 302], "some": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 56, 66, 67, 68, 69, 70, 80, 84, 92, 99, 102, 103, 104, 107, 109, 110, 117, 121, 122, 127, 132, 134, 136, 144, 147, 149, 151, 152, 168, 176, 181, 185, 201, 206, 216, 217, 221, 225, 235, 236, 237, 250, 252, 259, 260, 277, 296, 298], "requir": [0, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 31, 32, 36, 56, 65, 67, 69, 72, 80, 83, 99, 104, 109, 119, 122, 158, 166, 168, 176, 181, 182, 184, 192, 194, 196, 216, 235, 236, 237, 240, 245, 251, 252, 259, 260, 269, 273, 277, 279, 282, 287, 289, 296], "81": [0, 12, 13, 15, 32, 104, 248, 263], "text": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 17, 19, 22, 23, 25, 27, 42, 45, 60, 67, 68, 69, 70, 71, 76, 83, 84, 85, 87, 89, 93, 94, 97, 99, 143, 184, 187, 189, 196, 198, 208, 216, 223, 227, 229, 232, 236, 237, 240, 243, 244, 245, 247, 248, 249, 250, 255, 257, 259, 270, 271, 273, 274, 275, 290, 291], "non": [0, 3, 4, 7, 11, 12, 13, 14, 15, 17, 21, 22, 25, 30, 32, 45, 60, 67, 69, 73, 84, 85, 117, 126, 129, 143, 149, 154, 158, 168, 171, 182, 196, 197, 217, 220, 221, 229, 235, 236, 237, 245, 250, 252, 259, 260, 263, 271, 274, 296], "binari": [0, 1, 3, 6, 7, 23, 25, 27, 32, 36, 37, 38, 45, 54, 67, 68, 83, 145, 153, 181, 185, 196, 197, 201, 202, 237, 241, 246, 250, 251, 252, 253, 258, 259, 269, 277], "built": [0, 1, 3, 5, 6, 9, 11, 12, 15, 19, 20, 21, 22, 23, 24, 27, 32, 61, 67, 168, 182, 208, 220, 259, 273, 277, 282, 298], "request": [0, 3, 4, 6, 7, 8, 10, 11, 15, 25, 32, 68, 69, 83, 90, 104, 149, 176, 216, 235, 256, 259, 273, 277], "without": [0, 3, 4, 6, 7, 11, 12, 13, 15, 17, 21, 22, 23, 30, 56, 67, 71, 73, 80, 83, 99, 105, 113, 129, 130, 135, 165, 166, 168, 176, 181, 182, 198, 206, 213, 216, 217, 218, 220, 228, 237, 240, 250, 252, 259, 260, 269, 271, 277, 280], "represent": [0, 17, 20, 21, 30, 36, 54, 61, 67, 68, 76, 84, 86, 90, 92, 93, 95, 99, 102, 104, 105, 108, 112, 113, 114, 117, 121, 150, 154, 176, 178, 179, 182, 196, 200, 203, 206, 208, 221, 236, 246, 259, 282, 285, 286, 287, 292, 294, 295, 296, 298], "str": [0, 8, 9, 11, 12, 13, 21, 22, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 64, 67, 68, 71, 76, 84, 90, 91, 94, 125, 126, 131, 135, 136, 139, 144, 149, 150, 152, 155, 158, 160, 162, 164, 167, 168, 175, 182, 184, 187, 189, 196, 198, 214, 235, 237, 240, 244, 245, 248, 250, 255, 259, 260, 261, 269, 275, 282, 298, 301], "specifi": [0, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 21, 22, 24, 27, 29, 30, 31, 32, 34, 36, 38, 51, 54, 56, 59, 65, 67, 68, 69, 70, 73, 80, 84, 92, 93, 95, 99, 102, 103, 104, 105, 108, 109, 117, 119, 127, 131, 135, 139, 149, 151, 158, 162, 164, 168, 175, 181, 182, 192, 194, 195, 196, 206, 211, 216, 217, 220, 228, 235, 237, 251, 258, 259, 260, 269, 273, 280, 281, 282, 287, 296, 297, 298, 302], "sequence_0": [0, 11, 290], "nsequence_1": 0, "nsequence_2": 0, "sequence_1": [0, 11, 290], "sequence_2": [0, 11, 290], "keyword": [0, 3, 7, 14, 15, 17, 20, 21, 23, 30, 53, 67, 72, 73, 83, 89, 93, 104, 119, 168, 182, 196, 216, 217, 220, 259, 271, 272, 296, 298], "bedn": [0, 35, 36], "tabl": [0, 3, 4, 6, 7, 11, 13, 15, 20, 21, 31, 32, 34, 36, 69, 76, 79, 80, 93, 94, 107, 126, 166, 201, 208, 216, 225, 228, 229, 230, 231, 235, 236, 237, 259, 260, 263, 279, 285, 292, 294, 295, 302, 303], "insensit": [0, 22, 30, 68, 260, 269], "written": [0, 1, 3, 4, 8, 9, 12, 14, 15, 16, 17, 19, 20, 23, 30, 32, 47, 56, 65, 68, 69, 73, 80, 84, 99, 104, 129, 148, 149, 158, 165, 168, 169, 172, 181, 184, 187, 189, 192, 194, 195, 213, 216, 217, 218, 220, 221, 228, 230, 231, 237, 268, 269, 276, 297], "support": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 80, 84, 104, 132, 140, 149, 154, 158, 168, 170, 176, 177, 181, 182, 185, 190, 191, 192, 194, 195, 196, 198, 226, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 268, 269, 273, 275, 277, 282, 288, 289, 290, 291, 298, 301], "ye": [0, 7, 69, 80, 122], "17": [0, 2, 3, 7, 8, 11, 12, 13, 20, 23, 25, 30, 32, 104, 113, 168, 205, 236, 248, 250, 259, 260, 263, 280], "20": [0, 2, 3, 6, 7, 8, 11, 12, 13, 15, 20, 21, 22, 25, 30, 32, 53, 66, 67, 69, 80, 87, 88, 109, 113, 140, 154, 168, 181, 182, 201, 202, 205, 214, 215, 235, 236, 246, 250, 252, 259, 263, 269, 271, 279, 298], "hhr": [0, 22, 27, 30], "10": [0, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 30, 31, 32, 50, 53, 56, 59, 65, 66, 67, 68, 69, 70, 73, 80, 83, 87, 88, 91, 93, 100, 104, 119, 122, 125, 126, 137, 139, 140, 146, 168, 174, 181, 196, 201, 205, 206, 214, 216, 217, 220, 221, 225, 235, 236, 237, 239, 244, 248, 250, 251, 252, 259, 261, 263, 264, 266, 269, 271, 273, 275, 277, 278, 289, 290, 293], "18": [0, 3, 8, 11, 12, 13, 15, 16, 20, 21, 22, 23, 53, 68, 69, 80, 84, 90, 109, 149, 205, 215, 250, 259, 277, 280, 298], "12": [0, 2, 3, 7, 8, 10, 11, 12, 13, 16, 17, 20, 21, 22, 25, 30, 31, 32, 35, 36, 38, 69, 73, 93, 94, 99, 104, 125, 137, 141, 149, 182, 205, 206, 214, 217, 220, 236, 244, 250, 252, 259, 262, 263, 264, 280, 287, 298], "16": [0, 2, 3, 4, 7, 11, 12, 13, 14, 20, 25, 30, 32, 53, 69, 73, 87, 93, 104, 129, 168, 205, 250, 252, 259, 263, 264, 269, 277, 298], "al": [0, 4, 6, 7, 8, 9, 13, 17, 32, 34, 65, 69, 73, 107, 108, 109, 137, 140, 237, 251, 263, 264, 280, 298, 299], "ignment": 0, "exactli": [0, 3, 4, 7, 8, 10, 11, 12, 15, 17, 20, 21, 23, 25, 30, 86, 87, 88, 90, 92, 93, 113, 135, 216, 237, 240, 250, 252, 282, 287, 297, 298], "william": [0, 2, 7, 55, 149], "pearson": [0, 2, 11, 12, 32, 55, 56, 59, 73, 181, 216, 225, 240, 289], "probcon": [0, 32], "fa": [0, 6, 13, 30, 32, 38, 62, 80, 181, 208, 210, 237, 269], "plas_horvu": 0, "d": [0, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 17, 22, 25, 27, 30, 32, 34, 59, 62, 68, 69, 80, 118, 131, 149, 168, 176, 181, 221, 236, 250, 260, 262, 263, 264, 267, 268, 269, 279, 280, 282, 296, 299], "vllganggvlvfepndfsvkagetitfknnagyphnvvfdedavpsg": 0, "vd": 0, "vskisqeeyltapgetfsvtltv": 0, "pgtygfycephagagmvgkvtv": 0, "plas_chlr": 0, "vklgadsgalefvpktltiksgetvnfvnnagfphnivfdedaipsg": 0, "vn": 0, "adaisrddylnapgetysvklta": 0, "ageygyycephqgagmvgkiiv": 0, "plas_anava": 0, "vklgsdkgllvfepakltikpgdtveflnnkvpphnvvfdaalnpaksadlakslshkqllmspgqststtfpadapageytfycephrgagmvgkitv": 0, "plas_proho": 0, "vqikmgtdkyaplyepkalsisagdtvefvmnkvgphnvifdk": 0, "vpag": 0, "apalsntklriapgsfysvtlgt": 0, "pgtysfyctphrgagmvgtitv": 0, "azup_achci": 0, "vhmlnkgkdgamvfepaslkvapgdtvtfiptdk": 0, "ghnvetikgmipdg": 0, "ae": [0, 16], "fkskinenykvtfta": 0, "pgvygvkctphygmgmvgvvev": 0, "101": [0, 20, 216, 217], "plas_horv": 0, "vskisq": 0, "adaisrd": 0, "plas_anav": 0, "vklgsdkgllvfepakltikpgdtveflnnkvpphnvvfdaalnpaksadlakslshk": 0, "plas_proh": 0, "apalsnt": 0, "azup_achc": 0, "57": [0, 9, 11, 21, 23, 108, 239], "eyltapgetfsvtltv": 0, "95": [0, 2, 8, 11, 15, 216, 237, 239, 260, 263, 298], "56": [0, 11, 17, 221], "dylnapgetysvklta": 0, "94": [0, 6, 8, 11, 19, 23, 149, 249], "58": [0, 11, 13, 16, 17, 65, 107, 215, 263], "qllmspgqststtfpadapageytfycephrgagmvgkitv": 0, "99": [0, 3, 8, 16, 20, 116, 206, 215, 255, 263, 269], "klriapgsfysvtlgt": 0, "51": [0, 2, 3, 8, 9, 11, 15, 20, 215], "88": [0, 8, 29, 83, 215, 250, 263], "vklgsdkgllvfepakltikpgdtveflnnkvpphnvvfdaalnpak": 0, "pgtygfycephagagmvgkvt": 0, "ageygyycephqgagmvgkii": 0, "adlakslshkqllmspgqststtfpadapageytfycephrgagmvgkit": 0, "pgtysfyctphrgagmvgtit": 0, "pgvygvkctphygmgmvgvv": 0, "v": [0, 2, 4, 8, 11, 13, 15, 16, 22, 27, 30, 32, 73, 76, 80, 100, 152, 168, 181, 260, 264, 267, 269, 299], "dvllganggvlvfepndfsvkagetitfknnagyphnvvfdedavpsgvdvski": 0, "vtv": 0, "unknown": [0, 3, 4, 13, 17, 20, 21, 23, 30, 68, 71, 94, 104, 109, 135, 196, 204, 213, 235, 236, 246, 249, 259, 260, 271, 278], "dbxref": [0, 3, 12, 20, 21, 23, 27, 68, 233, 247, 259, 300, 301], "vklgadsgalefvpktltiksgetvnfvnnagfphnivfdedaipsgvnadai": 0, "iiv": 0, "vklgsdkgllvfepakltikpgdtveflnnkvpphnvvfdaalnpaksadlak": 0, "itv": 0, "vqikmgtdkyaplyepkalsisagdtvefvmnkvgphnvifdkvpagesap": 0, "vhmlnkgkdgamvfepaslkvapgdtvtfiptdkghnvetikgmipdgaeafk": 0, "vev": 0, "33": [0, 6, 8, 11, 16, 32, 53, 100, 168, 237, 250, 259, 260, 263, 264, 269], "34": [0, 2, 13, 25, 29, 111, 115, 119, 220, 250, 259], "42": [0, 8, 11, 21, 182], "44": [0, 2, 11, 16, 18, 182, 216, 250, 259], "50": [0, 3, 6, 8, 11, 12, 23, 25, 30, 32, 65, 68, 70, 155, 168, 201, 206, 213, 215, 236, 246, 248, 250, 252, 260, 263, 269, 298], "73": [0, 3, 4, 12, 16, 20, 209, 263], "41": [0, 3, 6, 11, 13, 16, 21, 250, 259, 263, 264], "43": [0, 2, 11, 12, 20, 87, 88, 157, 263], "47": [0, 3, 20, 30, 215, 263], "49": [0, 4, 8, 11, 12, 15, 22, 29, 73, 215], "72": [0, 11, 12, 13, 14, 68, 104, 239, 263, 264], "52": [0, 3, 7, 11, 12, 20, 168, 181, 215, 250], "59": [0, 2, 7, 8, 9, 11, 17, 21, 104, 107, 181, 236, 250, 263], "74": [0, 7, 23], "77": [0, 8, 9, 11, 14, 250, 263], "35": [0, 16, 30, 32, 156, 225, 250, 259, 263, 269], "66": [0, 7, 9, 263], "ll": [0, 3, 5, 6, 7, 8, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 30, 67, 95, 99, 101, 190, 250, 259], "stringio": [0, 1, 12, 17, 23, 32, 56, 167, 187, 198, 237, 252], "io": [0, 1, 4, 12, 15, 17, 23, 32, 56, 64, 68, 70, 90, 133, 148, 168, 169, 172, 237, 240, 242, 244, 245, 248, 250, 252, 255], "stream": [0, 3, 7, 27, 33, 35, 36, 37, 38, 40, 42, 45, 46, 47, 49, 51, 52, 68, 83, 90, 184, 187, 189, 197, 198, 219, 240, 245, 246, 247, 248, 250, 251, 252, 256, 258, 276], "getvalu": [0, 12, 23, 56, 237, 252], "set": [0, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 23, 24, 25, 27, 29, 30, 31, 32, 54, 56, 67, 68, 69, 70, 71, 72, 73, 80, 81, 83, 84, 92, 94, 99, 101, 102, 103, 104, 107, 108, 117, 119, 120, 122, 127, 128, 129, 130, 132, 133, 135, 139, 145, 149, 151, 152, 153, 155, 158, 162, 163, 165, 167, 168, 169, 171, 174, 176, 178, 179, 181, 182, 185, 194, 196, 198, 203, 208, 215, 216, 217, 220, 221, 228, 235, 236, 237, 246, 251, 260, 263, 264, 269, 271, 273, 276, 280, 281, 287, 296, 297, 302, 303], "standalon": [0, 5, 8, 9, 84, 220], "web": [0, 3, 7, 9, 10, 12, 15, 18, 19, 25, 68, 83, 90, 181, 217, 220, 228, 233, 271, 273], "server": [0, 3, 7, 15, 68, 70, 149, 152, 168, 282, 287, 302, 304], "opuntia": [0, 3, 7, 12, 23, 30, 32, 80, 83], "aln": [0, 7, 12, 13, 20, 30, 32, 56, 62, 198, 237, 269, 274, 278], "onlin": [0, 3, 5, 6, 7, 8, 9, 12, 13, 19, 21, 23, 24, 25, 83, 119, 208, 249], "doc": [0, 1, 3, 8, 9, 10, 12, 16, 17, 19, 20, 24, 25, 32, 50, 65, 83, 87, 88, 94, 105, 117, 126, 164, 198, 244, 252, 271, 272, 276, 295], "code": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 34, 49, 55, 59, 64, 65, 67, 68, 69, 70, 71, 74, 76, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 94, 100, 106, 111, 112, 113, 114, 115, 119, 120, 122, 123, 124, 131, 136, 137, 138, 139, 143, 149, 152, 154, 158, 162, 165, 168, 171, 174, 180, 182, 195, 196, 197, 200, 203, 204, 208, 213, 214, 221, 235, 236, 237, 240, 247, 249, 250, 259, 260, 267, 271, 272, 273, 275, 277, 278, 279, 280, 281, 296, 297, 303, 304, 305], "Its": [0, 12, 15, 196, 262], "few": [0, 3, 8, 10, 12, 15, 17, 18, 20, 23, 25, 31, 68, 250, 263], "gi": [0, 1, 3, 7, 12, 13, 19, 20, 21, 23, 30, 56, 68, 69, 70, 93, 94, 216, 217, 237, 240, 255, 259, 274, 302], "6273285": [0, 7, 12, 30], "gb": [0, 1, 3, 6, 7, 8, 12, 13, 21, 23, 30, 32, 68, 83, 92, 236, 237, 244, 259, 277], "af191659": [0, 7, 12, 30], "af191": [0, 12, 30], "tatacattaaagaagggggatgcggataaatggaaaggcgaaagaaagaa": 0, "6273284": [0, 7, 12, 30], "af191658": [0, 7, 12, 30], "6273287": [0, 7, 12, 30], "af191661": [0, 7, 12, 30], "6273286": [0, 7, 12, 30], "af191660": [0, 7, 12, 30], "tatacataaaagaagggggatgcggataaatggaaaggcgaaagaaagaa": 0, "6273290": [0, 7, 12, 23, 30], "af191664": [0, 7, 12, 23, 30], "tatacattaaaggagggggatgcggataaatggaaaggcgaaagaaagaa": 0, "6273289": [0, 7, 12, 23, 30], "af191663": [0, 7, 12, 23, 30], "6273291": [0, 7, 12, 23, 30], "af191665": [0, 7, 12, 23, 30], "header": [0, 11, 13, 15, 27, 32, 33, 40, 42, 43, 45, 46, 47, 51, 52, 56, 59, 60, 61, 68, 71, 94, 126, 151, 152, 162, 167, 168, 171, 173, 203, 208, 216, 220, 222, 223, 224, 237, 243, 245, 246, 247, 252, 258, 269, 276, 277], "pull": [0, 5, 6, 12, 25, 131, 259, 273], "627328": 0, "tatacattaaagaagggggatgcggataaatggaaaggcgaaagaaagaaaaaaatgaat": 0, "tatacataaaagaagggggatgcggataaatggaaaggcgaaagaaagaaaaaaatgaat": 0, "627329": 0, "tatacattaaaggagggggatgcggataaatggaaaggcgaaagaaagaaaaaaatgaat": 0, "60": [0, 3, 11, 13, 15, 16, 20, 23, 30, 68, 69, 83, 126, 155, 206, 236, 240, 244, 249, 250, 263, 279], "ctaaatgatatacgattccactatgtaaggtctttgaatcatatcataaaagacaatgta": 0, "ctaaatgatatacgattccacta": 0, "interest": [0, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 32, 40, 88, 93, 97, 99, 143, 168, 271, 277], "conveni": [0, 13, 15, 17, 20, 108, 168, 182, 236, 252], "anywai": [0, 3], "block": [0, 2, 3, 7, 12, 13, 20, 23, 24, 27, 36, 37, 39, 46, 61, 62, 66, 68, 72, 73, 97, 128, 129, 219, 220, 221, 222, 223, 224, 225, 228, 229, 237, 249, 251, 252, 277], "asterisk": [0, 13, 22, 235, 249, 260], "conserv": [0, 2, 12, 69, 94, 104, 181, 259], "clustal_consensu": 0, "tatacatt": 0, "tatacataaaagaag": 0, "hand": [0, 3, 7, 8, 11, 12, 13, 15, 19, 20, 21, 22, 23, 25, 84, 263], "protein": [0, 2, 3, 4, 6, 7, 8, 11, 12, 13, 19, 20, 21, 22, 23, 25, 30, 32, 53, 56, 68, 69, 71, 74, 80, 83, 86, 88, 93, 94, 112, 117, 140, 149, 152, 153, 157, 158, 164, 165, 168, 174, 181, 195, 196, 197, 198, 208, 210, 213, 215, 220, 221, 225, 228, 233, 235, 236, 237, 249, 251, 259, 260, 262, 264, 271, 273, 274, 276, 278, 289], "pfam": [0, 12, 21, 53, 56, 66], "gf": [0, 53, 66], "7kd_dna_bind": 0, "ac": [0, 6, 11, 12, 13, 14, 15, 17, 25, 27, 30, 32, 53, 66, 68, 90, 104, 129, 145, 168, 175, 181, 208, 209, 210, 211, 221, 233, 237, 239, 244, 249, 267, 272, 276, 294, 296], "pf02294": 0, "de": [0, 2, 4, 6, 7, 9, 15, 25, 26, 27, 32, 53, 66, 73, 86, 130, 149, 168, 173, 208, 249, 272, 288, 294], "7kd": 0, "bind": [0, 2, 11, 25, 53, 176, 184, 255, 259, 263, 271, 287, 294], "domain": [0, 7, 15, 21, 25, 27, 69, 180, 196, 197, 208, 209, 210, 211, 213, 214, 216, 228, 230, 236, 259, 271, 287], "au": [0, 4, 7, 18, 53, 123, 200, 203, 273], "mian": [0, 2], "0000": [0, 11, 13], "0003": 0, "4284": 0, "4749": 0, "bateman": 0, "0002": [0, 13, 25], "6982": 0, "4660": 0, "se": [0, 53, 66, 201], "b_8148": 0, "releas": [0, 3, 5, 8, 9, 11, 12, 14, 17, 19, 22, 23, 25, 27, 67, 69, 86, 87, 88, 90, 92, 105, 117, 137, 149, 171, 209, 210, 211, 212, 213, 233, 251, 271, 296, 302], "ga": [0, 13, 14, 30, 53], "25": [0, 2, 3, 6, 8, 11, 12, 13, 16, 17, 20, 21, 29, 32, 68, 99, 104, 113, 181, 201, 205, 236, 244, 250, 259, 260, 263, 269, 298], "00": [0, 2, 11, 12, 16, 32, 53, 168, 175, 215, 250, 260, 262, 263, 287, 298], "tc": [0, 53], "46": [0, 2, 11, 22, 62, 129, 208, 215], "nc": [0, 11, 53, 168, 206], "23": [0, 3, 6, 11, 13, 17, 20, 21, 22, 32, 53, 69, 174, 205, 215, 220, 236, 250, 252, 259, 298], "bm": [0, 53, 145], "hmmbuild": [0, 53], "hmm": [0, 27, 32, 53, 228, 230, 233], "ann": [0, 53, 196], "seed": [0, 4, 12, 30, 32, 53, 79, 80, 180, 181, 269], "sm": [0, 53, 269], "hmmsearch": [0, 53, 216, 228], "z": [0, 13, 15, 53, 135, 136, 144, 160, 168, 171, 175, 181, 196, 213, 267, 269], "57096847": [0, 53], "cpu": [0, 53, 69, 181, 277], "pfamseq": [0, 53], "tp": [0, 13, 53], "cl": [0, 53, 54, 84, 122, 196, 208, 210, 236], "cl0049": 0, "rn": [0, 11, 53, 123, 237, 277, 294], "rm": [0, 15, 53, 215], "3130377": 0, "rt": [0, 1, 4, 11, 23, 25, 27, 53, 239, 267, 268, 277, 294], "microsequ": 0, "analysi": [0, 2, 3, 6, 7, 9, 13, 15, 16, 17, 21, 25, 26, 27, 30, 32, 73, 109, 129, 168, 176, 181, 184, 192, 194, 205, 206, 207, 237, 264, 282, 306], "7a": 0, "7b": 0, "7e": 0, "archaebacterium": 0, "sulfolobu": 0, "acidocaldariu": 0, "ra": [0, 11, 12, 53, 294], "choli": 0, "wittmann": 0, "liebold": 0, "reinhardt": 0, "rl": [0, 11, 53, 249, 294], "biol": [0, 74, 129, 140, 149, 157, 263], "chem": [0, 263], "1988": [0, 2, 32, 59, 236], "263": [0, 249], "7087": 0, "7093": 0, "dr": [0, 11, 12, 25, 53, 86, 90, 294], "interpro": [0, 53, 233], "ipr003212": 0, "scop": [0, 7, 9, 15, 19, 27, 123], "1sso": 0, "0000417": 0, "polypeptide_domain": 0, "famili": [0, 2, 7, 8, 11, 12, 19, 25, 68, 196, 208, 210, 287], "member": [0, 4, 25, 68, 71, 72, 73, 81, 84, 89, 100, 122, 200, 204], "hyper": 0, "thermophil": 0, "endoribonucleas": 0, "p2": [0, 176, 236], "There": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 20, 23, 24, 25, 30, 69, 73, 85, 116, 117, 168, 216, 221, 237, 249, 250, 255, 268, 277, 287, 298], "five": [0, 7, 8, 12, 16, 20, 21, 51, 118, 250], "monom": 0, "cell": [0, 2, 4, 10, 16, 73, 90, 162, 171, 262], "tightest": 0, "abil": [0, 8, 9, 13, 19, 20, 30, 168], "sq": [0, 53, 66, 94, 269], "dn7_mets5": 0, "61": [0, 3, 7, 8, 11, 16, 20, 116, 174, 260, 298], "a4yea2": 0, "dn7a_sacs2": 0, "p61991": 0, "pdb": [0, 2, 7, 9, 12, 24, 25, 26, 27, 53, 83, 88, 123, 208, 213, 214, 237, 247, 259, 273, 306], "1jic": 0, "2cvr": 0, "1b4o": 0, "dn7e_sulac": 0, "p13125": 0, "kikfkykgqdlevdiskvkkvwkvgkmvsftydd": 0, "ngktgrgavsekdapkellnmigk": 0, "tvkfkykgeekqvdiskikkvwrvgkmisftydegggktgrgavsekdapkellqmlek": 0, "gr": [0, 2, 12, 13, 14, 53, 66, 123], "ss": [0, 12, 53, 66, 93, 137, 269], "eeeeesssseeeeettteeeeeesssseeeee": 0, "sssseeeeeeettt": 0, "chhhhhhtt": 0, "kvrfkykgeekevdtskikkvwrvgkmvsftydd": 0, "ngktgrgavsekdapkelmdmlar": 0, "ss_con": [0, 12, 53, 66], "seq_con": [0, 12, 53], "kvkfkykgeekevdiskikkvwrvgkmvsftydd": 0, "ngktgrgavsekdapkellsmluk": 0, "entri": [0, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 27, 30, 60, 66, 83, 84, 85, 86, 87, 88, 90, 92, 111, 112, 113, 114, 115, 116, 117, 119, 125, 126, 139, 140, 149, 152, 166, 167, 168, 175, 181, 200, 211, 221, 225, 233, 236, 237, 240, 245, 247, 250, 251, 257, 259, 271, 272, 273, 274, 302], "download": [0, 1, 3, 6, 8, 9, 10, 12, 19, 20, 21, 23, 24, 25, 84, 90, 105, 149, 164, 220, 237, 244, 273, 282], "websit": [0, 1, 3, 6, 7, 8, 9, 10, 11, 12, 19, 21, 59, 85, 164, 196, 225, 271, 273, 282], "http": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 32, 34, 35, 36, 37, 38, 39, 46, 50, 51, 52, 53, 56, 59, 61, 65, 66, 68, 69, 70, 71, 73, 83, 85, 86, 87, 88, 89, 90, 94, 96, 97, 99, 100, 105, 111, 115, 116, 117, 119, 122, 137, 140, 145, 149, 150, 156, 158, 166, 168, 169, 180, 181, 184, 187, 189, 196, 198, 200, 203, 208, 209, 210, 211, 213, 217, 220, 225, 226, 228, 233, 236, 238, 242, 244, 246, 247, 249, 250, 251, 252, 257, 261, 262, 264, 266, 269, 271, 272, 273, 276, 277, 278, 279, 282, 285, 298, 300], "www": [0, 5, 6, 7, 9, 10, 12, 15, 17, 19, 22, 25, 32, 52, 68, 70, 71, 83, 85, 86, 87, 88, 94, 96, 97, 99, 104, 105, 111, 115, 116, 117, 119, 122, 149, 158, 166, 169, 173, 181, 184, 187, 208, 217, 220, 221, 233, 236, 244, 247, 249, 251, 252, 257, 264, 269, 271, 272, 278, 298, 300], "ebi": [0, 6, 32, 221, 233, 244, 249, 273, 276], "uk": [0, 2, 6, 8, 15, 17, 32, 104, 145, 208, 209, 210, 211, 221, 233, 244, 249, 276], "pfam2": 0, "summari": [0, 3, 11, 16, 23, 30, 31, 68, 83, 84, 117, 123, 181, 182, 259, 279, 298, 302], "dn7a_sac": 0, "dn7e_sula": 0, "regener": [0, 15, 168], "dn7a_sacs2tvkfkykgeekqvdiskikkvwrvgkmisftydegggktgrgavsekdapkellqmlek": 0, "dn7e_sulackvrfkykgeekevdtskikkvwrvgkmvsftydd": 0, "under": [0, 2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 19, 20, 21, 23, 24, 37, 39, 46, 67, 68, 93, 104, 109, 123, 181, 182, 216, 235, 239, 243, 246, 248, 250, 252, 299], "identifi": [0, 3, 4, 8, 11, 12, 15, 16, 19, 20, 21, 23, 25, 30, 47, 53, 56, 65, 68, 69, 70, 71, 73, 83, 85, 90, 93, 104, 112, 114, 117, 119, 123, 129, 135, 136, 137, 138, 139, 140, 144, 154, 155, 160, 162, 168, 181, 182, 196, 197, 208, 209, 210, 212, 216, 225, 235, 236, 237, 240, 250, 251, 255, 259, 261, 269, 271, 272, 273, 274, 279, 294, 298, 302], "clan": [0, 53], "databas": [0, 3, 9, 10, 12, 13, 15, 17, 18, 20, 21, 22, 26, 61, 66, 68, 69, 70, 71, 80, 83, 90, 93, 94, 111, 112, 113, 114, 115, 117, 119, 152, 164, 173, 176, 208, 216, 217, 225, 228, 237, 244, 247, 249, 251, 259, 267, 269, 271, 273, 274, 275, 276, 282, 286, 287, 294, 300, 301, 302, 303, 304, 306], "access": [0, 3, 4, 6, 8, 9, 12, 13, 17, 19, 20, 21, 22, 23, 26, 27, 30, 31, 49, 53, 56, 64, 66, 67, 68, 71, 73, 83, 85, 87, 88, 89, 90, 92, 93, 117, 119, 126, 134, 136, 137, 145, 149, 156, 157, 164, 168, 180, 182, 196, 197, 208, 209, 213, 216, 217, 228, 233, 235, 236, 237, 239, 247, 250, 252, 254, 262, 263, 269, 271, 272, 273, 274, 277, 287, 288, 290, 291, 294, 296, 298, 302, 306], "secondari": [0, 2, 11, 12, 21, 30, 32, 53, 66, 90, 104, 123, 137, 140, 152, 153, 168, 171, 259, 264, 269, 271, 294], "structur": [0, 2, 4, 7, 9, 11, 12, 21, 23, 25, 27, 30, 31, 32, 53, 66, 78, 83, 84, 99, 108, 112, 113, 116, 123, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 182, 184, 201, 208, 214, 215, 237, 247, 259, 264, 269, 271, 277], "second": [0, 2, 3, 4, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18, 20, 22, 23, 24, 25, 30, 31, 32, 73, 80, 83, 117, 119, 168, 171, 180, 181, 196, 204, 206, 221, 240, 249, 250, 255, 259, 260, 264, 268, 269, 273, 277, 296, 298], "letter_annot": [0, 6, 21, 27, 52, 53, 66, 239, 248, 250, 252, 259], "whole": [0, 3, 6, 7, 8, 13, 15, 17, 21, 22, 23, 30, 46, 56, 61, 182, 196, 203, 204, 208, 216, 221, 237, 259, 268, 269, 296], "deriv": [0, 5, 15, 16, 22, 24, 25, 32, 60, 83, 99, 102, 107, 125, 144, 148, 181, 182, 197, 206, 213, 236, 247, 287], "phylogeni": [0, 17, 27, 32, 132, 180, 181, 182, 196, 197], "interfer": 0, "packag": [0, 2, 3, 5, 7, 11, 16, 18, 25, 84, 100, 129, 137, 150, 156, 192, 194, 195, 302, 305, 306], "joe": [0, 17, 65, 133], "felsenstein": [0, 17, 65, 129], "sequenti": [0, 23, 32, 50, 56, 65, 168, 180, 181, 237, 240, 245, 249, 277], "interleav": [0, 32, 49, 50, 64, 65, 66, 129, 181, 269], "former": [0, 11, 15, 256], "phy": [0, 12, 17, 30, 32, 56, 60, 181, 198], "384": [0, 56, 298], "cys1_dicdi": [0, 56], "mkvil": 0, "lfvlavftvf": 0, "vss": 0, "rg": [0, 269], "ippeeq": 0, "flefqdkfnk": 0, "ky": 0, "sheeyl": 0, "rfeifksnlg": 0, "kieelnliai": 0, "nhkadtkfgv": 0, "nkfadlssd": 0, "fknyylnnk": 0, "aiftddlpva": 0, "dylddefin": 0, "iptafdwrtr": 0, "avtpvknq": 0, "gqcgscwsf": 0, "ttgnvegqhf": 0, "isqnklvsl": 0, "eqnlvdcdh": 0, "cmeyegeeac": 0, "degcngglqp": 0, "naynyiikng": 0, "giqtessypi": 0, "taetgtqcnf": 0, "nsanigaki": 0, "nftmip": 0, "kne": 0, "tvmagyivst": 0, "gplaiaadav": 0, "wqfyiggv": 0, "dipcn": 0, "p": [0, 2, 4, 7, 12, 13, 15, 22, 23, 30, 32, 34, 53, 69, 80, 104, 107, 108, 123, 126, 127, 137, 140, 153, 157, 165, 168, 171, 175, 181, 193, 201, 236, 250, 260, 264, 267, 269, 278, 279, 280], "nsldhgiliv": 0, "gysakntifr": 0, "knmpywivkn": 0, "swgadwgeqg": 0, "yiylrrgknt": 0, "cgvsnfvst": 0, "ii": [0, 4, 8, 73, 122, 182, 250, 293], "aleu_horvu": [0, 56], "maharvllla": 0, "lavlataava": 0, "vassssfad": 0, "npirpvtdra": 0, "astlesavlg": 0, "algrtrhalr": 0, "farfavrygk": 0, "syesaaevrr": 0, "rfrifsesl": 0, "evrstn": 0, "rkglpyrlgi": 0, "nrfsdmswee": 0, "fqatrl": 0, "gaa": [0, 7, 22, 76], "qtcsatlagn": 0, "hlmrda": 0, "lpetkdwr": 0, "ivspvknq": 0, "ahcgscwtf": 0, "ttgaleaayt": 0, "qatgknisl": 0, "eqqlvdcagg": 0, "fnnf": 0, "gcngglp": 0, "qafeyikyng": 0, "gidteesypi": 0, "kgvngv": 0, "chy": 0, "kaenaavqvl": 0, "dsvnitlna": 0, "delknavglv": 0, "rpvsvafqvi": 0, "dgfrqyksgv": 0, "ytsdhcgttp": 0, "ddvnhavlav": 0, "gygvengv": 0, "pywlikn": 0, "swgadwgdng": 0, "yfkmemgknm": 0, "caiatcasyp": 0, "vvaa": 0, "cath_human": [0, 56], "mwat": 0, "lpllcagawl": 0, "lgv": 0, "pvcgaael": 0, "vnslek": 0, "fh": [0, 11, 94, 244], "fkswmskhrk": 0, "ty": [0, 11, 13, 14, 294], "steeyhh": 0, "rlqtfasnwr": 0, "kinahn": 0, "ngnhtfkmal": 0, "nqfsdmsfae": 0, "ikhkylwsep": 0, "qncsat": 0, "nylrgt": 0, "gp": [0, 7, 23, 200], "yppsvdwrkk": 0, "gnfvspvknq": 0, "gacgscwtf": 0, "ttgalesaia": 0, "iatgkmlsla": 0, "eqqlvdcaqd": 0, "fnny": 0, "gcqgglp": 0, "qafeyilynk": 0, "gimgedtypi": 0, "qgkdgy": 0, "ckf": 0, "qpgkaigfvk": 0, "dvanitiyd": 0, "eamveavali": 0, "npvsfafevt": 0, "qdfmmyrtgi": 0, "ysstschktp": 0, "dkvnhavlav": 0, "gygekngi": 0, "pywivkn": 0, "swgpqwgmng": 0, "yfliergknm": 0, "cglaacasyp": 0, "iplv": 0, "complet": [0, 3, 4, 6, 7, 8, 11, 14, 17, 19, 20, 21, 22, 23, 25, 45, 56, 61, 67, 68, 71, 73, 83, 104, 123, 168, 182, 197, 221, 235, 236, 237, 245, 246, 249, 257, 259, 269, 274, 277, 297, 302], "befor": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 30, 32, 65, 73, 83, 84, 88, 92, 99, 117, 121, 125, 168, 182, 197, 221, 236, 240, 251, 260, 269, 277, 289, 296], "proceed": [0, 2, 13, 32], "interlac": [0, 23, 56, 65, 66, 237, 245], "detect": [0, 2, 4, 7, 11, 15, 23, 25, 29, 32, 66, 68, 83, 125, 158, 168, 216, 237, 249, 250, 263], "appropri": [0, 4, 6, 9, 12, 13, 15, 21, 23, 30, 83, 84, 104, 121, 168, 181, 221, 236, 237, 250, 252, 259, 268, 277, 286, 287, 292, 293], "cys1_dicd": 0, "mkvillfvlavftvfvss": [0, 56], "rgippeeq": 0, "aleu_horv": 0, "maharvlllalavlataavavassssfadsnpirpvtdraastlesavlgalgrtrhalr": 0, "cath_huma": 0, "mwatlpllcagawllgv": [0, 56], "pvcgaaelsvnslek": 0, "28": [0, 2, 3, 7, 8, 11, 20, 22, 30, 93, 111, 113, 115, 119, 149, 216, 248, 250, 252, 259, 277], "flefqdkfnkki": 0, "sheeylerfeifksnlgkieelnliainhkadtkfgvnkfadlssd": 0, "farfavrygksyesaaevrrrfrifsesleevrstn": 0, "rkglpyrlginrfsdmswe": 0, "fkswmskhrkty": 0, "steeyhhrlqtfasnwrkinahn": 0, "ngnhtfkmalnqfsdmsfa": 0, "87": [0, 2, 8, 137], "fknyylnnkeaiftddlpvadylddefinsiptafdwrtrg": 0, "avtpvknqgqcgscwsf": 0, "116": [0, 12], "gaaqtcsatlagnhlmrda": 0, "aalpetkdwredg": 0, "ivspvknqahcgscwtf": 0, "89": [0, 2, 205, 287], "ikhkylwsepqncsat": 0, "ksnylrgt": 0, "gpyppsvdwrkkgnfvspvknqgacgscwtf": 0, "146": [0, 30], "ttgnvegqhfisqnklvslseqnlvdcdhecmeyegeeacdegcngglqpnaynyiikng": 0, "172": [0, 168, 252], "ttgaleaaytqatgknislseqqlvdcaggfnnf": 0, "gcngglpsqafeyikyng": 0, "145": [0, 255], "ttgalesaiaiatgkmlslaeqqlvdcaqdfnni": 0, "gcqgglpsqafeyilynk": 0, "206": 0, "giqtessypytaetgtqcnfnsanigakisnftmip": 0, "knetvmagyivstgplaiaadav": 0, "224": 0, "gidteesypykgvngv": 0, "chykaenaavqvldsvnitlnaedelknavglvrpvsvafqvi": 0, "197": [0, 2], "gimgedtypyqgkdgi": 0, "ckfqpgkaigfvkdvanitiydeeamveavalynpvsfafevt": 0, "265": [0, 252], "wqfyiggvf": 0, "pnsldhgilivgysakntifrknmpywivknswgadwgeqg": 0, "283": 0, "dgfrqyksgvytsdhcgttpddvnhavlavgygvengv": 0, "pywliknswgadwgdng": 0, "256": [0, 13, 168, 235, 252, 277], "qdfmmyrtgiysstschktpdkvnhavlavgygekngi": 0, "pywivknswgpqwgmng": 0, "321": 0, "yiylrrgkntcgvsnfvstsii": 0, "343": 0, "338": 0, "yfkmemgknmcaiatcasypvvaa": 0, "362": [0, 11], "311": 0, "yfliergknmcglaacasypiplv": 0, "335": 0, "sqflefqdkfnkki": 0, "sheeylerfeifksnlgkieelnliainhkadtkfgvnkfadlssdefknyylnnkeaiftddlpvadylddefinsiptafdwrtrg": 0, "avtpvknqgqcgscwsfsttgnvegqhfisqnklvslseqnlvdcdhecmeyegeeacdegcngglqpnaynyiiknggiqtessypytaetgtqcnfnsanigakisnftmip": 0, "pnsldhgilivgysakntifrknmpywivknswgadwgeqgyiylrrgkntcgvsnfvstsii": 0, "aleu_horvumaharvlllalavlataavavassssfadsnpirpvtdraastlesavlgalgrtrhalrfarfavrygksyesaaevrrrfrifsesleevrstn": 0, "rkglpyrlginrfsdmsweefqatrl": 0, "ivspvknqahcgscwtfsttgaleaaytqatgknislseqqlvdcaggfnnf": 0, "gcngglpsqafeyikynggidteesypykgvngv": 0, "chykaenaavqvldsvnitlnaedelknavglvrpvsvafqvidgfrqyksgvytsdhcgttpddvnhavlavgygvengv": 0, "pywliknswgadwgdngyfkmemgknmcaiatcasypvvaa": 0, "fhfkswmskhrkty": 0, "ngnhtfkmalnqfsdmsfaeikhkylwsepqncsat": 0, "gpyppsvdwrkkgnfvspvknqgacgscwtfsttgalesaiaiatgkmlslaeqqlvdcaqdfnni": 0, "gcqgglpsqafeyilynkgimgedtypyqgkdgi": 0, "ckfqpgkaigfvkdvanitiydeeamveavalynpvsfafevtqdfmmyrtgiysstschktpdkvnhavlavgygekngi": 0, "pywivknswgpqwgmngyfliergknmcglaacasypiplv": 0, "result": [0, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 30, 31, 32, 34, 51, 59, 61, 68, 69, 71, 73, 80, 83, 84, 88, 89, 108, 119, 122, 127, 132, 157, 167, 168, 176, 181, 182, 185, 192, 194, 195, 201, 205, 206, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 231, 232, 237, 238, 246, 252, 266, 269, 273, 275, 276, 279, 288, 289, 290, 291, 296], "confirm": [0, 15, 21, 168, 274], "seek": [0, 27, 203, 252, 277], "european": [0, 2, 277], "molecular": [0, 2, 7, 9, 10, 12, 19, 23, 27, 32, 83, 112, 119, 156, 168, 196, 197, 260, 264, 271], "biologi": [0, 2, 5, 7, 9, 19, 21, 23, 27, 32, 83, 130, 181], "bioinformat": [0, 2, 4, 5, 7, 8, 9, 15, 19, 20, 22, 32, 69, 73, 83, 152, 168, 181, 261], "rice2000": [0, 2], "It": [0, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 17, 19, 20, 21, 23, 24, 25, 27, 30, 31, 45, 46, 56, 60, 61, 65, 67, 68, 71, 94, 103, 104, 121, 122, 139, 140, 146, 149, 155, 181, 182, 196, 198, 200, 203, 206, 208, 216, 217, 220, 228, 235, 236, 237, 245, 250, 251, 256, 263, 264, 269, 277, 279, 280, 282, 290, 293], "needl": [0, 13, 14, 41, 56, 58, 80], "water": [0, 14, 41, 58, 67, 80, 138, 139, 143, 152, 157, 162, 168, 171], "smith": [0, 12, 13, 14, 30, 32, 69], "waterman": [0, 2, 12, 13, 14, 30, 32, 69], "local": [0, 2, 6, 7, 12, 13, 14, 19, 25, 30, 32, 42, 69, 84, 94, 109, 133, 137, 149, 157, 168, 181, 196, 217, 221, 225, 266, 269, 296], "directori": [0, 5, 7, 9, 12, 13, 15, 17, 18, 24, 67, 69, 83, 84, 124, 140, 149, 153, 157, 164, 181, 192, 194, 195, 201, 202, 208, 250, 269], "rundat": 0, "wed": 0, "jan": [0, 21, 149], "2002": [0, 2, 7, 8, 32, 140, 184], "report_fil": 0, "stdout": [0, 12, 17, 24, 32, 67, 79, 80, 198, 216, 269], "ixi_234": 0, "ixi_235": 0, "eblosum62": [0, 11, 289], "gap_penalti": [0, 71], "extend_penalti": 0, "131": 0, "112": [0, 3, 11, 149], "85": [0, 2, 3, 11, 20, 59, 100, 215, 237, 239, 263], "similar": [0, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 19, 20, 21, 24, 32, 56, 67, 69, 71, 79, 80, 93, 97, 103, 119, 121, 158, 165, 181, 196, 208, 216, 220, 221, 225, 228, 259, 260, 264, 269, 273, 274, 289, 298], "591": 0, "tspasirppagpssrpamvssrrtrpsppgprrptgrpccsaaprrpqat": 0, "tspasirppagpssr": 0, "rpsppgprrptgrpccsaaprrpqat": 0, "ggwktcsgtcttststrhrgrsgwsartttaaclrasrksmraacsrsag": 0, "ggwktcsgtcttststrhrgrsgw": 0, "rasrksmraacsrsag": 0, "srpnrfaptlmsscitsttgppawagdrsh": 0, "82": [0, 175, 237, 264], "date": [0, 3, 5, 7, 9, 11, 12, 19, 21, 23, 27, 67, 71, 83, 88, 90, 93, 123, 133, 152, 168, 171, 180, 196, 197, 271, 294], "srspair": [0, 41], "align_format": 0, "tspasirppagpssrpamvssrrtrpsppgprrptgrpccsaaprrpqatggwktcsgtc": 0, "rpsppgprrptgrpccsaaprrpqatggwktcsgtc": 0, "ttststrhrgrsgwsartttaaclrasrksmraacsrsagsrpnrfaptlmsscitsttg": 0, "ttststrhrgrsgw": 0, "rasrksmraacsrsagsrpnrfaptlmsscitsttg": 0, "120": [0, 3, 13, 15, 16, 30, 32, 56, 168, 236, 252, 263], "ppawagdrsh": 0, "84": [0, 7, 11, 149, 252, 263], "65": [0, 9, 22, 104, 215, 233, 235, 263], "tspasirppagpssrpamvssrrtrpsppgprrptgrpccsaaprrpqatggwktcsgtcttststrhrgrsgwsartttaaclrasrksmraacsrsagsrpnrfaptlmsscitsttgppawagdrsh": 0, "rpsppgprrptgrpccsaaprrpqatggwktcsgtcttststrhrgrsgw": 0, "rasrksmraacsrsagsrpnrfaptlmsscitsttgppawagdrsh": 0, "gpssr": 0, "rpsppg": 0, "standard": [0, 1, 3, 4, 6, 7, 9, 11, 12, 13, 15, 17, 18, 22, 23, 24, 27, 30, 32, 65, 66, 67, 76, 80, 83, 92, 104, 129, 131, 135, 143, 151, 152, 154, 162, 168, 181, 182, 196, 202, 203, 204, 213, 216, 221, 235, 236, 237, 250, 252, 259, 260, 263, 264, 269, 271, 277, 289, 299, 302], "librari": [0, 1, 3, 4, 5, 6, 7, 8, 11, 15, 16, 17, 19, 24, 25, 73, 80, 140, 176, 199, 207, 233, 269, 273, 274, 277, 297], "emboss_consensu": 0, "tspasirppagpssrpamvssrrtrpsppgprrptgrpccsaaprrpqatggwk": 0, "she": 0, "tspasirppagpssrrpsppgprrptgrpccsaaprrpqatggwktcsgtctt": 0, "genet": [0, 2, 6, 13, 22, 26, 30, 50, 65, 69, 76, 80, 99, 189, 198, 199, 235, 236, 259, 260, 263, 306], "comput": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 19, 20, 21, 23, 25, 27, 32, 69, 83, 108, 127, 132, 133, 149, 153, 157, 168, 175, 176, 181, 193, 198, 201, 215, 216, 220, 236, 262, 264, 266, 269, 277, 282, 286, 289], "group": [0, 4, 9, 11, 15, 30, 32, 84, 103, 117, 132, 139, 171, 198, 216, 220, 225, 250, 269, 271, 287], "w_prot": 0, "aa_multiple_align": 0, "oct": [0, 149, 181], "2017": [0, 9, 88], "check": [0, 3, 4, 6, 7, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 30, 32, 68, 70, 76, 80, 83, 84, 104, 119, 125, 129, 130, 134, 136, 139, 140, 148, 152, 154, 155, 167, 168, 181, 182, 187, 192, 221, 235, 236, 250, 252, 259, 263, 269, 302], "w": [0, 2, 3, 4, 6, 7, 10, 11, 12, 13, 15, 22, 23, 25, 32, 40, 45, 53, 56, 57, 59, 80, 85, 91, 126, 145, 162, 168, 181, 182, 225, 235, 237, 240, 244, 245, 249, 250, 255, 260, 263, 264, 267, 269, 277, 280, 297, 298], "01": [0, 11, 16, 21, 68, 149, 184, 213, 215, 250], "7236": 0, "weight": [0, 9, 17, 30, 31, 32, 73, 79, 80, 112, 119, 120, 122, 128, 129, 132, 181, 183, 186, 188, 198, 260, 264, 271, 281, 282, 289, 295], "02": [0, 4, 11, 16, 73, 105, 149, 184, 215, 250, 263], "03": [0, 7, 11, 32, 86, 149, 167, 175, 215], "04": [0, 3, 7, 11, 149, 215, 250, 263, 264, 269, 276], "05": [0, 2, 7, 11, 12, 69, 100, 104, 262, 269, 279], "06": [0, 3, 7, 11, 13, 17, 20, 149, 290], "93": [0, 6, 8, 11, 250], "9483": 0, "9974": 0, "9169": 0, "7331": 0, "gltpfngyta": 0, "atwtrtavss": 0, "vgmnipyhga": 0, "sylvrnqelr": 0, "swtaadkaaq": 0, "gltpsngyta": 0, "atwtrtaass": 0, "vgmnipydga": 0, "gltpssgyta": 0, "mpwrrnrqsc": 0, "skptcreggr": 0, "sgsakslrmg": 0, "rrgcsaqnpk": 0, "dshdppphl": 0, "mpwrrnmqsc": 0, "rrrctaqnpk": 0, "rlt": 0, "up": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 59, 66, 67, 73, 83, 84, 85, 91, 93, 94, 95, 99, 104, 108, 119, 125, 132, 133, 138, 148, 168, 169, 172, 181, 182, 208, 213, 236, 237, 240, 241, 244, 250, 254, 259, 277, 298], "until": [0, 3, 4, 7, 9, 23, 25, 31, 68, 84, 94, 129, 168, 197, 236, 259, 268, 269], "demarc": 0, "verifi": [0, 4, 13, 138, 152, 168], "after": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 17, 19, 20, 21, 22, 23, 24, 30, 56, 68, 69, 83, 93, 126, 168, 181, 182, 197, 201, 203, 221, 236, 237, 250, 252, 259, 268, 269, 277, 297], "gltpfngytaatwtrtavssvgmnipyhgasylvrnqelrswtaadkaaqmpwrrnrqsc": 0, "gltpsngytaatwtrtaassvgmnipydgasylvrnqelrswtaadkaaqmpwrrnmqsc": 0, "gltpssgytaatwtrtavssvgmnipyhgasylvrnqelrswtaadkaaqmpwrrnrqsc": 0, "skptcreggrsgsakslrmgrrgcsaqnpkdshdppphl": 0, "skptcreggrsgsakslrmgrrrctaqnpkrlt": 0, "skptcreggrsgsakslrmgrrgcsaqnpkrlt": 0, "gltpfngytaatwtrtavssvgmnipyhgasylvrnqelrswtaadkaaqmpwr": 0, "phl": 0, "slater2005": [0, 2], "readabl": [0, 7, 11, 12, 13, 21, 22, 23, 25, 30, 45, 56, 59, 68, 80, 86, 90, 117, 196, 259, 279, 296, 298], "cigar": [0, 42, 55, 216, 222], "compact": [0, 20, 23, 42, 94, 221], "idiosyncrat": [0, 42], "report": [0, 3, 11, 12, 14, 22, 30, 32, 38, 42, 51, 71, 80, 123, 126, 130, 167, 168, 181, 217, 221, 225, 263, 267, 269, 271, 296], "vulgar": [0, 42, 216, 224], "verbos": [0, 15, 17, 24, 30, 32, 42, 79, 80, 104, 136, 144, 149, 152, 153, 160, 167, 168, 192, 194, 195, 269], "label": [0, 4, 8, 15, 17, 22, 42, 99, 102, 104, 117, 126, 143, 176, 177, 178, 179, 182, 184, 187, 196, 221, 259], "user": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 24, 30, 31, 32, 45, 56, 67, 83, 104, 143, 148, 151, 157, 168, 181, 192, 194, 195, 198, 216, 217, 220, 225, 228, 235, 245, 273, 279, 280, 287, 298, 302, 304], "exn_22_m_cdna2genome_vulgar": 0, "exn": [0, 30, 221], "command": [0, 1, 3, 4, 6, 9, 11, 12, 14, 15, 17, 19, 23, 24, 27, 32, 56, 59, 67, 68, 69, 80, 129, 156, 168, 181, 192, 194, 195, 217, 233, 250, 259, 269, 284, 302, 303, 305], "cdna2genom": [0, 42, 221], "scer_cad1": 0, "media": [0, 16], "waterloo": 0, "scer_s288c": 0, "bestn": 0, "showalign": 0, "showcigar": 0, "showvulgar": 0, "hostnam": [0, 287, 302], "blackbriar": 0, "296143771": 0, "ref": [0, 3, 7, 20, 21, 25, 27, 152, 196, 217, 236, 237, 255, 267, 269, 271], "nm_001180731": 0, "1230": 0, "330443520": 0, "nc_001136": 0, "1319275": [0, 221], "1318045": 0, "6146": 0, "1226": 0, "129": [0, 16, 221], "1098": 0, "516": 0, "330443688": 0, "nc_001145": 0, "85010": 0, "667216": 0, "518": [0, 32], "168904": 0, "102": [0, 17, 32], "96820": 0, "122114": 0, "193835": 0, "75": [0, 2, 3, 7, 11, 15, 16, 17, 23, 32, 104, 110, 181, 250, 260, 262, 263, 269, 298], "top": [0, 2, 3, 4, 11, 12, 15, 20, 21, 23, 24, 84, 99, 101, 104, 139, 158, 163, 174, 180, 181, 197, 215, 240, 250, 255, 277, 301], "1319274": 0, "1319271": 0, "330443": 0, "296143": 0, "1318075": 0, "1200": [0, 206], "strand": [0, 3, 6, 8, 11, 15, 20, 21, 22, 27, 30, 32, 36, 46, 61, 62, 68, 69, 71, 80, 99, 104, 137, 220, 221, 225, 228, 235, 236, 259, 260, 263, 268, 269, 271, 289, 290, 294], "forward": [0, 6, 7, 8, 11, 12, 13, 15, 34, 76, 80, 104, 107, 109, 135, 139, 168, 236, 250, 251, 260, 279], "mcm": 0, "document": [0, 1, 3, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 23, 24, 27, 30, 32, 56, 65, 67, 68, 83, 85, 86, 88, 89, 94, 99, 135, 168, 181, 196, 200, 203, 216, 220, 221, 233, 235, 236, 237, 242, 247, 250, 251, 252, 271, 294, 295], "definit": [0, 3, 7, 11, 13, 21, 23, 53, 68, 69, 71, 88, 105, 114, 117, 135, 139, 140, 155, 166, 168, 176, 196, 209, 211, 214, 250, 272, 277], "1229": 0, "quit": [0, 1, 3, 6, 8, 11, 12, 15, 19, 20, 21, 23, 221, 250], "delet": [0, 13, 15, 17, 30, 33, 55, 61, 67, 69, 80, 104, 129, 130, 136, 168, 182, 196, 221, 235, 250, 259, 269], "del": [0, 6, 67, 235, 259], "1318046": 0, "255": [0, 12, 17, 104, 182], "1226m3m1m": 0, "AS": [0, 11, 53, 66, 90, 269, 294], "third": [0, 3, 4, 6, 7, 8, 12, 13, 15, 17, 21, 22, 30, 168, 221, 250, 260], "four": [0, 4, 8, 11, 15, 17, 20, 23, 25, 149, 168, 175, 216, 250, 260, 263, 282], "long": [0, 3, 6, 7, 8, 13, 15, 20, 23, 25, 32, 66, 158, 168, 180, 181, 185, 196, 197, 237, 240, 249, 250, 255, 259, 269, 273, 297, 298], "85061": 0, "666990": 0, "582000": 0, "346": [0, 11], "667050": 0, "582060": 0, "356": [0, 196], "667109": 0, "582120": 0, "411": [0, 56], "667168": 0, "582180": 0, "582228": 0, "470": 0, "maddison1997": [0, 2], "sever": [0, 3, 4, 6, 7, 8, 11, 12, 15, 16, 20, 21, 22, 23, 25, 42, 53, 76, 98, 136, 216, 221, 236, 237, 250, 263, 264, 273, 277, 286], "phylogenet": [0, 2, 7, 9, 12, 26, 56, 129, 130, 132, 180, 181, 182, 196, 197, 306], "codonposset": 0, "nex": [0, 17], "macclad": 0, "regist": [0, 235], "biologist": [0, 7, 12, 15, 19, 21], "univers": [0, 2, 3, 4, 7, 215, 252, 277], "begin": [0, 3, 4, 6, 7, 11, 15, 17, 20, 22, 30, 36, 44, 45, 56, 61, 89, 136, 168, 216, 229, 235, 236, 249, 250, 264, 278, 296], "dimens": [0, 4, 11, 56, 73, 120, 174, 215], "ntax": [0, 56, 132], "nchar": [0, 56, 129], "22": [0, 2, 3, 6, 7, 11, 12, 15, 20, 21, 36, 69, 87, 122, 181, 184, 205, 215, 216, 217, 248, 250, 252, 259, 287, 291], "datatyp": [0, 56, 180, 181, 196], "aegothel": 0, "aaaaaggcattgtggtgggaat": 0, "aerodramu": 0, "ttgtggtgggaat": 0, "codonposit": 0, "codeset": 0, "untitl": 0, "much": [0, 3, 4, 5, 6, 7, 11, 13, 15, 17, 19, 21, 22, 23, 25, 30, 83, 84, 92, 93, 94, 165, 174, 203, 208, 216, 217, 237, 263, 269], "complex": [0, 6, 7, 15, 17, 21, 23, 24, 25, 32, 117, 158, 168, 236, 237, 263, 266, 273], "reli": [0, 15, 17], "heavili": [0, 21, 236], "phylo": [0, 2, 9, 12, 13, 24, 26, 27, 132, 306], "molecule_typ": [0, 21, 25, 56, 237, 251, 252, 259, 271], "myfilenam": 0, "pearson1988": [0, 2], "8cb": [0, 55], "8cc": [0, 55], "altschul1990": [0, 2, 13], "outfmt": [0, 3, 30, 32, 55, 68, 69], "nucleotide_m8cc": 0, "fasta36": 0, "mgstm1": 0, "nt": [0, 3, 30, 32, 69, 180, 181, 260, 263], "gst": 0, "nlib": 0, "36": [0, 2, 13, 22, 74, 215, 225, 250, 252, 259, 298], "8h": 0, "2020": 0, "pgt875": 0, "657": 0, "subject": [0, 7, 68, 69, 71, 123, 236], "bit": [0, 3, 5, 6, 8, 11, 12, 13, 17, 19, 20, 23, 31, 68, 69, 71, 75, 133, 168, 181, 182, 237, 246, 250, 252, 269, 277, 282], "aln_cod": 0, "hit": [0, 7, 19, 25, 27, 68, 69, 70, 71, 74, 88, 181, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 233, 269, 289], "38": [0, 2, 7, 11, 16, 21, 23, 29, 215, 250, 259, 277], "694": 0, "6e": 0, "191": [0, 53], "655": 0, "657m": 0, "rabgltr": 0, "79": [0, 7, 13, 93, 237, 263], "646": 0, "135": 0, "679": 0, "408": 0, "646m": 0, "btgst": 0, "413": [0, 3, 237], "167": 0, "21": [0, 2, 3, 8, 11, 12, 20, 21, 30, 53, 69, 93, 94, 109, 149, 171, 175, 181, 182, 205, 244, 250, 252, 259, 263, 287], "176": [0, 6], "594": 0, "228": [0, 13], "9e": [0, 3, 20], "07": [0, 11, 184, 215, 290], "45": [0, 6, 7, 8, 9, 11, 13, 15, 30, 104, 206, 263], "149m1d7m1i17m3d60m5i6m1i13m2i13m4i30m2i6m2d112m": 0, "rabgstb": 0, "127": [0, 24, 298], "159": [0, 236], "289": 0, "157": [0, 140], "287": [0, 252], "2e": [0, 290], "15m2i17m2d11m1i58m1i11m1d7m1d8m": 0, "ocdhpr": 0, "266": [0, 252], "2303": 0, "2325": 0, "012": 0, "29": [0, 2, 3, 8, 11, 13, 20, 22, 29, 69, 111, 115, 119, 149, 221, 250, 259, 260, 263, 264], "17m1d6m": 0, "process": [0, 2, 4, 5, 6, 7, 9, 13, 15, 22, 53, 56, 67, 84, 89, 95, 99, 136, 145, 158, 168, 181, 189, 237, 257, 271], "go": [0, 1, 3, 4, 6, 7, 8, 9, 12, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 67, 99, 109, 196, 233, 237, 250, 272, 273, 276, 306], "fourth": [0, 11, 15, 20, 23, 168, 250, 277], "156": [0, 30], "158": 0, "214": 0, "215": [0, 2, 182, 236], "273": 0, "274": 0, "171": 0, "173": 0, "190": 0, "201": [0, 18, 53, 200, 203, 204], "202": [0, 2], "260": [0, 252, 255], "261": [0, 252], "272": 0, "279": 0, "192": [0, 182], "203": [0, 31, 182], "280": [0, 13], "281": [0, 252], "well": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 19, 20, 21, 22, 23, 25, 27, 30, 45, 53, 55, 60, 73, 116, 127, 168, 181, 182, 206, 208, 216, 217, 236, 245, 250, 252, 256, 277, 282, 294, 297, 298], "offer": [0, 3, 6, 9, 15, 21, 49, 64, 83, 98, 239, 240, 254, 273], "mani": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 19, 20, 21, 22, 23, 24, 25, 32, 56, 60, 66, 69, 80, 83, 104, 133, 144, 181, 216, 218, 221, 230, 231, 235, 237, 242, 244, 264, 273, 287, 298, 302, 303], "exclud": [0, 8, 15, 17, 22, 24, 32, 80, 129, 130, 168, 181, 182, 233, 235, 269], "hhsearch": [0, 44], "hhblit": [0, 44], "steinegger2019": [0, 2], "2uvo_hhblit": 0, "2uvo": 0, "pdbid": [0, 152, 158, 167, 168, 213, 214], "match_column": 0, "no_of_seq": 0, "1560": 0, "4005": 0, "neff": 0, "searched_hmm": 0, "fri": 0, "feb": [0, 7, 74, 83, 88, 260], "2019": [0, 2, 15, 76, 152, 168], "2uvoah": 0, "pdb70": 0, "No": [0, 3, 4, 32, 65, 104, 122, 126, 181, 206, 216, 235, 250, 264, 296, 302], "prob": [0, 201], "col": [0, 30, 31, 298], "templat": [0, 15, 22, 24, 52, 69, 99, 190, 235, 263, 274], "2uvo_a": 0, "agglutinin": 0, "isolectin": 0, "8e": 0, "210": [0, 23, 182, 236, 287], "2wga": 0, "lectin": 0, "1e": [0, 13, 73, 167, 291], "4e": 0, "162": 0, "169": 0, "163": 0, "164": [0, 29, 30], "1ulk_a": 0, "chitin": 0, "bindin": 0, "148": [0, 30], "124": [0, 13, 56, 236, 287], "121": [0, 7], "126": [0, 250, 263, 277], "31": [0, 2, 8, 116, 149, 221, 250, 259, 287], "4z8i_a": 0, "bbtpgrp3": 0, "peptidoglycan": 0, "5e": [0, 3], "37": [0, 3, 11, 13, 16, 20, 182, 248, 250, 259, 264, 269], "54": [0, 1, 6, 8, 9, 17, 206, 215, 239, 250, 260, 263], "236": [0, 250], "1wga": 0, "40": [0, 7, 8, 11, 21, 32, 56, 157, 205, 215, 236, 250, 259, 260, 264, 269, 282], "00029": 0, "106": [0, 205, 252], "carbohydr": 0, "hevein": 0, "germ": 0, "het": [0, 15, 269], "ndg": 0, "nag": 0, "gol": 0, "40a": 0, "triticum": 0, "aestivum": 0, "1wgc_a": 0, "2cwg_a": 0, "2x3t_a": 0, "4aml_a": 0, "7wga_a": 0, "9wga_a": 0, "2wgc_a": 0, "1wgt_a": 0, "1k7t_a": 0, "1k7v_a": 0, "1k7u_a": 0, "2x52_a": 0, "1t0w_a": 0, "probab": 0, "aligned_col": 0, "050": 0, "sum_prob": 0, "166": 0, "ercgeqgsnmecpnnlccsqygycgmggdycgkgcqngacwtskrcgsqaggatctnnqccsqygycgfgaeycgagcqg": 0, "80": [0, 3, 11, 14, 15, 20, 30, 53, 68, 97, 174, 181, 206, 248, 249, 250, 277], "cg": [0, 11, 15, 30, 168, 181, 296], "ss_dssp": 0, "cbcbgggttbbcgggceecttsbeebshhhhsttccbsscssccbcbgggttbccsttceecttsbeebshhhhsttccb": 0, "ss_pred": 0, "cccccccccccccccceecccceeccccccccccccccccccccccccccccccccccccccccceeccccccccccccc": 0, "confid": [0, 27, 180, 182, 183, 186, 188, 196, 197], "79999999999999999999999999999999999999999999999999999999999999999999999999999999": 0, "gpcradikcgsqaggklcpnnlccsqwgfcglgsefcgggcqsgacstdkpcgkdaggrvctnnyccskwgscgigpgyc": 0, "160": [0, 221], "cq": 0, "gcq": 0, "sscssccbcbgggttbccgggceecttsbeebshhhhsttccbsscssccccbtttttbccsttceecttsceebshhhh": 0, "ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccceeccchhhc": 0, "99999999999988999999999999999999999999999999999999999999999999999999999999999999": 0, "161": [0, 221, 264], "gagcqsggcdg": 0, "sttccbsscc": 0, "ccccccccccc": 0, "99999999986": 0, "nmr": [0, 15, 25, 27, 144], "652": 0, "tctnnqccsqygycgfgaeycgagcqggpcradikcgsqaggklcpnnlccsqwgfcglgsefcgggcqsgacstdkpcg": 0, "133": [0, 68], "xcxxxxccxxxxxcxxxxxxcxxxcxxxxcxxxxxcxxx": 0, "xxxcxxxxccxxxxxcxxxxxxcxxxcxxxxcxxxxxcx": 0, "ccccccccccccccccccccccccccccccccccccccc": 0, "344556666666666666566555543333223333321": 0, "234666677777777777766666655544332223333": 0, "134": [0, 2, 252], "kdaggrvctnnyccskwgscgigpgycgag": 0, "xx": [0, 11, 12, 14, 94, 208, 249, 294, 296], "xxxcxxxxccxxxxxcxxxxxxcxxx": 0, "cccccccccccccccccccccccccc": 0, "23344455555555555555544433": 0, "consecut": [0, 4, 73, 100, 104, 141, 154, 220, 271, 276], "except": [0, 4, 6, 12, 13, 15, 16, 17, 21, 22, 23, 25, 27, 29, 30, 32, 37, 46, 56, 67, 68, 69, 72, 76, 83, 84, 92, 94, 113, 129, 130, 131, 132, 136, 144, 147, 151, 152, 160, 167, 168, 187, 189, 192, 194, 195, 196, 197, 216, 221, 235, 236, 237, 240, 250, 252, 259, 260, 269, 271, 277, 282, 287, 294, 296, 297, 298, 304], "query_nam": 0, "reappear": [0, 4], "ercgeqgsnmecpnnlccsqygycgmggdycgkgcqngacwtskrcgsqaggatctnnqc": 0, "pd": 0, "csqygycgfgaeycgagcqggpcradikcgsqaggklcpnnlccsqwgfcglgsefcggg": 0, "cqsgacstdkpcgkdaggrvctnnyccskwgscgigpgycgagcqsggcdg": 0, "abbrevi": [0, 7, 12, 119, 123], "taken": [0, 4, 8, 10, 20, 30, 32, 80, 109, 181, 213, 239, 250, 255, 262, 269], "ercgeqgsnmecpnnlccsqygycgmggdycgkgcqngacwtskrcgsqaggat": 0, "cdg": 0, "incomplet": [0, 2, 10, 15, 134, 135, 139, 140, 181, 277], "partial": [0, 3, 6, 7, 11, 21, 36, 66, 104, 119, 123, 200, 235, 237, 259, 262], "hidden": [0, 2, 9, 32, 44, 104, 106, 108, 228], "markov": [0, 2, 32, 44, 106, 107, 108, 109, 121, 228], "model": [0, 2, 3, 7, 11, 12, 16, 17, 21, 25, 27, 30, 32, 33, 42, 44, 53, 68, 71, 80, 84, 99, 106, 107, 108, 109, 110, 121, 123, 125, 128, 133, 135, 136, 137, 138, 139, 140, 141, 145, 146, 148, 153, 156, 157, 158, 160, 161, 162, 167, 168, 169, 171, 172, 176, 180, 181, 184, 194, 198, 216, 221, 228, 233, 236, 247, 269, 298, 299], "hmm_name": 0, "hmm_descript": 0, "predict": [0, 3, 15, 20, 25, 53, 110, 125, 164, 262, 274], "psipr": 0, "dssp": [0, 27, 133, 171], "cccccccccccccccceecccceeccccccccccccccccccccccccccccccccccccccccceecccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccceeccchhhcccccccccccc": 0, "cbcbgggttbbcgggceecttsbeebshhhhsttccbsscssccbcbgggttbccsttceecttsbeebshhhhsttccbsscssccbcbgggttbccgggceecttsbeebshhhhsttccbsscssccccbtttttbccsttceecttsceebshhhhsttccbsscc": 0, "799999999999999999999999999999999999999999999999999999999999999999999999999999999999999999998899999999999999999999999999999999999999999999999999999999999999999999999999986": 0, "align2model": [0, 33], "hmmscore": [0, 33], "system": [0, 2, 3, 4, 5, 6, 7, 10, 12, 15, 19, 24, 27, 32, 33, 61, 67, 99, 168, 176, 181, 220, 240, 249, 250, 252, 277, 298], "krogh1994": [0, 2], "hughey1996": [0, 2], "distinguish": [0, 6, 15, 23, 30, 68, 100, 221], "period": [0, 4, 12, 33, 63, 65], "upper": [0, 11, 20, 21, 22, 27, 30, 32, 33, 38, 51, 80, 104, 162, 196, 235, 236, 240, 250, 252, 259, 273, 289], "lower": [0, 3, 4, 6, 9, 11, 12, 13, 14, 17, 21, 22, 23, 27, 30, 32, 33, 38, 51, 56, 68, 69, 70, 73, 79, 80, 104, 152, 168, 181, 182, 196, 216, 235, 236, 237, 252, 259, 263, 269, 274, 289, 297], "vklgsdkgllvfepakltikpgdtveflnnkvpphnvvfdaalnpaksadlakslshkqllmspgqststtfpadapageytfycephrgagmvgkit": 0, "analyz": [0, 2, 4, 6, 26, 84, 168, 181, 306], "state": [0, 2, 3, 4, 11, 13, 15, 16, 20, 27, 30, 54, 55, 107, 108, 109, 110, 121, 122, 158, 175, 196, 217, 244, 250], "didddddddddddddddddddddddddddddddddddddddddddddddiddidddddddddddddddddddddddiiidddddddddddddddddddddd": 0, "darling2004": [0, 2], "progressivemauv": [0, 47, 56, 62], "slightli": [0, 7, 11, 13, 20, 23, 32, 250], "input": [0, 3, 4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 19, 21, 22, 24, 25, 26, 27, 30, 31, 32, 37, 45, 50, 54, 59, 60, 65, 66, 67, 68, 69, 73, 80, 81, 82, 83, 91, 94, 104, 116, 119, 125, 126, 129, 153, 156, 157, 165, 168, 170, 174, 175, 180, 181, 192, 194, 195, 198, 228, 240, 245, 247, 248, 250, 257, 260, 264, 267, 269, 273, 277, 296, 298, 306], "equcab1": 0, "gaaaaggaaagtacggcccggccactccgggtgtgtgctaggagggctta": 0, "gaagaggaaaagtagatccctggcgtccggagctgggacgt": 0, "caagccctgcgcgctcagccggagtgtcccgggccctgctttccttttc": 0, "formatvers": [0, 62], "mauve1": [0, 62], "sequence1fil": [0, 62], "sequence1entri": [0, 62], "sequence1format": [0, 62], "sequence2fil": [0, 62], "sequence2entri": [0, 62], "sequence2format": [0, 62], "sequence3fil": [0, 62], "sequence3entri": [0, 62], "sequence3format": [0, 62], "backbonefil": [0, 62], "bbcol": [0, 62], "aagccctcctagcacacacccggagtgg": 0, "ccgggccgtactttcctttt": 0, "aagccctgc": 0, "gcgctcagccggagtgtcccgggccctgctttcctttt": 0, "hors": [0, 56], "dog": [0, 22], "six": [0, 3, 4, 6, 12, 15, 25, 168, 181, 260], "real": [0, 6, 12, 15, 17, 19, 21, 31, 69, 73, 100, 110, 141, 216, 221, 228, 250, 277], "taagccctcctagcacacacccggagtggcc": 0, "gggccgtac": 0, "tttccttttc": 0, "caagccctgc": 0, "gcgctcagccggagtgtcccgggccctgc": 0, "ggatctacttttcctcttc": 0, "ctggcgtccggagctgggacgt": 0, "writer": [0, 10, 27, 30, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 47, 49, 50, 51, 52, 53, 57, 60, 62, 64, 65, 66, 148, 180, 184, 187, 189, 190, 197, 216, 217, 218, 219, 220, 228, 230, 231, 240, 244, 245, 246, 249, 250, 252, 258, 298], "make": [0, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 56, 67, 73, 80, 82, 93, 94, 97, 99, 102, 104, 108, 109, 117, 119, 129, 146, 149, 168, 181, 208, 216, 220, 221, 236, 237, 250, 252, 256, 259, 263, 264, 273, 277, 293, 297, 304], "your": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 19, 20, 21, 22, 24, 30, 32, 56, 67, 69, 71, 80, 83, 125, 137, 149, 152, 158, 166, 168, 177, 181, 216, 217, 220, 221, 237, 250, 259, 263, 264, 269, 275, 277, 284, 287, 296, 297], "drop": [0, 17, 21, 66, 182, 269, 304], "add": [0, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 19, 21, 22, 23, 24, 30, 31, 32, 45, 49, 60, 64, 71, 76, 82, 84, 99, 100, 102, 104, 105, 108, 109, 117, 121, 128, 129, 130, 132, 133, 135, 139, 140, 149, 155, 168, 171, 176, 178, 179, 181, 182, 184, 187, 196, 217, 220, 221, 225, 226, 228, 233, 235, 236, 245, 250, 259, 263, 264, 269, 277, 295, 298, 302], "li2009": [0, 2], "ex1": [0, 277], "minim": [0, 4, 8, 11, 15, 24, 27, 35, 46, 51, 61, 163, 165, 174, 176, 190, 197, 215, 236, 237, 269, 282, 289], "eas56_57": 0, "69": [0, 9, 11, 13, 65, 237, 263], "ctcaaggttgttgcaagggggtctatgtgaacaaa": 0, "mf": 0, "137": 0, "35m": 0, "aggggtgcagagccgagtcacggggttgccagcac": 0, "64": [0, 4, 6, 13, 16, 68, 69, 73, 157, 168, 237, 250, 255, 263, 269, 277], "aq": 0, "nm": [0, 123, 202, 263], "uq": 0, "h0": 0, "h1": [0, 125, 126, 168], "eas51_64": 0, "727": 0, "308": 0, "103": [0, 11, 13, 277], "195": [0, 263], "ggtgcagagccgagtcacggggttgccagcacagg": 0, "844": 0, "flag": [0, 3, 15, 17, 20, 52, 104, 135, 136, 152, 154, 155, 158, 162, 168, 213, 216, 217, 220, 221, 225, 228, 269, 296, 302], "accord": [0, 15, 17, 32, 47, 59, 65, 99, 102, 129, 149, 158, 168, 171, 182, 216, 235, 262, 263, 264, 269], "bam": [0, 23, 267, 269, 277], "bitwis": [0, 52], "unmap": 0, "spite": 0, "bin": [0, 6, 68, 70, 85, 264], "0b1000101": 0, "0b100": 0, "els": [0, 6, 8, 12, 13, 15, 19, 23, 30, 93, 99, 168, 274, 298], "t137": 0, "tchr1": 0, "t100": 0, "t73": 0, "t35m": 0, "taggggtgcagagccgagtcacggggttgccagcac": 0, "tmf": 0, "taq": 0, "tnm": 0, "tuq": 0, "th0": 0, "th1": 0, "t99": 0, "t134": 0, "teas56_57": 0, "t35": 0, "know": [0, 3, 5, 7, 9, 12, 16, 17, 19, 20, 21, 23, 24, 30, 67, 208, 228, 276, 277], "size": [0, 6, 7, 8, 13, 15, 22, 23, 25, 30, 32, 35, 36, 39, 46, 51, 61, 68, 69, 70, 71, 80, 81, 93, 99, 102, 104, 121, 135, 139, 146, 165, 168, 181, 197, 201, 202, 206, 220, 235, 247, 260, 264, 266, 269, 277], "typeerror": [0, 22, 235], "1575": 0, "t1575": 0, "ex1_head": [0, 277], "hd": 0, "tvn": 0, "tso": 0, "tsn": 0, "tln": 0, "1584": 0, "With": [0, 1, 4, 7, 11, 12, 13, 14, 17, 20, 69, 181, 235, 236, 259, 269, 296], "sam1": [0, 277], "md": [0, 30, 52, 269], "sn": [0, 168], "ln": [0, 90, 263], "239940": 0, "pg": [0, 7, 108, 123], "bwa": [0, 269], "pn": 0, "r126": 0, "hwi": 0, "1kl120": 0, "d0lrbacxx": 0, "1101": [0, 2], "1780": 0, "2146": 0, "gatgggaaacccatggccgagtgggaagaaaccagctgaggtcacatcaccagaggagggagagtgtggcccctgactcagtccatcagcttgtggagctg": 0, "ddddbffff7a": 0, "ggege8bb": 0, "ff": [0, 30, 32], "giideibcff": 0, "fefec": 0, "eeee2": 0, "8b8": 0, "b9": 0, "2852": 0, "2134": 0, "136186": 0, "101m": 0, "tcacggtggcctgttgaggcaggggctcacgctgacctctctcggcgtgggaggggccggtgtgaggcaagggctcacgctgacctctctcggcgtgggag": 0, "fffdfhghhhjjjijjjjijjjgedhhgghgbgiigiiab": 0, "gee": 0, "bdbbccdd": 0, "b7": 0, "ddd": 0, "dd728": 0, "009": [0, 2, 11], "xt": 0, "am": [0, 2, 3, 7], "x0": 0, "x1": 0, "xm": [0, 27, 282], "xo": 0, "xg": 0, "25g14g2c34a12a9": 0, "reconstruct": [0, 4, 15, 200, 203], "break": [0, 3, 6, 7, 8, 13, 15, 17, 18, 19, 23, 66, 94, 99, 149, 158, 168, 197, 206, 221, 241, 244, 250, 254, 259, 277], "136185": 0, "tcacggtggcctgttgaggcagggggtcacgctgacctctgtccgcgtgggaggggccgg": 0, "1kl12": 0, "tcacggtggcctgttgaggcaggggctcacgctgacctctctcggcgtgggaggggccgg": 0, "136245": 0, "tgtgaggcaagggctcacactgacctctctcagcgtgggag": 0, "136286": 0, "tgtgaggcaagggctcacgctgacctctctcggcgtgggag": 0, "simpl": [0, 2, 3, 4, 7, 9, 10, 11, 12, 13, 15, 17, 20, 21, 22, 23, 24, 30, 41, 51, 56, 58, 66, 67, 68, 76, 82, 104, 119, 136, 139, 154, 181, 190, 197, 202, 216, 221, 235, 236, 237, 250, 255, 259, 263, 264, 273, 277, 282, 298], "intron": [0, 3, 6, 7, 21, 53, 66, 69, 80, 221, 236], "hard": [0, 5, 7, 8, 12, 14, 20, 23, 52, 64, 69, 237, 239, 247, 248, 269, 277, 297], "soft": [0, 7, 32, 69, 246], "clip": [0, 6, 52, 252, 269], "pad": [0, 13, 30, 65, 126], "dedic": [0, 16, 24], "dna_rna": [0, 45], "nr_111921": [0, 45], "48663768": 0, "46m1827n82m3376n76m12h": 0, "cacgagaggagcggaggcgaggggtgaacgcggagcactccaatcgctcccaactagaggtccacccaggacccagagacctggatttgaggctgctgggcggcagatggagcgatcagaagaccaggagacgggagctggagtgcagtggctgttcacaagcgtgaaagcaaagattaaaaaatttgtttttatattaaaaaa": 0, "48663767": 0, "48663813": 0, "48665640": 0, "48665722": 0, "48669098": 0, "48669174": 0, "128": [0, 6, 16, 17, 168, 182, 252], "204": [0, 2], "mnmnm": 0, "hard_clip_right": [0, 52], "63m1062n75m468n43m": 0, "1827": 0, "3376": 0, "76": [0, 7, 11, 29, 262, 298], "hard_clip_left": [0, 52], "applic": [0, 2, 4, 6, 7, 9, 13, 15, 18, 22, 24, 27, 30, 68, 71, 73, 79, 83, 158, 168, 176, 180, 196, 217, 235, 263, 267, 282], "seq1": [0, 9, 12, 13, 14, 22, 27, 30, 260, 278], "10000": [0, 8, 122, 181, 201, 202, 269], "target1": [0, 182], "seq2": [0, 9, 12, 13, 14, 22, 30, 278], "15000": 0, "target2": [0, 182], "querya": 0, "reada": 0, "4300": [0, 21], "4320": 0, "append": [0, 6, 8, 10, 12, 13, 22, 23, 25, 27, 30, 32, 60, 84, 129, 181, 208, 213, 235, 259, 269, 277], "queryb": 0, "readb": 0, "5900": [0, 6], "5925": 0, "queryc": 0, "readc": 0, "12300": 0, "12318": 0, "4301": 0, "20m": 0, "5901": 0, "25m": 0, "12301": 0, "18m22": 0, "gene": [0, 2, 3, 4, 6, 7, 8, 10, 12, 13, 17, 19, 21, 22, 23, 27, 34, 73, 96, 99, 104, 111, 113, 115, 117, 119, 123, 181, 196, 201, 236, 237, 241, 259, 272, 273, 274, 276, 279], "explan": [0, 68, 83, 108, 181, 208], "nine": 0, "bed12": [0, 38], "chr22": 0, "5000": [0, 201, 202], "mrna1": 0, "960": [0, 157], "4900": 0, "567": [0, 7], "488": 0, "3512": 0, "2000": [0, 2, 7, 9, 13, 14, 16, 21, 32, 34, 111, 115, 119, 184, 195, 263, 280], "6000": 0, "mrna2": 0, "900": 0, "2300": 0, "5960": 0, "433": 0, "399": [0, 68], "3601": 0, "1567": 0, "4512": 0, "1055": 0, "2433": 0, "5601": 0, "832": 0, "maximum": [0, 4, 7, 8, 11, 13, 16, 17, 30, 32, 69, 73, 80, 83, 88, 104, 109, 121, 122, 149, 165, 180, 181, 192, 194, 196, 197, 235, 236, 245, 250, 262, 269, 277, 279, 298, 299], "9223372036854775807": [0, 13], "infer": [0, 17, 30, 137, 181, 269], "thickstart": [0, 36], "thickend": [0, 36], "itemrgb": [0, 36], "mybed3fil": 0, "mybed6fil": 0, "mybed12fil": 0, "bedtobigb": 0, "edu": [0, 15, 18, 32, 35, 36, 37, 38, 39, 46, 50, 51, 59, 61, 65, 124, 156, 189, 198, 200, 203, 208, 210, 211, 213, 220, 225, 246, 262, 268, 285], "goldenpath": [0, 36, 37, 38, 39, 220], "help": [0, 3, 6, 7, 8, 9, 12, 17, 18, 19, 21, 23, 24, 25, 30, 32, 36, 37, 38, 39, 67, 68, 69, 70, 79, 80, 95, 99, 104, 108, 129, 180, 181, 208, 216, 220, 249, 261, 269, 280, 285, 296, 305], "html": [0, 3, 9, 10, 15, 17, 25, 30, 32, 35, 36, 37, 38, 39, 46, 50, 51, 53, 56, 61, 65, 66, 68, 69, 70, 83, 85, 89, 94, 119, 181, 182, 189, 198, 200, 203, 208, 209, 210, 211, 213, 220, 235, 237, 242, 244, 246, 247, 249, 271, 273, 285], "__": [0, 6, 8, 12, 16, 17], "should": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 36, 38, 42, 43, 45, 51, 56, 59, 60, 61, 64, 66, 67, 69, 71, 72, 73, 83, 84, 92, 94, 95, 99, 101, 102, 103, 104, 107, 108, 109, 116, 120, 121, 126, 127, 148, 162, 168, 169, 172, 176, 181, 182, 196, 198, 201, 202, 203, 206, 216, 217, 220, 221, 229, 235, 236, 237, 245, 246, 247, 250, 252, 255, 257, 258, 259, 260, 263, 269, 276, 277, 279, 280, 281, 296, 297, 298, 302], "faster": [0, 3, 4, 6, 7, 8, 14, 23, 32, 84, 94, 165, 168, 181, 216, 237, 269, 296], "reliabl": [0, 15, 104, 250, 274], "gold": [0, 2, 182], "come": [0, 1, 3, 8, 11, 12, 15, 20, 21, 23, 30, 168, 220, 221, 277, 302], "search": [0, 2, 3, 6, 8, 9, 12, 15, 19, 22, 26, 27, 30, 36, 53, 56, 61, 68, 69, 70, 71, 80, 83, 89, 119, 133, 146, 179, 180, 181, 182, 185, 198, 206, 208, 216, 217, 220, 225, 228, 233, 259, 260, 269, 273, 275, 282, 288, 289, 306], "bb": 0, "declar": [0, 36, 84, 251], "chrom": [0, 13, 36], "scaffold": [0, 36], "uint": [0, 36], "chromstart": [0, 36], "chromend": [0, 36], "char": [0, 15, 36, 97, 134, 146, 152, 159, 168, 175, 196, 235, 259, 296], "displai": [0, 2, 4, 6, 12, 15, 17, 20, 32, 36, 80, 94, 99, 101, 102, 103, 104, 119, 128, 132, 168, 181, 182, 196, 221, 296, 302], "thick": [0, 8, 36, 104], "stop": [0, 4, 6, 7, 9, 13, 22, 25, 36, 69, 76, 89, 109, 235, 269], "reserv": [0, 7, 36, 206], "2004": [0, 2, 9, 11, 32, 36, 73, 263], "int": [0, 7, 8, 13, 17, 21, 36, 54, 64, 71, 83, 84, 88, 99, 104, 117, 125, 126, 130, 134, 136, 139, 140, 141, 144, 148, 149, 150, 152, 157, 158, 162, 164, 168, 175, 185, 196, 235, 236, 237, 250, 252, 259, 261, 269, 275, 301], "blockcount": [0, 36], "blocksiz": [0, 36, 79, 80, 129, 220], "comma": [0, 7, 9, 10, 16, 32, 36, 69, 83, 181, 269, 273], "rel": [0, 2, 4, 7, 12, 13, 15, 23, 24, 30, 31, 36, 104, 132, 137, 152, 168, 181, 192, 194, 236, 260, 264, 277, 282], "autosql": [0, 36, 38], "198295559": [0, 13], "nr_046654": 0, "42530895": 0, "42530958": 0, "42532020": 0, "42532095": 0, "42532563": 0, "42532606": 0, "181": [0, 7], "118": [0, 13, 56, 126, 263], "42530955": 0, "42532515": 0, "1620": 0, "42532575": 0, "1680": 0, "1711": 0, "elsewher": [0, 6, 22, 81, 209, 210, 211, 212], "script": [0, 3, 5, 6, 7, 8, 9, 17, 19, 23, 24, 25, 68, 76, 85, 141, 158, 208, 252], "test_align_bigb": 0, "py": [0, 5, 8, 9, 15, 24, 76, 116, 141, 152, 166, 168, 254, 260], "63": [0, 13, 16], "1125": 0, "1668": 0, "1_modifi": 0, "978": 0, "1144": 0, "1873": 0, "5331": 0, "972": 0, "1949": 0, "48000000": 0, "49000000": 0, "selected_align": 0, "continu": [0, 3, 6, 7, 8, 9, 13, 15, 24, 31, 187, 189, 197, 235, 236, 269], "bed6": 0, "bedexample2": 0, "autosql_data": 0, "autosqlt": [0, 27, 30, 36], "from_str": [0, 30, 36, 180, 184, 187, 189], "hg18kgchr7": 0, "chr7": [0, 22], "color": [0, 6, 8, 16, 25, 99, 100, 102, 104, 105, 117, 180, 182, 196, 197, 269], "plu": [0, 3, 7, 8, 9, 17, 20, 23, 32, 69, 168, 182, 220, 236, 250, 259, 260, 299], "genesymbol": 0, "swissprotid": 0, "featur": [0, 3, 6, 7, 9, 14, 15, 19, 20, 22, 23, 25, 27, 38, 68, 70, 80, 92, 93, 94, 95, 98, 99, 104, 122, 127, 158, 176, 181, 216, 221, 237, 244, 250, 254, 259, 271, 281, 300, 301], "green": [0, 4, 8, 17, 104, 180, 182, 197], "red": [0, 4, 8, 17, 104, 122, 180, 182, 197], "symbol": [0, 7, 10, 11, 13, 19, 21, 22, 123, 129, 137, 149, 180, 196, 197, 235, 259, 274, 296], "spid": 0, "swiss": [0, 9, 19, 23, 26, 86, 88, 89, 196, 237, 254, 257, 275, 306], "prot": [0, 2, 9, 19, 23, 26, 32, 69, 86, 88, 89, 137, 196, 237, 254, 306], "extraindex": [0, 36, 38], "expect": [0, 2, 3, 4, 6, 7, 8, 9, 12, 13, 15, 20, 21, 23, 27, 31, 32, 35, 36, 38, 39, 40, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 90, 94, 99, 102, 104, 152, 181, 196, 197, 201, 202, 220, 221, 228, 236, 237, 239, 240, 243, 244, 246, 248, 249, 250, 251, 252, 254, 255, 258, 277, 289, 297], "pleas": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18, 24, 25, 27, 29, 31, 32, 42, 50, 53, 65, 66, 68, 70, 73, 92, 120, 149, 152, 168, 181, 217, 221, 225, 240, 246, 250, 251, 252, 255, 263, 268, 273, 277, 281, 282, 296], "kent2002": [0, 2], "short": [0, 6, 8, 9, 11, 12, 14, 15, 20, 21, 22, 23, 30, 68, 69, 70, 83, 104, 132, 168, 196, 236, 248, 250, 255, 259, 264, 268, 269, 271, 294, 302], "pslayout": [0, 45, 220], "mi": [0, 6], "rep": [0, 27, 32, 79, 80, 176, 220, 228], "qstart": [0, 217, 220], "tstart": [0, 220], "165": [0, 6, 182], "39": [0, 3, 11, 13, 20, 30, 104, 236, 250, 259, 263], "5203": 0, "216": [0, 2, 15, 53, 68, 216], "175": [0, 249], "1530": 0, "138": [0, 4, 255], "5204": 0, "220": [0, 7, 236], "208": [0, 263], "132": [0, 16], "48663796": 0, "48665716": 0, "1532": 0, "185": [0, 53], "71": [0, 8, 11, 16, 215, 235, 248, 296], "144": [0, 15], "42530922": 0, "42532039": 0, "repeat": [0, 3, 4, 7, 8, 12, 20, 23, 24, 30, 38, 51, 53, 56, 68, 69, 80, 84, 152, 208, 220, 236, 245, 250, 267, 269, 271], "repmatch": [0, 30, 38, 51, 220], "ncount": [0, 30, 38, 51], "undefin": [0, 11, 22, 36, 37, 38, 235, 250, 289], "known": [0, 3, 4, 7, 11, 12, 15, 20, 21, 22, 29, 30, 67, 109, 152, 154, 208, 213, 235, 250, 289, 296], "did": [0, 4, 8, 11, 12, 65, 69, 94, 250], "mask": [0, 4, 27, 29, 30, 32, 38, 51, 53, 69, 73, 168, 246, 256, 282], "wildcard": [0, 11, 13, 30, 38, 51], "don": [0, 3, 5, 7, 8, 9, 12, 17, 20, 21, 22, 23, 25, 32, 99, 108, 143, 152, 181, 190, 236, 250, 259, 263, 269, 296], "ggtggggg": 0, "aaaaaaaggggggngaaaaa": 0, "predefin": [0, 17, 20, 38, 293], "psltobigpsl": 0, "equival": [0, 3, 4, 7, 15, 22, 24, 30, 69, 139, 168, 196, 236, 237, 240, 244, 247, 250, 260, 263, 269, 273, 277, 299, 301], "ideal": [0, 5, 7, 12, 19, 20, 23, 24, 27, 99, 269], "uniqu": [0, 4, 6, 7, 10, 11, 12, 15, 20, 23, 69, 73, 76, 104, 108, 123, 135, 139, 159, 171, 176, 178, 179, 181, 196, 208, 209, 210, 212, 216, 233, 237, 259, 261, 269, 271, 274, 287], "whether": [0, 3, 4, 11, 15, 16, 17, 20, 30, 68, 70, 71, 73, 84, 92, 95, 99, 104, 127, 135, 139, 155, 167, 168, 182, 220, 221, 228, 260, 269, 278, 296, 302], "rgb": [0, 17, 100, 104, 105, 117, 182], "ochromstart": 0, "ochromend": 0, "ostrand": 0, "compat": [0, 3, 5, 10, 12, 16, 18, 21, 30, 37, 69, 104, 129, 132, 151, 168, 182, 189, 196, 206, 236, 250, 259, 269, 277, 296, 302], "ochroms": 0, "lstring": 0, "osequ": 0, "empti": [0, 3, 4, 8, 11, 13, 15, 25, 30, 36, 37, 38, 46, 49, 64, 67, 72, 99, 104, 108, 109, 135, 159, 168, 171, 196, 204, 208, 210, 229, 235, 240, 260, 277, 294, 298], "ocd": 0, "cd": [0, 3, 7, 8, 21, 22, 23, 38, 68, 94, 168, 235, 236, 237, 244, 259, 274, 277], "ncbi": [0, 6, 8, 9, 13, 19, 20, 21, 22, 23, 26, 32, 38, 68, 69, 70, 71, 76, 83, 84, 93, 94, 96, 97, 119, 123, 196, 217, 233, 235, 236, 237, 244, 250, 251, 252, 271, 273, 274, 302, 306], "chromsiz": 0, "seqtyp": [0, 7, 17, 30, 32, 79, 80, 274], "amino_acid": 0, "48663795": 0, "compress": [0, 1, 7, 12, 15, 25, 36, 37, 38, 149, 216, 237, 269, 277], "zlib": [0, 36, 37, 38, 269, 277], "extra": [0, 11, 17, 21, 23, 36, 38, 56, 167, 225, 236, 237, 247, 250, 277], "style": [0, 3, 5, 6, 8, 9, 15, 17, 20, 22, 23, 24, 27, 32, 38, 68, 79, 80, 104, 119, 149, 182, 196, 237, 239, 250, 252, 277, 280, 282, 297, 302], "seri": [0, 7, 13, 16, 35, 36, 39, 46, 51, 52, 55, 61, 93, 185], "ucsc_test": 0, "track": [0, 4, 6, 7, 10, 20, 22, 23, 98, 104, 158, 162, 168, 250, 269], "euarc": 0, "visibl": [0, 121, 181], "pack": [0, 196], "mafdot": 0, "off": [0, 3, 8, 21, 23, 32, 68, 69, 70, 80, 117, 119, 125, 158, 181, 250, 269], "frame": [0, 4, 13, 20, 22, 27, 30, 69, 71, 217, 221, 235, 236, 260, 280], "multiz28wayfram": 0, "speciesord": 0, "hg16": 0, "pantro1": 0, "baboon": 0, "mm4": 0, "rn3": 0, "sampl": [0, 4, 13, 73, 80, 90, 100, 104, 112, 113, 114, 168, 201, 250, 269, 279, 298], "tba": 0, "v8": 0, "chimp": [0, 22], "multiz": 0, "v7": [0, 32], "maf_project": 0, "v5": 0, "_tba_right": 0, "maf3": 0, "_tba_c": 0, "single_cov2": 0, "v4": [0, 175], "dev": [0, 9, 27, 67, 68, 70, 152, 168], "23262": 0, "27578828": 0, "158545518": 0, "gggaatgttaaccaaatga": 0, "attgtctcttacggtg": 0, "chr6": [0, 22], "28741140": 0, "161576975": 0, "116834": 0, "4622798": 0, "gttgtctcttatggtg": 0, "53215344": 0, "151104725": 0, "aatgggaatgttaagcaaacga": 0, "attgtctctcagtgtg": 0, "chr4": [0, 13, 22], "81344243": 0, "187371129": 0, "ggggatgctaagccaatgagttgttgtctctcaatgtg": 0, "5062": 0, "27699739": 0, "taaaga": 0, "28862317": 0, "241163": 0, "53303881": 0, "81444246": 0, "taagga": 0, "6636": 0, "27707221": 0, "gcagctgaaaaca": 0, "28869787": 0, "249182": 0, "53310102": 0, "acagctgaaaata": 0, "comment": [0, 6, 11, 20, 21, 24, 25, 30, 36, 53, 81, 86, 88, 90, 93, 104, 113, 123, 129, 132, 152, 168, 176, 181, 183, 186, 188, 200, 203, 204, 216, 217, 218, 236, 240, 243, 257, 269, 271, 286, 287, 294], "27578829": 0, "27578831": 0, "27578850": 0, "27578866": 0, "28741141": 0, "28741143": 0, "28741162": 0, "28741178": 0, "116835": 0, "116837": 0, "116856": 0, "116872": 0, "53215346": 0, "53215347": 0, "53215366": 0, "53215382": 0, "81344245": 0, "81344264": 0, "81344267": 0, "81344283": 0, "chaaa": 0, "qualiti": [0, 2, 13, 17, 21, 23, 32, 52, 181, 237, 239, 248, 250, 252, 259, 267, 268, 269, 301], "19159": 0, "000000": [0, 13, 181, 198, 298], "3014644": 0, "129993255": 0, "cctgtacc": 0, "ctttggtgagaatttttgtttcagtgttaaaagtttg": 0, "hg18": 0, "15870786": 0, "170899992": 0, "cctatacctttcttttatgagaa": 0, "ttttgttttaatcctaaac": 0, "tttt": 0, "9085": 0, "pantro2": 0, "16389355": 0, "173908612": 0, "99999999999999999999999": 0, "9999999999999999999": 0, "9999": 0, "9106": 0, "contig6394": 0, "6182": 0, "133105": 0, "cctatacctttctttcatgagaa": 0, "ttttgtttgaatcctaaac": 0, "scaffold_75566": 0, "1167": 0, "10574": 0, "tttggttagaa": 0, "ttatgctttaattcaaaac": 0, "ttcc": 0, "99999699899": 0, "9999999999999869998": 0, "9997": 0, "tupbel1": 0, "scaffold_114895": 0, "498454": 0, "167376": 0, "4145": 0, "echtel1": 0, "scaffold_288249": 0, "87661": 0, "7564": 0, "100002": 0, "scaffold_334": 0, "359464": 0, "181217": 0, "2931": 0, "ponabe2": 0, "16161448": 0, "8044": 0, "174210431": 0, "10th": 0, "3014689": 0, "155029206": 0, "155029160": 0, "157519257": 0, "157519211": 0, "6228": 0, "9407": 0, "9373": 0, "relationship": [0, 99, 117, 196, 197, 213], "ones": [0, 7, 8, 10, 20, 132, 296], "preced": [0, 17, 168, 182, 287], "leftstatu": 0, "leftcount": 0, "rightstatu": 0, "rightcount": 0, "statu": [0, 7, 30, 32, 67, 123, 149, 167], "9999999999999999999999999999999999999999999999": 0, "9999969989999999999999998699989997": 0, "bloack": 0, "331078": 0, "326933": 0, "95225": 0, "178247": 0, "175316": 0, "158048983": 0, "158040939": 0, "opposit": [0, 4, 15, 168, 236], "bed3": 0, "crear": 0, "maftobigmaf": 0, "bedmaf": 0, "mafblock": 0, "latter": [0, 7, 15, 84, 143, 151, 197, 256, 269, 277], "3018000": 0, "3019000": 0, "3017743": 0, "3018161": 0, "3018230": 0, "3018359": 0, "3018482": 0, "3018644": 0, "3018822": 0, "3018932": 0, "3019271": 0, "themselv": [0, 4, 12, 15, 17, 20, 21, 66, 221, 250], "psl_34_001": [0, 216], "191154276": 0, "61646095": 0, "61646111": 0, "hg18_dna": 0, "10271783": 0, "10271816": 0, "243199373": 0, "53575980": 0, "53575997": 0, "chr9": 0, "141213431": 0, "85737865": 0, "85737906": 0, "hg19_dna": [0, 220], "chr8": [0, 22], "146364022": 0, "95160479": 0, "95160520": 0, "51304566": 0, "42144400": 0, "42144436": 0, "183925984": 0, "183926028": 0, "chr19": [0, 20], "59128983": [0, 20], "35483340": 0, "35483510": 0, "78077248": 0, "23891310": 0, "23891349": 0, "psltochain": 0, "blank": [0, 5, 71, 139, 162, 213, 240, 255, 259], "appar": [0, 20, 56, 237, 250], "rule": [0, 4, 7, 10, 11, 88, 122, 127, 132, 185, 250, 263, 279, 282], "reach": [0, 11, 12, 31, 100, 108, 129, 179, 182, 251, 269, 289], "seventh": [0, 154], "got": [0, 3, 5, 6, 7, 8, 12, 19, 20, 240, 277], "183925990": 0, "fite": 0, "183925985": 0, "1s6m4i38m1": 0, "haven": [1, 20], "spent": [1, 269], "lot": [1, 3, 5, 6, 7, 8, 9, 11, 12, 17, 19, 21, 22, 23, 24, 25, 31, 32, 99, 203, 237, 273], "question": [1, 5, 19, 20, 84, 181, 278], "problem": [1, 3, 5, 6, 7, 8, 9, 11, 12, 20, 21, 22, 23, 27, 92, 99, 107, 108, 136, 143, 144, 151, 158, 160, 168, 181, 197, 220, 225, 250, 277], "relat": [1, 3, 4, 5, 8, 10, 11, 12, 13, 20, 21, 22, 23, 28, 69, 73, 83, 93, 99, 111, 115, 117, 119, 146, 154, 168, 175, 196, 208, 250, 259, 269, 287, 300, 302, 304], "tri": [1, 3, 5, 6, 12, 15, 16, 21, 23, 83, 181, 236, 263], "present": [1, 3, 4, 5, 6, 7, 8, 16, 20, 21, 23, 24, 25, 30, 52, 54, 69, 73, 94, 102, 104, 117, 129, 136, 139, 144, 149, 164, 171, 181, 196, 217, 220, 221, 225, 228, 235, 236, 250, 263, 269, 274, 298], "idea": [1, 5, 7, 12, 15, 19, 21, 23, 108, 237, 277], "least": [1, 2, 3, 4, 6, 7, 14, 15, 19, 22, 25, 32, 69, 72, 146, 168, 216, 237, 250, 274, 282, 287, 297], "suggest": [1, 4, 8, 12, 13, 17, 21, 23, 83, 158], "pointer": [1, 3, 5, 13, 86, 158], "contribut": [1, 4, 6, 11, 19, 24, 26, 109, 124, 133, 168, 274, 289, 306], "mention": [1, 3, 6, 7, 15, 19, 20, 21, 22, 23], "frequent": [1, 11, 250, 264], "throughout": [1, 11, 15, 21, 269], "fairli": [1, 5, 7, 15, 21], "confus": [1, 3, 9, 17, 20, 21], "me": [1, 3, 7, 9, 122, 181], "think": [1, 5, 11, 13, 15, 17, 19, 20, 21, 30, 102, 236, 263], "being": [1, 3, 4, 7, 8, 12, 13, 15, 16, 18, 21, 23, 30, 31, 32, 61, 65, 73, 108, 162, 181, 236, 259, 269, 277], "wrapper": [1, 3, 9, 10, 17, 30, 32, 67, 69, 80, 104, 139, 153, 155, 176, 181, 184, 187, 189, 190, 237, 269, 273, 276, 284, 302], "around": [1, 4, 9, 15, 19, 32, 53, 66, 100, 129, 141, 146, 155, 158, 175, 176, 237], "inform": [1, 2, 3, 4, 5, 6, 9, 10, 11, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 38, 42, 45, 46, 50, 51, 52, 53, 59, 62, 65, 66, 68, 71, 72, 73, 74, 77, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 97, 99, 101, 102, 103, 104, 113, 117, 120, 122, 123, 127, 129, 132, 135, 143, 153, 158, 168, 171, 181, 182, 184, 196, 200, 202, 203, 204, 208, 209, 210, 211, 212, 213, 217, 220, 221, 225, 226, 228, 233, 237, 240, 242, 246, 247, 249, 250, 251, 252, 255, 256, 259, 261, 268, 269, 270, 271, 272, 274, 276, 277, 281, 282, 285, 286, 287, 292, 294, 295, 298, 304], "deal": [1, 6, 7, 9, 11, 12, 15, 19, 21, 22, 23, 24, 27, 28, 30, 59, 74, 84, 95, 107, 108, 110, 129, 133, 139, 162, 216, 221, 236, 237, 250, 260, 267, 274, 275, 278, 279, 280, 297], "The": [1, 2, 5, 6, 8, 9, 10, 12, 14, 16, 17, 18, 19, 22, 23, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 44, 45, 46, 48, 50, 51, 52, 53, 54, 56, 59, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 80, 83, 84, 85, 88, 89, 92, 93, 94, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 135, 136, 137, 139, 140, 143, 144, 149, 150, 151, 152, 155, 156, 157, 158, 160, 162, 164, 165, 168, 175, 176, 181, 182, 184, 185, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 225, 228, 233, 235, 236, 237, 240, 241, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 285, 286, 287, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 302, 306], "file": [1, 2, 3, 8, 9, 10, 16, 17, 18, 22, 24, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 78, 80, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 99, 101, 103, 104, 105, 112, 113, 114, 116, 117, 121, 123, 125, 126, 128, 129, 133, 135, 137, 140, 141, 142, 143, 145, 148, 149, 150, 151, 152, 153, 154, 158, 162, 164, 166, 167, 168, 169, 170, 172, 173, 181, 182, 184, 187, 189, 190, 192, 194, 195, 197, 198, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 225, 228, 231, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 283, 285, 286, 292, 294, 295, 298, 302], "output": [1, 4, 6, 7, 8, 9, 11, 12, 15, 17, 18, 19, 21, 22, 24, 26, 27, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 51, 52, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 80, 81, 82, 83, 89, 93, 98, 99, 100, 101, 103, 104, 121, 125, 137, 145, 148, 152, 153, 158, 166, 168, 169, 172, 181, 182, 192, 194, 195, 198, 206, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 240, 242, 244, 245, 246, 248, 249, 250, 251, 252, 258, 259, 260, 264, 267, 268, 269, 270, 273, 276, 277, 279, 282, 283, 290, 291, 302, 306], "remot": [1, 2, 3, 7, 68, 69, 83, 217, 273], "common": [1, 6, 7, 9, 11, 12, 13, 17, 19, 20, 21, 22, 23, 30, 31, 56, 68, 70, 107, 132, 152, 168, 182, 185, 196, 216, 237, 250, 289], "format": [1, 2, 4, 6, 7, 8, 9, 10, 13, 16, 17, 18, 20, 22, 24, 25, 27, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 73, 78, 80, 82, 83, 85, 87, 88, 89, 92, 93, 94, 97, 99, 104, 105, 117, 118, 129, 132, 148, 149, 150, 151, 152, 158, 162, 168, 180, 181, 182, 184, 187, 189, 196, 197, 198, 200, 203, 206, 208, 209, 210, 212, 213, 218, 219, 222, 223, 224, 226, 227, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 267, 269, 270, 271, 273, 274, 275, 276, 277, 282, 283, 285, 286, 287, 288, 290, 291, 292, 294, 295, 296, 298, 302], "read": [1, 3, 4, 5, 7, 8, 9, 10, 14, 16, 17, 18, 19, 21, 22, 24, 25, 27, 28, 29, 30, 32, 41, 45, 50, 52, 54, 55, 56, 58, 59, 61, 65, 66, 68, 71, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 104, 111, 113, 115, 116, 123, 128, 129, 132, 149, 152, 168, 180, 181, 182, 191, 192, 194, 195, 197, 198, 199, 200, 203, 204, 216, 217, 220, 221, 229, 235, 236, 237, 239, 243, 246, 247, 248, 249, 250, 251, 252, 255, 256, 259, 267, 268, 269, 270, 271, 274, 276, 277, 280, 282, 283, 285, 286, 287, 288, 290, 291, 292, 294, 295, 297, 298], "increment": [1, 35, 36, 37, 38, 39, 42, 46, 51, 52, 53, 66, 71, 143, 165, 168, 182, 197, 298], "realli": [1, 3, 5, 6, 7, 8, 11, 12, 15, 20, 21, 22, 23, 99, 149, 181, 235, 287, 304], "huge": [1, 3, 13, 31, 32, 181], "had": [1, 3, 6, 7, 15, 20, 23, 31, 101, 216, 239], "write": [1, 4, 5, 6, 7, 8, 9, 10, 13, 17, 19, 21, 22, 25, 27, 30, 32, 33, 36, 37, 38, 40, 42, 45, 46, 47, 49, 51, 52, 56, 57, 60, 61, 62, 63, 64, 65, 66, 68, 80, 82, 85, 91, 98, 99, 101, 103, 104, 126, 129, 132, 138, 141, 148, 152, 153, 158, 164, 167, 168, 169, 172, 180, 181, 182, 184, 187, 189, 190, 197, 198, 208, 216, 217, 218, 219, 220, 228, 230, 231, 236, 237, 240, 243, 244, 245, 246, 248, 249, 250, 251, 252, 255, 258, 259, 269, 273, 276, 277, 282, 285, 286, 292, 294, 297, 298], "entir": [1, 7, 17, 20, 21, 23, 31, 60, 64, 66, 182, 184, 208, 213, 236, 252, 260, 264, 266], "readlin": [1, 3, 27, 83, 277], "regularli": [1, 19], "m_cold": [1, 3, 69], "fasta": [1, 3, 7, 8, 9, 11, 12, 13, 14, 15, 20, 22, 27, 30, 32, 55, 56, 59, 60, 62, 66, 67, 69, 80, 91, 129, 161, 181, 208, 216, 237, 240, 245, 249, 250, 251, 252, 255, 259, 269, 273, 277], "find": [1, 3, 4, 5, 6, 8, 10, 12, 13, 15, 17, 18, 19, 21, 23, 24, 25, 27, 30, 32, 36, 68, 80, 81, 83, 84, 85, 94, 119, 121, 146, 154, 166, 168, 174, 182, 185, 213, 215, 225, 228, 235, 236, 269, 277, 282, 288, 289, 290, 291, 293, 296], "8332116": [1, 3], "be037100": 1, "mp14h09": 1, "mp": [1, 181], "mesembryanthemum": 1, "pass": [1, 3, 4, 6, 7, 10, 11, 12, 13, 15, 17, 18, 20, 21, 25, 30, 31, 32, 67, 68, 70, 73, 83, 89, 91, 92, 94, 100, 104, 105, 109, 117, 122, 158, 168, 171, 181, 192, 194, 195, 216, 217, 220, 235, 236, 239, 247, 263, 277, 282, 286, 287, 292], "sinc": [1, 3, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 67, 84, 88, 95, 165, 181, 216, 220, 233, 235, 236, 237, 248, 250, 258, 259, 268, 269, 277, 296, 302, 304], "main": [1, 3, 5, 6, 7, 8, 9, 11, 12, 19, 20, 21, 24, 50, 65, 83, 88, 104, 129, 143, 208, 216, 237, 259, 297], "print": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29, 30, 31, 32, 56, 59, 60, 62, 66, 67, 68, 69, 71, 76, 80, 83, 85, 90, 92, 104, 110, 112, 113, 114, 116, 122, 123, 129, 134, 135, 137, 154, 156, 157, 158, 167, 168, 175, 181, 182, 194, 198, 205, 206, 215, 216, 235, 236, 237, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 259, 260, 262, 263, 264, 268, 269, 271, 273, 276, 277, 278, 279, 280, 282, 287, 288, 290, 291, 294, 296, 297, 298], "On": [1, 3, 15, 23, 221], "close": [1, 3, 7, 8, 9, 11, 13, 20, 22, 23, 24, 27, 30, 56, 61, 68, 83, 91, 129, 180, 181, 216, 237, 240, 249, 251, 252, 277, 297, 300, 302], "pattern": [1, 2, 3, 7, 25, 51, 68, 69, 79, 80, 88, 117, 282], "still": [1, 6, 7, 8, 9, 12, 17, 19, 20, 21, 23, 25, 68, 70, 107, 129, 165, 182, 217, 250, 275], "gzip": [1, 4, 7, 23, 25, 216, 237, 269, 277], "gz": [1, 4, 6, 7, 23, 25, 94, 276], "our": [1, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 19, 20, 21, 23, 24, 27, 56, 67, 235, 237, 250], "essenti": [1, 3, 5, 6, 10, 13, 14, 15, 17, 20, 21, 22, 32, 100, 235, 257, 259, 269, 273], "mode": [1, 6, 7, 9, 13, 23, 25, 27, 30, 32, 36, 37, 45, 68, 79, 80, 83, 91, 129, 143, 181, 198, 240, 243, 244, 245, 246, 247, 248, 250, 251, 252, 255, 258, 263, 269, 270, 302], "sequenc": [1, 2, 3, 8, 9, 10, 14, 18, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 79, 80, 81, 83, 86, 89, 93, 94, 104, 107, 108, 109, 110, 121, 129, 136, 138, 139, 149, 152, 154, 161, 162, 168, 171, 180, 181, 185, 192, 195, 196, 197, 198, 205, 206, 208, 212, 213, 214, 217, 220, 221, 225, 228, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 266, 271, 273, 274, 275, 277, 278, 279, 280, 282, 286, 288, 289, 290, 294, 296, 297, 300, 302, 306], "bzip2": [1, 23], "One": [1, 6, 7, 8, 9, 11, 12, 13, 14, 15, 19, 21, 23, 25, 30, 32, 56, 119, 135, 154, 196, 210, 216, 250, 277, 302], "thing": [1, 3, 5, 7, 9, 11, 12, 15, 17, 19, 20, 21, 23, 25, 26, 27, 30, 31, 45, 60, 80, 92, 95, 99, 158, 168, 215, 236, 245, 250, 259, 296, 306], "my_info": 1, "multipl": [1, 2, 3, 4, 6, 7, 11, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 37, 43, 44, 45, 46, 53, 56, 59, 61, 62, 65, 66, 69, 71, 74, 81, 83, 84, 86, 88, 90, 92, 94, 99, 103, 104, 116, 130, 132, 149, 154, 168, 171, 180, 181, 185, 196, 198, 205, 216, 233, 235, 236, 240, 243, 245, 249, 250, 252, 259, 260, 266, 269, 270, 271, 274, 277, 280, 282, 287, 297, 306], "my_info_handl": 1, "first_lin": 1, "second_lin": 1, "stephen": [2, 3, 68], "altschul": [2, 3, 32, 68], "warren": 2, "gish": 2, "webb": [2, 3, 68], "miller": [2, 3, 32, 68, 133, 137, 168], "eugen": 2, "myer": [2, 32], "david": [2, 3, 68, 262], "lipman": [2, 3, 32, 59, 68], "align": [2, 3, 4, 6, 9, 11, 15, 17, 19, 20, 21, 22, 23, 26, 27, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 79, 80, 133, 161, 165, 168, 174, 180, 181, 185, 192, 194, 195, 196, 198, 215, 216, 217, 220, 221, 222, 223, 224, 228, 229, 243, 249, 263, 269, 274, 277, 278, 279, 280, 282, 286, 288, 289, 290, 294, 296, 306], "journal": [2, 7, 8, 17, 21, 83, 93, 123, 137, 181, 196, 236], "403": 2, "410": 2, "1990": [2, 129, 264, 298, 299], "doi": [2, 32, 69, 73, 100, 137, 174, 181, 196, 250, 251, 261, 266], "org": [2, 5, 6, 7, 8, 9, 12, 15, 17, 19, 21, 23, 25, 27, 32, 52, 53, 56, 66, 69, 73, 83, 85, 86, 87, 88, 89, 90, 94, 100, 117, 119, 137, 149, 150, 158, 166, 169, 180, 181, 184, 187, 196, 220, 228, 236, 244, 247, 250, 251, 257, 261, 262, 264, 266, 271, 272, 274, 276, 278, 287, 300], "1016": [2, 137], "s0022": 2, "2836": [2, 137], "80360": 2, "bailey1994": [2, 11], "timothi": 2, "l": [2, 3, 4, 7, 13, 14, 22, 30, 32, 68, 80, 90, 100, 109, 113, 126, 135, 140, 141, 148, 152, 154, 168, 169, 172, 174, 175, 181, 221, 250, 259, 260, 262, 264, 267, 269], "bailei": 2, "charl": 2, "elkan": 2, "mixtur": [2, 6, 129], "maxim": [2, 4, 206, 236, 269, 289], "discov": [2, 11, 19, 21, 83], "motif": [2, 9, 12, 26, 27, 32, 53, 114, 271, 306], "biopolym": [2, 263], "intern": [2, 7, 12, 13, 17, 19, 22, 23, 27, 30, 49, 56, 61, 63, 64, 68, 71, 80, 83, 92, 94, 103, 104, 116, 132, 136, 138, 144, 152, 160, 166, 167, 168, 182, 208, 235, 237, 240, 244, 246, 247, 250, 252, 259, 263, 270, 271, 273, 277, 298, 301, 302, 303], "confer": 2, "intellig": [2, 104], "aaai": 2, "press": [2, 168, 215], "menlo": 2, "park": 2, "california": [2, 6, 196], "1994": [2, 13, 32, 34, 137, 168, 262, 264, 280], "cavener1987": [2, 11], "dougla": [2, 32, 174], "caven": [2, 11, 282], "comparison": [2, 3, 6, 7, 9, 11, 12, 13, 16, 22, 42, 71, 74, 80, 137, 167, 168, 195, 221, 235, 236, 250, 259, 262, 282], "flank": [2, 59, 80, 141, 282], "translat": [2, 3, 4, 7, 9, 12, 13, 15, 21, 23, 27, 30, 32, 34, 42, 68, 69, 76, 83, 94, 95, 98, 104, 135, 136, 139, 153, 159, 162, 163, 165, 174, 175, 215, 221, 235, 236, 244, 259, 260, 278, 279, 280, 282], "site": [2, 3, 6, 7, 8, 9, 10, 14, 15, 19, 21, 23, 25, 34, 53, 68, 71, 80, 84, 88, 129, 181, 194, 205, 206, 220, 255, 259, 269, 271, 272, 273, 279, 282, 287, 294], "drosophila": [2, 13, 282], "vertebr": [2, 11, 22, 282, 287], "nucleic": [2, 3, 12, 15, 32, 68, 111, 115, 119, 154, 165, 250, 260, 282], "research": [2, 7, 9, 15, 19, 32, 237, 249, 250, 252, 260, 282], "1353": [2, 282], "1361": [2, 282], "1987": [2, 137, 260, 282], "1093": [2, 73, 250, 251], "nar": [2, 69, 250], "chapman2000": [2, 9], "brad": [2, 26], "chapman": [2, 7, 9, 26], "jeff": [2, 26], "chang": [2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 15, 17, 19, 21, 23, 26, 27, 30, 34, 68, 70, 80, 83, 84, 85, 103, 108, 109, 126, 145, 149, 152, 158, 162, 168, 175, 176, 181, 182, 190, 216, 235, 236, 240, 259, 260, 264, 269, 276, 279, 296, 302], "acm": 2, "sigbio": 2, "newslett": 2, "august": [2, 9], "cock2009": [2, 9], "peter": [2, 26, 133, 262], "cock": [2, 6, 7, 9, 26, 133, 250], "tiago": [2, 26], "antao": [2, 7, 26], "jeffrei": 2, "cymon": [2, 268], "cox": [2, 7, 268], "andrew": 2, "dalk": [2, 7], "iddo": [2, 26], "friedberg": [2, 26], "thoma": [2, 3, 9, 26, 68, 133, 295], "hamelryck": [2, 7, 9, 15, 26, 133], "frank": [2, 130, 268], "kauff": [2, 130, 268], "bartek": [2, 26], "wilczy\u0144ski": [2, 26], "michiel": [2, 26], "hoon": [2, 4, 7, 9, 26, 73], "freeli": [2, 5, 7, 9, 27, 83], "1422": 2, "1423": 2, "2009": [2, 3, 7, 8, 9, 17, 20, 23, 25, 32, 69, 86, 87, 88, 93, 196, 277], "btp163": 2, "cock2010": [2, 6, 9], "christoph": 2, "naohisa": 2, "goto": [2, 111, 115, 119, 250], "michael": [2, 4, 73], "heuer": [2, 250], "rice": [2, 250], "sanger": [2, 6, 7, 8, 12, 52, 104, 237, 250, 252], "fastq": [2, 9, 21, 237, 239, 248, 250, 252, 259, 269, 277], "solexa": [2, 6, 237, 250, 259], "illumina": [2, 6, 237, 250, 269], "variant": [2, 4, 5, 6, 12, 20, 23, 68, 104, 168, 216, 217, 237, 244, 250, 259, 263, 269, 271, 277], "1767": [2, 250], "1771": [2, 250], "2010": [2, 6, 7, 9, 32, 181, 250, 263], "gkp1137": [2, 250], "cornish1985": [2, 11], "athel": 2, "cornish": 2, "bowden": 2, "nomenclatur": [2, 25, 168], "recommend": [2, 3, 4, 7, 9, 11, 12, 15, 23, 24, 30, 32, 56, 60, 67, 69, 80, 83, 86, 99, 152, 181, 196, 200, 216, 217, 250, 259, 263, 269, 277, 284], "1984": 2, "3021": 2, "3030": 2, "1985": [2, 13, 34, 280], "aaron": 2, "darl": 2, "bob": [2, 124], "mau": 2, "frederick": 2, "blattner": 2, "nicol": 2, "perna": 2, "mauv": [2, 27, 30, 56, 62], "rearrang": [2, 79, 80, 180, 181], "1394": 2, "1403": 2, "2289704": 2, "dayhoff1978": [2, 13], "o": [2, 5, 7, 11, 12, 15, 23, 25, 30, 32, 53, 66, 85, 91, 97, 99, 137, 148, 149, 152, 157, 168, 169, 172, 181, 184, 187, 189, 190, 220, 250, 252, 260, 267, 269, 282, 294], "dayhoff": [2, 181, 198], "schwartz": 2, "orcutt": 2, "evolutionari": [2, 12, 13, 32, 181], "atla": [2, 53], "volum": [2, 3, 15, 83, 123, 156, 168], "supplement": 2, "1978": 2, "345": [2, 68], "352": 2, "nation": [2, 32, 237, 249], "biomed": [2, 237, 249, 252], "foundat": [2, 5, 237, 249], "1979": 2, "dehoon2004": [2, 4, 9], "seiya": 2, "imoto": [2, 7], "john": [2, 215, 261], "nolan": [2, 7], "satoru": 2, "miyano": [2, 7], "cluster": [2, 7, 9, 13, 24, 25, 26, 27, 30, 32, 123, 181, 208, 216, 274, 282, 285, 287, 292, 306], "1453": 2, "1454": 2, "bth078": [2, 73], "durbin1998": [2, 11, 13], "richard": [2, 16, 27, 52, 297, 298, 299], "durbin": [2, 13, 52, 107, 108, 109], "sean": 2, "eddi": 2, "ander": 2, "krogh": 2, "graem": 2, "mitchison": 2, "biolog": [2, 10, 15, 20, 22, 27, 75, 109, 149, 196, 235, 236, 271, 298, 300, 302], "probabilist": [2, 32, 269], "cambridg": 2, "1998": [2, 32, 53, 87, 93, 165, 263], "eisen1998": [2, 4], "eisen": [2, 4, 73], "paul": 2, "spellman": 2, "patrick": [2, 9], "brown": [2, 8, 32, 182], "botstein": 2, "wide": [2, 4, 5, 6, 9, 12, 18, 61, 250, 273, 277], "academi": [2, 32], "scienc": [2, 32, 252], "usa": [2, 7, 80, 263], "14863": 2, "14868": 2, "1073": 2, "pna": [2, 59], "goldman1994": [2, 13], "nick": 2, "goldman": [2, 13, 32, 34, 181, 280], "ziheng": 2, "yang": [2, 13, 34, 195, 280], "substitut": [2, 9, 11, 22, 27, 30, 31, 32, 54, 80, 181, 194, 195, 198, 250, 287, 289, 303], "evolut": [2, 13, 19, 50, 65, 181, 189, 198], "725": 2, "736": 2, "oxfordjourn": 2, "molbev": 2, "a040153": 2, "golub1971": [2, 4], "h": [2, 3, 7, 12, 13, 14, 15, 16, 17, 22, 23, 25, 32, 68, 69, 71, 80, 113, 137, 145, 152, 153, 162, 168, 181, 250, 259, 260, 267, 269, 271, 274, 298], "golub": [2, 15, 215], "christian": [2, 258], "reinsch": 2, "singular": [2, 3, 4, 15, 175, 215], "decomposit": [2, 4, 15, 215], "squar": [2, 4, 13, 80, 174, 175, 193, 215, 286], "solut": [2, 6, 15, 21, 23, 73, 84], "handbook": 2, "automat": [2, 3, 4, 7, 9, 11, 12, 13, 17, 19, 22, 23, 24, 25, 30, 32, 67, 68, 69, 80, 83, 149, 152, 182, 196, 216, 236, 237, 250, 252, 259, 263, 268, 269, 305], "linear": [2, 4, 7, 8, 15, 16, 21, 23, 80, 83, 99, 104, 249, 269], "algebra": [2, 176], "wilkinson": 2, "ed": [2, 215], "151": 2, "york": 2, "springer": 2, "verlag": 2, "1971": 2, "golub1989": [2, 15], "van": [2, 8, 15, 215], "loan": [2, 15, 215], "2nd": [2, 69, 168, 181, 215], "1989": [2, 215], "hamelryck2003a": [2, 9, 15], "bernard": 2, "manderick": [2, 7, 9, 15], "class": [2, 4, 6, 7, 9, 11, 12, 13, 15, 17, 19, 21, 23, 24, 25, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 116, 117, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 232, 234, 235, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 264, 268, 269, 270, 271, 272, 274, 277, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304], "implement": [2, 4, 6, 7, 10, 11, 12, 13, 15, 17, 21, 30, 32, 34, 67, 73, 76, 83, 92, 100, 107, 108, 109, 123, 126, 139, 143, 146, 148, 151, 158, 168, 174, 176, 177, 178, 179, 182, 184, 198, 216, 228, 235, 236, 237, 245, 251, 256, 259, 260, 263, 264, 269, 277, 279, 287, 289, 290, 301, 302, 303], "2308": 2, "2310": 2, "2003": [2, 9, 15, 65, 74, 122, 137, 152, 168, 181], "btg299": 2, "hamelryck2003b": [2, 15], "effici": [2, 4, 6, 15, 23, 25, 56, 153, 181, 197, 202, 237, 252, 256, 268, 277], "identif": [2, 20, 168, 249], "side": [2, 6, 8, 12, 13, 15, 22, 23, 30, 84, 158, 182, 264], "chain": [2, 12, 13, 27, 30, 128, 130, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 146, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 162, 167, 168, 169, 171, 172, 175, 183, 186, 188, 213, 214, 247, 249, 271], "multidimension": 2, "index": [2, 3, 7, 8, 9, 11, 12, 13, 15, 16, 17, 21, 22, 27, 30, 36, 37, 38, 45, 47, 54, 61, 68, 69, 72, 73, 83, 91, 94, 104, 125, 126, 131, 137, 149, 154, 168, 171, 175, 182, 196, 200, 208, 209, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 235, 237, 240, 252, 256, 259, 260, 264, 269, 277, 278, 279, 280, 288, 289, 290, 291, 296, 298, 302], "tree": [2, 4, 12, 13, 15, 27, 30, 32, 56, 73, 80, 128, 130, 146, 149, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 196, 197, 198, 208, 251, 263, 279], "96": [2, 16, 149, 205, 250, 263, 297, 298], "108": [2, 68, 216, 236], "1002": [2, 13, 137, 149, 261], "10338": 2, "hamelryck2005": [2, 15], "an": [2, 3, 4, 5, 6, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 80, 81, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 97, 99, 100, 102, 104, 105, 107, 108, 109, 112, 113, 114, 116, 117, 120, 121, 122, 125, 126, 127, 129, 130, 132, 134, 135, 136, 139, 140, 142, 143, 144, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 168, 169, 171, 174, 176, 178, 179, 181, 182, 184, 187, 189, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 208, 209, 213, 214, 215, 216, 217, 221, 235, 236, 237, 238, 239, 240, 244, 245, 247, 249, 250, 251, 252, 255, 257, 258, 259, 260, 263, 264, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 290, 294, 295, 296, 297, 298, 301, 302, 303, 305], "measur": [2, 4, 11, 12, 16, 32, 80, 152, 157, 168, 171], "view": [2, 6, 7, 15, 21, 54, 69, 73, 100, 168, 176, 192, 194, 195, 264, 269, 277, 305], "solvent": [2, 15, 145, 156, 157], "exposur": [2, 141, 157], "2005": [2, 32, 69, 174, 263, 266], "20379": 2, "henikoff1992": [2, 13], "steven": 2, "henikoff": 2, "jorja": 2, "matric": [2, 9, 14, 15, 30, 34, 54, 80, 121, 129, 158, 168, 175, 198, 286, 287, 289, 296, 298], "from": [2, 3, 4, 6, 8, 9, 10, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 32, 40, 41, 45, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 100, 102, 104, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 135, 136, 137, 139, 140, 144, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 179, 181, 182, 184, 185, 189, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 231, 235, 236, 237, 239, 241, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 302, 304, 305, 306], "10915": 2, "10919": 2, "1992": [2, 32, 181], "hihara2001": [2, 4], "yukako": 2, "hihara": [2, 4], "ayako": 2, "kamei": 2, "minoru": 2, "kanehisa": [2, 111, 115, 119], "kaplan": 2, "masahiko": 2, "ikeuchi": 2, "microarrai": [2, 237, 297, 298, 299], "cyanobacteri": 2, "dure": [2, 4, 13, 15, 16, 17, 30, 32, 80, 107, 148, 158, 168, 181, 182, 198], "acclim": [2, 3], "high": [2, 3, 6, 7, 10, 11, 15, 16, 17, 20, 23, 32, 68, 92, 101, 104, 123, 168, 216, 250, 302], "light": [2, 8], "plant": [2, 7, 19, 25, 93, 274], "793": 2, "806": 2, "2001": [2, 4, 69, 149, 181, 210, 212, 236, 263], "1105": 2, "tpc": 2, "hughei": 2, "extens": [2, 3, 6, 9, 13, 14, 15, 18, 22, 23, 24, 32, 35, 68, 69, 71, 80, 129, 137, 153, 165, 221, 236, 252, 269, 296], "bioscienc": 2, "cabio": 2, "107": [2, 6, 24], "1996": [2, 263], "jupe2012": [2, 8], "florian": 2, "jupe": [2, 8], "leighton": 2, "pritchard": [2, 7, 8, 9], "graham": 2, "etherington": 2, "katrin": 2, "mackenzi": 2, "ja": [2, 7, 13, 157], "wright": 2, "sanjeev": 2, "kumar": 2, "sharma": 2, "dan": 2, "bolser": 2, "glenn": 2, "bryan": 2, "jonathan": 2, "dg": [2, 32, 168], "jone": [2, 7, 32, 181, 198, 264], "ingo": 2, "hein": 2, "localis": 2, "nb": [2, 127, 182, 196], "lrr": 2, "within": [2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 19, 20, 21, 23, 24, 31, 56, 73, 80, 99, 107, 108, 146, 156, 168, 171, 181, 182, 196, 208, 216, 235, 236, 251, 252, 255, 259, 268, 269, 273, 277, 280, 287, 302, 305], "potato": 2, "bmc": [2, 32, 69], "2012": [2, 7, 8, 9, 17, 83, 263], "1186": [2, 69, 196], "1471": [2, 69, 196, 217], "2164": 2, "kachitvichyanukul1988": [2, 4], "vorata": 2, "kachitvichyanukul": [2, 4], "bruce": 2, "schmeiser": [2, 4], "binomi": [2, 4], "random": [2, 7, 13, 15, 17, 23, 30, 56, 73, 80, 100, 108, 128, 132, 168, 180, 181, 182, 209, 213, 237, 250, 252, 255, 269, 277], "variat": [2, 4, 8, 80, 167, 267, 269], "commun": [2, 6, 7], "222": [2, 53, 236], "1145": 2, "42372": 2, "42381": 2, "jame": [2, 71], "kent": [2, 220, 246], "blast": [2, 5, 8, 9, 13, 26, 27, 32, 55, 67, 216, 218, 219, 220, 225, 228, 269, 273, 306], "656": [2, 220], "664": 2, "229202": 2, "kohonen1997": [2, 4], "teuvo": 2, "kohonen": [2, 4], "organ": [2, 6, 8, 10, 19, 21, 23, 25, 27, 53, 66, 73, 93, 98, 99, 103, 113, 114, 116, 119, 196, 259, 271, 274], "map": [2, 3, 6, 10, 12, 13, 17, 20, 23, 27, 30, 52, 55, 69, 72, 73, 76, 83, 84, 99, 102, 104, 105, 108, 111, 115, 116, 117, 126, 134, 137, 140, 145, 161, 168, 171, 182, 196, 206, 208, 213, 220, 235, 250, 259, 262, 268, 269, 272, 274, 277, 278], "berlin": 2, "1997": [2, 3, 4, 68, 129, 153, 263], "saira": 2, "kimmen": 2, "sj\u00f6lander": 2, "haussler": 2, "235": [2, 263], "1501": 2, "1531": 2, "1006": 2, "jmbi": 2, "1104": 2, "lecuyer1988": [2, 4], "pierr": 2, "ecuy": [2, 4], "portabl": 2, "742": 2, "749": 2, "774": 2, "62959": 2, "62969": 2, "li1985": [2, 13], "wen": 2, "hsiung": 2, "li": [2, 4, 13, 32, 34, 52, 53, 66, 260, 262, 280], "chung": 2, "wu": [2, 3, 32], "chi": [2, 15, 152, 168, 193], "cheng": 2, "luo": 2, "estim": [2, 6, 13, 18, 32, 80, 108, 109, 121, 127, 152, 181, 195, 201, 202, 250, 252, 263], "synonym": [2, 90, 180, 195, 196, 197, 271, 272, 276], "nonsynonym": [2, 195], "rate": [2, 11, 13, 32, 34, 79, 80, 83, 100, 181, 195, 269, 293], "likelihood": [2, 13, 17, 109, 120, 181, 192, 193, 194, 269], "150": [2, 8, 30, 236, 252], "174": [2, 29], "a040343": 2, "heng": [2, 52], "handsak": 2, "alec": 2, "wysok": 2, "tim": 2, "fennel": 2, "jue": 2, "ruan": 2, "nil": 2, "homer": [2, 282], "gabor": 2, "marth": 2, "goncalo": 2, "abecasi": 2, "samtool": [2, 23, 269, 277], "2078": 2, "2079": [2, 12, 13], "btp352": 2, "maddison": [2, 129], "swofford": [2, 129], "wayn": 2, "nexu": [2, 12, 17, 27, 30, 32, 56, 64, 181, 182, 183, 184, 186, 187, 188, 189, 190, 196, 237], "systemat": [2, 19, 113, 129, 181], "590": [2, 129], "621": [2, 129], "sysbio": 2, "majumdar2005": [2, 15], "indraneel": 2, "majumdar": 2, "sri": 2, "krishna": 2, "grishin": [2, 74], "palss": 2, "delin": 2, "2105": [2, 69, 196, 217], "matys2003": [2, 11], "mati": 2, "frick": 2, "geffer": 2, "g\u00f6\u00dfling": 2, "haubrock": 2, "hehl": 2, "hornisch": 2, "kara": 2, "kel": 2, "margouli": 2, "kloo": 2, "land": 2, "lewicki": 2, "potapov": 2, "m\u00fcnch": 2, "reuter": 2, "rotert": 2, "saxel": 2, "scheer": 2, "thiel": 2, "wingend": 2, "transfac": [2, 27, 282], "regul": [2, 3, 104, 259], "profil": [2, 4, 11, 25, 30, 32, 74, 90, 228, 230, 264, 286, 287], "374": [2, 32], "378": 2, "gkg108": 2, "nei1986": [2, 13], "masatoshi": 2, "nei": [2, 13, 34, 280], "takashi": 2, "gojobori": [2, 13, 34, 280], "418": 2, "426": 2, "1986": [2, 13, 34, 263, 280], "a040410": 2, "improv": [2, 3, 6, 8, 15, 17, 19, 23, 32, 122, 152, 181, 247, 269, 277, 299], "2444": [2, 59], "2448": [2, 13, 59], "pritchard2006": [2, 8, 9], "jennif": 2, "white": [2, 6, 7, 8, 23, 95, 182], "birch": [2, 7], "ian": 2, "toth": [2, 7, 8], "genomediagram": [2, 7, 9, 26, 27, 98, 99, 123, 306], "visual": [2, 4, 6, 7, 15, 17, 22, 30, 72, 117, 123, 141, 182], "scale": [2, 4, 7, 8, 10, 15, 32, 99, 102, 104, 107, 109, 122, 127, 158, 168, 175, 181, 201, 202, 221, 250, 262, 264, 269], "data": [2, 3, 7, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 46, 52, 53, 54, 56, 61, 63, 66, 67, 68, 69, 71, 73, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 97, 100, 101, 103, 104, 109, 111, 115, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 137, 143, 145, 149, 150, 151, 152, 158, 164, 165, 167, 168, 171, 176, 177, 181, 182, 184, 197, 198, 200, 201, 203, 204, 208, 213, 235, 237, 244, 250, 251, 252, 256, 259, 260, 263, 268, 270, 271, 273, 274, 276, 277, 280, 281, 287, 288, 290, 294, 297, 298, 299, 302, 306], "616": 2, "617": 2, "2006": [2, 8, 9, 23, 181], "btk021": 2, "proux2002": [2, 8], "carolin": 2, "proux": [2, 8], "douw": 2, "sinderen": 2, "juan": 2, "suarez": 2, "pilar": 2, "garcia": 2, "victor": 2, "ladero": 2, "gerald": 2, "fitzgerald": 2, "desier": 2, "harald": 2, "br\u00fcssow": 2, "dilemma": 2, "phage": [2, 8, 104], "taxonomi": [2, 7, 11, 21, 22, 23, 27, 69, 93, 180, 182, 196, 197, 251, 271, 273, 287, 302], "compar": [2, 4, 6, 7, 8, 9, 13, 16, 17, 20, 21, 27, 34, 80, 98, 104, 132, 135, 139, 155, 167, 168, 181, 182, 184, 221, 235, 236, 259, 269, 277, 279, 289, 293, 296, 298], "sfi21": 2, "siphovirida": 2, "lactic": 2, "bacteria": [2, 22, 93], "bacteriologi": 2, "184": [2, 221], "6026": 2, "6036": 2, "1128": 2, "jb": 2, "longden": 2, "alan": 2, "bleasbi": 2, "emboss": [2, 5, 9, 11, 13, 14, 27, 30, 56, 58, 66, 67, 207, 237, 249, 250, 254, 289], "suit": [2, 3, 7, 8, 12, 14, 15, 17, 20, 24, 44, 56, 69, 112, 113, 114, 126, 217, 225, 226, 228, 237, 268], "trend": [2, 53], "276": 2, "277": [2, 7, 20, 216, 252], "s0168": 2, "9525": 2, "02024": 2, "saldanha2004": [2, 4], "alok": [2, 4], "saldanha": [2, 4], "java": [2, 4, 73], "treeview": [2, 73], "3246": 2, "3248": [2, 83], "bth349": 2, "schneider1986": [2, 11], "schneider": [2, 13, 198], "gari": 2, "stormo": [2, 11, 293], "larri": 2, "188": [2, 29, 249], "415": 2, "431": 2, "0022": [2, 137], "86": [2, 3, 15, 20, 24, 205, 263], "90165": 2, "schneider2005": [2, 13], "adrian": 2, "gina": 2, "cannarozzi": 2, "gaston": 2, "gonnet": [2, 32], "empir": [2, 32, 181, 263], "sibson1973": [2, 4], "robin": 2, "sibson": 2, "slink": [2, 4], "optim": [2, 4, 6, 13, 14, 23, 27, 32, 69, 73, 146, 165, 180, 181, 260, 264, 266], "algorithm": [2, 9, 12, 13, 14, 15, 20, 30, 32, 68, 69, 70, 73, 107, 108, 109, 121, 127, 157, 165, 168, 174, 176, 180, 181, 185, 198, 215, 237, 262, 267, 269, 281, 296], "link": [2, 4, 7, 9, 15, 19, 69, 83, 93, 104, 112, 114, 117, 119, 128, 130, 158, 166, 168, 176, 196, 217, 225, 226, 228, 233], "1973": [2, 157], "comjnl": 2, "gui": [2, 4, 7, 9, 221, 264], "st": [2, 7, 18, 32, 68, 90, 237, 274], "slater": 2, "ewan": [2, 236], "birnei": [2, 236], "autom": [2, 3, 7], "heurist": [2, 181, 269], "snedecor1989": [2, 4], "georg": 2, "snedecor": [2, 4], "cochran": [2, 4], "statist": [2, 3, 6, 11, 18, 20, 32, 68, 69, 74, 80, 119, 129, 168, 181, 193, 201, 202, 216, 220, 250, 294], "iowa": 2, "martin": 2, "steinegg": 2, "marku": 2, "meier": 2, "milot": 2, "mirdita": 2, "v\u00f6hringer": 2, "stephan": 2, "haunsberg": 2, "johann": 2, "s\u00f6ding": [2, 32], "hh": [2, 44, 168, 226], "suite3": 2, "homologi": [2, 274], "deep": [2, 168, 175], "473": [2, 3], "s12859": 2, "019": 2, "3019": 2, "talevich2012": [2, 9, 17], "eric": [2, 26, 122, 133], "talevich": [2, 9, 17, 26, 133], "brandon": 2, "invergo": 2, "unifi": [2, 11, 20], "toolkit": [2, 7, 123, 217], "209": [2, 263], "tamayo1999": [2, 4], "pablo": [2, 261], "tamayo": [2, 4], "donna": 2, "slonim": 2, "jill": 2, "mesirov": 2, "qing": 2, "zhu": 2, "sutisak": 2, "kitareewan": 2, "ethan": 2, "dmitrovski": 2, "lander": 2, "todd": 2, "interpret": [2, 7, 8, 9, 11, 12, 13, 15, 17, 20, 27, 65, 95, 123, 182, 196, 235, 237, 240, 247, 250, 252, 259], "hematopoiet": 2, "differenti": [2, 18, 66, 72, 201], "2907": 2, "2912": 2, "1999": [2, 4, 69, 87, 184, 263, 293], "toth2006": [2, 8], "reveal": [2, 11, 12, 13], "what": [2, 3, 4, 5, 6, 7, 8, 11, 12, 15, 20, 21, 22, 23, 24, 25, 26, 41, 58, 67, 80, 83, 99, 108, 109, 130, 146, 148, 168, 182, 198, 206, 216, 228, 235, 236, 237, 250, 259, 274, 277, 306], "enterobacteri": 2, "pathogen": [2, 104], "annual": 2, "review": [2, 7, 24, 25, 275], "phytopathologi": 2, "305": 2, "336": [2, 16], "1146": 2, "annurev": 2, "phyto": 2, "070505": 2, "143444": 2, "vanderauwera2009": [2, 8], "g\u00e9raldin": 2, "der": [2, 8], "auwera": [2, 8], "jaroslaw": 2, "kr\u00f3l": 2, "haruo": 2, "suzuki": 2, "brian": 2, "foster": 2, "rob": [2, 133], "houdt": 2, "celest": 2, "max": [2, 4, 6, 7, 8, 11, 15, 16, 17, 32, 69, 80, 145, 196, 236, 239, 250, 269, 282, 289, 298], "mergeai": 2, "eva": 2, "plasmid": [2, 6, 8, 21, 259], "captur": [2, 11, 12, 15, 67, 168, 196], "metalliduran": 2, "ch34": 2, "proma": 2, "broad": [2, 23], "host": [2, 5, 11, 68, 70, 271, 287, 302, 304], "antoni": 2, "leeuwenhoek": 2, "193": [2, 29], "1007": 2, "s10482": 2, "9316": 2, "waterman1987": [2, 13], "mark": [2, 6, 8, 27, 104, 168, 204, 228, 235, 236, 250, 269], "eggert": [2, 13], "best": [2, 4, 5, 6, 11, 12, 13, 14, 15, 19, 20, 23, 24, 30, 32, 69, 73, 79, 80, 174, 181, 198, 215, 228, 237, 269, 296], "trna": [2, 8, 236, 249], "rrna": [2, 19, 23], "723": [2, 23], "728": 2, "90478": 2, "yang2000": [2, 13], "rasmu": 2, "nielsen": [2, 13, 34, 195, 280], "realist": [2, 8, 10, 15], "a026236": 2, "yeung2001": [2, 4], "ka": [2, 12], "yee": 2, "yeung": [2, 4], "walter": 2, "ruzzo": [2, 4], "princip": [2, 73], "compon": [2, 20, 24, 73, 99, 111, 115, 117, 168, 286], "763": 2, "hei": 3, "everybodi": 3, "love": [3, 12], "geez": 3, "get": [3, 5, 6, 7, 8, 10, 11, 13, 15, 17, 19, 20, 21, 22, 24, 25, 30, 31, 32, 34, 49, 54, 60, 64, 67, 68, 70, 75, 76, 82, 83, 85, 92, 93, 97, 104, 108, 109, 117, 119, 132, 139, 140, 149, 154, 156, 159, 164, 168, 170, 174, 178, 179, 181, 182, 196, 198, 201, 203, 204, 208, 213, 215, 235, 236, 237, 244, 245, 247, 250, 251, 252, 257, 259, 273, 275, 277, 279, 280, 295, 296, 298, 299, 302], "easier": [3, 5, 6, 7, 8, 9, 12, 16, 19, 20, 21, 23, 119, 168, 182, 202, 216, 273, 282], "everi": [3, 6, 8, 15, 16, 17, 23, 24, 30, 61, 67, 71, 84, 127, 168, 214, 233, 244, 254, 259, 263, 269, 277, 281, 287, 298], "world": [3, 12, 19, 168], "cours": [3, 4, 5, 6, 7, 12, 15, 19, 20, 21, 23, 56, 237, 250, 252, 259, 277, 297, 298], "isn": [3, 7, 8, 9, 12, 20, 21, 23, 56, 71, 182, 250, 277, 304], "about": [3, 5, 6, 8, 9, 11, 12, 15, 17, 21, 22, 23, 25, 26, 27, 30, 31, 32, 59, 67, 71, 73, 77, 83, 84, 93, 99, 100, 102, 104, 117, 132, 149, 182, 184, 197, 213, 217, 221, 226, 233, 242, 245, 250, 252, 259, 261, 263, 268, 269, 272, 288, 306], "cool": [3, 5, 7, 19, 23, 25, 26, 306], "alreadi": [3, 4, 7, 12, 15, 17, 19, 20, 22, 23, 24, 30, 67, 94, 108, 117, 168, 198, 216, 237, 296], "difficult": [3, 4, 6, 7, 8, 15, 23], "fortun": [3, 12], "folk": 3, "too": [3, 6, 7, 8, 12, 15, 17, 20, 21, 22, 23, 24, 30, 56, 108, 236, 237, 250, 277], "ve": [3, 5, 6, 7, 8, 12, 15, 16, 17, 19, 20, 21, 23, 24], "develop": [3, 5, 6, 9, 15, 16, 17, 19, 21, 24, 25, 27, 32, 59, 157, 158, 168, 181, 274], "split": [3, 6, 8, 9, 10, 15, 17, 18, 20, 23, 27, 65, 83, 128, 132, 180, 181, 182, 200, 216, 221, 235, 236, 237, 250, 259, 269, 277, 286], "step": [3, 4, 6, 7, 8, 10, 11, 12, 13, 15, 20, 21, 22, 23, 30, 32, 104, 107, 168, 176, 201, 298], "firstli": [3, 6, 8, 250], "secondli": [3, 6, 8, 10, 12, 21, 250], "further": [3, 4, 5, 6, 7, 11, 15, 20, 61, 68, 69, 89, 91, 99, 104, 168, 181, 236, 251, 257, 259, 302], "probabl": [3, 4, 6, 8, 9, 11, 12, 13, 15, 21, 23, 32, 53, 62, 66, 107, 108, 109, 120, 122, 127, 168, 201, 202, 237, 250, 252, 259, 269, 281, 282, 289, 304], "via": [3, 5, 7, 9, 12, 13, 14, 15, 17, 19, 21, 23, 24, 27, 30, 32, 35, 36, 38, 39, 40, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 71, 80, 99, 117, 119, 168, 181, 196, 217, 225, 228, 233, 235, 236, 237, 239, 240, 243, 244, 246, 247, 248, 249, 250, 251, 252, 254, 255, 269, 277, 284, 296, 302, 304], "page": [3, 6, 7, 8, 9, 12, 17, 19, 21, 23, 25, 83, 85, 90, 99, 103, 104, 217, 221, 228, 233], "fact": [3, 15, 19, 23, 25, 56, 192, 194, 235, 250], "categor": [3, 100, 181], "distinct": [3, 4, 6, 15, 17, 20, 69, 181, 220, 269], "machin": [3, 9, 13, 16, 23, 56, 59, 181, 238, 297], "anoth": [3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 20, 21, 22, 23, 30, 57, 62, 65, 66, 104, 130, 139, 152, 159, 163, 165, 168, 196, 203, 213, 215, 216, 221, 236, 237, 250, 252, 259, 269, 271, 277, 298], "re": [3, 5, 6, 7, 8, 10, 12, 15, 17, 19, 20, 21, 23, 25, 27, 32, 68, 99, 111, 115, 119, 132, 134, 140, 143, 167, 168, 196, 203, 204, 208, 213, 220, 237, 250, 260, 269], "invok": [3, 12, 20, 32, 67, 68, 69, 70, 80, 104, 181, 220, 237, 269, 282, 284, 297], "servic": [3, 9, 18, 68, 70, 119, 220, 273, 282], "qblast": [3, 9, 27, 68, 70], "guidelin": [3, 5, 23, 104, 119, 273], "contact": [3, 7, 27], "poll": 3, "rid": [3, 12, 68, 69, 217], "minut": [3, 4, 6, 15, 16, 23, 25], "url": [3, 4, 7, 10, 25, 68, 70, 83, 84, 90, 105, 111, 115, 117, 119, 149, 170, 196, 197, 273], "paramet": [3, 4, 7, 11, 12, 13, 14, 15, 17, 25, 27, 31, 32, 54, 67, 68, 69, 70, 71, 80, 83, 89, 100, 104, 105, 108, 109, 120, 121, 125, 126, 134, 135, 136, 137, 139, 140, 141, 144, 148, 149, 150, 152, 154, 155, 157, 158, 160, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 181, 182, 184, 185, 186, 187, 188, 189, 196, 197, 198, 201, 206, 208, 217, 235, 236, 260, 262, 263, 264, 269, 275, 282, 289, 296, 298, 299], "email": [3, 7, 23, 68, 70, 83], "weekend": [3, 7], "pm": [3, 16, 297, 298, 299], "eastern": 3, "weekdai": 3, "submit": [3, 5, 7, 19, 217, 236], "variabl": [3, 4, 7, 11, 12, 14, 15, 21, 23, 67, 68, 70, 73, 83, 101, 107, 109, 126, 149, 168, 174, 228, 277, 303], "com": [3, 4, 5, 6, 7, 8, 15, 16, 17, 23, 25, 32, 68, 70, 99, 140, 158, 168, 217, 226, 233, 238, 269, 282, 298], "blastn": [3, 13, 20, 30, 68, 69, 70, 71, 198, 217], "blastp": [3, 13, 30, 68, 69, 70, 71, 198, 217], "blastx": [3, 68, 69, 70, 71, 217], "tblast": 3, "tblastx": [3, 68, 69, 70, 71, 217], "highlight": [3, 8, 15], "url_bas": [3, 68, 70], "connect": [3, 7, 11, 17, 23, 37, 46, 56, 83, 103, 130, 132, 168, 175, 176, 178, 179, 182, 208, 277, 282, 287, 302, 303, 304], "instanc": [3, 4, 7, 9, 12, 13, 16, 17, 21, 23, 24, 27, 30, 31, 36, 54, 67, 91, 109, 129, 132, 135, 140, 160, 162, 181, 182, 184, 187, 189, 192, 194, 195, 196, 197, 208, 213, 233, 235, 236, 259, 264, 268, 271, 282, 286, 287, 290, 291, 294, 296, 298, 302], "cloud": [3, 4, 68, 70], "variou": [3, 9, 12, 15, 20, 75, 80, 158, 198, 216, 267, 277, 282, 289, 292], "choos": [3, 4, 6, 7, 8, 11, 13, 20, 23, 30, 80, 286], "format_typ": [3, 68, 70], "xml": [3, 9, 11, 17, 20, 25, 32, 68, 69, 70, 71, 83, 84, 89, 105, 116, 117, 149, 150, 182, 196, 197, 216, 219, 234, 236, 237, 251, 252, 254, 257, 273, 275, 282, 288, 290, 295], "xml2": [3, 68], "json2": [3, 68], "tabular": [3, 6, 20, 27, 30, 68, 69, 216, 217, 218, 225], "gap": [3, 7, 9, 12, 14, 20, 27, 30, 31, 32, 33, 39, 42, 43, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 71, 79, 80, 129, 158, 165, 181, 196, 217, 220, 221, 235, 236, 239, 259, 260, 269, 280, 294, 296], "result_stream": 3, "fasta_str": 3, "assign": [3, 4, 7, 8, 12, 14, 15, 17, 20, 21, 22, 67, 69, 73, 100, 120, 121, 122, 125, 127, 143, 153, 157, 175, 181, 196, 250, 263, 264, 276, 281, 298], "might": [3, 5, 6, 7, 8, 11, 12, 17, 18, 20, 21, 22, 23, 24, 32, 95, 110, 132, 143, 151, 182, 196, 201, 203, 237, 250, 252, 259, 268], "prefer": [3, 4, 6, 7, 8, 11, 12, 13, 15, 22, 30, 67, 73, 84, 168, 237, 250, 260, 269, 294], "object": [3, 4, 6, 7, 8, 9, 14, 16, 18, 19, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 42, 45, 46, 47, 49, 51, 52, 54, 56, 59, 60, 61, 64, 66, 67, 68, 71, 72, 73, 74, 76, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 196, 197, 198, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 269, 270, 271, 272, 274, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 306], "exist": [3, 4, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 32, 56, 83, 85, 104, 117, 129, 139, 149, 152, 168, 175, 182, 192, 208, 216, 237, 250, 259, 263, 264, 269, 271, 302], "ls_orchid": [3, 6, 19, 23], "gbk": [3, 7, 8, 19, 23], "genbank": [3, 6, 8, 9, 22, 24, 27, 32, 68, 80, 104, 236, 237, 244, 255, 259, 273, 274, 277], "approach": [3, 4, 6, 7, 8, 9, 13, 20, 32, 84, 99, 100, 107, 168, 237, 250, 263, 268, 293], "sens": [3, 8, 12, 13, 15, 21, 32, 65, 99, 150, 168, 259, 277], "whatev": [3, 8, 168], "back": [3, 6, 7, 11, 12, 15, 17, 19, 21, 22, 23, 25, 55, 76, 84, 159, 167, 168, 190, 196, 208, 213, 235, 250, 257, 259, 273, 277, 302, 304], "especi": [3, 5, 7, 9, 10, 12, 19, 102, 176, 259, 269], "debug": [3, 12, 17, 30, 32, 67, 71, 76, 79, 80, 92, 93, 94, 148, 176, 181, 182, 236, 259, 269, 274, 277, 296, 298], "my": [3, 8, 9, 15, 17, 19, 23, 25, 32, 68, 70, 84, 108, 168, 206], "info": [3, 5, 7, 15, 31, 92, 93, 101, 102, 103, 112, 113, 114, 119, 167, 168, 182, 190, 201, 202, 236, 268, 274], "becaus": [3, 6, 7, 8, 11, 12, 13, 15, 19, 20, 21, 22, 23, 24, 25, 30, 65, 66, 88, 95, 108, 139, 181, 182, 197, 216, 217, 220, 221, 237, 250, 264, 268, 277], "slow": [3, 6, 12, 23, 30, 32, 157, 158, 180, 181, 277, 296], "wast": [3, 6, 67], "care": [3, 4, 5, 6, 7, 12, 15, 17, 21, 23, 24, 109, 130, 236, 242, 273], "my_blast": [3, 20], "wb": [3, 6, 23, 36, 45], "out_stream": 3, "rb": [3, 7, 23, 29, 68, 83, 246, 252, 277], "readi": [3, 5, 6, 12, 19, 117, 298], "someth": [3, 5, 6, 7, 8, 9, 11, 12, 15, 19, 20, 21, 22, 23, 24, 60, 93, 139, 149, 204, 268, 270, 287, 302], "jump": [3, 5, 17, 19, 216, 237, 277], "ahead": [3, 19, 277], "json": [3, 16, 273, 297, 298], "zip": [3, 8, 23, 122, 259, 277], "pk": [3, 53, 262], "x03": 3, "x04": 3, "magic": [3, 24, 277], "myzipfil": 3, "13813": 3, "creat": [3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18, 19, 20, 22, 23, 24, 25, 27, 30, 31, 32, 33, 35, 36, 37, 38, 42, 45, 47, 49, 51, 52, 54, 60, 64, 67, 69, 72, 73, 80, 81, 83, 84, 88, 99, 102, 104, 105, 108, 121, 123, 129, 131, 135, 136, 137, 140, 143, 144, 146, 148, 149, 151, 152, 158, 160, 161, 162, 168, 171, 175, 181, 182, 184, 185, 187, 196, 197, 201, 203, 206, 208, 209, 216, 221, 235, 236, 237, 240, 244, 245, 249, 250, 251, 256, 259, 263, 269, 271, 277, 282, 287, 289, 294, 296, 297, 301, 302, 303, 304], "zipfil": 3, "namelist": 3, "n5kn7umj013": 3, "n5kn7umj013_1": 3, "decod": [3, 7, 14, 25, 27, 108, 109, 170, 235, 237, 277], "blastjson": 3, "145707": 3, "blastoutput2": 3, "madden": [3, 68], "alejandro": [3, 68], "search_target": 3, "db": [3, 7, 11, 23, 68, 69, 71, 83, 113, 119, 152, 168, 173, 233, 237, 244, 269, 271, 273, 282, 286, 302, 304], "param": [3, 16, 32, 68, 136, 168, 175], "sc_match": [3, 71], "sc_mismatch": [3, 71], "gap_open": [3, 267, 269], "gap_extend": [3, 267, 269], "query_id": [3, 20, 71], "query_69183": 3, "query_len": 3, "1111": 3, "query_mask": 3, "797": 3, "1110": 3, "num": [3, 68, 168, 217], "1219041180": 3, "xm_021875076": 3, "sch": 3, "auml": 3, "ffer": 3, "jinghui": [3, 68], "zhang": [3, 68], "zheng": [3, 68], "3389": [3, 68], "3402": [3, 68], "query_128889": 3, "titl": [3, 6, 7, 11, 21, 23, 25, 53, 68, 69, 71, 83, 93, 99, 101, 103, 117, 123, 129, 152, 167, 171, 206, 236, 240, 249, 250, 271, 274, 294], "chenopodium": 3, "quinoa": 3, "cold": 3, "plasma": [3, 25], "membran": [3, 25, 259, 271], "loc110697660": 3, "mrna": [3, 7, 21, 22, 68, 237, 274], "taxid": [3, 7, 68, 69], "63459": 3, "scinam": 3, "1173": 3, "bit_scor": 3, "435": 3, "898": 3, "482": 3, "02832e": 3, "117": [3, 7, 16, 236], "ident": [3, 4, 8, 11, 12, 13, 17, 19, 20, 21, 22, 23, 27, 30, 32, 68, 69, 71, 80, 132, 167, 175, 198, 201, 202, 208, 220, 235, 237, 250, 269, 289, 296], "query_from": [3, 68, 70], "oppos": 3, "major": [3, 5, 7, 9, 21, 132, 185], "advantag": [3, 7, 8, 20, 22, 23, 236, 252], "proprietari": [3, 16], "unpublish": 3, "reason": [3, 6, 7, 9, 15, 21, 23, 27, 119, 177, 237, 250, 273], "redistribut": 3, "unfortun": [3, 7, 14, 23, 250], "drawback": 3, "instal": [3, 5, 6, 7, 8, 12, 15, 16, 17, 19, 24, 67, 99, 104, 287, 298], "setup": [3, 5, 24], "effort": [3, 6], "potenti": [3, 5, 6, 11, 12, 15, 20, 21, 23, 27, 88, 99, 176, 236, 250, 269, 277], "kept": [3, 6, 7, 15, 21, 23, 32, 151, 197, 259, 268, 298], "legaci": [3, 67, 149, 208, 217, 236, 275], "briefli": [3, 7, 19, 23, 32], "seem": [3, 5, 7, 15, 20, 22, 30, 83, 298], "straightforward": [3, 4, 7, 23, 93, 97, 107, 168, 182], "prompt": [3, 12, 19, 80, 259, 296], "Then": [3, 7, 8, 15, 17, 23, 25, 94, 250], "execut": [3, 4, 12, 24, 25, 32, 67, 69, 89, 137, 156, 168, 182, 201, 220, 300, 302, 303], "redund": [3, 158, 168, 250, 269], "nr": [3, 68, 69, 70], "administr": 3, "001": [3, 11, 24, 69, 80, 181], "cut": [3, 4, 8, 27, 69, 72, 73, 80, 158, 205, 206, 259], "produc": [3, 4, 8, 12, 15, 16, 17, 20, 22, 48, 59, 63, 69, 80, 94, 99, 103, 158, 182, 185, 221, 228, 237, 250, 252, 271], "good": [3, 5, 6, 7, 8, 12, 15, 19, 20, 23, 24, 109, 250, 269], "subprocess": [3, 9, 12, 17, 32, 67, 69, 80, 137, 156, 181, 269, 284], "build": [3, 5, 6, 8, 23, 24, 25, 27, 32, 45, 53, 60, 67, 69, 80, 108, 109, 148, 162, 165, 168, 181, 185, 192, 194, 195, 197, 198, 208, 216, 236, 237, 245, 269, 278, 284, 302], "cmd": [3, 12, 17, 32, 67, 69, 80, 181, 252, 269], "shell": [3, 12, 17], "shouldn": [3, 5, 12, 16, 24, 67, 197, 304], "termin": [3, 4, 15, 17, 32, 90, 129, 132, 153, 168, 181, 182, 235, 244, 249, 254, 260, 263, 271], "recal": [3, 8, 20, 23], "earlier": [3, 6, 12, 13, 14, 17, 20, 21, 22, 23, 32, 250], "tutori": [3, 5, 6, 9, 19, 22, 32, 56, 69, 80, 83, 92, 168, 181, 235, 237, 269, 306], "seven": [3, 6, 12], "longer": [3, 4, 6, 7, 8, 12, 13, 14, 15, 17, 21, 23, 56, 65, 68, 70, 76, 83, 132, 149, 181, 182, 208, 237, 244, 245, 250, 257, 269], "across": [3, 12, 15, 99, 103, 216, 228, 287], "washington": [3, 50, 65, 189, 198], "successor": [3, 130, 132, 149], "advanc": [3, 14, 15, 17, 27, 90, 168], "biocomput": 3, "ab": [3, 7, 123, 168, 181], "free": [3, 5, 6, 7, 11, 15, 19, 24, 69, 87, 88, 93, 137, 171, 196, 243, 249, 269, 271], "blastal": [3, 69], "mimick": [3, 293], "remov": [3, 6, 9, 12, 13, 15, 18, 21, 22, 23, 24, 27, 30, 32, 65, 67, 69, 80, 85, 91, 94, 99, 104, 117, 129, 130, 135, 138, 139, 148, 155, 158, 168, 169, 172, 176, 178, 179, 181, 189, 200, 203, 216, 220, 229, 235, 240, 250, 252, 260, 263, 269, 284, 300, 302, 304], "nowadai": [3, 11], "doesn": [3, 5, 6, 7, 8, 9, 12, 16, 17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 99, 104, 108, 149, 175, 196, 268, 269], "matter": [3, 21, 23, 24, 25, 198], "yourself": [3, 5, 12, 23, 250, 259, 277, 301, 302], "browser": [3, 7, 10, 35, 61], "receiv": [3, 7, 27, 56, 89, 251], "fetch": [3, 7, 11, 15, 20, 23, 25, 83, 85, 149, 273, 287, 302], "nice": [3, 5, 6, 7, 12, 15, 21, 23, 25, 30, 31, 36, 99, 103, 110, 168, 206, 259, 260, 279, 296], "retriev": [3, 6, 11, 16, 20, 23, 45, 71, 83, 102, 104, 119, 149, 216, 269, 275, 287, 291, 300, 301, 302, 304], "heck": [3, 9, 12, 23, 83], "interact": [3, 5, 15, 17, 19, 20, 27, 69, 79, 80, 82, 164, 168, 176, 181, 275, 305], "ran": [3, 24, 81, 92], "small": [3, 4, 6, 7, 8, 12, 19, 23, 30, 104, 140, 158, 167, 168, 198, 237, 259, 277], "blast_record": 3, "situat": [3, 4, 5, 7, 12, 15, 23, 182], "thousand": [3, 20, 181, 203, 216, 250], "english": [3, 7], "Or": [3, 8, 11, 12, 15, 17, 20, 22, 23, 25, 30, 237, 240, 248, 249, 250, 252, 259, 277, 282, 297, 298], "though": [3, 9, 11, 12, 13, 17, 20, 21, 23, 30, 182, 196, 236, 269, 302], "xml_2222_blastx_001": 3, "caus": [3, 4, 13, 15, 20, 21, 68, 72, 92, 168, 181, 250, 269], "5690369": 3, "af158246": 3, "cricetulu": 3, "griseu": 3, "glucos": 3, "phosphat": [3, 112, 260, 271], "isomeras": [3, 10], "gpi": [3, 275, 276], "try": [3, 5, 6, 7, 8, 9, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 45, 60, 84, 108, 149, 168, 216, 217, 235, 237, 245, 250, 252, 259, 269, 304], "ensur": [3, 4, 7, 11, 22, 23, 24, 30, 68, 71, 91, 104, 108, 152, 216, 236, 237, 279], "ne": [3, 168, 201], "fail": [3, 4, 7, 9, 13, 16, 18, 24, 68, 80, 83, 84, 85, 92, 152, 167, 168, 192, 194, 195, 235, 250, 269, 302], "those": [3, 4, 6, 8, 9, 10, 12, 16, 17, 22, 23, 24, 27, 76, 83, 84, 94, 102, 105, 157, 181, 190, 206, 250, 252, 259, 260, 282, 287, 296], "safe": [3, 15, 17, 168, 182, 237, 277], "soon": [3, 15], "possibl": [3, 5, 6, 7, 8, 11, 12, 15, 19, 20, 21, 23, 24, 27, 30, 34, 56, 66, 68, 72, 76, 84, 108, 122, 127, 174, 196, 216, 217, 220, 236, 237, 250, 255, 259, 260, 268, 274, 277, 280, 281, 289, 294, 302, 304], "simpli": [3, 7, 8, 11, 12, 13, 15, 17, 20, 21, 60, 68, 83, 149, 154, 182, 216, 237, 248, 259, 264, 289], "disadvantag": 3, "stai": [3, 5, 7, 15, 17, 182], "strictli": [3, 11, 12, 17, 65, 71, 132, 135, 139, 143, 155, 182, 282], "necessari": [3, 4, 8, 15, 20, 24, 61, 120, 132, 176, 216, 236, 263, 281], "therebi": 3, "resourc": [3, 7, 9, 10, 85, 169, 196, 197, 237, 249], "quick": [3, 7, 15, 20, 21, 23, 26, 31, 83, 132, 149, 152, 167, 168, 176, 216, 259, 306], "overview": [3, 7, 11, 13, 16, 17, 20, 23, 123, 168, 274], "refseq_rna": [3, 20], "42291": [3, 20], "mystery_seq": [3, 20], "262205317": [3, 20], "nr_030195": [3, 20], "homo": [3, 20, 68, 90, 93], "sapien": [3, 20, 68, 90, 93], "microrna": [3, 20], "301171311": [3, 20], "nr_035856": [3, 20], "pan": [3, 20], "troglodyt": [3, 20], "270133242": [3, 20], "nr_032573": [3, 20], "macaca": [3, 20], "mulatta": [3, 20], "301171322": [3, 20], "nr_035857": [3, 20], "301171267": [3, 20], "nr_035851": [3, 20], "262205330": [3, 20], "nr_030198": [3, 20], "262205302": [3, 20], "nr_030191": [3, 20], "301171259": [3, 20], "nr_035850": [3, 20], "262205451": [3, 20], "nr_030222": [3, 20], "301171447": [3, 20], "nr_035871": [3, 20], "301171276": [3, 20], "nr_035852": [3, 20], "262205290": [3, 20], "nr_030188": [3, 20], "301171354": [3, 20], "nr_035860": [3, 20], "262205281": [3, 20], "nr_030186": [3, 20], "262205298": [3, 20], "nr_030190": [3, 20], "301171394": [3, 20], "nr_035865": [3, 20], "262205429": [3, 20], "nr_030218": [3, 20], "262205423": [3, 20], "nr_030217": [3, 20], "301171401": [3, 20], "nr_035866": [3, 20], "270133247": [3, 20], "nr_032574": [3, 20], "262205309": [3, 20], "nr_030193": [3, 20], "270132717": [3, 20], "nr_032716": [3, 20], "301171437": [3, 20], "nr_035870": [3, 20], "270133306": [3, 20], "nr_032587": [3, 20], "301171428": [3, 20], "nr_035869": [3, 20], "301171211": [3, 20], "nr_035845": [3, 20], "301171153": [3, 20], "nr_035838": [3, 20], "301171146": [3, 20], "nr_035837": [3, 20], "270133254": [3, 20], "nr_032575": [3, 20], "262205445": [3, 20], "nr_030221": [3, 20], "97": [3, 8, 11, 20, 32, 149, 263], "356517317": [3, 20], "xm_003527287": [3, 20], "glycin": [3, 15, 20, 168], "ma": [3, 7, 20, 30, 32], "98": [3, 7, 8, 11, 20, 25, 104, 205, 264], "297814701": [3, 20], "xm_002875188": [3, 20], "arabidopsi": [3, 8, 20, 23, 237, 274, 277], "lyrata": [3, 20], "su": [3, 20, 53, 66], "397513516": [3, 20], "xm_003827011": [3, 20], "panisc": [3, 20], "pick": [3, 6, 7, 8, 12, 15, 23, 32, 80, 102, 221], "elegantli": 3, "immedi": [3, 7, 20, 21, 168, 277], "afterward": 3, "guess": [3, 6, 7, 12, 15, 20, 21, 23, 149, 221, 299], "wonder": [3, 8, 19], "attribut": [3, 4, 7, 8, 11, 12, 17, 20, 21, 23, 30, 31, 35, 36, 37, 38, 39, 42, 45, 46, 47, 51, 52, 62, 67, 68, 71, 73, 76, 83, 84, 87, 88, 93, 94, 97, 99, 101, 103, 104, 112, 113, 114, 117, 120, 126, 127, 136, 144, 152, 157, 160, 161, 167, 168, 176, 182, 192, 196, 198, 203, 206, 208, 209, 210, 211, 212, 213, 216, 217, 220, 221, 225, 228, 233, 236, 251, 259, 268, 271, 274, 281, 286, 294, 296], "literatur": [3, 7, 11, 12, 13, 15, 68, 196, 197], "public": [3, 7, 8, 9, 16, 68, 83, 123, 129, 217, 220, 233, 250, 263, 264], "seqid": [3, 7, 68, 69, 302], "blosum62": [3, 11, 13, 14, 30, 32, 68, 69, 181, 198, 289, 296], "chanc": [3, 6, 12, 15, 68], "float": [3, 4, 6, 17, 24, 54, 68, 69, 71, 73, 80, 104, 135, 140, 141, 146, 152, 157, 158, 162, 165, 167, 168, 175, 181, 182, 196, 215, 250, 260, 262, 264, 266, 269], "inclus": [3, 6, 61, 68, 69, 214, 216, 228, 250], "multipass": [3, 68], "psiblast": [3, 27, 68, 69, 71], "sc": [3, 15, 68, 168], "mismatch": [3, 6, 14, 20, 27, 30, 38, 42, 51, 68, 69, 71, 79, 80, 167, 217, 220, 263, 269, 296], "cost": [3, 11, 13, 14, 32, 68, 69, 80, 221, 269], "extend": [3, 5, 6, 8, 9, 10, 12, 13, 14, 15, 20, 24, 27, 30, 32, 36, 68, 69, 71, 76, 80, 168, 176, 185, 208, 213, 216, 217, 235, 263, 269, 271, 296], "phi": [3, 15, 68, 70, 137, 152, 154, 168], "entrez": [3, 8, 9, 19, 22, 23, 24, 26, 27, 68, 69, 70, 76, 119, 123, 237, 273, 274, 302, 306], "mbstat": [3, 68], "mega": [3, 68, 70], "issu": [3, 5, 7, 11, 15, 22, 23, 27, 67, 68, 123, 143, 151, 158, 167, 168, 236, 250, 260, 277, 287], "sch\u00e4ffer": [3, 68], "effect": [3, 4, 11, 15, 68, 69, 71, 181, 182, 216, 235, 237, 269, 282], "eff": [3, 68], "space": [3, 4, 8, 11, 15, 23, 25, 32, 51, 65, 67, 68, 69, 71, 79, 80, 94, 95, 99, 100, 104, 123, 126, 129, 135, 158, 162, 168, 171, 175, 181, 206, 217, 235, 249, 250, 255, 269, 277, 281, 296], "kappa": [3, 17, 30, 32, 68, 216], "karlin": [3, 68], "lambda": [3, 6, 16, 17, 20, 23, 30, 68, 71, 182, 216, 237], "entropi": [3, 13, 68, 122, 263, 282], "messag": [3, 12, 25, 27, 32, 67, 68, 80, 83, 84, 89, 167, 192, 194, 195, 269, 287], "error": [3, 4, 6, 12, 14, 17, 21, 24, 25, 27, 29, 32, 67, 68, 73, 79, 80, 83, 84, 89, 107, 119, 125, 145, 149, 167, 168, 181, 192, 194, 195, 197, 208, 213, 237, 250, 257, 260, 269, 271, 293, 297], "3056429": 3, "673143725": 3, "625": 3, "78": [3, 9, 11, 21, 68, 104, 107, 237, 263], "indic": [3, 4, 6, 7, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 24, 27, 30, 32, 68, 73, 92, 104, 105, 109, 119, 121, 127, 129, 135, 139, 143, 149, 151, 158, 168, 171, 181, 182, 196, 213, 214, 216, 221, 235, 236, 247, 263, 265, 269, 271, 274, 277, 279, 296, 298], "slice": [3, 6, 8, 16, 20, 25, 30, 35, 45, 46, 51, 53, 61, 66, 104, 182, 196, 213, 216, 235, 250, 252, 259, 280, 298], "notat": [3, 14, 20, 21, 30, 235, 259, 298], "blast_slic": [3, 20], "blast_record_copi": 3, "particularli": [3, 7, 20, 83, 236], "retain": [3, 4, 6, 83, 168, 182, 269], "keyerror": [3, 6, 8, 45, 76, 102, 108, 304], "rais": [3, 4, 7, 8, 11, 12, 13, 14, 17, 21, 22, 23, 25, 27, 30, 31, 56, 67, 68, 83, 84, 85, 89, 102, 108, 113, 136, 144, 152, 155, 160, 167, 168, 182, 187, 189, 197, 208, 216, 235, 236, 237, 240, 250, 252, 259, 260, 270, 282, 289, 297, 298, 299], "unicorn_gen": 3, "membership": [3, 6, 17, 20, 168, 182, 236], "nr_030194": [3, 20], "sometim": [3, 6, 8, 15, 20, 21, 22, 23, 56, 65, 66, 181, 217, 225, 250, 263], "enough": [3, 5, 6, 8, 15, 19, 20, 21, 23, 127, 250, 269], "rank": [3, 7, 20, 73, 140, 180, 181, 196, 197], "rescu": [3, 20, 269], "rememb": [3, 6, 7, 9, 12, 15, 18, 20, 22, 23, 30, 66, 236], "zero": [3, 4, 7, 11, 12, 13, 14, 15, 20, 21, 22, 23, 30, 31, 35, 39, 45, 46, 51, 52, 61, 67, 68, 69, 73, 168, 198, 216, 220, 235, 236, 239, 240, 247, 249, 250, 252, 259, 260, 263, 269, 289, 296, 299], "520b": [3, 20], "mir520b": [3, 20], "mir": [3, 20], "520c": [3, 20], "mir520c": [3, 20], "3e": [3, 20], "55": [3, 6, 7, 8, 9, 11, 16, 17, 20, 108, 210, 211, 212, 263], "cover": [3, 5, 7, 8, 12, 17, 19, 20, 21, 22, 23, 24, 59, 74, 216, 236, 273], "parlanc": 3, "summar": [3, 12, 31, 82, 129], "coordin": [3, 4, 6, 8, 13, 16, 20, 21, 22, 25, 27, 30, 32, 35, 39, 46, 51, 52, 53, 55, 61, 68, 73, 99, 101, 117, 125, 126, 135, 136, 139, 140, 141, 143, 144, 149, 152, 155, 158, 160, 162, 165, 166, 167, 168, 171, 174, 175, 196, 197, 201, 213, 215, 220, 221, 225, 228, 230, 236, 237, 269], "subclass": [3, 9, 13, 15, 17, 21, 27, 30, 45, 54, 60, 67, 68, 99, 130, 139, 148, 169, 172, 196, 198, 235, 245, 271, 283, 286, 290], "essenc": [3, 4, 182], "highli": [3, 32, 149, 296], "homolog": 3, "isinst": [3, 68, 236], "xml_2900_blastx_001_v2": 3, "246": 3, "684409690": 3, "xp_009175831": 3, "663044098": 3, "ker20427": 3, "hypothet": [3, 12, 94, 104], "t265_11027": 3, "opisthorchi": 3, "viverrini": 3, "ccctctacagggaagcgctttctgttgtctgaaagaaaagaaagtgcttccttt": [3, 20], "arrai": [3, 4, 6, 7, 11, 15, 18, 29, 30, 54, 68, 73, 127, 135, 139, 140, 146, 156, 162, 168, 171, 174, 175, 176, 215, 269, 274, 282, 289, 298], "seqfeatur": [3, 7, 27, 68, 92, 94, 99, 104, 196, 259, 271], "qualifi": [3, 7, 8, 21, 27, 68, 80, 92, 93, 94, 99, 104, 164, 236, 244, 259, 271, 274], "coded_bi": [3, 68], "encod": [3, 6, 7, 13, 14, 22, 25, 68, 76, 83, 84, 90, 181, 197, 235, 237, 250, 252, 259, 260, 269, 277, 296], "midlin": [3, 68], "middl": [3, 6, 8, 23, 68, 104], "111": [3, 6, 20, 221], "122": [3, 68, 168, 236], "262205": 3, "ccctctacagggaagcgctttctgttgtctgaaagaaaagaaagtgcttccttttagagg": 3, "greater": [3, 17, 19, 21, 31, 32, 135, 136, 139, 152, 168, 181, 240, 259, 274], "e_value_thresh": 3, "91307e": [3, 20], "ccctctacagggaagcgctttctgttgtctgaaagaaaagaaagtgcttc": 3, "71483e": 3, "301171": 3, "cctctacagggaagcgctttctgttgtctgaaagaaaagaaagtgcttcc": 3, "519a": 3, "mir519a": 3, "54503e": 3, "270133": 3, "ccctctagagggaagcgctttctgtggtctgaaagaaaagaaagtgcttc": 3, "62": [3, 7, 13, 21, 29, 32, 113, 149, 250, 263], "tast": [3, 20], "resort": 3, "revers": [3, 6, 8, 15, 17, 20, 27, 30, 68, 69, 79, 80, 104, 117, 168, 175, 176, 181, 182, 216, 235, 236, 252, 259, 269, 282, 289], "descend": [3, 17, 20, 132, 182, 196, 208], "sort_kei": [3, 20], "blast_recordt": 3, "6002": [3, 20], "390332045": [3, 20], "xm_776818": [3, 20], "4082": [3, 20], "390332043": [3, 20], "xm_003723358": [3, 20], "4079": [3, 20], "3251": [3, 20], "356543101": [3, 20], "xm_003539954": [3, 20], "2936": [3, 20], "place": [3, 4, 5, 7, 11, 15, 17, 19, 22, 23, 30, 99, 104, 109, 119, 123, 152, 158, 167, 168, 176, 182, 213, 235, 236, 247, 250, 268, 274], "original_blast_record": 3, "unsort": [3, 20], "approci": 3, "callback": [3, 20, 120, 121, 122, 216, 237, 296], "filter_func": [3, 20], "0e": [3, 11, 122], "remain": [3, 4, 17, 20, 23, 30, 32, 68, 107, 132, 168, 182, 216, 235, 237, 249, 264, 297], "renam": [3, 15, 20, 137], "deepcopi": [3, 17, 168], "def": [3, 6, 8, 13, 15, 20, 23, 24, 32, 68, 70, 122, 217, 237, 240, 250, 252, 296], "map_func": [3, 20], "suffici": [3, 15, 166, 168], "unmodifi": [3, 21], "shallow": 3, "duplic": [3, 23, 155, 167, 180, 196, 197, 225, 237, 240, 269], "my_qblast_output": 3, "400": [3, 8, 10, 181, 206, 252], "my_qblast_output_select": 3, "At": [3, 7, 8, 11, 15, 20, 24, 25, 30, 68, 259, 269, 273, 276], "reus": [3, 6, 23, 71, 252], "rpsblast": [3, 68, 69, 70], "searchio": [3, 27, 91], "intend": [3, 6, 11, 20, 30, 45, 59, 67, 84, 91, 92, 94, 99, 129, 176, 177, 181, 196, 216, 236, 245, 255], "ultim": [3, 19], "framework": [3, 5, 26, 32, 176, 306], "ncbiwww": [3, 9, 27, 68], "nlm": [3, 7, 8, 19, 22, 68, 70, 71, 83, 93, 94, 96, 97, 123, 217, 233, 244, 252, 271], "nih": [3, 7, 8, 19, 22, 23, 68, 70, 71, 76, 83, 93, 94, 96, 97, 217, 233, 244, 252, 271], "gov": [3, 7, 8, 12, 19, 22, 23, 68, 70, 71, 76, 83, 93, 94, 96, 97, 217, 233, 244, 252, 261, 271], "cgi": [3, 19, 22, 68, 70, 85, 208, 252, 264], "guid": [3, 8, 12, 32, 165, 217, 220, 225, 228], "developerinfo": 3, "asn": [3, 7, 13, 15, 69, 70, 162], "result_handl": 3, "out_handl": [3, 6, 11, 12, 23, 25, 85, 213, 237, 250, 252], "imit": [3, 8], "ncbixml": [3, 27, 68], "core": [3, 7, 11, 17, 20, 30, 32, 53, 80, 168, 267, 269, 279, 280, 282, 287], "deprec": [3, 9, 14, 21, 27, 32, 67, 85, 92, 120, 127, 129, 211, 236, 274, 281, 282], "avoid": [3, 4, 6, 7, 8, 9, 11, 15, 17, 21, 24, 27, 31, 60, 67, 80, 108, 119, 149, 168, 175, 181, 182, 208, 237, 245, 250, 269, 273, 277], "risk": [3, 15, 119, 168, 273], "becam": [3, 15], "hopeless": 3, "endeavor": 3, "Not": [3, 15, 17, 20, 23, 25, 31, 69, 71, 132, 181, 182, 236], "stabl": [3, 27, 30, 32, 104, 264, 271], "everyth": [3, 5, 6, 7, 11, 12, 19, 21, 23, 69, 94, 95, 99, 101, 148, 152, 251, 304], "ever": [3, 79, 127, 149, 227], "gander": 3, "docstr": [3, 5, 8, 9, 19, 24, 83, 296, 305], "piec": [3, 6, 7, 8, 11, 259, 277], "sbjct": [3, 71], "af283004": 3, "thaliana": [3, 8, 23, 237, 277], "wcor413": 3, "783": [3, 25], "034": 3, "tacttgttgatattggatcgaacaaactggagaaccaacatgctcacgtcacttttagtcccttacatattcctc": 3, "tacttgttggtgttggatcgaaccaattggaagacgaatatgctcacatcacttctcattccttacatcttcttc": 3, "anyth": [3, 7, 17, 22, 30, 31, 91, 99, 103, 134, 152, 252, 298], "hopefulli": [3, 5, 7, 8, 12, 19, 21, 30], "figur": [3, 6, 8, 19, 22, 102], "diagram": [3, 4, 15, 98, 99, 104], "attempt": [3, 7, 13, 19, 20, 21, 22, 29, 30, 71, 125, 217, 221, 236, 259, 269, 277, 287], "uml": [3, 15], "round": [3, 7, 15, 27, 32, 68, 71, 119, 157, 167, 181, 250, 252, 259], "mistak": [3, 12, 15, 22], "made": [3, 4, 12, 13, 15, 18, 19, 21, 22, 31, 100, 182, 236, 250, 259, 282, 302], "blastpgp": [3, 69, 71], "mind": [4, 7, 12, 19, 73, 103, 114], "underli": [4, 7, 11, 13, 15, 20, 25, 67, 73, 197, 221, 237, 248, 250, 294], "et": [4, 6, 8, 9, 11, 13, 17, 32, 34, 65, 69, 73, 83, 107, 108, 109, 137, 140, 237, 251, 263, 264, 280, 287, 298, 299], "pairwis": [4, 6, 12, 15, 26, 30, 32, 34, 35, 36, 38, 39, 41, 42, 44, 51, 52, 55, 56, 58, 59, 68, 69, 73, 168, 195, 221, 269, 296, 306], "averag": [4, 11, 15, 16, 32, 73, 108, 152, 156, 168, 181, 185, 202, 263, 264, 269], "linkag": [4, 15, 18, 32, 73, 201, 202, 237, 242], "numer": [4, 13, 15, 17, 88, 104, 107, 149, 152, 167, 168, 176, 196, 246, 250, 264, 271], "context": [4, 22, 54, 84, 91, 99, 184, 235, 260], "experiment": [4, 10, 16, 21, 25, 27, 171, 196, 213, 269, 271], "experi": [4, 15, 16, 19, 20, 21, 23, 144, 152, 213, 263], "ignor": [4, 11, 12, 13, 15, 20, 21, 23, 24, 27, 31, 32, 59, 66, 67, 69, 88, 94, 141, 152, 166, 168, 181, 197, 217, 237, 239, 243, 250, 255, 260, 263, 269, 277, 282, 289, 297], "som": [4, 73], "uniform": [4, 5, 11, 23, 79, 80, 100, 181, 196, 269, 289], "btpe": 4, "congruenti": 4, "rand": 4, "srand": 4, "epoch": 4, "eight": [4, 7, 11, 80, 263], "convers": [4, 6, 11, 20, 22, 23, 27, 32, 105, 220, 228, 250, 273], "vector": [4, 8, 9, 15, 27, 34, 73, 122, 127, 133, 135, 139, 141, 168, 174, 280], "satisfi": [4, 11, 168, 236], "triangl": [4, 8, 15, 80], "underlin": 4, "leq": 4, "textrm": [4, 6, 11, 13], "metric": [4, 196], "everydai": [4, 22], "languag": [4, 6, 7, 9, 15, 19, 123, 277], "shortest": 4, "straight": [4, 6, 7, 12, 23, 31, 250], "semi": [4, 104, 129, 243, 249], "8660": 4, "6340": 4, "sum_": [4, 11, 12, 269], "x_i": 4, "y_i": 4, "summat": 4, "denomin": 4, "chosen": [4, 13, 76, 152, 259, 260, 268, 269], "accordingli": [4, 11, 50, 66, 168, 228, 259], "subtract": [4, 15, 139, 236, 277, 298], "sure": [4, 5, 7, 15, 22, 23, 24, 56, 73, 117, 149, 181, 236, 237, 297], "properli": [4, 5, 129, 149, 181, 182, 236, 269], "normal": [4, 5, 7, 11, 12, 13, 15, 21, 22, 23, 30, 32, 65, 67, 93, 121, 129, 133, 135, 143, 144, 151, 168, 175, 181, 235, 236, 237, 250, 260, 269, 280, 282, 287, 289, 301, 302, 304], "manhattan": 4, "tend": [4, 24, 73, 264], "divid": [4, 7, 11, 12, 13, 15, 16, 30, 73, 102, 104, 108, 240, 255, 263, 269, 277, 289], "walk": 4, "frac": [4, 6, 11, 12, 16], "bar": [4, 8, 103, 104, 269], "sigma_x": 4, "y": [4, 6, 7, 8, 11, 12, 13, 14, 15, 22, 36, 68, 73, 76, 80, 99, 104, 115, 117, 120, 122, 129, 135, 136, 144, 145, 154, 160, 168, 171, 175, 181, 182, 215, 260, 264, 281, 296, 299, 302, 303], "sigma_i": 4, "deviat": [4, 11, 15, 104, 135, 152, 162, 168, 174, 215, 269, 289, 299], "scatterplot": 4, "lie": [4, 221], "slope": [4, 16, 298], "neg": [4, 11, 13, 30, 32, 69, 71, 73, 88, 99, 196, 236, 250, 269, 293, 296, 298], "d_": 4, "equiv": 4, "scatter": [4, 6, 101], "plot": [4, 8, 17, 23, 101, 168, 260, 264], "r_": 4, "sqrt": [4, 11, 181, 269], "nonumb": 4, "log": [4, 6, 9, 11, 12, 13, 30, 32, 67, 69, 93, 107, 109, 120, 122, 127, 158, 180, 181, 201, 202, 250, 263, 269, 287, 289, 293, 296], "ratio": [4, 11, 13, 32, 34, 80, 181, 193, 260, 280, 289], "signal": [4, 16, 94, 271, 274, 298], "manipul": [4, 7, 9, 15, 18, 19, 20, 23, 35, 46, 51, 61, 67, 71, 104, 126, 132, 168, 250], "affect": [4, 15, 20, 30, 32, 168, 181, 269], "mbox": 4, "dimension": [4, 13, 25, 127, 168, 262, 271, 289], "geometr": [4, 139], "direct": [4, 6, 7, 8, 15, 16, 17, 22, 32, 67, 71, 91, 92, 94, 100, 109, 117, 141, 156, 176, 177, 178, 179, 182, 228, 236, 263, 277], "parametr": [4, 181], "robust": 4, "outlier": [4, 6, 29], "w_i": 4, "treat": [4, 5, 7, 11, 12, 15, 17, 23, 30, 31, 32, 65, 67, 69, 80, 83, 181, 196, 221, 235, 250, 259, 260, 269], "distancematrix": [4, 13, 27, 73, 180, 198], "dist": [4, 5, 8, 9, 32, 73, 80, 83, 132, 156], "henc": [4, 15, 20, 73, 237], "yield": [4, 6, 7, 11, 20, 30, 61, 64, 96, 184, 216, 218, 219, 220, 221, 225, 229, 231, 232, 240, 246, 249, 250, 252, 269, 270, 271, 272], "float64": [4, 15, 73, 168], "rewritten": [4, 69, 73], "clustercentroid": [4, 27, 73], "cdata": [4, 73], "cmask": [4, 73], "clusterid": [4, 73], "belong": [4, 11, 13, 15, 32, 73, 84, 88, 93, 132, 271, 281, 287, 298], "arithmet": [4, 17, 73, 198], "center": [4, 8, 15, 30, 32, 73, 104, 135, 139, 146, 168, 174, 264], "longest": [4, 6, 30, 65], "clusterdist": [4, 27, 73], "index1": [4, 73], "index2": [4, 73], "smallest": [4, 11, 73], "suitabl": [4, 5, 6, 13, 15, 23, 46, 61, 80, 83, 100, 125, 158, 182, 237, 250, 273, 277], "em": [4, 32, 73], "randomli": [4, 6, 108], "permut": 4, "thu": [4, 5, 8, 13, 14, 15, 18, 19, 20, 21, 22, 64, 68, 70, 71, 76, 99, 127, 132, 168, 181, 236, 250, 252, 263, 268, 269, 277, 281], "guarante": [4, 11, 83, 108, 109, 182, 217, 287], "closest": [4, 175], "reassign": 4, "becom": [4, 5, 6, 7, 11, 17, 20, 22, 23, 84, 94, 216, 217, 236, 244, 250, 254, 269], "prohibit": 4, "never": [4, 206], "closer": [4, 20, 25, 92], "overal": [4, 11, 15, 99, 158, 201, 236], "thumb": [4, 263], "unlik": [4, 11, 15, 20, 83, 119, 168, 181, 206, 235, 237, 259, 273, 277, 287], "better": [4, 6, 7, 8, 13, 14, 15, 17, 71, 181, 236, 259, 260, 296], "smaller": [4, 8, 13, 73, 99, 108, 216, 236, 269], "hundr": [4, 19, 20], "global": [4, 12, 13, 14, 17, 30, 80, 83, 109, 182, 201, 202, 225, 261, 296], "notic": [4, 5, 6, 8, 11, 12, 19, 20, 21, 22, 23, 67, 165, 217, 221, 236, 237, 250, 252, 259, 277, 294], "converg": [4, 71, 109, 122], "due": [4, 6, 7, 9, 11, 13, 15, 16, 17, 24, 67, 85, 145, 151, 158, 221, 228, 269, 277, 302], "occurr": [4, 12, 13, 90, 181, 235, 259, 262, 269, 272, 290, 293], "previous": [4, 8, 15, 20, 21, 65, 83, 127, 250], "encount": [4, 7, 11, 20, 83, 84, 221], "halt": 4, "yet": [4, 8, 11, 14, 17, 19, 23, 24, 30, 36, 44, 45, 80, 88, 107, 130, 132, 190, 229, 252, 273, 289], "ten": [4, 6, 12, 16, 23, 30, 216, 249, 250, 259], "resav": 4, "doubl": [4, 8, 9, 12, 21, 22, 129, 158, 168, 171, 196, 235, 260, 263], "kcluster": [4, 27, 73], "nfound": [4, 73], "ncluster": [4, 73], "npass": [4, 73], "initialid": [4, 73], "behav": [4, 15, 17, 20, 68, 135, 235, 236, 259], "determinist": [4, 73], "theoret": [4, 25, 176, 262], "viewpoint": 4, "kmedoid": [4, 27, 73], "routin": [4, 15, 73, 158, 168, 286, 292], "inher": 4, "graphic": [4, 9, 12, 17, 26, 27, 111, 115, 117, 182, 196, 237, 242, 260, 306], "popular": [4, 5, 7, 9, 11, 12, 18, 19, 20, 23], "node": [4, 17, 27, 32, 73, 99, 117, 128, 132, 176, 177, 178, 179, 181, 182, 183, 184, 186, 188, 189, 196, 197, 208, 210, 212, 251, 295], "join": [4, 5, 6, 7, 10, 21, 22, 80, 94, 158, 168, 181, 198, 236, 259, 277], "retrac": 4, "merg": [4, 8, 32, 132, 269], "flavor": [4, 15, 20, 71, 217, 225, 228], "subnod": [4, 73, 130, 197], "among": [4, 13, 15, 18, 20, 32, 80, 216, 274], "newli": [4, 15, 32], "significantli": [4, 14, 269], "peculiar": 4, "necessarili": [4, 15, 17, 25, 109, 129, 182, 236], "even": [4, 5, 7, 9, 11, 12, 13, 17, 19, 20, 21, 22, 23, 27, 30, 31, 32, 56, 80, 104, 221, 236, 237, 250, 263, 277, 287], "inconsist": [4, 13, 213], "convent": [4, 8, 11, 12, 15, 21, 22, 27, 61, 66, 73, 104, 196, 228, 235, 250, 277, 289, 296], "less": [4, 6, 7, 8, 11, 13, 15, 20, 21, 30, 32, 83, 99, 135, 136, 139, 168, 181, 202, 206, 216, 236, 237, 250, 259, 277, 289, 296], "valid": [4, 6, 7, 10, 13, 15, 20, 22, 27, 32, 67, 68, 70, 71, 83, 84, 117, 119, 136, 168, 175, 181, 185, 190, 197, 206, 235, 236, 250, 251, 263, 269], "valueerror": [4, 11, 13, 17, 22, 23, 25, 27, 29, 30, 31, 56, 67, 68, 80, 84, 85, 92, 182, 216, 235, 236, 237, 240, 250, 252, 259, 260, 263, 270, 271, 277, 282, 289, 297], "bracket": [4, 214], "immut": [4, 13, 22, 23, 235], "accomplish": [4, 7, 17, 25], "draw": [4, 6, 8, 17, 98, 99, 102, 103, 104, 105, 181], "reorder": [4, 13, 30, 32], "drawn": [4, 8, 17, 99, 104], "dendrogram": [4, 17, 73], "switch": [4, 8, 12, 22, 30, 32, 68, 69, 73, 80, 99, 137, 168, 181, 201, 235, 259, 269], "sort": [4, 12, 15, 17, 20, 23, 27, 30, 66, 73, 76, 104, 126, 133, 135, 155, 168, 182, 216, 236, 237, 267, 268, 269], "visit": [4, 238], "exchang": 4, "desir": [4, 12, 15, 16, 21, 23, 30, 61, 73, 104, 175, 181, 208, 216, 250, 269], "event": [4, 6, 11, 13, 17, 27, 94, 180, 182, 196, 197, 251], "treeclust": [4, 27, 73], "precalcul": [4, 54], "shuffl": [4, 6, 73, 79, 80], "alon": [4, 15, 181, 277], "invent": 4, "neural": 4, "network": [4, 7, 23, 27, 83, 176, 208], "topologi": [4, 17, 21, 181, 182, 196], "rectangular": [4, 73], "neighbor": [4, 9, 15, 80, 141, 146, 181, 198, 263, 264, 281], "far": [4, 8, 19, 20, 21, 100, 250, 277], "adjust": [4, 6, 8, 9, 12, 21, 32, 68, 69, 70, 117, 129, 152, 168, 181, 216, 221, 228, 252, 259, 263, 269], "delta": [4, 12, 30, 168, 198, 240, 263], "_": [4, 6, 12, 13, 17, 73, 168, 196, 213, 225, 237, 250], "cdot": 4, "tau_": 4, "init": [4, 168, 263], "rapidli": [4, 11], "radiu": [4, 15, 104, 135, 141, 146, 154, 157, 162], "progress": [4, 32, 79, 80, 181], "n_x": 4, "n_y": 4, "rectangl": [4, 117], "somclust": [4, 27, 73], "grid": [4, 73], "celldata": [4, 73], "nxgrid": [4, 73], "nygrid": [4, 73], "horizont": [4, 6, 8, 73], "vertic": [4, 8, 23, 73, 99, 156, 196, 235], "inittau": [4, 73], "niter": [4, 73], "verb": 4, "ix": [4, 73], "pca": [4, 27, 73], "techniqu": [4, 8, 107], "multivari": 4, "practic": [4, 12, 15, 17, 21, 23, 127, 250, 263], "transform": [4, 6, 15, 23, 32, 102, 107, 128, 129, 133, 135, 139, 158, 165, 168, 171, 174, 175, 176, 215, 221, 237, 250, 277], "basi": [4, 11, 95, 149, 294], "explain": [4, 5, 7, 12, 15, 20, 21, 24, 30, 83, 121, 202, 250, 277], "varianc": 4, "ellipsoid": 4, "axi": [4, 8, 12, 13, 15, 31, 100, 104, 117, 126, 168, 175], "reduc": [4, 7, 8, 21, 23, 32, 168, 181, 264, 269, 277], "regard": [4, 5, 6, 12, 14, 20, 24, 30, 84, 140, 176, 263], "unexplain": 4, "eigenvector": 4, "covari": [4, 299], "eigenvalu": [4, 73], "3d": [4, 7, 25, 26, 135, 158, 168, 170, 174, 175, 247, 306], "algol": 4, "procedur": [4, 15, 20, 32, 129], "svd": [4, 215], "household": 4, "bidiagon": 4, "qr": 4, "magnitud": [4, 73], "columnmean": [4, 73], "recreat": [4, 30, 68, 73, 304], "dot": [4, 12, 13, 15, 20, 30, 32, 65, 73, 80, 104, 168, 175, 215, 236, 296], "stanford": [4, 32, 208, 213], "jtreeview": 4, "sourceforg": [4, 15, 32, 269, 273, 277], "net": [4, 7, 15, 25, 32, 176, 269, 273, 277], "mydatafil": 4, "flexibl": [4, 6, 7, 9, 15, 19, 23, 168, 176, 206, 260, 264], "urllib": [4, 7, 25, 83, 90], "urlopen": [4, 25, 90], "textiowrapp": [4, 90], "raw": [4, 6, 7, 8, 12, 15, 17, 25, 59, 69, 84, 85, 92, 102, 128, 131, 217, 218, 219, 220, 223, 224, 225, 231, 237, 250, 252, 277], "githubusercont": [4, 6, 8, 17, 25], "master": [4, 6, 8, 16, 17, 25, 69], "cyano": 4, "internet": [4, 7, 11, 19, 23, 25, 68, 70, 149, 237, 282], "tab": [4, 11, 12, 20, 23, 51, 104, 209, 210, 211, 216, 218, 225, 231, 235, 237, 255, 269], "delimit": [4, 51, 83, 104, 235, 237, 255, 269], "observ": [4, 11, 12, 13, 16, 22, 52, 109, 120, 121, 122, 127, 168, 201, 202, 213, 228, 250, 281], "yorf": 4, "hour": [4, 7, 16, 32, 181], "yal001c": 4, "yal002w": 4, "yal003w": 4, "yal005c": 4, "yal010c": 4, "goe": [4, 24, 27, 84, 149], "yeast": [4, 11, 276], "tell": [4, 7, 11, 12, 22, 23, 27, 80, 216, 250, 252, 277], "kind": [4, 5, 7, 8, 11, 12, 13, 19, 20, 21, 25, 30, 84, 92, 93, 101, 102, 103, 107, 110, 216, 263], "stand": [4, 8, 11, 14, 99, 174, 215, 246, 277], "alphanumer": [4, 252], "yal004c": 4, "gweight": [4, 73], "gorder": [4, 73], "eweight": [4, 73], "eorder": [4, 73], "tfiiic": 4, "kd": [4, 15, 146], "subunit": [4, 15, 168], "elong": 4, "factor": [4, 11, 25, 32, 105, 135, 152, 162, 168, 171, 263, 287, 294], "ef1": 4, "cytosol": 4, "hsp70": 4, "ad": [4, 6, 8, 11, 12, 13, 15, 17, 23, 24, 30, 31, 32, 67, 69, 73, 76, 80, 99, 102, 111, 115, 117, 123, 132, 149, 155, 176, 181, 182, 208, 210, 236, 255, 259, 264, 268, 276, 279, 289, 302], "geneid": [4, 7, 21, 73, 94, 259, 277], "orf": [4, 6, 73], "genenam": [4, 7, 73], "expid": [4, 73], "uniqid": [4, 73], "logarithm": [4, 11, 12, 13, 14, 31, 100, 127, 129, 250, 293, 296], "jobnam": [4, 73], "geneclust": [4, 73], "expclust": [4, 73], "cdt": [4, 73], "gtr": [4, 73, 180, 181], "atr": [4, 73], "kgg": [4, 73], "kag": [4, 73], "genetre": 4, "correctli": [4, 7, 15, 71], "exptre": 4, "paper": [4, 7, 12, 19, 21, 59, 72, 263], "cyano_result": 4, "ifound": 4, "cyano_result_k_g2_a2": 4, "cyano_result_k_g2": 4, "cyano_result_k_a2": 4, "feedback": [5, 6, 27], "project": [5, 6, 7, 9, 15, 17, 21, 24, 27, 93, 94, 158, 168, 173, 175, 249], "greatli": [5, 269], "patch": 5, "varieti": [5, 17, 196], "contributor": 5, "forum": 5, "discuss": [5, 6, 7, 8, 11, 12, 15, 19, 21, 22, 108, 168], "github": [5, 9, 16, 27, 68, 70, 140, 226, 233, 242], "addition": [5, 21, 56, 237, 246, 263, 277], "tracker": [5, 225], "redmin": 5, "buri": 5, "anyon": [5, 24, 30, 236, 298], "inbox": 5, "forgotten": 5, "encourag": [5, 6, 22, 23, 24, 92, 250], "sign": [5, 6, 7, 15, 52, 63, 83, 119, 168, 240, 250], "hang": 5, "area": [5, 15, 16, 99, 137, 145, 157, 298, 299], "answer": [5, 6, 19, 168, 278], "beginn": 5, "happi": [5, 19], "perhap": [5, 6, 7, 12, 21, 22, 182, 190, 239, 240, 250], "topic": [5, 6, 7, 22], "clearli": [5, 12, 15, 24], "wiki": [5, 6, 9, 12, 17, 19, 21, 23, 53, 56, 66, 180, 226, 233, 235, 262, 300], "categori": [5, 6, 7, 79, 80, 90, 100, 181, 247, 272], "mayb": [5, 6, 7, 15, 273], "archiv": [5, 6, 8, 9, 15, 68, 69, 94, 149, 250, 274], "pre": [5, 6, 30, 32, 168, 252, 259], "compil": [5, 6, 24, 168, 196, 287], "wheel": [5, 8, 177], "oper": [5, 6, 7, 9, 13, 15, 17, 22, 30, 32, 55, 56, 67, 80, 168, 175, 181, 182, 185, 236, 237, 250, 263, 277, 289], "linux": [5, 6, 23, 67], "volunt": [5, 9], "who": [5, 7, 11, 12, 21, 22, 30, 298], "easili": [5, 6, 9, 11, 15, 17, 21, 22, 23, 250, 259], "etc": [5, 6, 7, 8, 9, 11, 14, 21, 30, 99, 117, 133, 152, 159, 168, 181, 216, 220, 228, 236, 252, 259, 260, 263, 268, 271, 274, 277, 287, 302], "great": [5, 7, 23, 271], "grate": 5, "conda": 5, "forg": 5, "feedstock": 5, "thank": [5, 15, 71], "team": [5, 233], "tip": [5, 6, 17, 19, 69], "certain": [5, 8, 11, 12, 15, 17, 19, 21, 23, 67, 102, 139, 181, 202, 203, 237, 298], "peopl": [5, 11, 19, 21, 23, 206], "window": [5, 6, 12, 30, 32, 61, 67, 69, 71, 181, 237, 260, 264, 266, 277], "instruct": [5, 7, 12, 104], "rpm": 5, "pretti": [5, 6, 7, 12, 15, 22, 23, 236, 260], "bdist_rpm": 5, "macintosh": 5, "appl": [5, 153], "move": [5, 6, 15, 20, 92, 100, 104, 132, 163, 168, 174, 175, 181, 236, 277], "mac": [5, 277], "unix": [5, 32, 67, 149, 237, 277], "easiest": [5, 8, 15, 206, 259, 302], "gcc": [5, 19, 22, 23], "click": 5, "hasn": [5, 7], "demand": [5, 23, 30, 235, 237], "feel": [5, 19, 108, 146], "coverag": [5, 69], "devot": 5, "barrier": 5, "stuff": [5, 7, 15, 26, 99, 236, 306], "interwork": 5, "regress": [5, 24, 120], "workabl": 5, "willing": 5, "paragraph": 5, "legal": 5, "licens": [5, 9, 15, 137, 165], "wrote": [5, 12, 23, 24, 25], "gpl": 5, "lpgl": 5, "concern": 5, "speak": [5, 11, 71], "clustalw": [5, 9, 13, 19, 30, 32, 40, 50, 56, 57, 237], "big": [5, 6, 7, 12, 149, 203, 236, 277], "central": [5, 7, 19, 22, 104, 123, 140, 168, 252, 264], "scriptcentr": 5, "excit": [5, 8], "importantli": [5, 8], "year": [6, 7, 8, 83, 196], "gradual": 6, "grown": [6, 16], "shorter": [6, 14, 17, 19, 21, 22, 23, 30, 32, 237, 269], "subset": [6, 15, 23, 24, 54, 123, 148, 213, 298], "sai": [6, 8, 12, 15, 21, 22, 24, 25, 31, 65, 216, 250, 269], "word": [6, 7, 9, 11, 15, 20, 21, 23, 32, 68, 69, 70, 80, 129, 132, 236, 240], "input_fil": [6, 68, 69, 267, 269], "big_fil": 6, "id_fil": 6, "short_list": 6, "output_fil": [6, 99, 101, 103, 267, 269], "id_handl": 6, "rstrip": [6, 10, 27, 229, 235, 277], "count": [6, 11, 13, 14, 15, 17, 21, 22, 23, 27, 30, 31, 32, 34, 56, 60, 61, 68, 69, 71, 83, 93, 94, 102, 108, 109, 121, 132, 167, 168, 181, 182, 185, 196, 201, 202, 220, 235, 236, 237, 252, 259, 260, 263, 264, 269, 273, 279, 282, 286, 289, 294, 296, 302], "save": [6, 7, 10, 11, 12, 13, 15, 17, 19, 20, 23, 25, 27, 32, 69, 71, 73, 80, 84, 99, 121, 133, 148, 149, 168, 169, 170, 172, 181, 182, 221, 237, 248, 250, 259, 269, 282, 297], "warn": [6, 7, 8, 12, 15, 23, 25, 27, 32, 56, 79, 80, 83, 89, 108, 143, 151, 168, 196, 236, 237, 250, 259, 260, 269, 287, 299], "rather": [6, 7, 12, 13, 15, 17, 21, 23, 24, 27, 32, 34, 62, 65, 66, 83, 84, 92, 196, 216, 236, 237, 250, 254, 268, 269, 277, 279, 302, 304], "low": [6, 13, 15, 16, 25, 99, 104, 145, 237, 250, 263, 269, 273, 277], "level": [6, 7, 8, 10, 15, 17, 20, 21, 22, 24, 25, 27, 32, 67, 69, 84, 89, 99, 101, 104, 119, 123, 133, 135, 136, 139, 144, 145, 146, 152, 155, 157, 158, 159, 160, 167, 168, 171, 181, 182, 196, 197, 208, 216, 228, 237, 240, 250, 255, 269, 273, 277, 302], "speed": [6, 11, 14, 23, 32, 146, 181, 266, 269, 277], "interfac": [6, 7, 9, 10, 12, 15, 17, 20, 21, 23, 27, 30, 56, 59, 67, 80, 83, 85, 92, 99, 108, 123, 145, 156, 165, 176, 184, 192, 194, 195, 201, 202, 203, 216, 217, 233, 237, 250, 258, 301, 302], "complic": [6, 7, 15, 21, 22, 23, 24, 31, 239], "qualityio": [6, 23, 27, 237], "fastqgeneraliter": [6, 23, 27, 237, 250], "in_handl": [6, 23, 85, 237], "hunt": 6, "extrem": [6, 13, 19, 21, 23, 271], "bia": [6, 228, 269], "restrict": [6, 7, 8, 11, 15, 21, 27, 30, 65, 69, 108, 117, 119, 132, 168, 196, 216, 250, 259, 277], "digest": [6, 8, 205], "sensibl": [6, 7, 8, 21], "ppcp1": [6, 8, 21], "yersinia": [6, 8, 21, 237], "pesti": [6, 8, 21, 237], "biovar": [6, 8, 21, 237], "microtu": [6, 8, 21, 237], "unit": [6, 8, 11, 13, 16, 21, 24, 27, 53, 99, 104, 158, 171, 181, 196, 248], "folder": [6, 8, 20, 21, 24, 149, 165], "nc_005816": [6, 7, 8, 21, 69, 237, 255], "original_rec": 6, "nuc_list": 6, "situ": 6, "letter": [6, 11, 12, 13, 14, 15, 19, 21, 22, 25, 30, 31, 33, 53, 54, 59, 66, 71, 76, 80, 107, 108, 109, 149, 154, 168, 171, 208, 213, 214, 221, 235, 247, 249, 250, 259, 260, 262, 289, 294, 296, 298, 301], "shuffled_rec": 6, "put": [6, 7, 9, 12, 15, 23, 24, 31, 68, 70, 84, 104, 149, 163, 168, 174, 215, 276], "output_handl": 6, "person": [6, 7, 15, 19, 21, 83, 123], "make_shuffle_record": 6, "new_id": [6, 23], "saw": [6, 17, 20], "enabl": [6, 11, 15, 17, 18, 32, 67, 69, 168, 216, 269, 302], "correct": [6, 7, 9, 16, 23, 32, 68, 83, 123, 181, 201, 213, 250, 259, 263, 303], "complement": [6, 8, 13, 19, 27, 30, 68, 79, 80, 94, 157, 235, 236, 259, 263, 268, 269, 277, 282, 289, 304], "prefix": [6, 17, 24, 32, 84, 97, 117, 129, 180, 182, 184, 187, 235, 267, 269], "make_protein_record": 6, "nuc_record": 6, "trans_": 6, "eleg": 6, "nuc_rec": 6, "coding_sequ": 6, "to_stop": [6, 22, 235, 236, 259], "wouldn": [6, 12, 20, 301], "collabor": [6, 94, 244], "deliber": [6, 8, 21, 22, 56], "poor": [6, 13, 19, 182, 250, 269], "rec": [6, 18, 21, 23, 237, 250, 259, 276], "mix": [6, 22, 32, 83, 84, 181, 196, 236, 252, 260], "comprehens": [6, 20, 23, 24, 25, 181], "million": [6, 23, 196], "contig": [6, 22, 27, 93, 94, 237, 239, 267, 268, 269, 270], "sorted_orchid": 6, "clever": 6, "flip": [6, 8, 104], "happen": [6, 7, 8, 12, 15, 17, 20, 21, 22, 56, 99, 168, 213, 250, 252, 259, 277], "solv": [6, 15], "len_and_id": 6, "record_index": 6, "scan": [6, 11, 23, 27, 85, 89, 213, 237, 252, 269, 295], "swissprot": [6, 9, 25, 27, 53, 85, 88, 237, 254, 257, 275], "get_raw": [6, 23, 216, 217, 218, 219, 220, 221, 223, 224, 225, 228, 231, 237, 297, 298], "onward": [6, 9, 11, 18, 23, 80, 250], "bonu": [6, 277], "fastaio": [6, 23, 27, 56, 216, 237, 250], "simplefastapars": [6, 23, 27, 237, 240], "introduc": [6, 8, 9, 11, 12, 17, 19, 20, 21, 22, 23, 88, 225, 237, 249, 250, 257], "hold": [6, 7, 12, 15, 16, 19, 21, 23, 27, 30, 49, 56, 64, 66, 71, 74, 86, 87, 88, 90, 93, 97, 99, 102, 104, 105, 109, 112, 113, 114, 120, 121, 122, 123, 125, 127, 168, 200, 203, 204, 209, 210, 211, 212, 216, 237, 250, 259, 268, 270, 271, 277, 281, 288, 290, 291], "excel": [6, 7, 23], "held": [6, 12, 23, 117, 237, 250, 268, 288], "task": [6, 9, 12, 19, 23, 68, 69, 79, 80, 99, 108, 176, 181], "crop": 6, "simplist": 6, "whose": [6, 16, 25, 30, 119, 235, 252, 259, 273, 287], "phred": [6, 237, 239, 248, 250, 252, 267, 269, 270], "ena": 6, "ftp": [6, 7, 8, 15, 22, 23, 25, 76, 90, 93, 94, 153, 276], "sra": [6, 12], "vol1": 6, "srr020": 6, "srr020192": 6, "2mb": 6, "unzip": [6, 277], "19mb": 6, "roch": [6, 21, 237, 250, 252], "454": [6, 21, 237, 250, 252], "flx": 6, "viru": [6, 23, 271], "infect": 6, "sea": [6, 30, 153, 196], "lion": 6, "srs004476": 6, "minimum": [6, 11, 13, 16, 21, 32, 69, 80, 104, 156, 180, 181, 196, 197, 236, 250, 262, 269, 298], "good_read": 6, "min": [6, 7, 11, 16, 181, 236, 250, 282, 289, 298], "phred_qual": [6, 21, 52, 239, 248, 250, 252, 259], "good_qual": 6, "14580": 6, "41892": 6, "pretend": [6, 252], "gatgacggtgt": 6, "startswith": [6, 27, 104, 235, 252], "primer_read": 6, "with_prim": 6, "That": [6, 7, 17, 19, 20, 21, 23, 182, 228], "13819": 6, "srr014849": 6, "eleven": [6, 7, 25], "trimmed_primer_read": 6, "with_primer_trim": 6, "strip": [6, 10, 15, 27, 83, 135, 162, 235, 269], "clearest": 6, "trim_prim": 6, "trimmed_read": 6, "perfect": [6, 21, 23, 30], "len_prim": 6, "original_read": 6, "previou": [6, 8, 12, 15, 20, 21, 22, 23, 24, 37, 46, 53, 68, 108, 158, 168, 239, 266], "anywher": [6, 268], "trim_adaptor": 6, "len_adaptor": 6, "min_len": 6, "len_record": 6, "elif": [6, 296], "fuzzi": [6, 92, 236], "exact": [6, 7, 17, 20, 21, 45, 61, 99, 119, 152, 221, 236], "account": [6, 11, 12, 15, 30, 31, 32, 104, 181, 236, 269], "slower": [6, 23, 32, 168, 181, 203, 252, 269], "littl": [6, 8, 12, 19, 23, 107, 181, 216, 250, 252, 269, 277], "facto": 6, "denot": [6, 15, 20, 73, 104, 216, 228, 235], "p_e": 6, "q_": [6, 12], "wrong": [6, 9, 15, 21, 67, 149, 250], "00001": [6, 201, 202], "higher": [6, 12, 13, 14, 15, 21, 69, 99, 157, 236, 250, 263, 269, 274, 289, 299], "rare": [6, 17, 23], "post": [6, 7, 19, 71, 83, 220, 252], "inde": [6, 12, 25], "maq": 6, "fly": [6, 13, 20, 25], "ointment": 6, "incompat": [6, 69, 250, 277, 296, 302], "ascii": [6, 17, 23, 25, 69, 213, 235, 237, 250, 259, 269, 277], "offset": [6, 11, 20, 23, 32, 61, 100, 121, 141, 218, 219, 220, 223, 224, 225, 229, 231, 232, 236, 237, 250, 273, 277, 289], "bought": 6, "pipelin": [6, 7, 237, 250], "fall": [6, 21, 236, 259], "equat": [6, 11, 15], "although": [6, 7, 8, 11, 12, 15, 22, 23, 25, 42, 68, 70, 127, 217, 221, 236, 250, 259, 277], "approxim": [6, 11, 13, 32, 141, 181, 250, 263, 269, 293], "almost": [6, 8, 12, 15, 17, 19, 20, 21, 84, 250, 277], "choic": [6, 9, 11, 12, 15, 17, 20, 22, 23, 100, 236, 289], "ok": [6, 7, 9, 23, 24], "newer": [6, 7, 25, 250], "Of": [6, 7, 15, 19, 83, 250, 252, 277], "tricki": [6, 14, 250], "strategi": [6, 7, 32, 69, 83], "fiddli": 6, "pairedfastaqualiter": [6, 27, 237, 250], "f_handl": 6, "q_handl": 6, "temp": [6, 250], "sheer": 6, "why": [6, 7, 8, 9, 12, 19, 20, 23, 30, 228, 250, 259], "prove": [6, 8], "actual": [6, 7, 8, 11, 12, 15, 16, 17, 20, 21, 22, 23, 24, 69, 83, 99, 108, 109, 110, 216, 221, 225, 236, 237, 244, 245, 250, 259, 277, 293], "000": [6, 11, 32, 126, 181, 206, 277], "fq_dict": 6, "38240": 6, "23181": 6, "40568": 6, "23186": 6, "gtcccagtattcggatttgtctgccaaaacaatgaaattgacacagtttacaac": 6, "ccg": [6, 22], "took": [6, 23, 56, 108, 237, 252, 297], "instant": 6, "sister": [6, 21, 250], "index_db": [6, 9, 20, 23, 27, 216, 237], "sqlite3": [6, 9, 23, 61, 303], "instantan": 6, "flowgram": [6, 237, 252], "flow": [6, 252], "trivial": [6, 7, 12, 13, 22, 23, 158], "e3mfgyr02_random_10_read": [6, 252], "untrim": 6, "instrument": [6, 16, 250], "newbler": 6, "sffinfo": [6, 250], "notrim": 6, "mimic": [6, 217, 220, 225, 263], "consult": [6, 27, 30, 181], "sffio": [6, 27, 237], "worri": [6, 7, 17, 20, 21, 22, 23], "locat": [6, 7, 8, 11, 12, 15, 24, 27, 32, 68, 69, 72, 93, 94, 99, 104, 123, 135, 162, 168, 171, 180, 192, 194, 195, 196, 197, 206, 208, 209, 213, 216, 233, 237, 244, 252, 259, 268, 271, 276], "promot": [6, 23, 27, 259, 271], "eukaryot": [6, 16, 21], "virus": [6, 23], "prokaryot": [6, 8], "bacteri": [6, 16, 22, 237], "fna": [6, 7, 8, 21], "min_pro_len": 6, "neat": [6, 12, 22], "trick": [6, 12, 19, 22, 23, 252], "nuc": [6, 11, 30, 32, 259, 289], "pro": [6, 13, 15, 30, 69, 168, 240, 259], "gclmkkssivatiitilsgsanaassqlip": 6, "yrf": 6, "315": 6, "ksgelrqtppasstlhlrlilqrsgvmmel": 6, "npe": 6, "285": 6, "glncsffsicnwkfidyinrlfqiiylckn": 6, "yyh": 6, "vkkilyikalflctviklrrfifsvnnmkf": 6, "dlp": 6, "nqiqgvicspdsgefmvtfetvmeikilhk": 6, "gva": 6, "355": 6, "rrkehvskkrrpqkrprrrrffhrlrppd": 6, "ptr": 6, "tgkqnscqmsaiwqlrqntatktrqnrari": 6, "aik": 6, "qgsgyafphasilsgiamshfyflvlhavk": 6, "csd": [6, 247], "114": [6, 182, 221], "iystsehtgeqvmrtldeviasrspesqtr": 6, "fhv": 6, "wgklqviglsmwmvlfsqrfddwlneqeda": 6, "esk": 6, "125": [6, 8, 17, 56], "rgifmsdtmvvngsggvpaflfsgstlssi": 6, "llk": 6, "361": [6, 7], "wdvktvtgvlhhpfhltfslcpegatqsgr": 6, "vkr": 6, "lshtvtdftdqmaqvglcqcvnvfldevtg": 6, "kaa": 6, "raltglsapgirsqtscdrlrelryvpvsl": 6, "plq": 6, "119": [6, 13, 56], "candid": [6, 21, 269], "tackl": [6, 8], "parent": [6, 15, 17, 21, 104, 117, 130, 133, 135, 136, 139, 144, 155, 159, 160, 168, 177, 178, 179, 182, 184, 189, 196, 208, 212, 236, 259], "multipli": [6, 11, 12, 13, 15, 32, 107, 135, 139, 168, 174, 175, 215, 286], "find_orfs_with_tran": 6, "trans_tabl": 6, "min_protein_length": 6, "seq_len": [6, 20, 217, 220, 225, 228], "tran": [6, 13, 21, 112, 135, 139, 198, 215], "trans_len": 6, "aa_start": 6, "aa_end": 6, "orf_list": 6, "And": [6, 7, 12, 20, 23, 30, 80, 181, 250, 259], "1109": 6, "491": 6, "827": 6, "1030": 6, "1888": [6, 236], "2830": 6, "3190": 6, "3470": 6, "3857": 6, "4249": 6, "4780": [6, 21], "4814": 6, "5923": 6, "6421": 6, "5974": 6, "6298": 6, "6654": 6, "7602": 6, "7788": 6, "8124": 6, "8087": 6, "8465": 6, "8741": 6, "9044": 6, "9264": 6, "9609": [6, 21], "statement": [6, 8, 23, 277, 302, 303], "obviou": [6, 7, 15, 287], "power": [6, 7, 15, 23], "grep": 6, "book": [6, 7, 17, 83, 217], "matplotlib": [6, 15, 17, 168, 182], "pylab": [6, 17], "dataset": [6, 7, 10, 15, 126, 181, 263], "orchid": [6, 7, 19, 23, 25], "572": 6, "789": 6, "740": [6, 19, 23], "753": 6, "748": 6, "744": 6, "733": 6, "718": 6, "730": 6, "704": [6, 181], "709": 6, "700": [6, 23, 206], "726": 6, "592": [6, 19, 23], "hist": 6, "nlength": 6, "xlabel": 6, "ylabel": 6, "pop": [6, 17, 27, 200, 201, 203, 235], "graph": [6, 8, 103, 104, 117, 176, 177, 179, 184], "fig": [6, 8, 15, 17], "savefig": 6, "png": [6, 8, 11, 99, 104, 116, 282], "pdf": [6, 8, 9, 15, 56, 83, 99, 101, 103, 104, 225, 228, 235, 237, 238, 262, 277], "quantiti": 6, "investig": [6, 15, 123], "acquir": 6, "transfer": [6, 17, 21, 104, 113, 196, 269], "percentag": [6, 8, 13, 31, 80, 99, 208, 260, 264], "gc_valu": 6, "ascend": [6, 208], "ngc": 6, "1f": [6, 30, 54, 250, 263], "smoother": 6, "slide": [6, 32, 266], "sub": [6, 7, 17, 19, 21, 22, 24, 27, 30, 32, 66, 80, 94, 99, 182, 183, 186, 188, 196, 235, 236, 237, 252, 259, 269, 298, 302], "simplic": [6, 7, 15, 269], "black": [6, 8, 104, 182], "imag": [6, 7, 8, 15, 17, 19, 68, 99, 104, 105, 116, 117, 119, 168, 196], "sake": [6, 11], "record_iter": [6, 23, 250, 302], "rec_on": 6, "rec_two": 6, "naiv": [6, 7, 9, 76, 122, 127, 250], "boolean": [6, 17, 32, 67, 69, 80, 94, 104, 127, 129, 143, 148, 151, 152, 154, 162, 168, 181, 182, 196, 217, 220, 228, 235, 236, 252, 259, 269, 296, 302], "nest": [6, 8, 17, 20, 132, 181, 184, 216], "seq_on": 6, "seq_two": 6, "imshow": [6, 15, 168], "grai": [6, 17, 182], "diagon": [6, 12, 30, 32, 69, 125, 198, 269], "invers": [6, 8], "fine": [6, 8, 9, 13, 20, 277], "larger": [6, 7, 13, 20, 23, 32, 71, 168, 236, 264, 269, 277], "address": [6, 7, 20, 30, 68, 158], "brute": [6, 21], "forc": [6, 12, 15, 20, 21, 30, 32, 148, 168, 239, 269], "intersect": 6, "dict_on": 6, "dict_two": 6, "section_dict": 6, "revis": [6, 123], "cla": [6, 27, 32, 208, 210], "clear": [6, 9, 12, 15, 25, 67, 119, 168, 197, 259, 273], "prior": [6, 7, 9, 12, 21, 23, 99, 108, 109, 127, 236, 264, 269, 296], "xlim": 6, "ylim": 6, "srr001666_1": 6, "srr001666_2": 6, "srr001": 6, "srr001666": 6, "coli": [6, 13, 22, 83, 208, 259], "subplot": 6, "fifti": 6, "subfigur": 6, "srr001666_": 6, "joint": [6, 168], "obf": 6, "bioperl": [6, 7, 9, 20, 66, 236, 237, 250, 254, 260, 261, 302], "biojava": [6, 7, 9, 250], "schema": [6, 9, 11, 84, 184, 302], "theori": [6, 12, 216], "entrezf": 7, "manual": [7, 8, 11, 17, 19, 20, 23, 24, 31, 67, 68, 70, 181, 182, 208, 213, 244, 252, 263], "enter": [7, 65, 181], "programmat": [7, 25, 89], "util": [7, 10, 15, 18, 22, 27, 83, 84, 92, 106, 221, 237, 246, 264, 267, 273, 293, 303], "eutil": 7, "nbk25501": [7, 83], "respons": [7, 104, 279, 302], "occasion": [7, 20, 21, 23], "proce": [7, 15, 181, 269], "home": [7, 84, 221], "outdat": 7, "reinstal": 7, "assumpt": [7, 12, 125, 127, 237, 245], "utf": [7, 90, 235, 277], "abus": 7, "ban": [7, 65], "paraphras": 7, "outsid": [7, 32, 104, 119, 302], "peak": [7, 19, 125], "obei": 7, "api": [7, 14, 15, 17, 18, 19, 23, 68, 70, 83, 99, 119, 164, 176, 216, 236, 251, 273, 275, 302, 306], "enforc": [7, 32, 117, 196, 216], "api_kei": [7, 83], "myapikei": 7, "rfc": 7, "2606": 7, "NOT": [7, 27, 30, 32, 59, 66, 80, 94, 129, 159, 168, 178, 179, 245, 250, 259, 260], "mandatori": [7, 12, 21, 69, 181], "june": [7, 9, 25], "mail": [7, 8, 9, 17, 19, 27], "mylocalscript": 7, "session": [7, 216, 305], "cooki": 7, "conclus": [7, 250], "plan": [7, 18], "biosql": [7, 9, 236, 305, 306], "doctyp": 7, "einforesult": 7, "en": [7, 53, 66, 262, 273], "einfo_020511": 7, "dblist": [7, 83], "dbname": [7, 83, 271, 302], "nuccor": [7, 19, 83, 273], "nucgss": [7, 273], "nucest": [7, 273], "cancerchromosom": 7, "cdd": 7, "genomeprj": 7, "gensat": 7, "gd": 7, "homologen": 7, "mesh": [7, 123, 273], "ncbisearch": 7, "nlmcatalog": 7, "omia": 7, "omim": 7, "pmc": [7, 83, 123, 233], "popset": 7, "probe": [7, 20, 80, 157, 237, 263], "proteinclust": 7, "pcassai": 7, "pccompound": 7, "pcsubstanc": 7, "snp": [7, 21, 236, 259, 269, 273], "unist": [7, 274], "dict_kei": [7, 21, 23], "dbinfo": 7, "bibliograph": 7, "17989604": 7, "lastupd": 7, "2008": [7, 21, 32, 209, 252, 263], "fieldlist": 7, "fullnam": [7, 135, 162], "searchabl": 7, "uid": [7, 83], "filt": 7, "filter": [7, 10, 15, 17, 20, 21, 56, 67, 68, 69, 70, 79, 80, 168, 182, 237, 269, 276], "medic": 7, "head": [7, 8, 15, 104, 173], "majr": 7, "auth": [7, 171], "author": [7, 11, 15, 21, 25, 26, 53, 87, 93, 123, 133, 143, 173, 196, 236, 271, 273, 294, 302], "jour": 7, "affl": 7, "affili": [7, 123], "institut": [7, 52, 250, 252], "indirectli": [7, 277, 302], "centr": [7, 8, 104, 115, 117, 141, 262], "handi": [7, 15, 25, 134], "familiar": [7, 11, 12, 20, 24, 30, 298], "retmax": [7, 83], "19304878": [7, 83], "idlist": [7, 83], "22909249": 7, "pmid": [7, 34, 72, 83, 123, 153, 165, 174, 181, 279, 280, 298, 299], "matk": 7, "cypripedioidea": [7, 19], "orgn": [7, 83], "AND": [7, 25, 149, 250, 275], "idtyp": [7, 83], "acc": [7, 11, 13, 22, 23, 83, 228, 274, 286], "348": [7, 237, 243], "jq660909": 7, "jq660908": 7, "jq660907": 7, "jq660906": 7, "jq660890": 7, "taxon": [7, 11, 17, 21, 32, 80, 129, 132, 181, 182, 196, 276, 294], "txid158330": 7, "repli": 7, "deduc": 7, "plai": [7, 146, 220], "prop": [7, 134, 196], "101660833": 7, "101664671": 7, "101661657": 7, "101659814": 7, "101657941": 7, "101653734": 7, "101669877": 7, "101649614": 7, "101647835": 7, "101639023": 7, "101627224": 7, "101647801": 7, "101589678": 7, "101585369": 7, "101645372": 7, "101586429": 7, "101582229": 7, "101574747": 7, "101564639": 7, "101671907": 7, "ui": [7, 83], "sent": [7, 67], "cope": [7, 12, 22, 42, 65, 71, 221, 236, 250, 260], "id_list": 7, "18606172": 7, "16403221": 7, "16377612": 7, "14871861": 7, "14630660": [7, 83], "epostresult": 7, "epost_020511": 7, "querykei": 7, "ncid_01_206841095_130": 7, "101_9001_1242061629": 7, "search_result": 7, "query_kei": 7, "30367": 7, "titlemainlist": 7, "nid": [7, 93, 274], "ntitl": 7, "ieee": 7, "transact": [7, 302], "rettyp": [7, 23, 83], "retmod": [7, 9, 23, 83], "webpag": 7, "genpept": [7, 237], "eu490707": 7, "locu": [7, 8, 18, 21, 23, 83, 93, 94, 200, 201, 202, 203, 236, 244, 259, 277], "1302": 7, "pln": [7, 23, 83, 93, 277], "jul": [7, 21, 93, 149, 174], "2016": [7, 9, 90, 264, 276], "selenipedium": [7, 19], "aequinoctial": 7, "maturas": 7, "chloroplast": [7, 23, 271, 277], "eukaryota": [7, 23, 25], "viridiplanta": [7, 23, 25], "streptophyta": [7, 23, 25], "embryophyta": [7, 25], "tracheophyta": [7, 25], "spermatophyta": [7, 25], "magnoliopsida": 7, "liliopsida": [7, 25], "asparagal": 7, "orchidacea": [7, 19], "neubig": 7, "whitten": 7, "carlsward": 7, "blanco": 7, "endara": 7, "moor": 7, "ycf1": 7, "plastid": 7, "syst": [7, 129], "evol": 7, "submiss": [7, 93, 181], "depart": 7, "botani": 7, "florida": 7, "bartram": 7, "hall": 7, "gainesvil": 7, "fl": [7, 13], "32611": 7, "8526": 7, "organel": [7, 25, 271], "mol_typ": 7, "specimen_vouch": 7, "fla": 7, "2475": 7, "db_xref": [7, 21, 94], "256374": 7, "codon_start": [7, 21, 94, 236], "transl_tabl": [7, 21, 94, 236], "product": [7, 8, 12, 13, 15, 16, 21, 27, 73, 80, 81, 94, 99, 113, 115, 117, 158, 175, 176, 263, 276], "protein_id": [7, 21, 94], "acc99456": 7, "ifyepveifgydnksslvlvkrlitrmyqqnflissvndsnqkg": 7, "fwghkhffsshfssqmvsegfgvileipfssqlvssleekkipkyqnlrsihsifpfl": 7, "edkflhlnyvsdlliphpihleilvqilqcrikdvpslhllrllfheyhnlnslitsk": 7, "kfiyafskrkkrflwllynsyvyeceylfqflrkqssylrstssgvflerthlyvki": 7, "hllvvccnsfqrilcflkdpfmhyvryqgkailaskgtlilmkkwkfhlvnfwqsyfh": 7, "fwsqpyrihikqlsnysfsflgyfssvlenhlvvrnqmlensfiinlltkkfdtiapv": 7, "isligslskaqfctvlghpiskpiwtdfsdsdildrfcricrnlcryhsgsskkqvli": 7, "rikyilrlscartlarkhkstvrtfmrrlgsglleeffmee": 7, "attttttacg": 7, "aacctgtgga": 7, "aatttttggt": 7, "tatgacaata": 7, "aatctagttt": 7, "agtacttgtg": 7, "aaacgtttaa": 7, "ttactcgaat": 7, "gtatcaacag": 7, "aattttttga": 7, "tttcttcggt": 7, "taatgattct": 7, "aaccaaaaag": 7, "gattttgggg": 7, "gcacaagcat": 7, "tttttttctt": 7, "ctcatttttc": 7, "ttctcaaatg": 7, "gtatcagaag": 7, "gttttggagt": 7, "cattctggaa": 7, "attccattct": 7, "cgtcgcaatt": 7, "agtatcttct": 7, "241": [7, 11, 13, 287], "cttgaagaaa": 7, "aaaaaatacc": 7, "aaaatatcag": 7, "aatttacgat": 7, "ctattcattc": 7, "aatatttccc": 7, "301": [7, 68, 216], "tttttagaag": 7, "acaaattttt": 7, "acatttgaat": 7, "tatgtgtcag": 7, "atctactaat": 7, "accccatccc": 7, "atccatctgg": 7, "aaatcttggt": 7, "tcaaatcctt": 7, "caatgccgga": 7, "tcaaggatgt": 7, "tccttctttg": 7, "421": [7, 69, 217], "catttattgc": 7, "gattgctttt": 7, "ccacgaatat": 7, "cataatttga": 7, "atagtctcat": 7, "tacttcaaag": 7, "481": 7, "aaattcattt": 7, "acgccttttc": 7, "aaaaagaaag": 7, "aaaagattcc": 7, "tttggttact": 7, "atataattct": 7, "541": 7, "tatgtatatg": 7, "aatgcgaata": 7, "tctattccag": 7, "tttcttcgta": 7, "aacagtcttc": 7, "ttatttacga": 7, "601": [7, 11], "tcaacatctt": 7, "ctggagtctt": 7, "tcttgagcga": 7, "acacatttat": 7, "atgtaaaaat": 7, "agaacatctt": 7, "661": 7, "ctagtagtgt": 7, "gttgtaattc": 7, "ttttcagagg": 7, "atcctatgct": 7, "ttctcaagga": 7, "tcctttcatg": 7, "721": 7, "cattatgttc": 7, "gatatcaagg": 7, "aaaagcaatt": 7, "ctggcttcaa": 7, "agggaactct": 7, "tattctgatg": 7, "781": 7, "aagaaatgga": 7, "aatttcatct": 7, "tgtgaatttt": 7, "tggcaatctt": 7, "attttcactt": 7, "ttggtctcaa": 7, "841": 7, "ccgtatagga": 7, "ttcatataaa": 7, "gcaattatcc": 7, "aactattcct": 7, "tctcttttct": 7, "ggggtatttt": 7, "901": 7, "tcaagtgtac": 7, "tagaaaatca": 7, "tttggtagta": 7, "agaaatcaaa": 7, "tgctagagaa": 7, "ttcatttata": 7, "961": 7, "ataaatcttc": 7, "tgactaagaa": 7, "attcgatacc": 7, "atagccccag": 7, "ttatttctct": 7, "tattggatca": 7, "1021": [7, 168], "ttgtcgaaag": 7, "ctcaattttg": 7, "tactgtattg": 7, "ggtcatccta": 7, "ttagtaaacc": 7, "gatctggacc": 7, "1081": [7, 259], "gatttctcgg": 7, "attctgatat": 7, "tcttgatcga": 7, "ttttgccgga": 7, "tatgtagaaa": 7, "tctttgtcgt": 7, "1141": 7, "tatcacagcg": 7, "gatcctcaaa": 7, "aaaacaggtt": 7, "ttgtatcgta": 7, "taaaatatat": 7, "acttcgactt": 7, "1201": 7, "tcgtgtgcta": 7, "gaactttggc": 7, "acggaaacat": 7, "aaaagtacag": 7, "tacgcacttt": 7, "tatgcgaaga": 7, "1261": 7, "ttaggttcgg": 7, "gattattaga": 7, "agaattcttt": 7, "atggaagaag": 7, "awar": [7, 15, 32, 217, 220, 228, 236], "octob": 7, "discontinu": 7, "favor": [7, 274], "easter": [7, 23], "insist": [7, 9, 23], "offici": [7, 9, 23, 68, 70, 119, 196, 211, 250], "gbwithpart": 7, "attttttacgaacctgtggaaatttttggttatgacaataaatctagtttagta": 7, "repeatedli": [7, 11, 208], "isfil": [7, 12], "gbseq_definit": 7, "gbseq_sourc": 7, "dealt": [7, 15, 20, 95], "perform": [7, 9, 11, 12, 15, 20, 22, 30, 32, 34, 56, 65, 69, 73, 80, 149, 181, 202, 237, 250, 269, 277, 289, 299], "articl": [7, 15, 17, 83, 100, 123, 196, 233, 236], "publish": [7, 8, 9, 21, 123, 236, 263], "dbfrom": [7, 83], "linksetdb": [7, 83], "dbto": 7, "linknam": [7, 83], "pubmed_pubm": [7, 83], "284": [7, 68, 221, 263], "pubmed_pubmed_alsoview": 7, "pubmed_pubmed_citedin": 7, "926": 7, "pubmed_pubmed_combin": 7, "pubmed_pubmed_f": 7, "pubmed_pubmed_ref": 7, "pubmed_pubmed_review": 7, "pubmed_pubmed_reviews_f": 7, "18689808": 7, "17121776": 7, "12368254": 7, "cite": [7, 9, 263], "cross": [7, 12, 15, 21, 90, 93, 104, 119, 175, 247, 251, 259, 271, 301], "referenc": [7, 15, 21, 168, 196, 213], "egqueryresult": [7, 83], "biopythooon": [7, 83], "correctedqueri": [7, 83], "reflect": [7, 8, 15, 21, 168, 216, 237], "infinit": 7, "septemb": 7, "homo_sapien": 7, "116576": 7, "kb": 7, "gene2xml": 7, "memoryerror": 7, "safer": [7, 83], "entrezgene_track": 7, "track_statu": 7, "track_geneid": 7, "entrezgene_gen": 7, "ref_locu": 7, "a1bg": 7, "a2m": [7, 27, 30, 32], "a2mp": 7, "nat1": 7, "nat2": 7, "aacp": 7, "serpina3": 7, "aadac": 7, "aamp": 7, "aanat": 7, "aar": 7, "aavs1": 7, "subscript": [7, 12], "superscript": 7, "ital": 7, "mathemat": [7, 13], "mathml": 7, "markup": 7, "fragment": [7, 8, 20, 22, 27, 32, 83, 88, 104, 133, 140, 168, 213, 214, 216, 220, 221, 228, 237, 242, 249, 267, 269, 277], "lt": [7, 13, 83], "impract": 7, "disallow": [7, 13, 108, 269], "notxmlerror": [7, 27, 68, 83, 84], "syntax": [7, 9, 15, 16, 30, 169, 181, 184, 197, 236, 275, 298], "didn": [7, 12], "decid": [7, 17, 20, 22, 23, 32, 67, 69, 80, 84, 181, 269, 284], "corruptedxmlerror": [7, 27, 68, 83, 84], "menunam": 7, "20161961": 7, "09": [7, 11, 215, 276], "docsumlist": 7, "docsum": 7, "dsname": 7, "pubdat": 7, "dstype": 7, "dstypenam": 7, "epubd": 7, "validationerror": [7, 27, 83, 84], "einfo3": 7, "nonexist": 7, "runtimeerror": [7, 83], "99999999": 7, "incorrect": [7, 27, 108, 269], "circumv": [7, 152], "ignore_error": [7, 83, 84], "errorel": [7, 27, 83, 84], "31278684": 7, "pubmed_result1": [7, 123], "12230038": 7, "da": [7, 13, 123, 154, 168], "20020916": 7, "dcom": [7, 123], "20030606": 7, "lr": [7, 120, 123, 181], "20041117": 7, "1467": 7, "5463": 7, "vi": [7, 123, 181], "ip": [7, 123, 262], "dp": [7, 32, 123], "sep": [7, 15, 149, 152, 168, 235], "ti": [7, 20, 123], "brief": [7, 9, 15, 32, 79, 80, 123], "296": 7, "302": [7, 32], "commerci": [7, 11], "quirk": [7, 23], "counterpart": [7, 20, 216], "programm": [7, 19, 20], "obscur": 7, "pubmed_result2": [7, 123], "astral": [7, 15, 27, 123, 208, 213], "pj": [7, 53], "jt": [7, 123], "ba": [7, 11, 294], "cj": 7, "mj": 7, "munteanu": 7, "cr": [7, 277], "gonzalez": 7, "diaz": 7, "magalha": 7, "casbon": [7, 71], "crook": 7, "ge": [7, 13], "saqi": 7, "pr": [7, 25, 86, 88], "ik": 7, "mangalam": 7, "pubmedarticl": 7, "medlinecit": [7, 83], "articletitl": 7, "enzym": [7, 9, 10, 27, 72, 85, 111, 112, 118, 205, 206, 271, 273], "classif": [7, 9, 11, 53, 93, 113, 120, 127, 140, 208, 209, 210, 271, 281, 294], "composit": [7, 32, 69, 99, 262, 266, 282], "topolog": [7, 181, 271], "omnibu": [7, 96], "repositori": [7, 24, 25, 27, 226], "throughput": [7, 10, 16, 23, 32], "hybrid": [7, 20, 263, 274], "gse16": 7, "200000016": 7, "100000028": 7, "gds16": 7, "platform": [7, 12, 16, 252, 269], "gpl28": 7, "nor": [7, 12, 15, 20, 84, 129, 181, 277], "pub": [7, 15, 23, 153, 276], "by_seri": 7, "gse16_famili": 7, "transcriptom": 7, "acetyltransferas": 7, "arylamin": 7, "cytoband": [7, 274], "8p22": 7, "gene_id": [7, 10, 274], "locuslink": [7, 274], "homol": [7, 274], "bone": 7, "tissu": [7, 274], "intestin": 7, "liver": 7, "tumor": 7, "muscl": [7, 32, 48, 63, 196], "adult": 7, "restr_expr": [7, 274], "pmc310725p3": 7, "272646": 7, "wiaf": 7, "2120": 7, "44576": 7, "g59899": 7, "137181": 7, "gdb": 7, "187676": 7, "155563": 7, "protsim": [7, 274], "10090": [7, 11], "protgi": [7, 274], "6754794": 7, "protid": [7, 274], "np_035004": 7, "pct": [7, 274], "288": 7, "9796": 7, "149742490": 7, "xp_001487907": 7, "9986": 7, "126722851": 7, "np_001075655": 7, "9598": 7, "114619004": 7, "xp_519631": 7, "scount": [7, 274], "bc067218": 7, "g45501306": 7, "pid": [7, 93, 274], "g45501307": 7, "nm_000015": 7, "g116295259": 7, "g116295260": 7, "d90042": 7, "g219415": 7, "g219416": 7, "d90040": 7, "g219411": 7, "g219412": 7, "bc015878": 7, "g16198419": 7, "g16198420": 7, "cr407631": 7, "g47115198": 7, "g47115199": 7, "bg569293": 7, "g13576946": 7, "clone": [7, 21, 25, 93, 103, 205, 237, 274], "4722596": 7, "lid": [7, 123, 274], "6989": 7, "trace": [7, 17, 55, 128, 130, 168, 180, 182, 237, 250, 252, 274], "44157214": 7, "au099534": 7, "g13550663": 7, "hsi08034": 7, "8800": 7, "signific": [7, 20, 74, 165], "myunigenefil": 7, "unigenerecord": 7, "environ": [7, 12, 15, 67, 83, 149, 157, 168], "http_proxi": [7, 149], "configur": [7, 24, 83, 99, 168, 192, 194, 195], "authent": 7, "proxyhost": 7, "8080": 7, "goodi": 7, "grab": [7, 25], "motiv": [7, 19, 23], "463": 7, "18680603": 7, "18665331": 7, "18661158": 7, "18627489": 7, "18627452": 7, "18612381": 7, "18594007": 7, "18591784": 7, "18589523": 7, "18579475": 7, "18575811": 7, "18575690": 7, "obvious": [7, 13, 15, 30, 168], "flat": [7, 10, 11, 13, 23, 94, 237, 254, 274], "sex": [7, 90], "pheromon": 7, "mimicri": 7, "earli": [7, 15, 27, 69, 250, 252], "spider": 7, "ophri": 7, "sphegod": 7, "hydrocarbon": 7, "mechan": [7, 19, 22, 67, 95, 158, 168], "pollin": 7, "sexual": 7, "decept": 7, "schiestl": 7, "fp": [7, 91, 123], "ayass": 7, "paulu": 7, "hf": 7, "lofstedt": 7, "hansson": 7, "ibarra": 7, "franck": 7, "comp": 7, "physiol": 7, "jun": [7, 23, 174], "186": [7, 15], "bunch": [7, 23, 103, 123, 181], "search_author": 7, "wait": [7, 12, 67], "gave": [7, 8, 12, 19, 71], "talk": [7, 12, 21, 22, 23, 273], "friend": [7, 19], "ladi": [7, 19], "slipper": [7, 19], "4457": 7, "814": 7, "ridicul": 7, "reconsid": 7, "auxiliari": 7, "translationset": 7, "retstart": 7, "querytransl": [7, 83], "kx265015": 7, "kx265014": 7, "kx265013": 7, "kx265012": 7, "kx265011": 7, "gbseq_moltyp": 7, "gbseq_sequ": 7, "gbseq_primari": 7, "gbseq_access": 7, "gbseq_topologi": 7, "gbseq_length": 7, "gbseq_featur": 7, "gbseq_creat": 7, "gbseq_oth": 7, "gbseq_divis": 7, "gbseq_taxonomi": 7, "gbseq_refer": 7, "gbseq_upd": 7, "gbseq_organ": 7, "gbseq_locu": 7, "gbseq_stranded": 7, "dq110336": 7, "187237168": 7, "cypripedium": [7, 19, 23], "calceolu": 7, "voucher": 7, "davi": 7, "matr": 7, "mitochondri": [7, 22], "heavi": 7, "touch": [7, 8, 32], "favorit": [7, 11, 12, 17, 19, 20, 23, 264], "prickli": [7, 12, 23], "pear": [7, 12, 23], "cacti": 7, "rpl16": [7, 23], "gi_list": 7, "57240072": 7, "57240071": 7, "gi_str": 7, "ay851612": [7, 83], "892": [7, 83], "apr": [7, 83, 149, 277], "2007": [7, 25, 32, 83, 87], "subulata": 7, "austrocylindropuntia": 7, "magnoliophyta": [7, 25], "eudicotyledon": 7, "caryophyllal": 7, "cactacea": 7, "opuntioidea": 7, "butterworth": 7, "wallac": [7, 32, 263], "friendli": 7, "ay851611": 7, "881": 7, "895": 7, "902": [7, 23, 69], "899": [7, 23], "893": [7, 263], "894": 7, "896": 7, "disk": [7, 12, 23, 25, 30, 56, 83, 216, 237, 277, 297], "158330": 7, "divis": [7, 12, 24, 93, 104, 196, 260], "parenttaxid": 7, "lineageex": 7, "created": 7, "geneticcod": 7, "scientificnam": 7, "mitogeneticcod": 7, "updated": 7, "cellular": 7, "streptophytina": 7, "euphyllophyta": 7, "refin": [7, 30, 32, 181, 275], "approv": 7, "anticip": 7, "usehistori": 7, "acc_list": 7, "session_cooki": 7, "batch": [7, 12, 25, 59, 181, 201, 202, 273, 275], "transient": [7, 83, 268], "failur": [7, 24, 83, 92, 235, 236], "500": [7, 21, 68, 69, 70, 263, 269, 275], "coupl": [7, 11, 15, 17, 23, 168, 181], "batch_siz": [7, 25, 275], "orchid_rpl16": 7, "unless": [7, 15, 21, 23, 30, 45, 60, 99, 149, 152, 153, 182, 196, 237, 245, 259, 269, 277, 287, 298], "reldat": 7, "365": 7, "datetyp": 7, "pdat": 7, "recent_orchid_pap": 7, "vari": [7, 11, 16, 21, 152, 167, 237], "pubmed_pmc_ref": 7, "pmc_id": 7, "2744707": 7, "2705363": 7, "2682512": 7, "1190160": 7, "pmcid": 7, "results2": 7, "pmc_pubm": 7, "pubmed_id": [7, 21, 93, 236], "19698094": 7, "19450287": 7, "15985178": 7, "spot": [7, 277], "todo": 7, "forget": [7, 15, 250], "parti": [8, 17, 252], "reportlab": [8, 24, 98, 99, 100, 102, 103, 104, 105], "focus": [8, 12, 15, 16, 19, 262], "encapsul": [8, 15, 21, 107, 122], "postscript": [8, 99], "ep": [8, 30, 32], "svg": [8, 99, 104], "pil": 8, "bitmap": [8, 104], "jpeg": 8, "gif": [8, 104], "bmp": [8, 104], "pict": 8, "userguid": [8, 228], "broken": 8, "circular": [8, 21, 93, 104, 236, 249, 260, 277], "mitochondria": 8, "circl": [8, 99, 117], "stack": [8, 104], "radial": 8, "regulatori": [8, 295], "bundl": [8, 149, 250], "lib": [8, 24, 84, 99, 102, 274], "cm": 8, "gd_diagram": 8, "gd_track_for_featur": 8, "new_track": [8, 98, 104], "gd_feature_set": 8, "new_set": [8, 98, 104], "fun": [8, 19], "blue": [8, 9, 15, 17, 99, 104, 168, 180, 182, 197], "dark": 8, "lightblu": 8, "add_featur": [8, 98, 104], "shape": [8, 12, 27, 29, 30, 53, 54, 68, 100, 117, 174, 181], "render": [8, 15, 158, 182], "orient": [8, 9, 22, 80, 104, 168, 294], "landscap": [8, 104], "pages": [8, 104], "a4": [8, 168], "plasmid_linear": 8, "control": [8, 12, 13, 17, 19, 30, 32, 67, 69, 80, 99, 100, 152, 168, 181, 192, 194, 195, 199, 200, 202, 206, 237, 260, 264, 269, 271, 277, 297, 298], "circle_cor": [8, 104], "plasmid_circular": 8, "featureset": [8, 98, 104], "glue": [8, 213], "add_set": [8, 98, 104], "add_track": [8, 98, 104], "simpleloc": [8, 27, 68, 236, 259, 271], "my_seq_featur": 8, "gdd": [8, 104], "gdt_featur": 8, "greytrack": [8, 104], "gds_featur": 8, "250": [8, 181, 182, 269], "strandless": 8, "275": [8, 129], "375": 8, "gd_labels_default": 8, "pale": 8, "locus_tag": [8, 21, 94, 99], "font": [8, 104], "rotat": [8, 15, 104, 135, 139, 152, 158, 163, 165, 168, 174, 175, 215], "degre": [8, 15, 32, 100, 104, 168], "parallel": [8, 25, 168, 181], "label_s": [8, 99, 104], "label_angl": [8, 104], "perpendicular": [8, 175], "toward": [8, 12, 236, 260, 269], "purpl": [8, 182], "label_posit": [8, 104], "awai": [8, 68, 80], "rest": [8, 10, 17, 20, 23, 27, 63, 94, 111, 128, 129, 273, 277], "label_color": [8, 104], "box": [8, 104], "publicli": [8, 252], "explicit": [8, 9, 12, 17, 21, 24, 61, 158, 236, 237, 259, 260, 277], "opt": [8, 32, 225], "corner": 8, "octagon": 8, "octo": 8, "jag": 8, "edg": [8, 69, 168, 176, 177, 178, 179, 182, 264], "jaggi": 8, "bigarrow": 8, "bound": [8, 13, 21, 104, 115, 117, 156, 196, 197, 273], "straddl": 8, "height": [8, 16, 104, 115, 117], "shaft": [8, 104], "proport": [8, 104, 181], "arrowshaft_height": [8, 104], "thin": 8, "teal": [8, 182], "darkgreen": 8, "arrowhead_length": [8, 104], "orang": [8, 182], "overlai": 8, "ecori": [8, 206], "recognit": 8, "gaattc": [8, 259], "cccggg": 8, "smai": 8, "aagctt": 8, "hindiii": 8, "ggatcc": 8, "bamhi": [8, 206], "plasmid_linear_nic": 8, "plasmid_circular_nic": 8, "inspir": [8, 100, 200, 260], "nc_002703": 8, "lactococcu": 8, "tuc2009": 8, "38347": 8, "af323668": 8, "bacteriophag": 8, "bil285": 8, "35538": 8, "nc_003212": 8, "listeria": 8, "innocua": 8, "clip11262": 8, "focuss": 8, "integr": [8, 9, 15, 19, 20, 68, 104, 216, 263, 273], "prophag": 8, "efetch": [8, 9, 23, 27, 83, 273], "a_rec": 8, "b_rec": 8, "c_rec": 8, "2587879": 8, "2625807": 8, "artemi": [8, 99, 104], "editor": [8, 12, 17, 19, 23], "understand": [8, 10, 12, 19, 21, 168], "unannot": 8, "grei": [8, 104, 182], "a_color": 8, "b_color": 8, "c_color": 8, "max_len": 8, "gene_color": 8, "manuscript": [8, 123], "computation": 8, "a_vs_b": 8, "tuc2009_01": 8, "tuc2009_03": 8, "orf4": 8, "tuc2009_05": 8, "orf6": 8, "tuc2009_06": 8, "orf7": 8, "tuc2009_07": 8, "orf8": 8, "tuc2009_08": 8, "orf9": 8, "tuc2009_09": 8, "orf10": 8, "tuc2009_10": 8, "orf12": 8, "tuc2009_11": 8, "orf13": 8, "tuc2009_12": 8, "orf14": 8, "tuc2009_13": 8, "orf15": 8, "tuc2009_14": 8, "orf16": 8, "tuc2009_15": 8, "orf17": 8, "tuc2009_17": 8, "rusa": 8, "tuc2009_18": 8, "orf20": 8, "tuc2009_19": 8, "orf22": 8, "tuc2009_20": 8, "orf23": 8, "tuc2009_22": 8, "orf27": 8, "tuc2009_23": 8, "orf28": 8, "tuc2009_24": 8, "orf29": 8, "tuc2009_26": 8, "orf38": 8, "tuc2009_46": 8, "orf52": 8, "tuc2009_48": 8, "orf54": 8, "tuc2009_49": 8, "orf55": 8, "tuc2009_52": 8, "orf60": 8, "likewis": [8, 21, 23, 66], "b_vs_c": 8, "orf39": 8, "lin2581": 8, "orf40": 8, "lin2580": 8, "orf41": 8, "lin2579": 8, "terl": 8, "orf42": 8, "lin2578": 8, "portal": 8, "orf43": 8, "lin2577": 8, "proteas": 8, "orf44": 8, "lin2576": 8, "mhp": 8, "orf46": 8, "lin2575": 8, "orf47": 8, "lin2574": 8, "orf48": 8, "lin2573": 8, "orf49": 8, "lin2572": 8, "orf50": 8, "lin2571": 8, "orf51": 8, "lin2570": 8, "lin2568": 8, "orf53": 8, "lin2567": 8, "lin2566": 8, "helper": [8, 12, 23, 92, 100, 237, 250, 297, 302, 303], "lookup": [8, 15, 69, 76, 107, 139, 146, 168, 208, 300, 302], "get_featur": [8, 98, 104], "snippet": [8, 18, 19, 20, 22, 23, 24], "finish": [8, 12, 17, 19, 22, 67, 130, 168, 182, 197, 251], "proux_et_al_2002_figure_6": 8, "crosslink": [8, 98, 104], "clearer": [8, 237], "rec_x": 8, "tn_x": 8, "rec_i": 8, "tn_y": 8, "x_vs_y": 8, "track_x": 8, "track_i": 8, "id_x": 8, "id_i": 8, "feature_x": 8, "feature_i": 8, "linearlyinterpolatedcolor": 8, "firebrick": 8, "link_xi": 8, "lightgrei": 8, "cross_track_link": [8, 104], "border": [8, 104], "interpol": [8, 15, 22, 168, 298], "overlap": [8, 15, 22, 32, 36, 61, 79, 80, 152, 158, 166, 168, 181, 235, 259], "transpar": 8, "channel": [8, 105], "shade": 8, "manor": 8, "background": [8, 11, 13, 27, 104, 117, 282, 286, 289, 293], "alloc": [8, 99, 175], "furthermor": [8, 20, 236, 277], "demonstr": [8, 10, 15, 23, 168, 250], "beyond": [8, 11, 20, 21, 30, 216], "tune": [8, 15, 269], "superimpos": [8, 27, 133, 165, 168, 174, 215], "tick": [8, 104], "graphset": [8, 98, 104], "chart": [8, 103], "heat": [8, 104], "spell": [8, 83, 104], "colour": [8, 99, 100, 104], "american": 8, "gdfeatureset": 8, "gddiagram": 8, "difficulti": [8, 20, 24], "advic": 8, "catch": [8, 23, 25, 32, 277], "gdutil": 8, "basicchromosom": [8, 27, 98], "old_refseq": 8, "arabidopsis_thaliana": 8, "chr": [8, 250], "chr_i": 8, "nc_003070": 8, "chr_ii": 8, "nc_003071": 8, "iii": [8, 210, 250], "chr_iii": 8, "nc_003074": 8, "iv": 8, "chr_iv": 8, "nc_003075": 8, "chr_v": 8, "nc_003076": 8, "30432563": 8, "19705359": 8, "23470805": 8, "18585042": 8, "26992728": 8, "dict": [8, 13, 54, 76, 84, 86, 90, 123, 126, 127, 136, 139, 142, 144, 155, 157, 160, 164, 167, 168, 176, 182, 196, 208, 209, 213, 216, 235, 237, 259, 260, 264, 272, 278, 289, 294, 301], "telomere_length": 8, "1000000": 8, "chr_diagram": 8, "page_s": 8, "cur_chromosom": 8, "telomer": [8, 99], "scale_num": [8, 99], "telomereseg": [8, 27, 98, 99, 102], "bodi": 8, "chromosomeseg": [8, 27, 98, 99, 102], "invert": [8, 99, 104, 128, 129], "simple_chrom": 8, "sweet": [8, 264], "cyan": [8, 182], "annotatedchromosomeseg": [8, 27, 98, 99], "trna_chrom": 8, "scientif": [9, 23, 196, 251], "learn": [9, 19, 120, 281], "fortran": 9, "incept": 9, "maintain": [9, 12, 100, 216, 237], "worldwid": [9, 15], "expasi": [9, 19, 23, 24, 26, 27, 264, 271, 306], "utiliz": 9, "pubm": [9, 11, 19, 83, 123, 181, 236, 273, 287, 294], "medlin": [9, 11, 27, 93, 200, 236, 286, 287], "prosit": [9, 27, 85, 86, 87, 89], "dom": [9, 27, 208, 228, 251], "lin": 9, "unigen": [9, 27], "destin": [9, 68, 83, 108, 164], "nearest": [9, 15, 168, 181, 198, 222, 223, 224, 250, 252, 263, 281], "bay": [9, 122, 127], "paralleliz": 9, "hope": [9, 21, 23, 108, 168], "plenti": 9, "pip": 9, "readm": [9, 149, 276], "announc": [9, 69], "paml": [9, 27, 180], "biorubi": [9, 250], "capit": [9, 11, 20, 197, 201, 202], "agreement": 9, "dual": [9, 235], "bsd": 9, "claus": 9, "intent": 9, "logo": 9, "juli": [9, 87, 90, 209, 210, 212], "70": [9, 12, 53, 129, 182, 206, 208, 236, 263, 269, 277], "yellow": [9, 122, 182], "snake": 9, "helix": [9, 11, 15, 32, 53, 137, 235, 259, 264, 271], "kunzmann": 9, "henrik": 9, "vestergaard": 9, "competit": 9, "rst": 9, "latest": [9, 11, 19, 27, 209, 210, 212, 287], "__version__": 9, "underscor": [9, 213], "snapshot": 9, "68": [9, 11, 13, 113, 215, 239, 263], "dev0": 9, "wrap": [9, 15, 17, 22, 23, 30, 32, 53, 66, 104, 129, 236, 237, 240, 249, 250, 302], "tweak": [9, 83], "ongo": 9, "struggl": 9, "aren": [9, 17, 21, 102, 149, 250], "upgrad": 9, "februari": [9, 20, 87], "stricter": [9, 237], "anymor": [9, 250, 257], "penalti": [9, 13, 14, 32, 68, 69, 71, 80, 181, 198, 237, 269, 296], "53": [9, 11, 13, 15, 32, 104, 262, 263, 277], "discourag": [9, 24, 71, 92, 250, 277], "couldn": 9, "__init__": [9, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 42, 45, 47, 49, 51, 52, 56, 60, 61, 62, 67, 68, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 264, 267, 268, 269, 270, 271, 272, 274, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304], "repetit": [9, 19, 53, 73, 88, 202, 250, 271], "jp": [10, 32, 105, 111, 115, 116, 117, 119, 244, 273], "ecosystem": 10, "technologi": [10, 16, 158, 269], "compound": [10, 15, 21, 27, 111, 115, 116, 117, 119, 173, 236, 273], "ec": [10, 23, 25, 86, 112, 113, 117, 118, 123, 196], "ec_5": 10, "classnam": [10, 113], "intramolecular": 10, "transferas": [10, 23], "phosphotransferas": 10, "phosphomutas": 10, "endpoint": [10, 68, 70], "keggapi": [10, 119], "invalid": [10, 25, 56, 65, 67, 80, 129, 168, 235, 236, 237, 250], "404": 10, "kegg_get": [10, 27, 111, 119], "pathwai": [10, 27, 105, 111, 112, 113, 115, 116, 117, 118, 119, 233, 273], "repair": 10, "lastli": 10, "human_pathwai": 10, "kegg_list": [10, 27, 111, 119], "hsa": [10, 119], "repair_pathwai": 10, "repair_gen": 10, "pathway_fil": 10, "current_sect": 10, "gene_identifi": 10, "gene_descript": 10, "gene_symbol": 10, "slash": [10, 259], "10458": 10, "z5100": 10, "300": [10, 181, 206, 236, 260], "310": [10, 252], "mol_weight": [10, 119], "kegg_find": [10, 27, 111, 119], "aaseq": [10, 119], "involv": [11, 19, 21, 24, 25, 168, 176, 181, 271], "notion": [11, 108], "unclear": [11, 21], "alignac": [11, 27, 282], "tamo": 11, "finder": 11, "tacaa": 11, "tacgc": 11, "tacac": 11, "taccc": 11, "aaccc": 11, "aatgc": 11, "acgt": [11, 12, 13, 21, 22, 24, 30, 68, 235, 259, 263, 282, 286, 294, 296], "largest": [11, 13, 69, 73, 149], "anticonsensu": [11, 27, 282, 289], "ccatg": 11, "ambigu": [11, 13, 22, 30, 31, 76, 235, 250, 259, 260, 263, 269], "degener": [11, 252, 282, 289], "degenerate_consensu": [11, 27, 282, 289], "wacvc": 11, "iupac": [11, 22, 77, 80, 171, 213, 260, 264], "calculate_consensu": [11, 12, 282, 289], "con": [11, 53, 123, 289], "substitution_matrix": [11, 12, 13, 30, 289], "frequenc": [11, 12, 13, 27, 30, 31, 32, 34, 80, 132, 180, 181, 201, 202, 264, 274, 280, 282, 285, 289, 292], "_matric": 11, "ednaful": [11, 289], "setcas": [11, 289], "tacnc": 11, "gcgta": 11, "gbgtw": 11, "ttgta": 11, "gtgta": 11, "gggta": 11, "gggtt": [11, 30], "gcatt": 11, "m_sub": 11, "cv": 11, "kullback": 11, "leibler": 11, "distanc": [11, 17, 32, 73, 80, 100, 128, 132, 135, 154, 156, 168, 180, 181, 182, 196, 198, 201, 202, 236, 269, 281], "h_j": 11, "h_": [11, 15], "p_": [11, 12], "ij": [11, 12], "b_": 11, "th": [11, 12, 104, 296], "c_": 11, "k_i": 11, "pseudocount": [11, 13, 27, 68, 69, 108, 181, 282, 286, 289], "b_i": 11, "relative_entropi": [11, 27, 282], "01477186": 11, "13687943": 11, "44334329": 11, "40832722": 11, "highest": [11, 13, 15, 104, 135, 235, 274], "lowest": [11, 104, 235, 250], "003321": 11, "weblogo": [11, 27, 282], "mymotif": 11, "bore": 11, "meta": [11, 12, 46, 53, 66, 252, 268, 269], "matrix_id": [11, 286, 287], "ma0004": 11, "tf": [11, 287], "arnt": 11, "tf_class": [11, 286, 287], "zipper": 11, "tf_famili": [11, 286, 287], "tax_group": [11, 286, 287], "taxonom": [11, 69, 88, 93, 196, 287, 294, 302], "supergroup": [11, 287], "p53762": 11, "data_typ": [11, 286, 287], "selex": [11, 32, 287], "7592839": 11, "pazar_id": [11, 286, 287], "extern": [11, 12, 15, 24, 27, 83, 84, 182, 196, 197, 294], "pazar": [11, 287], "tf0000003": 11, "facil": [11, 15], "sql": [11, 208, 302, 303], "facilit": [11, 15, 176, 259, 277], "cacgtgatgtcctc": 11, "cacgtgggaggtac": 11, "cacgtgccgcgcgc": 11, "aacgtgacagccctcc": 11, "aacgtgcacatcgtcc": 11, "aggaatcgcgtgc": 11, "cacgtg": 11, "aacgtg": 11, "cgcgtg": 11, "srf": [11, 282], "gcccatatatgg": [11, 282], "runx1": 11, "mef2a": 11, "ma0002": 11, "ma0052": 11, "jaspar_motif": 11, "scope": [11, 16, 216], "jaspar5": [11, 282, 286, 287], "jaspar_db_host": [11, 287], "yourhostnam": 11, "jaspar_db_nam": [11, 287], "yourdatabas": 11, "jaspar_db_us": [11, 287], "yourusernam": 11, "jaspar_db_pass": [11, 287], "yourpassword": 11, "jdb": [11, 287], "password": [11, 68, 70, 287, 302], "fetch_motif_by_id": [11, 286, 287], "decim": [11, 119, 196, 250, 269], "fulli": [11, 21, 22, 23, 36, 73, 168, 259, 269, 277, 287, 304], "fetch_motifs_by_nam": [11, 286, 287], "fetch_motif": [11, 286, 287], "criteria": [11, 20, 287], "min_ic": [11, 287], "insect": [11, 287], "wing": 11, "forkhead": 11, "bg": 11, "formula": [11, 12, 109, 112, 119, 220, 250, 263], "_pseudcount": 11, "calculate_pseudocount": [11, 282, 286], "unequ": [11, 296], "somewhat": [11, 119, 273], "ic": [11, 31, 167, 168, 272, 293], "positionspecificscoringmatrix": [11, 27, 282, 289], "absolut": [11, 13, 15, 32, 73, 80, 100, 132, 192, 194], "abs_scor": 11, "rel_scor": 11, "test_seq": 11, "taagcgtgcacgcgcaacacgtgcatta": 11, "max_scor": [11, 278], "min_scor": 11, "abs_score_threshold": 11, "po": [11, 18, 31, 88, 129, 139, 200, 203, 222, 223, 224], "3f": 11, "801": 11, "831": 11, "870": 11, "351": 11, "discoveri": 11, "08": [11, 149, 290], "down": [11, 15, 17, 20, 22, 23, 24, 71, 139, 157, 249, 269, 295], "train": [11, 27, 30, 32, 106, 107, 109, 120, 121, 122, 127, 281], "recapitul": 11, "datafil": [11, 23, 79, 80, 168], "ino_up800": [11, 290], "cho1": [11, 290], "800": [11, 15], "cho2": [11, 290], "fas1": [11, 290], "fas2": [11, 290], "acc1": [11, 290], "ino1": [11, 290], "opi3": [11, 290], "wish": [11, 21, 27, 45, 60, 61, 158, 181, 245, 247, 259], "mod": [11, 149, 217], "oop": [11, 288, 290], "revcomp": 11, "nmotif": 11, "bfile": 11, "freq": [11, 80], "width": [11, 17, 65, 79, 80, 115, 117, 129, 180, 182, 196, 197, 206, 228, 269, 277], "llr": 11, "simplifi": [11, 17, 45, 60, 69, 158, 245], "11691a": 11, "classic": [11, 15, 30, 69, 152, 168, 282, 290], "oc": [11, 53, 66, 168, 294], "meme10": 11, "objfun": 11, "minw": 11, "nostatu": 11, "sequence_3": [11, 290], "sequence_4": [11, 290], "sequence_5": [11, 290], "sequence_6": [11, 290], "gcggcatgtgaaa": 11, "gskgcatgtgaaa": [11, 290], "num_occurr": 11, "1g": 11, "motif_1": 11, "motif_nam": [11, 290], "sequence_nam": [11, 290], "sequence_id": [11, 89, 290], "620": 11, "pvalu": [11, 13, 290], "3g": 11, "21e": [11, 290], "curat": [11, 25], "motif1": 11, "p0": 11, "dat": [11, 13, 23, 25, 86, 88, 271], "vv": [11, 294], "januari": [11, 88], "2013": [11, 32, 137, 287], "motif2": 11, "discrep": [11, 168, 213], "strict": [11, 12, 15, 132, 135, 139, 155, 185, 240, 260, 263, 282, 294], "compliant": 11, "sracaggtgkyg": 11, "elabor": [11, 17, 20], "bf": [11, 294], "co": [11, 94, 268, 294], "copyright": [11, 123, 294], "dt": [11, 90, 294], "hc": [11, 294], "subfamili": [11, 19, 196, 294], "hp": [11, 294], "superfamili": [11, 15, 196, 208, 210, 294], "na": [11, 80, 263, 294], "ov": [11, 228, 294], "pv": [11, 13, 294], "rx": [11, 90, 294], "nativ": [11, 12, 20, 140, 217, 237, 252, 253, 269], "export": [11, 149, 158, 168], "mytransfacfil": 11, "regardless": [11, 25, 216, 225, 235, 236, 255], "two_motif": 11, "bewar": [11, 21, 277], "overfit": 11, "pwm": [11, 27, 282, 287, 289], "83": [11, 12, 32, 250, 252], "ccgtg": 11, "wacnc": 11, "rpwm": 11, "pseudo": [11, 12, 69, 80, 108, 121, 141, 180, 181, 216], "odd": [11, 12, 13, 287, 289, 293], "log_odd": [11, 282, 289], "92": [11, 32], "2f": [11, 12, 13, 16, 182, 189, 215, 250, 260, 262, 263, 264], "std": [11, 131, 152, 168, 217, 282, 289], "diverg": [11, 32], "artifici": [11, 250], "tacactgcattacaacccaagcatta": 11, "simplest": [11, 17], "complementari": [11, 80, 263], "rise": 11, "622": 11, "037": 11, "738": 11, "arbitrarili": [11, 13, 158, 168], "log_2": [11, 293], "62230396": 11, "6796999": 11, "43177247": 11, "93827754": 11, "84962511": 11, "04066086": 11, "84962463": 11, "65614533": 11, "03370807": 11, "91102552": 11, "03734159": 11, "14918518": 11, "6016975": 11, "7381525": 11, "50977498": 11, "56422281": 11, "73414803": 11, "09919716": 11, "39429784": 11, "float32": 11, "fastest": [11, 56, 92, 180, 181, 237, 269], "rpssm": 11, "43458748": 11, "06172252": 11, "18665981": 11, "76216221": 11, "26466274": 11, "60124254": 11, "2480607": 11, "26503372": 11, "49598789": 11, "64668512": 11, "82356262": 11, "15613794": 11, "arbitrari": [11, 12, 13, 16, 17, 104, 130, 176, 179, 182, 196, 197, 252], "explor": [11, 15, 17, 181], "grow": [11, 20], "exponenti": [11, 16], "precis": [11, 13, 80, 157, 181, 215, 289, 293], "manag": [11, 91, 107, 129, 130, 131, 132, 168, 196], "threshold_fpr": [11, 282, 293], "threshold_fnr": [11, 282, 293], "510": 11, "fnr": [11, 293], "fpr": [11, 293], "simeq": 11, "threshold_balanc": [11, 282, 293], "roughli": [11, 15, 16, 157], "patser": [11, 293], "hertz": [11, 293], "threshold_pats": [11, 282, 293], "balanc": [11, 21], "tfbss": 11, "inf": [11, 122, 201, 269], "infin": [11, 250], "703928": 11, "290900": 11, "854375": 11, "boundari": [11, 21, 35, 46, 51, 61, 236], "reb1": 11, "m_reb1": 11, "gttacccgg": 11, "pssm_reb1": 11, "67": [11, 14, 21, 29, 263], "correl": [11, 73, 181, 262, 289], "resembl": [11, 16], "coeffici": [11, 176, 264, 269], "pcc": 11, "dist_pearson": [11, 282, 289], "239": [11, 20, 216], "bbtacgcbb": 11, "761": 11, "xxmotif": 11, "welcom": [11, 20, 32, 176], "psp_test": [11, 282], "zoop": [11, 282], "motifsm": 11, "0xc356b0": 11, "besid": [11, 216], "explanatori": 11, "gcttatgtaa": [11, 282], "iyfl005w": 11, "sequence_15": 11, "480": [11, 21, 174], "97e": 11, "wikipedia": [11, 53, 66, 262], "Such": [12, 13, 15, 22, 27, 237], "resampl": [12, 80, 181], "phylip": [12, 17, 23, 27, 30, 32, 56, 60, 65, 80, 129, 132, 181, 189, 198, 237], "seqboot": [12, 56, 80, 181], "bill": [12, 56, 59, 216, 225], "seq_count": [12, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "rich": [12, 168, 259], "stockholm": [12, 21, 27, 30, 56, 66, 237], "coatb_bpik": 12, "p03620": 12, "1ifl": 12, "q9t0q8_bpike": 12, "q9t0q8": 12, "coatb_bpi22": 12, "p15416": 12, "coatb_bpm13": 12, "p69541": 12, "2cpb": 12, "2cp": 12, "coatb_bpzj2": 12, "p03618": 12, "q9t0q9_bpfd": 12, "q9t0q9": 12, "1nh4": 12, "coatb_bpif1": 12, "p03619": 12, "1ifk": 12, "aepnaatnyateamdslktqaidlisqtwpvvttvvvaglvirlfkkfsska": 12, "hhhhhhhhhhhhhh": [12, 53], "hhhhhhhh": 12, "hhhhhhhhhhhhhhhhhhhhh": 12, "aepnaatnyateamdslktqaidlisqtwpvvttvvvaglviklfkkfvsra": 12, "dgtstatsyateamnslktqatdlidqtwpvvtsvavaglairlfkkfsska": 12, "aegddp": 12, "akaafnslqasateyigyawamvvvivgatigiklfkkftska": 12, "chchhhhcccctcccttchhhhhhhhhhhhhhhhhhhhctt": 12, "akaafdslqasateyigyawamvvvivgatigiklfkkfaska": 12, "akaafdslqasateyigyawamvvvivgatigiklfkkftska": 12, "hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh": 12, "faaddatsqakaafdsltaqatemsgyawalvvlvvgatvgiklfkkfvsra": 12, "hhhh": 12, "hhhhhh": [12, 53], "hhhhhhh": 12, "hhhhhhhhhhhhhhhhhhhhhhh": 12, "xhhhhhhhhhhhhhhhchhhhhhhhchhhhhhhhhhhhhhhhhhhhhhhc": 12, "aessss": 12, "aptahdslpspat": 12, "hiu": 12, "swshvsslvsasluiklfkkfsska": 12, "phage_coat_gp8": 12, "pf05371": 12, "xfam": 12, "pf05371_seed": 12, "sth": [12, 53, 66], "aepnaatnyateamdslktqaidlisqtwpvvttvvvaglvirl": 12, "ska": 12, "aepnaatnyateamdslktqaidlisqtwpvvttvvvaglvikl": 12, "dgtstatsyateamnslktqatdlidqtwpvvtsvavaglairl": 12, "akaafnslqasateyigyawamvvvivgatigikl": 12, "akaafdslqasateyigyawamvvvivgatigikl": 12, "faaddatsqakaafdsltaqatemsgyawalvvlvvgatvgikl": 12, "truncat": [12, 20, 30, 32, 65, 68, 129, 250, 259, 267, 269, 277, 279, 298], "get_alignment_length": [12, 27, 30, 56, 59], "faa": [12, 13, 14, 23, 56, 69, 80, 237], "aacaac": 12, "aacccc": 12, "accaac": 12, "ccacca": 12, "epsilon": [12, 13, 30, 180, 181, 198], "ccaaac": 12, "bootstrap": [12, 27, 30, 32, 80, 128, 129, 132, 180, 181, 182, 185, 196, 237], "bootseq": 12, "concis": [12, 23, 25, 178, 179, 208, 209, 210, 214, 259], "aaacca": 12, "aaaccc": 12, "acccca": 12, "cccaac": 12, "cccaaa": 12, "aaacaa": 12, "acccaa": 12, "cccacc": 12, "aaaaac": 12, "ccccca": 12, "aaaacc": 12, "accccc": 12, "ccccaa": 12, "caaacc": 12, "last_align": 12, "first_align": 12, "actacgactagctcag": 12, "actaccgctagctcagaag": 12, "actacggctagcacagaag": 12, "actacgactagctcagg": 12, "judg": [12, 15], "xxx": [12, 24, 71, 85, 94, 107, 277], "yyi": 12, "actacggcaagcacagg": 12, "actacgac": 12, "tagctcagg": 12, "zzz": 12, "ggactacgacaatagctcagg": 12, "agre": [12, 259], "stranger": 12, "hear": 12, "nicer": [12, 14], "backward": [12, 21, 30, 104, 107, 109, 129, 206, 236, 259, 302], "obsolet": [12, 15, 32, 67, 69, 71, 80, 92, 94, 149, 181, 185, 206, 236, 240, 250, 269, 284], "align1": [12, 30, 296], "actgctagctag": [12, 30], "ctagctag": [12, 30], "actgctagdtag": 12, "align2": [12, 30, 296], "gtcagc": 12, "gacagctag": 12, "gtcagctag": 12, "zeta": 12, "align3": 12, "actagtacagctg": 12, "eta": 12, "actagtacagct": 12, "theta": [12, 154, 175], "ctactacaggtg": 12, "iota": 12, "my_align": 12, "my_exampl": [12, 23], "actgctagct": [12, 30], "ctagct": [12, 30], "actgctagdt": 12, "epislon": 12, "actagtacag": 12, "ctg": [12, 13, 21, 22, 30, 62], "ctactacag": 12, "gtg": [12, 22, 76, 235], "overwritten": [12, 23, 149, 182, 196, 237], "aepnaatnyateamdslktqaidlisqtwpvvttvvvaglvirlfkkfss": 12, "aepnaatnyateamdslktqaidlisqtwpvvttvvvaglviklfkkfv": 12, "dgtstatsyateamnslktqatdlidqtwpvvtsvavaglairlfkkfss": 12, "akaafnslqasateyigyawamvvvivgatigiklfkkft": 12, "akaafdslqasateyigyawamvvvivgatigiklfkkfa": 12, "akaafdslqasateyigyawamvvvivgatigiklfkkft": 12, "faaddatsqakaafdsltaqatemsgyawalvvlvvgatvgiklfkkfv": 12, "aepnaatnya": 12, "teamdslktq": 12, "aidlisqtwp": 12, "vvttvvvagl": 12, "virlfkkfss": 12, "q9t0q8_bpi": 12, "viklfkkfv": 12, "coatb_bpi2": 12, "dgtstatsya": 12, "teamnslktq": 12, "atdlidqtwp": 12, "vvtsvavagl": 12, "airlfkkfss": 12, "coatb_bpm1": 12, "kaafnslqa": 12, "ateyigyawa": 12, "mvvvivgati": 12, "giklfkkft": 12, "coatb_bpzj": 12, "kaafdslqa": 12, "giklfkkfa": 12, "q9t0q9_bpf": 12, "coatb_bpif": 12, "faaddatsqa": 12, "kaafdsltaq": 12, "atemsgyawa": 12, "lvvlvvgatv": 12, "giklfkkfv": 12, "handicap": 12, "relax": [12, 17, 56, 65, 129, 181, 185, 240], "indent": [12, 197, 205, 206, 237, 244], "somehow": [12, 93], "name_map": 12, "seq0": 12, "seq3": [12, 27, 30, 260], "seq4": [12, 23, 30], "seq5": 12, "seq6": [12, 23], "clustal_data": 12, "action": [12, 20, 71, 168], "metaphor": 12, "surpris": [12, 20, 236], "leav": [12, 17, 20, 104, 181, 182, 236, 237, 240, 250, 252], "aepnaa": 12, "dgtsta": 12, "faadda": 12, "bring": [12, 23, 277], "tny": 12, "tsy": 12, "tsq": 12, "ninth": 12, "ateamdslktqaidlisqtwpvvttvvvaglvirlfkkfsska": 12, "ateamdslktqaidlisqtwpvvttvvvaglviklfkkfvsra": 12, "ateamnslktqatdlidqtwpvvtsvavaglairlfkkfsska": 12, "akaafdsltaqatemsgyawalvvlvvgatvgiklfkkfvsra": 12, "aepnaaateamdslktqaidlisqtwpvvttvvvaglvirlfkkfsska": 12, "aepnaaateamdslktqaidlisqtwpvvttvvvaglviklfkkfvsra": 12, "dgtstaateamnslktqatdlidqtwpvvtsvavaglairlfkkfsska": 12, "aegddpakaafnslqasateyigyawamvvvivgatigiklfkkftska": 12, "aegddpakaafdslqasateyigyawamvvvivgatigiklfkkfaska": 12, "aegddpakaafdslqasateyigyawamvvvivgatigiklfkkftska": 12, "faaddaakaafdsltaqatemsgyawalvvlvvgatvgiklfkkfvsra": 12, "watch": [12, 23], "msa": [12, 30, 32, 69, 185, 198], "actccta": 12, "aat": [12, 13, 22], "cta": [12, 22], "cctact": 12, "tctcctc": 12, "arrang": [12, 16], "math": [12, 15, 24, 168, 296], "atcg": [12, 30], "aligninfo": [12, 27, 30], "summary_align": 12, "summaryinfo": [12, 27, 30, 31], "dumb_consensu": [12, 30, 31], "xctxctx": 12, "residu": [12, 13, 14, 20, 21, 27, 31, 32, 68, 70, 71, 80, 93, 108, 125, 126, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 171, 172, 208, 209, 211, 213, 220, 228, 247, 264, 271, 296], "nctnctn": 12, "pssm": [12, 27, 30, 31, 69, 282, 287, 289, 293, 295], "my_pssm": 12, "pos_specific_score_matrix": [12, 30, 31], "chars_to_ignor": [12, 31], "second_seq": 12, "your_pssm": [12, 31], "sequence_numb": [12, 31], "residue_count_nam": [12, 31], "introduct": [12, 19, 20, 21, 23, 26, 27, 208, 306], "lecb": 12, "ncifcrf": 12, "tom": 12, "primer": [12, 21, 27, 72, 79, 80, 81, 82, 250, 252, 263], "portion": [12, 61, 138], "ic_": [12, 158], "n_": 12, "mathrm": 12, "discret": [12, 127, 181], "e_freq_t": [12, 31], "info_cont": 12, "information_cont": [12, 30, 31], "3910647": 12, "log_bas": [12, 31], "923902": 12, "pseudo_count": [12, 31], "299651": 12, "life": [12, 19, 21, 252, 264], "dig": 12, "observed_frequ": [12, 13], "polar": [12, 13], "charg": [12, 13, 15, 80, 135, 162, 171, 262, 264], "dehkr": [12, 13], "2360": [12, 13], "3305": [12, 13], "1235": [12, 13], "3218": [12, 13], "residue_frequ": [12, 13], "4f": [12, 13, 260], "2015": [12, 13, 23], "2743": [12, 13], "0976": [12, 13], "2569": [12, 13], "1697": [12, 13], "expected_frequ": [12, 13], "0406": [12, 13], "0553": [12, 13], "0197": [12, 13], "0518": [12, 13], "0342": [12, 13], "0752": [12, 13], "0268": [12, 13], "0705": [12, 13], "0465": [12, 13], "0095": [12, 13], "0251": [12, 13], "0166": [12, 13], "0660": [12, 13], "0436": [12, 13], "0288": [12, 13], "inner": [12, 13, 271], "log2": [12, 13, 181], "gap_scor": [12, 13, 30], "dehek": [12, 13], "dhhkk": [12, 13], "prepar": [12, 49, 64, 149, 163, 168, 174], "unalign": [12, 32], "workflow": [12, 17, 20, 221], "clustalx": 12, "cactu": 12, "dnd": [12, 17, 32], "overrid": [12, 15, 17, 32, 64, 68, 69, 70, 99, 104, 158, 168, 196, 236, 260, 263], "clustalw2": [12, 32], "infil": [12, 30, 32, 79, 80, 173, 267, 269], "pipe": [12, 17, 23, 269, 296], "clustalw_ex": 12, "ex": [12, 32, 67, 181, 220], "screen": [12, 19, 30, 279], "redirect": [12, 69], "fed": 12, "shorten": [12, 17], "stderr": [12, 17, 32, 67, 181, 269], "success": 12, "returncod": [12, 67], "906": 12, "tatacattaaagaagggggatgcggataaatggaaaggcgaaag": [12, 30], "aga": [12, 22, 30], "tatacataaaagaagggggatgcggataaatggaaaggcgaaag": [12, 30], "tatacattaaaggagggggatgcggataaatggaaaggcgaaag": [12, 30], "asid": [12, 66], "thrust": 12, "newick": [12, 17, 27, 32, 132, 180, 181, 189, 190, 196, 198], "draw_ascii": [12, 17], "_______________": 12, "__________________________": 12, "______": 12, "_____": 12, "_________________": 12, "__________": [12, 17], "___": 12, "depth": [12, 13, 17, 23, 156, 179, 180, 182, 196, 269], "needleman": [12, 13, 30, 32], "wunsch": [12, 13, 30, 32], "hba_human": [12, 13, 14], "mvlspadktnvkaawgkvgahageygaealermflsfpttktyfphfdlshgsaqvkghg": 12, "kkvadaltnavahvddmpnalsalsdlhahklrvdpvnfkllshcllvtlaahlpaeftp": 12, "avhasldkflasvstvltskyr": 12, "hbb_human": [12, 13, 14], "mvhltpeeksavtalwgkvnvdevggealgrllvvypwtqrffesfgdlstpdavmgnpk": 12, "vkahgkkvlgafsdglahldnlkgtfatlselhcdklhvdpenfrllgnvlvcvlahhfg": 12, "keftppvqaayqkvvagvanalahkyh": 12, "outfil": [12, 30, 32, 67, 79, 80], "asequ": [12, 67, 79, 80], "bsequenc": [12, 67, 79, 80], "gapopen": [12, 30, 32, 67, 68, 69, 79, 80, 217], "gapextend": [12, 30, 32, 67, 68, 69, 79, 80], "sy": [12, 17, 24, 25, 90, 198, 272], "win32": 12, "149": [12, 13, 116], "mv": [12, 13, 14], "lspadktnvkaawgkvgahageygaealermflsfpttkti": [12, 14], "kyr": [12, 13, 14], "mvhltpeeksavtalwgkv": [12, 13, 14], "nvdevggealgrllvvypwtqrf": 12, "kyh": [12, 14], "told": 12, "temporari": [12, 17, 24, 105, 189, 250, 269], "child": [12, 15, 17, 130, 131, 135, 139, 155, 159, 168, 178, 179, 182, 184, 196, 208], "popen": 12, "surfac": [12, 15, 20, 53, 104, 137, 156, 157], "gotoh": [13, 30], "beyer": [13, 30], "constructor": [13, 21, 182, 185, 196, 198, 208, 264], "match_scor": [13, 30], "gaact": [13, 30], "gat": [13, 22, 30, 221], "mismatch_scor": [13, 30], "open_gap_scor": [13, 30], "extend_gap_scor": [13, 30], "alignments1": [13, 30], "alignments2": [13, 30], "mapped_align": 13, "psl": [13, 20, 27, 30, 38, 45, 216, 220], "agaactc": 13, "target_internal_open_gap_scor": 13, "target_internal_extend_gap_scor": 13, "target_left_open_gap_scor": 13, "target_left_extend_gap_scor": 13, "target_right_open_gap_scor": 13, "target_right_extend_gap_scor": 13, "query_internal_open_gap_scor": 13, "query_internal_extend_gap_scor": 13, "query_left_open_gap_scor": 13, "query_left_extend_gap_scor": 13, "query_right_open_gap_scor": 13, "query_right_extend_gap_scor": 13, "megablast": [13, 30, 68, 69, 70, 198], "acat": 13, "irrespect": [13, 119], "substitution_matric": [13, 14, 27, 30, 289, 296], "benner22": [13, 198], "benner6": [13, 198], "benner74": [13, 198], "blosum45": [13, 68, 70, 181, 198], "blosum50": [13, 198], "matbla": 13, "iij": 13, "acdq": 13, "acnq": 13, "acxq": 13, "grain": 13, "twelv": 13, "hierarch": [13, 73], "target_gap_scor": 13, "query_gap_scor": 13, "target_open_gap_scor": 13, "query_open_gap_scor": 13, "target_extend_gap_scor": 13, "query_extend_gap_scor": 13, "internal_gap_scor": 13, "target_internal_gap_scor": 13, "query_internal_gap_scor": 13, "internal_open_gap_scor": 13, "internal_extend_gap_scor": 13, "end_gap_scor": 13, "target_end_gap_scor": [13, 30], "query_end_gap_scor": [13, 30], "end_open_gap_scor": 13, "target_end_open_gap_scor": 13, "query_end_open_gap_scor": 13, "end_extend_gap_scor": 13, "target_end_extend_gap_scor": 13, "query_end_extend_gap_scor": 13, "left_gap_scor": 13, "target_left_gap_scor": 13, "query_left_gap_scor": 13, "right_gap_scor": 13, "target_right_gap_scor": 13, "query_right_gap_scor": 13, "left_open_gap_scor": 13, "left_extend_gap_scor": 13, "right_open_gap_scor": 13, "right_extend_gap_scor": 13, "my_gap_score_funct": 13, "aactt": 13, "aatt": 13, "att": [13, 22], "dynam": [13, 30, 69, 107, 109, 192, 194, 195, 293, 296], "223": 13, "372": [13, 32], "036": 13, "854": 13, "775": [13, 262], "807": 13, "overflowerror": 13, "aaaaccc": 13, "aacc": [13, 22], "bed": [13, 27, 30, 36, 38, 269], "ggtt": [13, 22], "classifi": [13, 27, 30, 84, 120, 122, 127, 140, 281], "ton": [13, 31], "famou": 13, "pam": [13, 14, 32], "blosum": [13, 14, 32], "_alphabet": 13, "unexpect": [13, 23], "indexerror": 13, "dim": [13, 54, 127, 174, 215], "abcd": 13, "arang": 13, "reshap": [13, 168], "cad": [13, 15], "dec": 13, "trigger": [13, 27, 69, 221, 225, 250, 251, 269], "acgu": 13, "ribosom": [13, 15, 23, 271], "escherichia": [13, 208], "bacillu": 13, "subtili": 13, "ecoli": 13, "bsubtili": 13, "sequence1": 13, "sequence2": 13, "1990656": 13, "307": [13, 140, 181], "401": [13, 287], "2026": 13, "0112": 13, "0224": 13, "0142": 13, "1848": 13, "0162": 13, "0215": 13, "2647": 13, "0132": 13, "1505": 13, "2505": 13, "2337": 13, "3165": 13, "1993": [13, 72, 168, 262, 263, 264], "0627": 13, "0585": 13, "0793": 13, "0499": 13, "0546": 13, "0740": 13, "0466": 13, "0631": 13, "0397": 13, "oddsratio": 13, "scoring_matrix": 13, "270": 13, "130": [13, 236, 252], "1795": 13, "0194": 13, "0006": 13, "0019": 13, "2514": 13, "0013": 13, "0021": 13, "0939": 13, "0012": 13, "0089": 13, "1581": 13, "rxpected_frequ": 13, "ucsc": [13, 35, 36, 37, 38, 39, 46, 51, 61, 220, 237, 246, 256], "242193529": 13, "190214555": 13, "chrun_ki270385v1": 13, "990": [13, 250], "chrun_ki270423v1": 13, "981": 13, "chrun_ki270392v1": 13, "971": 13, "chrun_ki270394v1": 13, "970": 13, "blocks_5": 13, "6979": 13, "5209": 13, "arndcqeghilkmfpstwyvbzx": 13, "mutat": [13, 22, 155], "submodul": [13, 20, 176, 199], "asparagin": [13, 14], "aspart": [13, 14, 262], "glutamin": 13, "glutam": 13, "aac": [13, 22, 221], "aag": [13, 22, 30], "aca": [13, 22, 23], "acg": [13, 22, 30, 259, 263, 296], "ttg": [13, 22], "hemoglobin": [13, 14], "ktn": 13, "vk": 13, "wgkv": 13, "gahageygaeal": 13, "rmflsf": [13, 14], "ttk": 13, "mvhl": [13, 14], "eek": 13, "sav": 13, "ta": [13, 30, 32, 123, 235], "lwgkvnvdevg": 13, "lvvypwt": 13, "fphf": 13, "dlshg": 13, "aqvk": 13, "hgkkv": 13, "ltnavahv": 13, "ddmpn": 13, "qrf": [13, 14], "fesfgdl": 13, "tpda": 13, "mgnpkvkahgkkvlgafsd": 13, "gl": 13, "ld": 13, "lsd": 13, "lhah": 13, "klr": 13, "vdpv": 13, "nfk": 13, "llshc": 13, "llvt": 13, "laahlpa": 13, "eft": 13, "kgtfatl": 13, "elh": 13, "cdkl": 13, "hvdp": 13, "enf": 13, "rll": 13, "gnvl": 13, "cvla": 13, "hfgkeft": 13, "pa": [13, 32, 53, 262], "vh": 13, "asldkfla": 13, "vstv": 13, "142": [13, 16], "180": [13, 15, 168, 182, 287], "217": [13, 14, 32, 236], "qa": [13, 27, 267, 268], "yqkv": 13, "vagvan": 13, "ahki": 13, "147": [13, 25], "penal": [13, 14, 269, 296], "meaning": [13, 14, 17, 132, 182, 302], "292": [13, 14, 252], "lspadktnvkaawgkvgahageygaealermflsfpttktyfphf": 13, "dl": [13, 174, 249], "hg": [13, 135, 162, 168], "nvdevggealgrllvvypwtqrffesfgdlstpdavmgn": 13, "aqvkghgkkvadaltnavahvddmpnalsalsdlhahklrvdpvnfkllshcllvtlaah": 13, "pkvkahgkkvlgafsdglahldnlkgtfatlselhcdklhvdpenfrllgnvlvcvlahh": 13, "113": [13, 15, 16, 32, 156], "lpaeftpavhasldkflasvstvltskyr": 13, "fgkeftppvqaayqkvvagvanalahkyh": 13, "lspadktnvkaa": [13, 14], "peeksav": [13, 14], "padktnv": [13, 14], "s2": [13, 25, 176], "tta": [13, 21, 22], "presum": [13, 302], "leucin": 13, "phenylalanin": [13, 15, 168], "ctc": [13, 22], "leu": [13, 15], "phe": [13, 15, 168, 264], "ala": [13, 15, 154, 168], "arg": [13, 29, 30, 62, 69, 84, 104, 131, 168, 182, 196, 229, 232, 271, 290, 302, 303], "asp": [13, 15, 34, 279], "cy": [13, 15, 155, 237, 264], "gln": 13, "glu": [13, 15], "gly": [13, 15, 140, 168], "hi": [13, 25, 90, 130, 143, 151, 272], "il": [13, 15], "ly": [13, 171], "met": [13, 15, 279], "ser": [13, 15, 155], "thr": [13, 15, 30, 32], "trp": [13, 264], "tyr": [13, 154, 264], "val": [13, 168, 196, 201], "bypass": 13, "ord": [13, 250], "ey": 13, "frameshift": [13, 71, 221, 271, 280], "frameshift_minus_two_scor": 13, "frameshift_minus_one_scor": 13, "frameshift_plus_one_scor": 13, "frameshift_plus_two_scor": 13, "whenev": [13, 196, 220], "shift": [13, 21, 30, 69, 71, 221, 236, 259, 263], "frameshift_minus_scor": 13, "frameshift_plus_scor": 13, "frameshift_two_scor": 13, "frameshift_one_scor": 13, "frameshift_scor": [13, 30], "nuc1": 13, "tcagggactgcgagaaccaagctactgctgctgctggctgcgctctgcgccgcaggtggggcgctggag": 13, "rna1": [13, 259], "nuc2": 13, "tcagggacttcgagaaccaagcgctcctgctgctggctgcgctcggcgccgcaggtggagcactggag": 13, "rna2": [13, 259], "aa1": 13, "sgtartklllllaalcaaggal": 13, "aa2": 13, "sgtsrtkrllllaalgaaggal": 13, "pro1": [13, 278], "pro2": [13, 278], "tonsist": 13, "tcagggactgcgagaaccaagctactgctgctgctggctgcgctctgcgccgcaggtggg": 13, "gcgctggag": 13, "tcagggacttcgagaaccaagcgc": 13, "ctcctgctgctggctgcgctcggcgccgcaggtggagcactggag": 13, "tcagggacttcgagaaccaagcgcctcctgctgctggctgcgctcggcgccgcaggtggagcactggag": 13, "aa3": 13, "mgtalllllaalcaaggal": 13, "pro3": 13, "nuc3": 13, "atgggaaccgcgctgcttttgctactggccgcgctctgcgccgcaggtggggccctggag": 13, "rna3": 13, "alignments3": 13, "protein_align": 13, "mgta": 13, "lllllaalcaaggal": 13, "codon_align": 13, "tcagggactgcgagaaccaagcta": 13, "atgggaaccgcg": 13, "ctgctgctgctggctgcgctctgcgccgcaggtggggcgctggag": 13, "cttttgctactggccgcgctctgcgccgcaggtggggccctggag": 13, "dn": [13, 34, 279, 280], "calculate_dn_d": [13, 27, 30, 34], "codon_t": [13, 30, 34, 76, 278, 279, 280], "transit": [13, 32, 34, 80, 108, 109, 181, 271, 280], "transvers": [13, 32, 34, 79, 80, 181, 280], "cfreq": [13, 34, 280], "equilibrium": [13, 181], "ng86": [13, 34, 279, 280], "lwl85": [13, 34, 279, 280], "yn00": [13, 17, 34, 180, 191, 279, 280], "ml": [13, 34, 80, 181, 279, 280], "f1x4": [13, 34, 280], "f3x4": [13, 34, 280], "f61": [13, 34, 280], "pairwise_codon_align": 13, "067715": 13, "201197": 13, "068728": 13, "207551": 13, "081468": 13, "127706": 13, "069475": 13, "205754": 13, "calculate_dn_ds_matrix": [13, 27, 30, 34], "060204": 13, "145469": 13, "201198": 13, "664268": 13, "798957": 13, "treeconstruct": [13, 24, 27, 180], "distancetreeconstructor": [13, 27, 180, 198], "dn_constructor": 13, "ds_constructor": 13, "dn_tree": 13, "upgma": [13, 32, 80, 180, 198, 279], "ds_tree": 13, "basetre": [13, 27, 180, 196, 197], "root": [13, 17, 32, 79, 80, 84, 132, 174, 179, 180, 182, 183, 184, 186, 187, 188, 189, 196, 197, 198, 208, 215, 251, 286, 302], "clade": [13, 25, 27, 132, 180, 182, 183, 184, 185, 186, 188, 189, 196, 197, 198], "branch_length": [13, 17, 180, 182, 183, 186, 188, 196, 197, 198], "inner2": [13, 198], "053296": 13, "023194": 13, "inner1": [13, 198], "0301021": 13, "365806": 13, "265207": 13, "100598": 13, "assess": [13, 32, 74, 181], "adapt": [13, 20, 104, 165, 181, 252, 260, 261, 269, 282], "adh": 13, "fruit": 13, "melanogast": 13, "simulan": 13, "yakuba": 13, "mktest": [13, 27, 30, 34, 278, 279], "nucleotide_record": 13, "9097": 13, "emb": [13, 19, 21, 23, 24, 252], "x57361": 13, "9099": 13, "x57362": 13, "9101": 13, "x57363": 13, "9103": 13, "x57364": 13, "9217": 13, "x57365": 13, "9219": 13, "x57366": 13, "9221": 13, "x57367": 13, "9223": 13, "x57368": 13, "9225": 13, "x57369": 13, "9227": 13, "x57370": 13, "9229": 13, "x57371": 13, "9231": 13, "x57372": 13, "9233": 13, "x57373": 13, "9235": 13, "x57374": 13, "9237": 13, "x57375": 13, "9239": 13, "x57376": 13, "156879": 13, "m17837": 13, "droadhck": 13, "strain": 13, "156863": 13, "m19547": 13, "droadhcc": 13, "af": [13, 27, 267, 268, 269], "156877": 13, "m17836": 13, "droadhcj": 13, "156875": 13, "m17835": 13, "droadhci": 13, "156873": 13, "m17834": 13, "droadhch": 13, "fr": [13, 15, 17, 153, 181, 244], "156871": 13, "m17833": 13, "droadhcg": 13, "156869": 13, "m17832": 13, "droadhcf": 13, "156867": 13, "m17831": 13, "droadhc": 13, "156865": 13, "m17830": 13, "droadhcd": 13, "156861": 13, "m17828": 13, "droadhcb": 13, "156859": 13, "m17827": 13, "droadhca": 13, "maftltnknvvfvaglggigldtskelvkrdlknlvildrienpaaiaelkainpkvtvt": 13, "msftltnknvifvaglggigldtskellkrdlknlvildrienpaaiaelkainpkvtvt": 13, "240": [13, 62, 104], "gtleaiqwskhwdsgi": 13, "gtleaiqwtkhwdsgi": 13, "protein_record": [13, 259], "atgtcgtttactttgaccaacaagaacgtgattttcgttgccggtctgggaggcattggt": 13, "ctggacaccagcaaggagctgctcaagcgcgatctgaagaacctggtgatcctcgaccgc": 13, "720": 13, "ggcaccctggaggccatccagtggaccaagcactgggactccggcatc": 13, "768": 13, "atggcgtttaccttgaccaacaagaacgtggttttcgtggccggtctgggaggcattggt": 13, "ggcaccctggaggccatccagtggtccaagcactgggactccggcatc": 13, "ggtaccctggaggccatccagtggtccaagcactgggactccggcatc": 13, "unique_speci": 13, "00206457": 13, "undergon": 14, "consumpt": [14, 23], "600": [14, 263, 276], "globalxx": [14, 296], "lspadktnv": 14, "wgkvgahag": 14, "yr": 14, "peeksavtalwgkv": 14, "format_align": [14, 27, 30, 33, 35, 39, 40, 43, 45, 46, 47, 49, 50, 51, 52, 53, 296], "printout": [14, 296], "ei": 14, "eal": 14, "pttk": 14, "nvde": 14, "vg": 14, "geal": 14, "lvvyp": 14, "wt": 14, "sequencea": [14, 296], "sequenceb": [14, 296], "globald": 14, "nvdevggealgrllvvypwtqrff": 14, "localxx": [14, 296], "locald": [14, 296], "full_sequ": [14, 296], "serin": 14, "lysin": [14, 80], "lsspadktnvkkaa": 14, "ddpeeksavnn": 14, "localm": 14, "agaact": 14, "gac": [14, 22], "gaac": 14, "score_onli": [14, 296], "one_alignment_onli": [14, 296], "gain": [14, 196], "affin": [14, 32, 42, 221, 296], "realiz": [14, 15, 20], "macromolecul": 15, "pdbparser": [15, 27, 133, 137, 140, 143, 148, 154, 156, 157, 162, 168], "manner": [15, 38, 110, 221, 236], "pdbx": [15, 149], "2014": 15, "wwpdb": [15, 78, 149, 150, 247], "macromolecular": [15, 133, 149, 160, 237], "crystallograph": [15, 171, 237], "impos": [15, 237], "mmcifpars": [15, 27, 133, 162, 164, 169, 172, 237], "get_structur": [15, 133, 137, 140, 143, 148, 150, 151, 154, 156, 157, 162, 168, 169, 170, 172], "1fat": [15, 137], "cif": [15, 169, 172, 213, 237, 247], "mmcif2dict": [15, 27, 133], "_atom_sit": [15, 247], "cartn_i": 15, "deposit": [15, 152, 171], "mmcif_dict": 15, "_exptl_cryst": 15, "density_percent_sol": 15, "y_list": 15, "mmtfparser": [15, 133, 170], "4cup": 15, "get_structure_from_url": [15, 133, 170], "decoded_data": 15, "x_coord_list": 15, "permiss": [15, 151], "pdbconstructionexcept": [15, 27, 133, 147, 155], "pdb1fat": 15, "ent": [15, 168], "structure_id": [15, 143, 162, 171], "trailer": [15, 151], "get_head": [15, 133, 151], "get_trail": [15, 133, 151], "erron": [15, 21], "clarifi": [15, 21, 22], "resolut": [15, 104, 157, 171, 173], "deposition_d": [15, 171, 173], "release_d": [15, 171, 173], "structure_method": [15, 173], "structure_refer": [15, 173], "journal_refer": [15, 173], "has_missing_residu": 15, "missing_residu": 15, "bool": [15, 54, 135, 136, 139, 144, 149, 152, 155, 158, 160, 162, 165, 167, 168, 175, 182, 196, 259], "remark": [15, 25, 93], "465": 15, "molecul": [15, 20, 21, 22, 56, 69, 104, 157, 165, 196, 213, 237, 249, 251, 259, 260, 271], "ie": [15, 31, 92, 93, 99, 108, 136, 137, 140, 156, 175, 236], "parse_pdb_head": [15, 27, 133, 247], "header_dict": 15, "is_pqr": [15, 148, 151, 162], "pqr_parser": 15, "pdbmlparser": [15, 27, 133], "pdbml_parser": 15, "1gbt": 15, "mmcifio": [15, 27, 133], "set_structur": [15, 133, 148, 168, 169, 172], "pdbio": [15, 27, 133, 168, 237], "set_dict": [15, 133, 169], "accept_model": [15, 133, 138, 148, 169, 172], "accept_chain": [15, 133, 138, 148, 169, 172], "accept_residu": [15, 133, 138, 148, 169, 172], "accept_atom": [15, 133, 138, 148, 152, 167, 168, 169, 172], "cumbersom": [15, 18], "glyselect": 15, "get_nam": [15, 133, 135], "gly_onli": 15, "dice": [15, 27, 133], "mmtfio": [15, 133, 170], "entiti": [15, 27, 84, 133, 134, 136, 144, 146, 148, 152, 155, 157, 158, 159, 160, 167, 169, 171, 172], "layout": [15, 22, 23, 51, 66, 68, 70, 94, 99], "smcra": [15, 143, 151], "architectur": [15, 69, 196, 197], "bioinformatician": 15, "hierarchi": [15, 17, 20, 90, 139, 208, 209, 210, 211, 212, 216, 272], "unambigu": [15, 76, 235, 260, 266], "suspect": 15, "diamond": 15, "aggreg": [15, 143, 151], "arrow": [15, 104], "partli": [15, 21], "children": [15, 17, 135, 139, 157, 177, 178, 179, 182, 196, 197, 208, 212, 251], "disorderedatom": [15, 27, 133, 135, 139, 155], "disorderedresidu": [15, 27, 133, 136, 139, 155], "disorderedentitywrapp": [15, 27, 133, 135, 139, 155], "hide": [15, 104, 136], "child_ent": 15, "parent_ent": 15, "child_id": 15, "child_list": [15, 133, 136, 139, 144, 155, 160], "get_list": [15, 133, 139], "get_par": [15, 133, 135, 139], "full_id": [15, 139], "get_full_id": [15, 133, 135, 139], "1abc": [15, 139], "get_id": [15, 98, 104, 128, 130, 133, 135, 139, 140], "has_id": [15, 133, 136, 139], "entity_id": [15, 97], "nr_children": 15, "saniti": 15, "decor": 15, "first_model": 15, "chain_a": 15, "hetfield": 15, "h_glc": 15, "adopt": [15, 20, 27], "icod": [15, 162, 168, 213], "mutant": 15, "wild": 15, "shortcut": [15, 20, 21, 216, 236, 259], "unsurprisingli": 15, "plor": 15, "hetflag": 15, "res10": 15, "get_resnam": [15, 133, 154, 155], "is_disord": [15, 133, 135, 139, 155], "get_segid": [15, 133, 155], "segid": [15, 155, 162], "chn1": 15, "is_aa": [15, 27, 133, 154], "og": [15, 80, 168], "oxygen": 15, "eg": [15, 32, 135, 140, 174, 181, 215, 233], "calcium": [15, 171, 271], "eas": [15, 79, 80, 221, 263], "collis": [15, 23], "anisotrop": [15, 135, 162], "set_coord": [15, 133, 135], "get_coord": [15, 133, 135, 140], "get_vector": [15, 133, 135], "get_bfactor": [15, 133, 135], "isotrop": [15, 135], "get_occup": [15, 133, 135], "occup": [15, 135, 155, 162, 168, 171], "get_altloc": [15, 133, 135], "get_sigatm": [15, 133, 135], "get_siguij": [15, 133, 135], "get_anis": [15, 133, 135], "get_fullnam": [15, 133, 135], "siguij": 15, "sigatm": 15, "capabl": [15, 95, 99], "virtual": [15, 206, 277], "rotaxi": [15, 27, 133, 175], "rot": [15, 135, 139, 215], "pi": [15, 53, 135, 137, 139, 175, 260, 262, 264, 271], "cb_at_origin": 15, "left_multipli": [15, 133, 175], "cb": [15, 53, 141, 152, 168], "nontrivi": 15, "norm": [15, 133, 175, 250], "rotmat": [15, 27, 133, 135, 139, 175], "refmat": [15, 27, 133, 175], "aris": 15, "ordinari": [15, 23, 216, 237, 277], "physic": [15, 158, 264], "uncaught": [15, 139], "bother": 15, "characterist": [15, 17, 174, 182, 271], "disordered_select": [15, 133, 135, 139], "evid": [15, 21, 196, 239, 271, 276], "1en2": 15, "activ": [15, 16, 17, 24, 25, 53, 86, 136, 139, 168, 271, 302], "unpack": [15, 136, 155], "get_unpacked_list": [15, 133, 136, 155], "get_atom": [15, 133, 136, 144, 155, 160], "get_residu": [15, 30, 31, 133, 136, 144, 160, 168], "unfold_ent": [15, 27, 133, 159], "res_list": 15, "atom_list": [15, 146, 163, 174], "residue_list": 15, "chain_list": 15, "residue_id": [15, 134], "resnam": [15, 140, 155, 162, 168], "model_id": [15, 138, 162, 171], "chain_id": [15, 134, 137, 138, 162, 171], "disordered_has_id": [15, 133, 139], "polypeptidebuild": 15, "model_nr": 15, "polypeptide_list": 15, "build_peptid": [15, 154], "userlist": [15, 68], "criterion": [15, 122], "ppb": [15, 154], "ppbuilder": [15, 27, 133, 154], "pp": [15, 53, 66, 149, 154, 168, 228], "get_sequ": [15, 133, 154], "cappbuild": [15, 27, 133, 154], "sndiyfnfqrfnetnlilqrdasvsssgqlrltnln": 15, "minu": [15, 20, 63, 69, 119, 220, 221, 236, 250, 269], "overload": [15, 119, 148, 273], "ca1": 15, "residue1": 15, "ca2": 15, "residue2": 15, "calc_angl": [15, 27, 133, 175], "vector1": 15, "atom1": [15, 135], "vector2": 15, "atom2": [15, 135], "vector3": 15, "atom3": 15, "calc_dihedr": [15, 27, 133, 175], "vector4": 15, "atom4": 15, "xyz": [15, 152, 167, 168, 175], "psi": [15, 68, 69, 70, 71, 137, 152, 154, 168], "invari": [15, 80, 176, 181], "expos": [15, 168, 235, 277], "picio": [15, 27, 133, 168], "write_p": [15, 27, 133, 152, 167, 168], "read_pic": [15, 27, 133, 152, 167, 168], "read_pic_seq": [15, 27, 133, 152, 168], "ic_rebuild": [15, 27, 133, 168], "write_pdb": [15, 27, 133, 167, 168], "ic_dupl": [15, 27, 133, 167, 168], "structure_rebuild_test": [15, 27, 133, 167, 168], "scadio": [15, 27, 133, 168], "write_scad": [15, 27, 133, 158, 168], "myprotein": [15, 168], "1a8o": [15, 140, 148, 154, 156, 169, 172, 247], "mychain": [15, 168], "atom_to_internal_coordin": [15, 133, 136, 144, 158, 160, 167, 168], "maxpeptidebond": [15, 133, 158, 168], "angstrom": [15, 158, 168], "exceed": 15, "suppress": [15, 32, 51, 143, 151], "creation": [15, 61, 168], "unrealist": 15, "ic_chain": [15, 27, 133, 158, 168], "cutoff": [15, 53, 68, 69, 70, 185], "hetatm": [15, 143, 145, 154, 167, 168, 247], "mse": [15, 154], "selenomethionin": [15, 154], "canon": [15, 86, 90, 99, 154, 271, 274], "chi1": [15, 152, 168], "tau": [15, 73, 152, 154, 168], "r2": 15, "152": [15, 140, 156], "r2ic": 15, "pretty_str": [15, 133, 168], "rbase": [15, 168], "lc": 15, "r2chi1": 15, "get_angl": [15, 133, 168], "get_length": [15, 133, 168], "hedra": [15, 152, 158, 166, 167, 168], "dihedra": [15, 152, 158, 166, 167, 168], "atomkei": [15, 27, 133, 152, 167, 168], "mycic": 15, "r2chi1_object": 15, "pick_angl": [15, 133, 168], "r2chi1_kei": 15, "152_d_n": 15, "152_d_ca": 15, "152_d_cb": 15, "152_d_cg": 15, "r2chi1_index": 15, "dihedrandx": [15, 168], "ndx": [15, 168], "dihedraangl": [15, 168], "r2tau": 15, "hedraangl": [15, 168], "r2cacb": 15, "pick_length": [15, 133, 168], "152_d_c": 15, "hedral12": [15, 168], "hedral23": [15, 168], "set_length": [15, 133, 168], "clean": [15, 56, 60, 92, 95, 237, 245, 250], "inspect": [15, 17, 277, 298], "resultdict": [15, 168], "set_angl": [15, 133, 168], "adjac": [15, 168, 225], "isoleucin": 15, "internal_to_atom_coordin": [15, 133, 136, 144, 158, 160, 168], "proof": [15, 168], "mychain2": [15, 168], "153": [15, 250], "dunbrack": [15, 152, 168], "cullpdb_pc20_res2": [15, 152, 168], "2_r1": [15, 152, 168], "myprotein2": [15, 168], "mostli": [15, 32], "helic": [15, 259], "myprotein3": [15, 168], "gavlimfpstcnqywdehkr": [15, 168], "1rnd": [15, 168], "myrandom": [15, 168], "accuraci": [15, 32, 152, 165, 167, 168, 228, 263, 269], "omega": [15, 17, 32, 152, 168], "picflag": [15, 152], "unspecifi": 15, "preset": 15, "prolin": [15, 152], "sidechain": [15, 152, 166, 168], "ic_residu": [15, 27, 133, 152, 158, 167, 168], "pic_flag": [15, 133, 152, 168], "homogen": [15, 168, 175], "atomarrayindex": [15, 168], "r2_cbeta_index": 15, "r2_cbeta_coord": 15, "coord": [15, 115, 117, 135, 140, 152, 156, 162, 167, 168, 174, 175, 215, 252], "restor": [15, 168, 216, 296], "myatom1": 15, "myatom2": 15, "knowledg": [15, 19], "selector": [15, 168], "atmnamendx": [15, 168], "atm": [15, 133, 168], "aai": 15, "caselect": [15, 168], "akl": [15, 168], "ca_coord": [15, 140, 168], "fanci": [15, 31, 91, 168], "unaffect": 15, "linalg": 15, "despit": [15, 20, 23, 192, 194], "idiom": 15, "cam": [15, 208, 209, 210, 211], "distance_plot": [15, 133, 168], "cadist": [15, 168], "pyplot": [15, 168], "plt": [15, 168], "cmap": [15, 168], "hot": [15, 168], "hiv": 15, "capsid": 15, "lack": [15, 17, 182, 259], "chiral": [15, 168], "mirror": [15, 89, 149, 158, 168, 175, 302], "hedronomet": [15, 168], "stackexchang": [15, 168], "49340": 15, "409": 15, "daylateanddollarshort": 15, "mathdoc": 15, "heron": [15, 168], "tetrahedr": [15, 168], "dihedral_sign": [15, 133, 168], "cic2": [15, 168], "di": [15, 25, 90, 152, 168], "aasiz": [15, 133, 168], "copy_initncac": [15, 133, 168], "distance_to_internal_coordin": [15, 133, 168], "inter": [15, 23], "dihedron": [15, 27, 133, 152, 168], "distplot_to_dh_arrai": [15, 133, 168], "allclos": [15, 167, 168], "xz": [15, 168, 175], "plane": [15, 168, 175], "judici": 15, "intereact": 15, "3pbl": 15, "dopamin": 15, "d3": [15, 168], "receptor": 15, "examin": [15, 269, 281], "hack": [15, 168], "concept": [15, 20, 21, 168, 268], "shorthand": [15, 21, 168, 236, 259], "cic": [15, 133, 168], "resnamendx": [15, 168], "aandx": [15, 168], "pheatomselect": [15, 168], "aaf": [15, 168], "ric": [15, 168], "ordered_aa_ic_list": [15, 168], "cst": [15, 168], "TO": [15, 151, 168], "rcst": [15, 168], "pdb_residue_str": [15, 133, 168], "openscad": [15, 158, 168], "solid": 15, "stl": [15, 158], "chimera": [15, 158], "cgl": 15, "ucsf": 15, "cylind": [15, 100, 158, 168], "amen": 15, "modif": [15, 23, 181, 217, 271], "thingivers": [15, 158, 168], "3957471": [15, 158], "backbon": [15, 140, 158, 166, 168], "accept_backbon": [15, 133, 168], "bridg": [15, 80, 137, 202, 264, 271], "scad": [15, 168], "d2h": [15, 133, 167, 168], "mainchain": [15, 168], "hydrogen": [15, 138, 158, 168, 271], "accept_resnam": [15, 133, 168], "cyg": [15, 168], "ycm": [15, 168], "unk": [15, 21, 168, 259], "ic_data": [15, 27, 133, 152, 168], "gly_cbeta": [15, 133, 168], "neighborsearch": [15, 27, 133], "kdtree": [15, 146], "rmsd": [15, 140, 163, 165, 174, 215], "rotran": 15, "svdsuperimpos": [15, 27], "sup": [15, 215], "set_atom": [15, 133, 163, 174], "structurealign": [15, 27, 133], "hse": [15, 141], "\u00e5": 15, "outperform": 15, "hsexposur": [15, 27, 133], "hsealpha": 15, "exp_ca": 15, "calc_hs_exposur": 15, "ca3": 15, "hsebeta": 15, "exp_cb": 15, "exp_f": 15, "calc_fs_exposur": 15, "some_residu": 15, "academ": [15, 137], "swift": [15, 137], "cmbi": [15, 137, 249], "umcn": [15, 137], "nl": [15, 137, 249], "gv": [15, 137], "consequ": 15, "isol": [15, 23, 137, 201, 202, 271, 277], "bend": [15, 137], "parameter": 15, "michel": [15, 156], "sanner": [15, 156], "msm": [15, 156], "scripp": [15, 156, 262], "msms_home": 15, "residuedepth": [15, 27, 133], "rd": [15, 27, 156, 267, 268], "pdb_file": [15, 145], "residue_depth": [15, 27, 133, 156], "ca_depth": [15, 27, 133, 156], "get_surfac": [15, 27, 133, 156], "semant": [15, 137], "strict_pars": 15, "1fkk": 15, "64000": 15, "mhz": 15, "pc": [15, 73], "incorrectli": 15, "upon": [15, 42, 61, 129, 217, 221, 264], "a3": [15, 104, 168, 175], "a202": 15, "a204": 15, "a203": 15, "1ffk": 15, "b64": 15, "b65": 15, "b67": 15, "b66": 15, "1ejg": 15, "retrieve_pdb_fil": [15, 133, 149], "pdblist": [15, 27, 133], "pdbl": 15, "pdir": [15, 149], "decompress": [15, 23, 25, 269, 277], "gunzip": [15, 23], "kristian": [15, 133, 173], "rother": [15, 133, 173], "donat": 15, "download_entire_pdb": [15, 133, 149], "traffic": 15, "dai": 15, "update_pdb": [15, 133, 149], "pl": [15, 123, 181, 264, 269], "weekli": [15, 149], "cronjob": 15, "get_all_obsolet": [15, 133, 149], "changed_this_week": 15, "week": 15, "nearli": [15, 23], "5500": 15, "daili": 15, "pymol": [15, 141, 165], "btw": 15, "successfulli": [15, 19, 298], "pmv": 15, "coot": 15, "www2": 15, "mrc": [15, 208, 209, 210, 211], "lmb": [15, 208, 209, 210, 211], "pemslei": 15, "ccp4mg": 15, "ccp4": 15, "mg": [15, 263], "mmlib": 15, "pymmlib": 15, "vmd": 15, "uiuc": 15, "mmtk": 15, "dirac": 15, "cnr": 15, "orlean": 15, "disembl": 15, "embl": [15, 21, 22, 23, 25, 32, 92, 94, 233, 236, 237, 244, 259, 273, 274], "lpc": 15, "pharmaceut": 15, "compani": 15, "growth": [16, 299], "cultur": 16, "metabol": [16, 104, 116], "chemic": [16, 112, 117, 119, 213, 263, 264, 271], "twenti": 16, "plate": [16, 297, 298], "reduct": [16, 36, 181], "tetrazolium": 16, "dye": 16, "nadh": [16, 113], "proxi": [16, 149, 236, 259, 273], "sustain": 16, "sigmoid": [16, 298, 299], "curv": [16, 298, 299], "csv": [16, 297, 298], "opm": [16, 297], "ductap": 16, "platerecord": [16, 27, 297, 298], "blob": 16, "pm01": [16, 297, 298], "pm09": [16, 297], "wellrecord": [16, 27, 297, 298], "uppercas": [16, 135, 168, 213, 235, 259, 261, 263], "digit": [16, 118, 181, 200, 203, 204, 213, 269], "a02": [16, 298], "143": [16, 277], "bulk": [16, 20], "a01": [16, 298], "a03": [16, 248, 298], "a12": [16, 298], "b01": [16, 298], "c01": [16, 298], "h01": [16, 298], "c03": [16, 298], "compris": [16, 17, 104, 168, 182, 277], "colorimetr": 16, "fifteen": 16, "intuit": [16, 21, 236], "nan": [16, 298], "interv": [16, 20, 104, 107, 216, 262, 264, 269, 274], "083": 16, "31999999999999": 16, "63999999999999": 16, "95999999999998": 16, "136": 16, "140": [16, 182], "subtract_control": [16, 297, 298], "onto": [16, 165, 175, 181, 213, 215, 250], "average_height": [16, 298], "plateau": [16, 299], "lag": [16, 299], "scipi": [16, 298, 299], "gompertz": [16, 27, 297, 298, 299], "mu_": 16, "y0": [16, 299], "logist": [16, 27, 120, 297, 298, 299], "y_": [16, 99], "getattr": 16, "4414": 16, "aim": [17, 23, 27, 109, 119, 208, 236, 273], "acquaint": 17, "launch": 17, "ipython": 17, "unroot": [17, 128, 132], "art": 17, "________________________": 17, "noth": [17, 31, 54, 65, 99, 240, 249, 274, 277], "recurs": [17, 80, 107, 139, 152, 182, 184, 196, 197, 262], "as_phyloxml": [17, 180, 182, 196], "from_tre": [17, 180, 196], "tripl": [17, 119, 184, 201, 202], "hex": [17, 30, 68, 105, 117], "808080": 17, "cascad": [17, 196], "ancestor": [17, 132, 182], "mrca": [17, 182], "common_ancestor": [17, 128, 132, 180, 182], "salmon": [17, 182], "viewer": 17, "archaeopteryx": 17, "cookbook": [17, 19, 23, 83, 168, 306], "phylo_cookbook": 17, "nexml": [17, 27, 180, 187], "ontologi": [17, 184, 272], "cdao": [17, 27, 180, 184, 187], "int_node_label": 17, "nwk": 17, "gymnosperm": 17, "coniferal": 17, "tax": 17, "nonsci": 17, "taxacea": 17, "cephalotaxu": 17, "phyloxml_exampl": [17, 182], "prof": [17, 123], "phyl": 17, "tree1": [17, 30, 32], "other_tre": 17, "outlin": [17, 20, 32], "phylogram": 17, "__________________": 17, "___________________________________________": 17, "___________________________________________________________________________": 17, "attract": 17, "branch_label": 17, "draw_graphviz": 17, "to_networkx": 17, "attach": [17, 130, 132, 157, 182, 196, 269], "rooted": 17, "smooth": [17, 32], "treemixin": [17, 27, 180, 182], "get_termin": [17, 128, 132, 180, 182], "leaf": [17, 99, 181, 182, 208], "get_nontermin": [17, 180, 182], "nontermin": [17, 182], "find_clad": [17, 180, 182], "find_el": [17, 180, 182], "find_ani": [17, 180, 182], "treeelement": [17, 27, 180, 182, 196], "regex": [17, 168], "foo1": 17, "foo2": 17, "foo3": 17, "foo": [17, 269], "strang": [17, 182, 277], "nonzero": [17, 182], "live": [17, 72], "danger": 17, "lookuperror": 17, "silenc": [17, 27], "is_termin": [17, 128, 132, 180, 182], "preorder": [17, 182], "postord": [17, 182], "df": [17, 182, 193], "breadth": [17, 179, 182], "navig": 17, "get_path": [17, 180, 182], "count_termin": [17, 128, 132, 180, 182], "cumul": [17, 182, 193], "unit_branch_length": [17, 182], "total_branch_length": [17, 180, 182], "terminologi": [17, 21, 22, 121], "is_bifurc": [17, 128, 132, 180, 182], "bifurc": [17, 132, 182], "is_monophylet": [17, 128, 132, 180, 182], "subclad": [17, 132, 182], "mcra": [17, 182], "monophylet": [17, 132, 181, 182], "is_parent_of": [17, 128, 130, 180, 182], "is_pretermin": [17, 128, 132, 180, 182], "intact": 17, "newtre": [17, 30, 32], "collaps": [17, 128, 130, 132, 180, 182, 221], "relink": [17, 130, 182], "collapse_al": [17, 180, 182], "ladder": [17, 132, 180, 182, 189], "deepest": [17, 182], "shallowest": [17, 182], "prune": [17, 128, 132, 180, 181, 182], "root_with_outgroup": [17, 128, 132, 180, 182], "reroot": [17, 182, 196], "outgroup": [17, 80, 132, 180, 181, 182], "trifurc": [17, 182], "root_at_midpoint": [17, 180, 182], "midpoint": [17, 182], "distant": [17, 182], "hood": [17, 216], "speciat": [17, 132, 180, 182, 196, 197], "suffix": [17, 21, 182, 235, 259, 269], "a0": [17, 175, 182], "cue": 17, "phyml": [17, 65, 181], "atgc": [17, 181, 239, 263], "montpelli": [17, 181], "_phyml_tre": 17, "_phyml_stat": 17, "phy_phyml_tre": 17, "________": 17, "___________": 17, "______________": 17, "________________": 17, "___________________________": 17, "_________": 17, "raxml": [17, 65, 181], "sco": [17, 181], "exelixi": [17, 181], "fasttre": [17, 181], "microbesonlin": [17, 181], "dnaml": 17, "protml": 17, "brought": 17, "abacu": 17, "ucl": 17, "codeml": [17, 180, 191], "baseml": [17, 180, 191], "runtim": [17, 136, 144, 160, 168], "strai": 17, "set_opt": 17, "cml": 17, "out_fil": [17, 32, 56, 192, 194, 195, 216, 237, 269], "working_dir": [17, 180, 181, 192, 194, 195], "noisi": 17, "rateancestor": 17, "nssite": 17, "codonfreq": 17, "cleandata": 17, "fix_alpha": 17, "54006": 17, "ns_site": 17, "m0": 17, "m0_param": 17, "codeml_nssites_al": 17, "lnl": 17, "casual": 17, "port": 17, "googl": [17, 19, 196], "summer": 17, "auspic": 17, "nescent": 17, "notabl": 17, "poke": 17, "usabl": [17, 216], "bug": [17, 24, 42, 130, 209, 217, 221, 225, 276], "dendropi": 17, "pycog": 17, "curtin": [18, 200, 203], "hardi": [18, 201, 202], "weinberg": [18, 201, 202], "disequilibrium": [18, 201, 202], "f_": 18, "migrat": 18, "gen": 18, "loci": [18, 200, 201, 202, 203, 204], "loci_list": [18, 200, 203, 204], "compos": [18, 200, 203, 208, 262], "allel": [18, 200, 201, 202, 203, 204], "marker": [18, 72, 99, 200, 203, 204, 250, 274, 277], "ind1": [18, 200, 203, 204], "200": [18, 21, 23, 32, 69, 80, 83, 181, 182, 200, 203, 204, 236], "ind2": [18, 200, 203], "other1": [18, 200, 203], "imagin": [18, 20], "remove_popul": [18, 199, 200, 203], "alter": [18, 23, 216, 271], "remove_locus_by_posit": [18, 199, 200, 203], "remove_locus_by_nam": [18, 199, 200, 203], "silent": [18, 23, 24, 67, 152, 237, 297], "rec_loci": 18, "split_in_loci": [18, 199, 200], "rec_pop": 18, "split_in_pop": [18, 199, 200], "pop_nam": [18, 200, 201], "medium": [18, 23, 282], "brush": 19, "job": [19, 82, 149, 181, 216], "reusabl": 19, "focu": [19, 21, 22, 25], "frustrat": 19, "disput": 19, "agtacactggt": [19, 22], "my_seq": [19, 22, 235], "tcatgtgacca": 19, "accagtgtact": 19, "delv": 19, "wasn": [19, 71], "sorri": 19, "fan": 19, "trip": 19, "greenhous": 19, "suddenli": 19, "incred": 19, "obsess": 19, "photo": 19, "flickr": 19, "beauti": 19, "studi": 19, "fund": 19, "propos": [19, 264, 299], "genera": 19, "paphiopedilum": [19, 23], "phragmipedium": 19, "mexipedium": 19, "challeng": 19, "subtleti": 19, "todai": 19, "2765658": [19, 23], "z78533": [19, 23], "ciz78533": [19, 23], "irapeanum": [19, 23], "its1": [19, 23], "its2": [19, 23], "cgtaacaaggtttccgtaggtgaacctgcggaaggatcattgatgagaccgtggaataaacgatcgagtg": [19, 23], "aatccggaggaccggtgtactcagctcaccgggggcattgctcccgtggtgaccctgatttgttgttggg": [19, 23], "seq_record": [19, 23], "cgtaacaaggtttccgtaggtgaacctgcggaaggatcattgatgagaccgtgg": [19, 23], "cgc": [19, 22, 23], "2765564": 19, "z78439": [19, 23], "pbz78439": 19, "cattgttgagatcacataataattgatcgagttaatctggaggatctgtttact": [19, 23], "nich": 19, "rarer": 19, "unlov": 19, "overwork": 19, "documentor": 19, "tediou": 19, "energi": [19, 104], "tightli": [19, 216], "snoop": 19, "pictur": [19, 99], "mailing_list": 19, "enjoi": 19, "arguabl": [20, 22], "hmmer": [20, 216, 228, 229, 230, 231, 232], "increasingli": 20, "natur": [20, 22, 100, 259, 293], "moreov": 20, "daunt": 20, "ourselv": 20, "homag": 20, "mere": 20, "breez": 20, "ccctctacagggaagcgctttctgttgtctgaaagaaaagaaagtgcttccttttagaggg": 20, "draft": 20, "wildli": 20, "exoner": [20, 27, 30, 216, 222, 223, 224], "possibli": [20, 30, 36, 68, 69, 88, 168, 196, 197, 236], "exon": [20, 21, 61, 236], "tad": 20, "settl": 20, "blast_qresult": 20, "begun": 20, "blat_qresult": 20, "my_blat": 20, "genuin": 20, "42991": 20, "param_evalue_threshold": [20, 217], "drill": 20, "deeper": 20, "hit_kei": 20, "in_plac": 20, "sorted_qresult": 20, "hit_filt": 20, "hsp_filter": 20, "impli": [20, 117], "hit_map": 20, "hsp_map": 20, "filtered_qresult": 20, "mapped_qresult": 20, "seen": [20, 21, 22, 23, 56, 71], "blast_hit": 20, "query_descript": 20, "blat_hit": 20, "54204480": 20, "54204541": 20, "54233104": 20, "54264463": 20, "54254477": 20, "54260071": 20, "54210720": 20, "54210780": 20, "54198476": 20, "54198536": 20, "54265610": 20, "54265671": 20, "54238143": 20, "54240175": 20, "54189735": 20, "54189795": 20, "54185425": 20, "54185486": 20, "54197657": 20, "54197717": 20, "54255662": 20, "54255723": 20, "54201651": 20, "54201712": 20, "54206009": 20, "54206061": 20, "54178987": 20, "54179038": 20, "54212018": 20, "54212071": 20, "54234278": 20, "54234321": 20, "54238196": 20, "worth": 20, "meant": [20, 21, 31, 93, 97, 99, 103, 107, 206, 217, 236], "readili": 20, "exclus": [20, 221, 262], "hit_id": [20, 71, 217], "sliced_hit": 20, "insid": [20, 25, 32, 104, 149, 168, 269], "blast_hsp": 20, "mir520": 20, "bitscor": [20, 217, 225, 228, 233], "half": [20, 53, 61, 84, 99, 141, 181, 216, 220, 264, 274], "parenthesi": 20, "query_rang": 20, "hit_start": [20, 217, 220, 221, 225, 228, 233], "query_span": 20, "aln_span": [20, 217, 228, 233], "gap_num": [20, 217], "ident_num": [20, 217, 220], "__dict__": 20, "bitscore_raw": [20, 217], "pos_num": [20, 217], "_item": 20, "ccctctacagggaagcgctttctgttgtctgaaagaaaagaaag": 20, "blat_hsp": 20, "biggest": 20, "hit_span": 20, "mismatch_num": [20, 217, 220], "interven": 20, "blat_hsp2": 20, "54233122": 20, "54264420": 20, "perfectli": 20, "hit_rang": 20, "hit_range_al": 20, "31359": 20, "hit_span_al": [20, 220], "hit_inter_rang": [20, 221], "hit_inter_span": 20, "31298": 20, "_all": 20, "query_al": 20, "hit_al": 20, "aln_al": 20, "is_frag": 20, "presenc": [20, 274, 298], "blast_frag": 20, "blat_frag": 20, "query_start": [20, 71, 217, 220, 221, 225, 228, 233], "hit_strand": [20, 220, 221, 225, 228], "ought": 20, "pleasant": 20, "unnecessari": [20, 269], "mess": [20, 25, 203], "goal": [20, 216], "complain": [20, 152], "eventu": [20, 67, 190], "implicit": 20, "pertain": 20, "omit": [20, 21, 54, 129, 216, 235, 237, 250, 259], "recogn": [20, 23, 25, 225], "qresult": [20, 216, 217, 218, 219, 220, 221, 230, 231, 234], "tab_2226_tblastn_003": 20, "16080617": [20, 217], "np_391444": [20, 217], "qresult2": 20, "tab_2226_tblastn_007": 20, "tab_2226_tblastn_001": [20, 216], "11464971": [20, 216, 217], "qresults2": 20, "tab_2226_tblastn_005": 20, "random_s00": 20, "grossli": 20, "ineffici": 20, "sound": 20, "idx": [20, 23], "key_funct": [20, 23, 216, 237], "sqlite": [20, 216, 237, 303], "mirna": [20, 216, 267, 269], "richli": [21, 56], "primari": [21, 52, 83, 88, 152, 168, 302], "unstructur": 21, "simple_seq": 21, "gatc": [21, 76], "simple_seq_r": 21, "ac12345": 21, "miscellan": [21, 104, 260], "91001": [21, 237], "45478711": 21, "tgtaacgaacggtgcaatagtgatccacacccaacgcctgaaatcagatccagggggtaatctgctctcc": 21, "tgtaacgaacggtgcaatagtgatccacacccaacgcctgaaatcagatccagg": 21, "popul": [21, 26, 66, 168, 199, 200, 201, 202, 203, 204, 259, 302, 306], "bct": [21, 93], "genomeproject": 21, "10638": 21, "58037": 21, "dblink": [21, 93, 112, 113, 114], "interestingli": 21, "abstract": [21, 30, 107, 123, 176, 177, 178, 179, 208, 235, 236, 245], "imposs": [21, 95, 221], "grasp": 21, "textual": [21, 32, 200, 203], "deleg": 21, "ref_db": [21, 27, 236], "bottom": [21, 99, 104], "ters": 21, "wet": 21, "lab": 21, "sub_featur": [21, 236, 271], "inexact": 21, "restructur": 21, "dinucleotid": 21, "prime": 21, "exactposit": [21, 27, 68, 236], "beforeposit": [21, 27, 236], "signifi": 21, "somewher": [21, 236], "afterposit": [21, 27, 236], "contrari": 21, "withinposit": [21, 27, 236], "oneofposit": [21, 27, 236], "unknownposit": [21, 27, 236], "uniprot": [21, 23, 27, 85, 164, 196, 236, 237, 249, 251, 254, 257, 271, 272, 273], "start_po": 21, "end_po": 21, "betweenposit": [21, 27, 236], "my_loc": 21, "featureposit": 21, "exact_loc": 21, "nitti": 21, "gritti": 21, "4350": 21, "my_snp": 21, "229193": 21, "2767712": 21, "45478716": [21, 255], "union": [21, 150, 164, 168, 235, 236, 259], "accgagacggcaaaggctagcataggtatgagacttccttcctgccagtgctgaggaactgggagcctac": 21, "feature_seq": 21, "agcctttgccgtc": 21, "bad": [21, 23, 250, 259, 277], "messi": 21, "splice": [21, 22, 61, 79, 80, 236, 271], "constitu": [21, 155], "record1": 21, "record2": [21, 250], "surprisingli": 21, "caught": [21, 27, 135, 151], "notimplementederror": 21, "medline_id": [21, 93, 236], "bac": [21, 103, 269], "mmyqqgcfaggtvlrlakdlaennrgarvlvvcseitavtfrgpsethldsmvgqalfgd": [21, 23], "gagavivgsdpdlsverplyelvwtgatllpdsegaidghlrevgltfhllkdvpglisk": [21, 23], "niekslkeaftplgisdwnstfwiahpggpaildqveaklglkeekmratrevlseygnm": [21, 23], "ssac": [21, 23], "14150838": [21, 23], "aak54648": [21, 23], "af376133_1": [21, 23], "chalcon": [21, 23, 25], "synthas": [21, 23, 25], "cucumi": [21, 23], "sativu": [21, 23], "pim": [21, 30, 32], "yp_ppcp05": 21, "4343": 21, "4342": 21, "twelfth": 21, "thirteenth": 21, "pesticin": [21, 237], "immun": 21, "ppcp": 21, "16082683": 21, "np_395230": 21, "nc_003132": 21, "1200166": 21, "caa90861": 21, "z54145": 21, "1488655": 21, "caa63439": 21, "x92856": 21, "2996219": 21, "aac62543": 21, "af053945": 21, "5763814": 21, "cab531": 21, "al109969": 21, "np_995571": [21, 255], "mgggmisklfclaliflsssglaekntytakdilqnlelntfgnslshgiygkqttfkqteftniksntkkhialinkdnswmislkilgikrdeytvcfedfslirpptyvaihpllikkvksgnfivvkeikksipgctvyyh": 21, "4800": 21, "sub_record": [21, 66, 250, 259], "ataaatagattattccaaataatttatttatgtaagaacaggatgggaggggga": 21, "1980": 21, "nc_0058": 21, "trim": [21, 237, 238, 250, 252, 267, 269, 276], "adaptor": [21, 300, 301, 302, 304], "cccttcttgtcttcagcgtttctcc": [21, 237, 250], "cccttcttgtcttcagcgtt": 21, "ctcc": 21, "cccttcttgtcttcagcgttctcc": 21, "data_file_divis": [21, 23, 93], "sequence_vers": [21, 23], "gatacgcagtcatattttttacacaattctctaatcccgacaaggtcgtaggtc": 21, "gga": [21, 22, 76], "cautiou": 21, "problemat": [21, 277], "subtl": 21, "corrupt": [21, 68, 84], "downstream": [21, 83, 132, 182], "rc": [21, 168, 249, 259], "gatcg": 22, "aaaa": 22, "gatcgatgggcctatataggatcgaaaatcgc": 22, "875": 22, "46875": 22, "simul": [22, 181], "gatgggcc": 22, "stride": [22, 259], "gctgtagtaag": 22, "aggcatgcatc": 22, "tagctaagac": 22, "cgctaaaagctaggatatatccgggtagctag": 22, "placehold": [22, 276], "fasta_format_str": 22, "aaccgg": 22, "acgtaaccgg": 22, "protein_seq": 22, "evrnak": 22, "dna_seq": 22, "evrnakacgt": 22, "list_of_seq": 22, "acgtaaccggtt": 22, "atg": [22, 259, 278], "atcccg": 22, "ttgca": 22, "spacer": [22, 99], "atgnnnnnnnnnnatcccgnnnnnnnnnnttgca": 22, "gtac": 22, "ctagctacccggatatatcctagcttttagcg": 22, "gcgattttcgatcctatataggcccatcgatc": 22, "weird": 22, "meaningless": 22, "ebyntm": 22, "stretch": [22, 252], "peptid": [22, 32, 154, 168, 262, 271], "gather": [22, 53], "aka": [22, 237, 240, 249, 254, 277, 303], "crick": [22, 32], "qquad": 22, "texttt": 22, "atggccattgtaatgggccgctgaaagggtgcccgatag": 22, "taccggtaacattacccggcgactttcccacgggctatc": 22, "watson": [22, 32], "auggccauuguaaugggccgcugaaagggugcccgauag": 22, "messeng": 22, "tcag": [22, 252], "rightarrow": 22, "cuga": 22, "coding_dna": [22, 235], "template_dna": 22, "ctatcgggcaccctttcagcggcccattacaatggccat": 22, "transcrib": [22, 27, 235], "messenger_rna": 22, "back_transcrib": [22, 27, 235], "stick": [22, 24, 236], "maivmgr": [22, 259], "kgar": [22, 235], "excus": 22, "maivmgrwkgar": [22, 235, 260], "stop_symbol": [22, 235, 236, 259, 280], "commenc": 22, "yaax": 22, "k12": 22, "gtgaaaaagatgcaatctatcgtactcgcactttccctggttctggtcgctcccatggca": 22, "gcacaggctgcggaaattacgttagtcccgtcagtaaaattacagataggcgatcgtgat": 22, "aatcgtggctattactgggatggaggtcactggcgcgaccacggctggtggaaacaacat": 22, "tatgaatggcgaggcaatcgctggcacctacacggaccgccgccaccgccgcgccaccat": 22, "aagaaagctcctcatgatcatcacggcggtcatggtccaggcaaacatcaccgctaa": 22, "vkkmqsivlalslvlvapmaaqaaeitlvpsvklqigdrdnrgyywdgghwrdh": 22, "hr": [22, 221], "proteinalpabet": 22, "valin": [22, 235], "methionin": [22, 154, 235, 271], "mkkmqsivlalslvlvapmaaqaaeitlvpsvklqigdrdnrgyywdgghwrdh": 22, "misc": [22, 76, 94], "prt": [22, 76, 271], "wprintgc": 22, "codont": [22, 27, 30, 75, 235, 236, 260], "standard_t": 22, "unambiguous_dna_by_nam": 22, "mito_t": 22, "unambiguous_dna_by_id": 22, "sgc0": [22, 76], "tct": [22, 76], "tat": [22, 30, 76], "tgt": [22, 76], "ttc": [22, 76], "tcc": [22, 76], "tac": [22, 76], "tgc": [22, 76], "tca": 22, "taa": [22, 76, 280], "tga": [22, 76, 235], "tcg": [22, 30, 235, 279], "tgg": [22, 76], "ctt": [22, 62], "cct": 22, "cat": [22, 180, 181, 269, 277], "cgt": [22, 30, 259, 278], "ccc": 22, "cac": 22, "cca": 22, "cga": [22, 30, 235], "cag": 22, "cgg": [22, 30], "agt": 22, "atc": [22, 30], "agc": [22, 259, 260], "ata": 22, "agg": [22, 30], "gct": [22, 235], "ggc": 22, "gca": [22, 76], "gcg": [22, 27, 32, 48, 56, 63, 76, 260, 261], "gag": [22, 76], "sgc1": 22, "stop_codon": [22, 75, 76], "start_codon": [22, 75, 76], "forward_t": [22, 75, 76], "constitut": 22, "config": [22, 84], "unknown_seq": 22, "undefinedsequenceerror": [22, 27, 235], "excerpt": 22, "maf": [22, 27, 30, 37, 61, 277], "opossum": 22, "117512683": 22, "159345973": 22, "ttgaaaacctgaatgtgagagtcagtcaaggatagt": 22, "pantro4": 22, "119000876": 22, "161824586": 22, "ttgaaaacctgaatgtgagagtcactcaaggatagt": 22, "rhemac3": 22, "156330991": 22, "198365852": 22, "ctgaaatcctgaatgtgagagtcaatcaaggatggt": 22, "18207101": 22, "149736546": 22, "ctgaaaacctaagtaggagaatcaactaaggataat": 22, "rn5": 22, "42326848": 22, "248343840": 22, "ctgaaaacctaagtaggagagacagttaaagataat": 22, "canfam3": 22, "chr14": 22, "56325207": 22, "60966679": 22, "ttgaaaaactgattattagagtcaattaaggatagt": 22, "mondom5": 22, "173163865": 22, "312544902": 22, "ttaagaaactggaaatgagggttgaatgacaaactt": 22, "1020": 22, "117512690": 22, "117512700": 22, "cctgaatgtg": 22, "117512670": 22, "ttgaaaa": 22, "agagtcagtcaaggatagt": 22, "41833273": 22, "undefined_seq": 22, "apart": [22, 236, 255], "gccattgtaatgggccgctgaaagggtgcccga": 22, "mutabl": [22, 235], "mutable_seq": 22, "gccatcgtaatgggccgctgaaagggtgcccga": 22, "gccacgtaatgggccgctgaaagggtgcccga": 22, "agcccgtgggaaagtcgccgggtaatgcaccg": 22, "technic": [22, 23, 25, 27], "new_seq": [22, 71], "rfind": [22, 27, 235], "rindex": [22, 27, 235], "atgggccgc": 22, "actg": [22, 260], "my_str": 22, "gctgttatgggtcgttggaagggtggtcgtgctgctggttag": 22, "ctaaccagcagcacgaccacccttccaacgacccataacagc": 22, "gcuguuaugggucguuggaaggguggucgugcugcugguuag": 22, "avmgrwkggraag": 22, "assort": [23, 261, 275], "overhead": [23, 168, 216], "workhors": 23, "z78532": 23, "z78531": 23, "z78530": 23, "z78529": 23, "z78527": 23, "first_record": [23, 30], "second_record": 23, "last_record": [23, 30], "nov": [23, 149], "latin": 23, "thale": 23, "cress": 23, "all_speci": 23, "californicum": 23, "barbatum": 23, "fasciculatum": 23, "cgtaacaaggtttccgtaggtgaacctgcggaaggatcattgatgagaccgtggaataaa": 23, "cgatcgagtgaatccggaggaccggtgtactcagctcaccgggggcattgctcccgtggt": 23, "gaccctgatttgttgttgggccgcctcgggagcgtccatggcgggt": 23, "67518": 23, "fashion": 23, "bz2": 23, "gnu": [23, 277], "bgzf": [23, 27, 216, 237], "alia": [23, 30, 36, 104, 217, 236, 237, 250, 269, 296], "marena": 23, "clavata": 23, "grusonia": 23, "bradtiana": 23, "bradtianaa": 23, "get_sprot_raw": [23, 25, 27, 85], "o23729": [23, 25, 85], "chs3_brofi": [23, 85], "recnam": [23, 25], "altnam": 23, "naringenin": 23, "mapameeirqaqraegpaavlaigtstppnalyqadypdyyfritksehltelk": 23, "gae": 23, "394": 23, "acyltransferas": 23, "flavonoid": 23, "biosynthesi": [23, 25], "exhaust": [23, 42, 181, 221, 269], "bigendian": 23, "seq11111": 23, "seq222": 23, "seq3333": 23, "seq555": 23, "ttgatcggtgacaaattttttacaaagaactgtaggacttgctacttctccctc": 23, "multi": [23, 30, 32, 81, 94, 131, 179, 181, 182, 269, 277, 279], "trade": [23, 168, 269], "to_dict": [23, 27, 216, 237, 250, 282, 286], "ground": 23, "ubiquit": 23, "hash": [23, 69, 139, 168, 235, 236, 286], "perl": [23, 287], "moder": [23, 269], "dirti": [23, 31, 132], "orchid_dict": 23, "z78484": 23, "z78464": 23, "z78455": 23, "z78442": 23, "z78453": 23, "z78471": 23, "z78475": 23, "supardii": 23, "cgtaacaaggtttccgtaggtgaacctgcggaaggatcattgttgagatcacat": 23, "2765596": 23, "pdz78471": 23, "2765646": 23, "z78521": 23, "ccz78521": 23, "2765613": 23, "z78488": 23, "ptz78488": 23, "2765583": 23, "z78458": 23, "phz78458": 23, "get_access": 23, "crc64": [23, 27, 260, 261], "jueown6dphgz9nayowsgtod9tto": 23, "mn": 23, "s0q9zdocveec": 23, "ifwcnf2pi": 23, "jfashya": 23, "4yyaj7ibmqgnkxdxq": 23, "seguid_dict": [23, 237], "ram": [23, 216, 237, 250, 277], "tini": 23, "get_acc": 23, "swissport": 23, "current_releas": 23, "knowledgebas": [23, 25, 254, 271], "uniprot_sprot": [23, 25], "uncompress": [23, 25, 269, 277], "p33487": 23, "p19801": 23, "p13689": 23, "q8jzq5": 23, "q9trc7": 23, "viral": 23, "gbvrl1": 23, "gbvrl38": 23, "8gb": 23, "rsync": 23, "avp": 23, "gbvrl": 23, "25mb": 23, "1gb": [23, 69], "curl": 23, "gbvrl2": 23, "gbvrl3": 23, "gbvrl4": 23, "glob": [23, 216, 237], "gb_vrl": 23, "272960": 23, "reload": [23, 216, 237], "fraction": [23, 80, 263, 264, 269, 289], "ab811634": 23, "equin": 23, "encephalosi": 23, "ns3": 23, "kimron1": 23, "vrl": 23, "tabix": 23, "bgzip": [23, 277], "bgz": [23, 216, 237, 277], "analys": [23, 181], "boil": 23, "downsid": 23, "frozen": 23, "4gb": 23, "64bit": 23, "rerun": 23, "rec1": 23, "rec2": 23, "ypdyyfritnrehkaelkekfqrmcdksmikkrymylteeilkenpsmceymapsldarq": 23, "dmvvveipklgkeaavkaikewgq": 23, "13919613": 23, "aak33142": 23, "fragaria": 23, "vesca": 23, "subsp": 23, "bracteata": 23, "rec3": 23, "mvtveefrraqcaegpatvmaigtatpsncvdqstypdyyfritnsehkvelkekfkrmc": 23, "eksmikkrymhlteeilkenpnicaymapsldarqdivvvevpklgkeaaqkaikewgqp": 23, "kskithlvfcttsgvdmpgcdyqltkllglrpsvkrfmmyqqgcfaggtvlrmakdlaen": 23, "nkgarvlvvcseitavtfrgpndthldslvgqalfgdgaaaviigsdpipeverplfelv": 23, "saaqtllpdsegaidghlrevgltfhllkdvpgliskniekslveafqplgisdwnslfw": 23, "iahpggpaildqvelklglkqeklkatrkvlsnygnmssacvlfildemrkasakeglgt": 23, "tgeglewgvlfgfgpgltvetvvlhsvat": 23, "13925890": 23, "aak49457": 23, "nicotiana": 23, "tabacum": 23, "my_record": [23, 259], "tripabl": 23, "unchang": [23, 259], "reproduc": [23, 168, 181], "yal068c": 23, "7235": 23, "2170": 23, "tacgagaataatttctcatcatccagctttaacacaaaattcgcacagttttcgttaaga": 23, "gaacttaacattttcttatgacgtaaatgaagtttatatataaatttcctttttattgga": 23, "tacgagaataatttctcatcatccagctttaacacaaaattcgca": 23, "cagttttcgttaagagaacttaacattttcttatgacgtaaatga": 23, "agtttatatataaatttcctttttattgga": 23, "pointless": 23, "overwrit": [23, 32, 56, 149, 237, 269], "principl": 23, "qual": [23, 237, 239, 248, 250, 252, 259], "incent": 23, "rc_": 23, "sleev": 23, "rev_comp": 23, "fasta_data": 23, "bright": [23, 100], "ls_orchid_long": 23, "quicker": [23, 208], "neutral": [23, 34, 279], "total_len": 23, "run_test": 24, "aspect": 24, "undervalu": 24, "strongli": [24, 181, 200, 250, 259], "test_xxx": 24, "test_seqio": 24, "test_alignio": 24, "offlin": 24, "testcas": 24, "test_": 24, "ini": 24, "pin": 24, "envlist": 24, "pypi": [24, 216, 237], "py38": 24, "py39": 24, "testenv": 24, "changedir": 24, "envpython": 24, "dep": [24, 123], "python3": [24, 84], "biospam": 24, "test_biospam": 24, "clog": 24, "test_ac": 24, "test_biosql": [24, 304], "test_biosql_seqio": 24, "test_cap": 24, "test_clustalw": 24, "pillow": 24, "nose": 24, "troubl": 24, "past": [24, 158, 235], "biospamtestaddit": 24, "test_addition1": 24, "assertequ": 24, "test_addition2": 24, "biospamtestdivis": 24, "test_division1": 24, "assertalmostequ": 24, "test_division2": 24, "__name__": [24, 302], "__main__": 24, "runner": 24, "texttestrunn": 24, "testrunn": 24, "roundoff": 24, "teardown": 24, "tidi": [24, 85, 91, 148, 169, 172, 250], "test_biospammymodul": 24, "testaddit": 24, "testdivis": 24, "059": 24, "unittest_suit": 24, "testload": 24, "loadtestsfromnam": 24, "doctest_suit": 24, "doctestsuit": 24, "testsuit": 24, "histor": [24, 71, 151, 296], "exclude_doctest_modul": 24, "abstractpropertymap": [24, 27, 133, 141, 156], "_fasttre": [24, 181], "_io": 24, "_util": 24, "online_doctest_modul": 24, "togow": [24, 27, 119], "affi": [24, 27], "celfil": [24, 27, 28], "fragil": 24, "test_tutori": 24, "consol": [24, 32, 206], "pycon": 24, "cont": 24, "prot_guidelin": 25, "trembl": [25, 89, 254], "pir": [25, 32, 237, 249], "psd": 25, "f2cxe6": 25, "myswissprotfil": 25, "agnost": [25, 168], "subnam": 25, "intrins": 25, "eco": 25, "0000313": 25, "ban04711": 25, "baj87517": 25, "matsumoto": 25, "tanaka": 25, "sakai": 25, "amano": 25, "kanamori": 25, "kurita": 25, "kikuta": 25, "kamiya": 25, "yamamoto": 25, "ikawa": 25, "fujii": 25, "hori": 25, "itoh": 25, "sato": 25, "barlei": 25, "cdna": 25, "shibasaka": 25, "sasano": 25, "utsugi": 25, "katsuhara": 25, "character": 25, "novel": [25, 32], "protein2": 25, "organism_classif": [25, 66, 271], "poal": 25, "poacea": 25, "bep": 25, "pooidea": 25, "triticea": 25, "hordeum": 25, "300mb": 25, "5gb": 25, "spare": 25, "468851": 25, "mgf": 25, "1r": 25, "2l": 25, "desktop": 25, "dir": [25, 149, 208, 209], "__doc__": 25, "__module__": [25, 277], "annotation_upd": [25, 271], "cross_refer": [25, 271], "data_class": [25, 271], "entry_nam": [25, 85, 271], "gene_nam": [25, 271], "host_organ": [25, 271], "seqinfo": [25, 271], "sequence_length": [25, 271], "sequence_upd": [25, 271], "taxonomy_id": [25, 271], "keywlist": [25, 27, 271], "2fe": 25, "kw": [25, 272], "0001": 25, "iron": [25, 112], "sulfur": 25, "atom": [25, 27, 31, 119, 133, 134, 136, 138, 139, 141, 143, 144, 145, 146, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 171, 172, 174, 175, 208, 213, 237, 247], "inorgan": 25, "sulfid": 25, "cystein": [25, 264], "fe2s2": 25, "fe2": 25, "mu": [25, 216], "sulfido": 25, "diiron": 25, "0051537": 25, "ligand": [25, 53, 112, 138], "metal": [25, 271], "resolv": [25, 129, 184], "rai": [25, 144], "crystallographi": [25, 144], "spectroscopi": 25, "3fe": 25, "2073": 25, "decemb": 25, "myprositefil": 25, "ps00001": [25, 85], "asn_glycosyl": 25, "pdoc": [25, 88], "pdoc00001": [25, 85], "ps00004": 25, "camp_phospho_sit": 25, "pdoc00004": 25, "ps00005": 25, "pkc_phospho_sit": 25, "pdoc00005": 25, "mysingleprositerecord": 25, "prodoc": [25, 27, 85], "lipoprotein": 25, "lipas": 25, "diacylglycerol": 25, "diglycerid": 25, "triacylglycerol": 25, "carboxyl": [25, 79, 80], "hydrolyz": 25, "chylomicron": 25, "densiti": [25, 217, 293], "vldl": 25, "pdoc00110": 25, "p11151": 25, "lipl_bovin": 25, "p11153": 25, "lipl_cavpo": 25, "p11602": 25, "lipl_chick": 25, "p55031": 25, "lipl_felca": 25, "p06858": 25, "lipl_human": 25, "p11152": 25, "lipl_mous": 25, "o46647": 25, "lipl_musvi": 25, "p49060": 25, "lipl_papan": 25, "p49923": 25, "lipl_pig": 25, "q06000": 25, "lipl_rat": 25, "q29524": 25, "lipl_sheep": 25, "commiss": 25, "catalyt": [25, 53, 86], "4877": 25, "march": 25, "ecnumb": 25, "get_prodoc_entri": [25, 27, 85], "get_prosite_entri": [25, 27, 85], "get_prosite_raw": [25, 27, 85], "justif": 25, "flavanoid": 25, "pigment": 25, "uv": 25, "protect": 25, "o23730": 25, "o23731": 25, "feed": [25, 85, 89, 92, 94, 190], "valueexcept": 25, "knew": 25, "beforehand": [25, 251], "2697049": [25, 275], "organism_id": [25, 275], "insulin": [25, 157], "itertool": [25, 275], "islic": [25, 275], "result_iter": 25, "5147": 25, "face": [25, 149], "myprositerecord": [25, 85], "myprodocrecord": [25, 85], "scanprosit": [25, 27, 85], "mehkevvlllllflksgqgeplddyvntqgaslfsvtkkqlgagsieecaakceedeeft": 25, "crafqyhskeqqcvimaenrkssiiirmrdvvlfekkvylsecktgngknyrgtmsktkn": 25, "n_seq": [25, 89], "n_match": [25, 89], "sequence_ac": [25, 89], "userseq1": 25, "signature_ac": [25, 89], "ps50948": 25, "873": 25, "lowscor": 25, "pairwise2": [26, 27, 306], "popgen": [26, 27, 306], "kegg": [26, 27, 105, 196, 273, 306], "phenotyp": [26, 27, 306], "appendix": [26, 181, 306], "bibliographi": [26, 306], "parsererror": [27, 28, 29], "print_info_cont": [27, 30, 31], "alignmentwrit": [27, 30, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 56, 60, 64], "bigb": [27, 30, 37, 38], "bigmaf": [27, 30], "bigpsl": [27, 30], "msf": [27, 30, 32, 56, 63], "sam": [27, 30, 33, 53, 55, 269, 277], "__getnewargs__": [27, 30, 36, 236, 296], "__new__": [27, 30, 36, 54, 83, 84, 180, 196, 236, 296], "__repr__": [27, 30, 36, 54, 56, 61, 67, 68, 75, 76, 83, 84, 85, 86, 90, 92, 93, 95, 133, 135, 136, 140, 144, 148, 154, 155, 160, 168, 175, 176, 177, 178, 179, 180, 182, 236, 259, 274, 296, 297, 298, 300, 302], "__slots__": [27, 30, 36, 235, 296], "__str__": [27, 30, 31, 36, 54, 67, 68, 71, 75, 76, 79, 82, 83, 84, 85, 86, 90, 92, 93, 96, 97, 98, 104, 111, 112, 113, 114, 115, 117, 121, 128, 131, 132, 176, 177, 178, 179, 180, 182, 196, 199, 200, 203, 208, 209, 210, 211, 212, 214, 236, 259, 260, 278, 279, 282, 285, 286, 287, 289, 292, 294, 295, 297, 298], "__format__": [27, 30, 54, 180, 182, 259, 282], "__iter__": [27, 30, 56, 60, 68, 92, 128, 131, 133, 134, 135, 139, 180, 182, 196, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 245, 259, 277, 297, 298, 300, 302], "__len__": [27, 30, 36, 44, 45, 56, 61, 79, 81, 98, 104, 128, 131, 133, 134, 139, 140, 180, 182, 196, 235, 236, 237, 256, 259, 282, 297, 298, 300, 302], "__add__": [27, 30, 133, 175, 208, 213, 235, 236, 259, 278, 279, 297, 298], "__getitem__": [27, 30, 31, 36, 45, 54, 68, 75, 76, 98, 104, 128, 131, 133, 134, 136, 139, 140, 175, 180, 182, 196, 208, 209, 213, 235, 237, 256, 259, 278, 279, 282, 288, 289, 290, 291, 294, 297, 298, 300, 302], "__delitem__": [27, 30, 133, 136, 139, 180, 196, 235, 297, 298, 300, 302], "__array__": [27, 30], "__eq__": [27, 30, 83, 84, 133, 135, 139, 168, 176, 177, 178, 179, 235, 236, 259, 282, 286, 297, 298], "__ne__": [27, 30, 83, 84, 133, 135, 139, 168, 259], "__lt__": [27, 30, 133, 135, 136, 139, 168, 235, 259], "__le__": [27, 30, 133, 135, 136, 139, 168, 235, 259], "__gt__": [27, 30, 133, 135, 136, 139, 168, 235, 259], "__ge__": [27, 30, 133, 135, 136, 139, 168, 235, 259], "__hash__": [27, 30, 83, 84, 133, 135, 139, 168, 176, 177, 178, 179, 235, 236, 259, 282, 286, 297, 298], "__next__": [27, 30, 45, 56, 57, 58, 60, 62, 63, 65, 66, 68, 92, 128, 129, 131, 237, 245, 277], "rewind": [27, 30, 45], "__abstractmethods__": [27, 30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 68, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 235, 236, 237, 238, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 258, 278, 280, 282, 290], "__setattr__": [27, 30, 67], "__getstate__": [27, 30], "__setstate__": [27, 30, 54], "codonalign": [27, 30], "clustalio": [27, 56], "clustalwrit": [27, 56, 57], "clustaliter": [27, 56, 57], "embossio": [27, 56], "embossiter": [27, 56, 58], "fastam10iter": [27, 56, 59], "sequentialalignmentwrit": [27, 56, 57, 60, 61, 62, 65, 66], "mafio": [27, 56], "mafwrit": [27, 56, 61], "mafiter": [27, 56, 61], "mafindex": [27, 56, 61], "mauveio": [27, 56], "mauvewrit": [27, 56, 62], "mauveiter": [27, 56, 62], "msfio": [27, 56], "msfiter": [27, 56, 63], "nexusio": [27, 56, 180], "nexusiter": [27, 56, 64], "nexuswrit": [27, 56, 64], "phylipio": [27, 56], "phylipwrit": [27, 56, 65], "phylipiter": [27, 56, 60, 65], "relaxedphylipwrit": [27, 56, 65], "relaxedphylipiter": [27, 56, 65], "sequentialphylipwrit": [27, 56, 65], "sequentialphylipiter": [27, 56, 65], "sanitize_nam": [27, 56, 65], "stockholmio": [27, 56], "stockholmwrit": [27, 56, 66], "stockholmiter": [27, 56, 66], "applicationerror": [27, 67], "abstractcommandlin": [27, 32, 67, 69, 80, 181, 269], "set_paramet": [27, 67], "__call__": [27, 67, 296], "ncbiblastpcommandlin": [27, 68, 69], "ncbiblastncommandlin": [27, 68, 69], "ncbiblastxcommandlin": [27, 68, 69], "ncbitblastncommandlin": [27, 68, 69], "ncbitblastxcommandlin": [27, 68, 69], "ncbipsiblastcommandlin": [27, 68, 69], "ncbirpsblastcommandlin": [27, 68, 69], "ncbirpstblastncommandlin": [27, 68, 69], "ncbiblastformattercommandlin": [27, 68, 69], "ncbideltablastcommandlin": [27, 68, 69], "ncbimakeblastdbcommandlin": [27, 68, 69], "fmt_": [27, 68, 71], "descriptionext": [27, 68, 71], "descriptionextitem": [27, 68, 71], "hsp": [27, 68, 69, 71, 216, 217, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 233], "multiplealign": [27, 68, 71], "databasereport": [27, 68, 71], "blastpars": [27, 68, 71], "__contains__": [27, 30, 54, 68, 75, 76, 133, 134, 136, 139, 140, 168, 175, 180, 196, 235, 236, 259, 297, 298, 300, 302], "__enter__": [27, 30, 45, 68, 277], "__exit__": [27, 30, 45, 68, 277], "cap": [27, 89, 269], "differentialcutsit": [27, 72], "alignmenthasdifferentlengthserror": [27, 72], "capsmap": [27, 72], "compass": 27, "query_coverag": [27, 74], "hit_coverag": [27, 74], "translationerror": [27, 75, 76, 235], "make_back_t": [27, 75, 76], "ncbicodont": [27, 75, 76], "ncbicodontabledna": [27, 75, 76], "ncbicodontablerna": [27, 75, 76], "ambiguouscodont": [27, 75, 76], "list_possible_protein": [27, 75, 76], "list_ambiguous_codon": [27, 75, 76], "ambiguousforwardt": [27, 75, 76], "register_ncbi_t": [27, 75, 76], "iupacdata": [27, 75], "pdbdata": [27, 75], "primer3commandlin": [27, 79, 80], "primersearchcommandlin": [27, 79, 80], "fdnadistcommandlin": [27, 79, 80], "ftreedistcommandlin": [27, 79, 80], "fneighborcommandlin": [27, 79, 80], "fseqbootcommandlin": [27, 79, 80], "fdnaparscommandlin": [27, 79, 80], "fprotparscommandlin": [27, 79, 80], "fprotdistcommandlin": [27, 79, 80], "fconsensecommandlin": [27, 79, 80], "watercommandlin": [27, 67, 79, 80], "needlecommandlin": [27, 79, 80], "needleallcommandlin": [27, 79, 80], "stretchercommandlin": [27, 79, 80], "fuzznuccommandlin": [27, 79, 80], "fuzzprocommandlin": [27, 79, 80], "est2genomecommandlin": [27, 79, 80], "etandemcommandlin": [27, 79, 80], "einvertedcommandlin": [27, 79, 80], "palindromecommandlin": [27, 79, 80], "tranaligncommandlin": [27, 79, 80], "diffseqcommandlin": [27, 79, 80], "iepcommandlin": [27, 79, 80], "seqretcommandlin": [27, 79, 80], "seqmatchallcommandlin": [27, 79, 80], "primer3": [27, 79, 80], "primersearch": [27, 79, 80], "inputrecord": [27, 79, 82], "outputrecord": [27, 79, 82], "amplifi": [27, 72, 79, 80, 82, 252], "noneel": [27, 83, 84], "integerel": [27, 83, 84], "stringel": [27, 83, 84], "listel": [27, 83, 84], "dictionaryel": [27, 83, 84], "orderedlistel": [27, 83, 84], "datahandlermeta": [27, 83, 84], "datahandl": [27, 83, 84], "epost": [27, 83], "esearch": [27, 83, 273], "elink": [27, 83], "einfo": [27, 83], "esummari": [27, 83], "egqueri": [27, 83], "espel": [27, 83], "ecitmatch": [27, 83], "contenthandl": [27, 85, 89, 237, 251], "cellosauru": [27, 85], "scanner": [27, 92], "insdcscann": [27, 92, 94], "emblscann": [27, 92, 94], "genbankscann": [27, 92, 94], "featurevalueclean": [27, 92, 95], "parserfailureerror": [27, 92], "featurepars": [27, 92], "recordpars": [27, 92], "geo": 27, "out_block": [27, 96, 97], "spacerseg": [27, 98, 99], "colorspir": [27, 98], "get_color": [27, 98, 100], "get_color_dict": [27, 98, 100], "comparativescatterplot": [27, 98, 101], "displayrepresent": [27, 98], "chromosomecount": [27, 98, 102], "distributionpag": [27, 98, 103], "barchartdistribut": [27, 98, 103], "linedistribut": [27, 98, 103], "kgml_vi": [27, 98], "darken": [27, 98, 105], "color_to_reportlab": [27, 98, 105], "get_temp_imagefilenam": [27, 98, 105], "kgmlcanva": [27, 98, 105], "dynamicprogram": [27, 106], "abstractdpalgorithm": [27, 106, 107], "scaleddpalgorithm": [27, 106, 107, 109], "logdpalgorithm": [27, 106, 107], "markovmodel": [27, 106], "markovmodelbuild": [27, 106, 108], "hiddenmarkovmodel": [27, 106, 108], "trainer": [27, 106], "trainingsequ": [27, 106, 107, 109], "abstracttrain": [27, 106, 109], "baumwelchtrain": [27, 106, 109], "knownstatetrain": [27, 106, 109], "pretty_print_predict": [27, 106, 110], "kgml": [27, 105, 111, 119], "kegg_info": [27, 111, 119], "kegg_conv": [27, 111, 119], "kegg_link": [27, 111, 119], "noetool": [27, 124], "predictno": [27, 124, 125], "xpktool": [27, 124, 125], "xpkentri": [27, 124, 126], "peaklist": [27, 124, 125, 126], "replace_entri": [27, 124, 126], "data_t": [27, 124, 126], "nexuserror": [27, 128, 129, 131], "charbuff": [27, 128, 129], "stepmatrix": [27, 128, 129], "safenam": [27, 128, 129], "quotestrip": [27, 128, 129], "get_start_end": [27, 128, 129], "commandlin": [27, 32, 67, 69, 80, 128, 129], "chainexcept": [27, 128, 130], "nodeexcept": [27, 128, 130], "standarddata": [27, 128], "treeerror": [27, 128, 132], "nodedata": [27, 128, 130, 132, 183, 186, 188], "mmtf": [27, 133, 149], "abstractresiduepropertymap": [27, 133, 134, 137, 145], "abstractatompropertymap": [27, 133, 134, 145], "ss_to_index": [27, 133, 137], "dssp_dict_from_pdb_fil": [27, 133, 137], "make_dssp_dict": [27, 133, 137], "chainselector": [27, 133, 138], "fragmentmapp": [27, 133], "hsexposureca": [27, 133, 141], "hsexposurecb": [27, 133, 141], "exposurecn": [27, 133, 141], "fastmmcifpars": [27, 133, 143], "naccess": [27, 133], "run_naccess": [27, 133, 145], "process_rsa_data": [27, 133, 145], "process_asa_data": [27, 133, 145], "naccess_atom": [27, 133, 145], "pdbexcept": [27, 133, 152, 167], "pdbconstructionwarn": [27, 133, 147], "pdbioexcept": [27, 133, 147], "structureio": [27, 133, 148, 169, 172], "enumerate_atom": [27, 133, 152], "pdb_date": [27, 133, 152], "psea": [27, 133], "run_psea": [27, 133, 153], "psea2hec": [27, 133, 153], "polypeptid": [27, 133, 140, 262, 271], "index_to_on": [27, 133, 154], "one_to_index": [27, 133, 154], "index_to_thre": [27, 133, 154], "three_to_index": [27, 133, 154], "is_nucl": [27, 133, 154], "min_dist": [27, 133, 156, 201, 202], "sasa": [27, 133, 145], "shrakeruplei": [27, 133, 157], "uniqueifi": [27, 133, 159], "get_unique_par": [27, 133, 159], "structurebuild": [27, 133, 143, 151], "alphafold_db": [27, 133], "get_predict": [27, 133, 164], "download_cif_for": [27, 133, 164], "get_structural_models_for": [27, 133, 164], "cealign": [27, 133], "report_": [27, 133, 167], "compare_residu": [27, 133, 167], "internal_coord": [27, 133, 136, 152, 158, 160], "edron": [27, 133, 168], "hedron": [27, 133, 152, 158, 168], "set_accuracy_95": [27, 133, 168], "hedronmatcherror": [27, 133, 168], "missingatomerror": [27, 133, 168], "qcprot": [27, 133], "qcp": [27, 133, 174], "qcpsuperimpos": [27, 133, 174], "m2rotaxi": [27, 133, 175], "vector_to_axi": [27, 133, 175], "rotaxis2m": [27, 133, 175], "homog_rot_mtx": [27, 133, 175], "set_z_homog_rot_mtx": [27, 133, 175], "set_y_homog_rot_mtx": [27, 133, 175], "set_x_homog_rot_mtx": [27, 133, 175], "homog_trans_mtx": [27, 133, 175], "set_homog_trans_mtx": [27, 133, 175], "homog_scale_mtx": [27, 133, 175], "get_spherical_coordin": [27, 133, 175], "coord_spac": [27, 133, 175], "multi_rot_z": [27, 133, 175], "multi_rot_i": [27, 133, 175], "multi_coord_spac": [27, 133, 175], "reaction": [27, 111, 113, 115, 116, 117, 118, 176, 273], "add_react": [27, 115, 117, 176], "remove_react": [27, 115, 117, 176], "stochiometri": [27, 176], "add_speci": [27, 176], "add_interact": [27, 176], "source_interact": [27, 176], "sink": [27, 176], "sink_interact": [27, 176], "branchcolor": [27, 180, 182, 196], "cdaoio": [27, 180], "quri": [27, 180, 184, 187], "format_label": [27, 180, 184], "strict_consensu": [27, 180, 185], "majority_consensu": [27, 180, 185], "adam_consensu": [27, 180, 185], "get_support": [27, 180, 185], "bootstrap_tre": [27, 180, 185], "bootstrap_consensu": [27, 180, 185], "nexmlio": [27, 180], "cdao_to_obo": [27, 180, 187], "nexmlerror": [27, 180, 187], "newickio": [27, 180, 190], "newickerror": [27, 180, 189], "phyloxml": [27, 180, 182, 197], "phyloxmlwarn": [27, 180, 196], "phyloel": [27, 180, 196], "binarycharact": [27, 180, 196], "claderel": [27, 180, 196], "domainarchitectur": [27, 180, 196], "molseq": [27, 180, 196], "polygon": [27, 180, 196, 197], "proteindomain": [27, 180, 196], "sequencerel": [27, 180, 196], "uri": [27, 84, 180, 184, 187, 196, 197], "phyloxmlio": [27, 180, 182], "phyloxmlerror": [27, 180, 197], "distancecalcul": [27, 180, 198], "treeconstructor": [27, 180, 185, 198], "scorer": [27, 180, 198], "treesearch": [27, 180, 198], "nnitreesearch": [27, 180, 198], "parsimonyscor": [27, 180, 198], "parsimonytreeconstructor": [27, 180, 198], "genepop": [27, 199], "printformat": [27, 205], "restriction_dictionari": [27, 205], "hie": [27, 208], "raf": [27, 208], "normalize_lett": [27, 208, 213], "seqmapindex": [27, 208, 213], "seqmap": [27, 208, 213], "cmp_scc": [27, 208], "parse_domain": [27, 208], "getroot": [27, 208], "getdomainbysid": [27, 208], "getnodebysunid": [27, 208], "getdomain": [27, 208], "write_hi": [27, 208], "write_d": [27, 208], "write_cla": [27, 208], "getdomainfromsql": [27, 208], "getascendentfromsql": [27, 208], "getdescendentsfromsql": [27, 208], "write_hie_sql": [27, 208], "write_cla_sql": [27, 208], "write_des_sql": [27, 208], "tohierecord": [27, 208], "todesrecord": [27, 208], "getchildren": [27, 208], "getpar": [27, 208], "getdescend": [27, 208], "getascend": [27, 208], "toclarecord": [27, 208], "domainsclusteredbyev": [27, 208], "domainsclusteredbyid": [27, 208], "getastraldomainsfromfil": [27, 208], "getastraldomainsfromsql": [27, 208], "getseqbysid": [27, 208], "getseq": [27, 208], "hasheddomainsbyid": [27, 208], "hasheddomainsbyev": [27, 208], "isdomaininid": [27, 208], "isdomaininev": [27, 208], "writetosql": [27, 208], "get_transform": [27, 133, 174, 215], "get_rotran": [27, 133, 174, 215], "get_init_rm": [27, 133, 174, 215], "get_rm": [27, 133, 174, 215], "blastio": [27, 216, 220], "exonerateio": [27, 216], "hhsuiteio": [27, 216], "hmmerio": [27, 216], "interproscanio": [27, 216], "blatio": [27, 216], "blatpslpars": [27, 216, 220], "blatpslindex": [27, 216, 220], "blatpslwrit": [27, 216, 220], "m10": [27, 56, 59, 216], "fastam10pars": [27, 216, 225], "fastam10index": [27, 216, 225], "abiio": [27, 237], "abiiter": [27, 237, 238], "aceio": [27, 237], "aceiter": [27, 237, 239], "fastatwolinepars": [27, 237, 240], "fastaiter": [27, 237, 240, 245], "fastatwolineiter": [27, 237, 240], "fastawrit": [27, 237, 240], "fastatwolinewrit": [27, 237, 240], "as_fasta": [27, 237, 240], "as_fasta_2lin": [27, 237, 240], "gckio": [27, 237], "gckiter": [27, 237, 241], "gfaio": [27, 237], "gfa1iter": [27, 237, 242], "gfa2iter": [27, 237, 242], "igio": [27, 237], "igiter": [27, 237, 243], "insdcio": [27, 237], "genbankiter": [27, 237, 244], "embliter": [27, 237, 244], "imgtiter": [27, 237, 244], "genbankcdsfeatureiter": [27, 237, 244], "emblcdsfeatureiter": [27, 237, 244], "genbankwrit": [27, 237, 244], "emblwrit": [27, 237, 244], "imgtwrit": [27, 237, 244], "sequenceiter": [27, 237, 238, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 258], "sequencewrit": [27, 237, 240, 245, 246, 248, 249, 250, 251, 252, 255, 258], "nibio": [27, 237], "nibiter": [27, 237, 246], "nibwrit": [27, 237, 246], "atomiter": [27, 237, 247], "pdbseqresiter": [27, 237, 247], "pdbatomiter": [27, 237, 247], "cifseqresiter": [27, 237, 247], "cifatomiter": [27, 237, 247], "phdio": [27, 237], "phditer": [27, 237, 248], "phdwriter": [27, 237, 248], "pirio": [27, 237], "piriter": [27, 237, 249], "pirwrit": [27, 237, 249], "solexa_quality_from_phr": [27, 237, 250], "phred_quality_from_solexa": [27, 237, 250], "fastqphrediter": [27, 237, 250], "fastqsolexaiter": [27, 237, 250], "fastqilluminaiter": [27, 237, 250], "qualphrediter": [27, 237, 250], "fastqphredwrit": [27, 237, 250], "as_fastq": [27, 237, 250], "qualphredwrit": [27, 237, 250], "as_qual": [27, 237, 250], "fastqsolexawrit": [27, 237, 250], "as_fastq_solexa": [27, 237, 250], "fastqilluminawrit": [27, 237, 250], "as_fastq_illumina": [27, 237, 250], "seqxmlio": [27, 237], "seqxmliter": [27, 237, 251], "seqxmlwrit": [27, 237, 251], "readrochexmlmanifest": [27, 237, 252], "sffiter": [27, 237, 252], "sffwriter": [27, 237, 252], "snapgeneio": [27, 237], "snapgeneiter": [27, 237, 253], "swissio": [27, 237, 275], "swissiter": [27, 237, 254], "tabio": [27, 237], "tabiter": [27, 237, 255], "tabwrit": [27, 237, 255], "as_tab": [27, 237, 255], "twobitio": [27, 235, 237], "twobititer": [27, 237, 256], "uniprotio": [27, 237, 254], "uniprotiter": [27, 237, 257], "xdnaio": [27, 237], "xdnaiter": [27, 237, 258], "xdnawrit": [27, 237, 258], "checksum": [27, 237, 260], "crc32": [27, 260, 261, 271], "seguid": [27, 237, 260, 261], "isoelectricpoint": [27, 260, 264], "meltingtemp": [27, 260], "make_t": [27, 260, 263], "salt_correct": [27, 260, 263], "chem_correct": [27, 260, 263], "tm_wallac": [27, 260, 263], "tm_gc": [27, 260, 263], "tm_nn": [27, 260, 263], "protparam": [27, 260, 262, 265], "proteinanalysi": [27, 260, 262, 264], "protparamdata": [27, 260, 264], "lcc": [27, 260], "lcc_mult": [27, 260, 266], "lcc_simp": [27, 260, 266], "gc123": [27, 260], "gc_skew": [27, 260], "xgc_skew": [27, 260], "nt_search": [27, 260], "molecular_weight": [27, 260, 264], "six_frame_transl": [27, 260], "codonadaptationindex": [27, 260], "wr": [27, 239, 267, 268], "acefilerecord": [27, 267, 268], "phd": [27, 237, 248, 267], "swissprotparsererror": [27, 271], "featuret": [27, 271], "search_count": [27, 273], "search_it": [27, 273], "sequencelin": [27, 274], "protsimlin": [27, 274], "stsline": [27, 274], "goa": [27, 275], "gpi_iter": [27, 275, 276], "gpa_iter": [27, 275, 276], "gafbyproteiniter": [27, 275, 276], "gafiter": [27, 275, 276], "writerec": [27, 275, 276], "writebyproteinrec": [27, 275, 276], "record_ha": [27, 275, 276], "codonseq": [27, 278, 279], "cal_dn_d": [27, 278, 280], "jaspar": [27, 282], "clusterbust": [27, 282], "mast": [27, 282, 290], "genericpositionmatrix": [27, 282, 289], "frequencypositionmatrix": [27, 282, 289], "positionweightmatrix": [27, 282, 289], "meme": [27, 282, 288, 291], "pfm": [27, 282, 286, 287, 295], "scoredistribut": [27, 282, 293], "xmsscanner": [27, 282, 295], "phen_micro": [27, 297], "jsoniter": [27, 297, 298], "csviter": [27, 297, 298], "jsonwrit": [27, 297, 298], "pm_fit": [27, 297], "guess_lag": [27, 297, 299], "guess_plateau": [27, 297, 299], "get_area": [27, 297, 299], "as_handl": [27, 91, 152, 158], "logisticregress": 27, "itemindex": [27, 121], "train_bw": [27, 121], "train_vis": [27, 121], "find_stat": [27, 121], "maxentropi": 27, "naivebay": 27, "sequencedataabstractbaseclass": [27, 235], "__bytes__": [27, 30, 36, 235, 259], "__radd__": [27, 235, 236, 259], "__mul__": [27, 133, 175, 235], "endswith": [27, 235], "rsplit": [27, 235], "lstrip": [27, 235], "removeprefix": [27, 235], "removesuffix": [27, 235], "isupp": [27, 235, 259], "islow": [27, 235, 259], "defined_rang": [27, 235], "__annotations__": [27, 30, 36, 45, 56, 62, 75, 76, 92, 94, 133, 139, 168, 221, 224, 235, 259], "__setitem__": [27, 30, 54, 133, 139, 175, 180, 196, 198, 235, 297, 298], "reverse_complement_rna": [27, 235], "complement_rna": [27, 235], "locationparsererror": [27, 236], "__bool__": [27, 180, 182, 236, 259], "fromstr": [27, 236], "__sub__": [27, 133, 135, 139, 140, 175, 236, 297, 298], "__nonzero__": [27, 236], "featureloc": [27, 236], "compoundloc": [27, 236], "uncertainposit": [27, 236], "namespac": [27, 84, 187, 196, 197, 251, 302], "make_virtual_offset": [27, 277], "split_virtual_offset": [27, 277], "bgzfblock": [27, 277], "bgzfreader": [27, 277], "seekabl": [27, 277], "isatti": [27, 277], "fileno": [27, 277], "bgzfwriter": [27, 277], "flush": [27, 30, 56, 68, 237, 277, 297], "knn": 27, "equal_weight": [27, 281], "identity_match": [27, 296], "dictionary_match": [27, 296], "affine_penalti": [27, 296], "calc_affine_penalti": [27, 296], "print_matrix": [27, 296], "missingexternaldependencyerror": 27, "missingpythondependencyerror": 27, "importerror": 27, "streammodeerror": 27, "vice": 27, "versa": 27, "biopythonwarn": [27, 147, 196, 235], "simplefilt": 27, "biopythonparserwarn": 27, "biopythondeprecationwarn": 27, "deprecationwarn": 27, "biopythonexperimentalwarn": 27, "subscrib": 27, "alert": 27, "affymetrix": [28, 29], "cel": [28, 29], "initialis": [29, 148, 149, 168, 169, 172], "affy_v3_exampl": 29, "ncol": 29, "nrow": [29, 73], "intens": [29, 104], "234": 29, "170": 29, "22177": 29, "22104": 29, "21871": 29, "168": 29, "21883": 29, "21455": 29, "198": [29, 221], "21300": 29, "182": [29, 250], "21438": 29, "20945": 29, "20370": 29, "20605": 29, "stdev": [29, 98, 104], "2669": 29, "3661": 29, "2795": 29, "2792": 29, "2976": 29, "2914": 29, "2759": 29, "2762": 29, "2611": 29, "2810": 29, "npix": 29, "affy_v4_exampl": 29, "musclecommandlin": [30, 32], "anchor": [30, 32, 80, 220], "anchorspac": [30, 32], "brenner": [30, 32], "cluster1": [30, 32], "cluster2": [30, 32], "clw": [30, 32], "clwout": [30, 32], "clwstrict": [30, 32], "clwstrictout": [30, 32], "diagbreak": [30, 32], "diaglength": [30, 32], "diagmargin": [30, 32], "diag": [30, 32], "dimer": [30, 32], "distance1": [30, 32], "distance2": [30, 32], "fastaout": [30, 32], "htmlout": [30, 32], "hydro": [30, 32], "hydrofactor": [30, 32], "in1": [30, 32, 269], "in2": [30, 32, 269], "le": [30, 32], "loga": [30, 32], "maxdiagbreak": [30, 32], "maxhour": [30, 32], "maxit": [30, 32], "maxtre": [30, 32, 79, 80], "minbestcolscor": [30, 32], "minsmoothscor": [30, 32], "msfout": [30, 32], "noanchor": [30, 32], "nocor": [30, 32], "objscor": [30, 32], "phyi": [30, 32], "phyiout": [30, 32], "physout": [30, 32], "quiet": [30, 32, 143, 151, 157, 180, 181], "refinew": [30, 32], "refinewindow": [30, 32], "root1": [30, 32], "root2": [30, 32], "scorefil": [30, 32], "smoothscoreceil": [30, 32], "smoothwindow": [30, 32], "sp": [30, 32, 68, 208, 210], "spn": [30, 32], "spscore": [30, 32], "sueff": [30, 32], "sv": [30, 32], "tree2": [30, 32, 132], "usetre": [30, 32], "weight1": [30, 32], "weight2": [30, 32], "clustalwcommandlin": [30, 32], "bootlabel": [30, 32], "dnamatrix": [30, 32], "endgap": [30, 32], "fullhelp": [30, 32], "gapdist": [30, 32], "gapext": [30, 32], "helixendin": [30, 32], "helixendout": [30, 32], "helixgap": [30, 32], "hgapresidu": [30, 32], "kimura": [30, 32], "ktupl": [30, 32], "loopgap": [30, 32], "maxdiv": [30, 32], "maxseqlen": [30, 32], "newtree1": [30, 32], "newtree2": [30, 32], "nohgap": [30, 32], "nopgap": [30, 32], "nosecstr1": [30, 32], "nosecstr2": [30, 32], "noweight": [30, 32], "numit": [30, 32], "outord": [30, 32], "outputtre": [30, 32], "pairgap": [30, 32], "profile1": [30, 32], "profile2": [30, 32], "pwdnamatrix": [30, 32], "pwgapext": [30, 32], "pwgapopen": [30, 32], "pwmatrix": [30, 32], "quicktre": [30, 32], "secstrout": [30, 32], "seqno_rang": [30, 32], "seqno": [30, 32], "strandendin": [30, 32], "strandendout": [30, 32], "strandgap": [30, 32], "terminalgap": [30, 32], "topdiag": [30, 32], "tossgap": [30, 32], "transweight": [30, 32], "usetree1": [30, 32], "usetree2": [30, 32], "clustalomegacommandlin": [30, 32], "auto": [30, 32, 67, 79, 80, 249, 282], "clusteringout": [30, 32], "clusters": [30, 32], "dealign": [30, 32], "distmat_ful": [30, 32], "distmat_full_it": [30, 32], "distmat_in": [30, 32], "distmat_out": [30, 32], "guidetree_in": [30, 32], "guidetree_out": [30, 32], "hmm_input": [30, 32], "infmt": [30, 32], "isprofil": [30, 32], "long_vers": [30, 32], "max_guidetree_iter": [30, 32], "max_hmm_iter": [30, 32], "maxnumseq": [30, 32], "outputord": [30, 32], "percentid": [30, 32], "residuenumb": [30, 32], "thread": [30, 32, 69, 149, 180, 181, 269], "usekimura": [30, 32], "prankcommandlin": [30, 32], "dnafreq": [30, 32], "fixedbranch": [30, 32], "gaprat": [30, 32], "longseq": [30, 32], "matinits": [30, 32], "matres": [30, 32], "maxbranch": [30, 32], "mttranslat": [30, 32], "nopost": [30, 32], "notre": [30, 32], "noxml": [30, 32], "printnod": [30, 32], "pwdist": [30, 32], "pwgenom": [30, 32], "pwgenomicdist": [30, 32], "realbranch": [30, 32], "rho": [30, 32], "scalebranch": [30, 32], "shortnam": [30, 32], "showtre": [30, 32], "showxml": [30, 32], "skipin": [30, 32], "termgap": [30, 32], "twice": [30, 32, 90, 204], "uselog": [30, 32], "writeanc": [30, 32], "mafftcommandlin": [30, 32], "lexp": [30, 32], "lop": [30, 32], "aamatrix": [30, 32], "adjustdirect": [30, 32], "adjustdirectionaccur": [30, 32], "bl": [30, 32], "clustalout": [30, 32], "dpparttre": [30, 32], "fastapair": [30, 32], "fastaparttre": [30, 32], "fft": [30, 32], "fmodel": [30, 32], "genafpair": [30, 32], "globalpair": [30, 32], "groupsiz": [30, 32], "input1": [30, 32], "inputord": [30, 32], "jtt": [30, 32, 181], "lep": [30, 32], "localpair": [30, 32], "maxiter": [30, 32], "memsav": [30, 32], "namelength": [30, 32], "nofft": [30, 32], "noscor": [30, 32], "op": [30, 32], "partsiz": [30, 32], "parttre": [30, 32], "phylipout": [30, 32], "retre": [30, 32], "sixmerpair": [30, 32], "tm": [30, 32, 53, 66, 263], "treeout": [30, 32], "weighti": [30, 32], "dialigncommandlin": [30, 32], "afc": [30, 32], "afc_v": [30, 32], "anc": [30, 32], "cw": [30, 32, 202], "fn": [30, 32], "fop": [30, 32], "fsm": [30, 32], "iw": [30, 32], "lg": [30, 32, 181], "lgs_t": [30, 32], "lmax": [30, 32], "lo": [30, 32, 53, 66], "mat": [30, 32], "mat_thr": [30, 32], "max_link": [30, 32], "min_link": [30, 32], "mot": [30, 32], "nta": [30, 32], "ow": [30, 32], "pst": [30, 32, 123], "smin": [30, 32], "star": [30, 32], "stdo": [30, 32], "xfr": [30, 32], "probconscommandlin": [30, 32], "emiss": [30, 32, 107, 108, 109, 110, 121], "ir": [30, 32, 123], "paramfil": [30, 32], "viterbi": [30, 32, 106, 108], "tcoffeecommandlin": [30, 32], "seq_typ": [30, 32, 260], "msaprobscommandlin": [30, 32], "alignment_ord": [30, 32], "iterative_refin": [30, 32], "numthread": [30, 32], "__array_finalize__": [30, 54], "__array_prepare__": [30, 54], "__array_wrap__": [30, 54], "__array_ufunc__": [30, 54], "__reduce__": [30, 54], "gap_consensu": [30, 31], "replacement_dictionari": [30, 31], "get_column": [30, 31, 297, 298], "write_align": [30, 33, 36, 45, 49, 56, 57, 60, 61, 62, 64, 65, 66], "as_typ": [30, 36], "from_byt": [30, 36], "write_fil": [30, 36, 37, 38, 45, 47, 49, 56, 60, 64, 216, 217, 218, 219, 220, 228, 230, 231, 237, 240, 245, 246, 249, 252, 258], "write_head": [30, 40, 42, 45, 46, 47, 51, 52, 56, 60, 61, 124, 126, 237, 240, 245, 246, 249, 251, 252], "write_foot": [30, 42, 45, 56, 60, 237, 240, 245, 249, 251], "write_single_align": [30, 45], "write_multiple_align": [30, 45], "status_charact": [30, 46], "empty_status_charact": [30, 46], "gf_map": [30, 53], "gr_map": [30, 53], "gc_map": [30, 53], "gs_map": [30, 53], "query_gap": [30, 55], "target_gap": [30, 55], "parse_btop": [30, 55], "parse_cigar": [30, 55], "pickl": [30, 36, 54, 236, 296], "static": [30, 36, 54, 84, 149, 168, 170, 196, 236, 296], "_cl": [30, 36, 296], "aaaaaaa": 30, "tatacattaa": 30, "tatacataaa": 30, "tatacattaagtgtaccaga": 30, "tatacataaagtgtaccaga": 30, "tatacattaagtataccaga": 30, "aaaacgt": 30, "aaaaggt": 30, "cccxccc": 30, "actgctagatag": 30, "eval": [30, 68], "a3c184c": 30, "format_spec": [30, 71, 182, 259, 282], "actgctagat": 30, "dummi": [30, 99, 236, 259, 277, 281], "nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn": 30, "nnn": [30, 235], "behaviour": [30, 64, 76, 259, 263, 287, 293, 296], "sub_align": 30, "rev_align": 30, "ccgcg": 30, "acgg": 30, "acgc": 30, "chicken": 30, "cgtt": 30, "cgct": 30, "acgtcggt": 30, "acggcgtt": 30, "acgccgct": 30, "acgtcgtt": 30, "acggcggt": 30, "tttc": 30, "gtatc": [30, 31], "AT": [30, 31, 263], "ctgtc": [30, 31], "classmethod": [30, 36, 182, 184, 187, 189, 196, 279, 280], "skipped_column": 30, "taggcatacgtg": 30, "aacgtacgt": 30, "acgcatacttg": 30, "aacg": 30, "tacgt": 30, "gacctg": 30, "cgatcg": 30, "gacct": 30, "accggttt": 30, "acgggtt": 30, "accgg": 30, "ccgg": [30, 66], "gggt": 30, "acgtt": 30, "kwarg": [30, 32, 54, 62, 67, 69, 80, 84, 91, 100, 104, 168, 181, 182, 184, 186, 187, 189, 190, 196, 216, 219, 222, 223, 224, 229, 230, 231, 232, 269, 302], "subalign": [30, 68, 181], "ttaaccccatttg": [30, 68], "aagccccttt": [30, 68], "aaaggggctt": [30, 68], "ttaa": [30, 68], "ccccatttg": [30, 68], "aagcccc": [30, 68], "0x10403d850": [30, 68], "accgt": [30, 68, 296], "lettter": 30, "gaactgg": 30, "aatg": 30, "aactg": 30, "aactgg": 30, "catt": 30, "aataa": 30, "aagaa": 30, "lifted_align": 30, "atacttacctggcaggggagataccatgatcacgaaggtggttttcccagggcgaggcttatccattgcactccggatgtgctgacccctgcgatttccccaaatgtgggaaactcgactgcataatttgtggtagtgggggactgcgttcgcgctttcccctg": 30, "spliceosom": 30, "nuclear": [30, 94], "atacttacctgacaggggaggcaccatgatcacacaggtggtcctcccagggcgaggctcttccattgcactgcgggagggttgacccctgcgatttccccaaatgtgggaaactcgactgtataatttgtggtagtgggggactgcgttcgcgctatcccccg": 30, "lamprei": [30, 249], "atacttacctggcaggggagataccatgatcacgaaggtggttttcccagggcgaggctt": 30, "atacttacctgacaggggaggcaccatgatcacacaggtggtcctcccagggcgaggctc": 30, "atccattgcactccggatgtgctgacccctgcgatttccccaaatgtgggaaactcgact": 30, "ttccattgcactgcgggagggttgacccctgcgatttccccaaatgtgggaaactcgact": 30, "gcataatttgtggtagtgggggactgcgttcgcgctttcccctg": 30, "gtataatttgtggtagtgggggactgcgttcgcgctatcccccg": 30, "taccg": 30, "cgat": 30, "abc": [30, 45, 235, 236, 245], "overridden": [30, 45, 104, 206, 236, 245], "frozenset": [30, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 68, 218, 219, 220, 222, 223, 224, 225, 229, 230, 231, 232, 235, 236, 238, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 258, 280, 290], "astronom": 30, "poorli": [30, 269], "concord": [30, 296], "deduct": [30, 269, 296], "kevla": [30, 296], "evl": [30, 296], "setattr": 30, "anchor_len": [30, 278], "atgtctcgt": [30, 278], "msr": [30, 278], "augucucgu": 30, "atgctgggctcgaacgagtccgtgtatgccctaagctgagcccgtcg": 30, "mlgsnesrvcpklsp": 30, "tttaaaaaaaaaaattt": 30, "fkkkkf": 30, "tttaaaaaaaaa": 30, "aaattt": 30, "tttaaaaaa": 30, "aaaaaattt": 30, "tttaaa": 30, "aaaaaaaaattt": 30, "atgctgggctcgaacgagtcc": 30, "cgtgtatgccctaagctgagcccgtcg": 30, "alig": [30, 237], "exn_22_m_ner_cigar": 30, "6150": 30, "502": 30, "440": 30, "ic_vector": 31, "require_multipl": 31, "fancier": 31, "skip_char": 31, "plug": [31, 99], "Will": [31, 32, 92, 201, 236, 260, 274], "axis_seq": 31, "gtat": 31, "summary_info": 31, "fout": 31, "rep_record": 31, "drive5": 32, "edgar": 32, "robert": 32, "1792": 32, "muscle_ex": 32, "muscle3": 32, "31_i86win32": 32, "in_fil": [32, 56, 137, 216, 237], "muscle_clin": 32, "optimis": [32, 56, 181, 237], "steve": 32, "accur": [32, 140, 181], "approximationfor": 32, "hydrophob": [32, 264], "vtml240": 32, "v3": [32, 175, 228], "pam200": 32, "constant": [32, 128, 129, 176, 181, 263], "upgmb": 32, "exit": [32, 67, 91, 181], "larkin": 32, "blackshield": 32, "chenna": 32, "mcgettigan": 32, "mcwilliam": 32, "valentin": 32, "im": 32, "wilm": 32, "lopez": 32, "thompson": 32, "jd": 32, "gibson": 32, "tj": 32, "higgin": 32, "2947": 32, "2948": 32, "clustalw_clin": 32, "OR": [32, 142, 143, 151, 152, 154], "branch": [32, 80, 132, 181, 182, 185, 196, 197], "nj": [32, 80, 180, 181, 198, 279], "gde": 32, "iub": 32, "pen": 32, "hydrophil": [32, 264], "delai": [32, 83], "disabl": [32, 69, 80, 168, 217, 269, 302], "percent": [32, 69, 80, 208, 220, 263, 274], "ON": 32, "termini": [32, 80], "clustalo": 32, "siever": 32, "dineen": 32, "karplu": 32, "remmert": 32, "2011": [32, 237, 251], "scalabl": 32, "539": [32, 262], "1038": [32, 100, 266], "msb": 32, "clustalomega_clin": 32, "mbed": 32, "distmat": 32, "guidetre": 32, "sta": 32, "clu": [32, 228], "stal": 32, "lip": 32, "ockholm": 32, "vie": 32, "nna": 32, "processor": 32, "prank": 32, "srv": 32, "081202": 32, "loytynoja": 32, "10557": 32, "10562": 32, "320": 32, "1632": 32, "prank_clin": 32, "quot": [32, 67, 94, 129, 180, 181], "surround": [32, 281], "ig": [32, 56, 237, 243], "phylip3": 32, "nbrf": [32, 237, 249], "codata": 32, "dnastrid": 32, "fitch": [32, 198], "paup": [32, 129, 132, 189], "025": 32, "0025": 32, "hky2": 32, "wag": [32, 180, 181], "resiz": 32, "mt": [32, 263], "posterior": [32, 53], "120626": 32, "purin": 32, "pyrimidin": 32, "penalis": 32, "ancestr": 32, "mafft": 32, "bmr": 32, "kyushu": 32, "v6": 32, "717b": 32, "katoh": 32, "toh": 32, "212": 32, "ncrna": 32, "incorpor": 32, "286": 32, "298": 32, "errata": 32, "kuma": 32, "miyata": 32, "511": [32, 274], "INS": 32, "misawa": 32, "3059": 32, "3066": 32, "mafft_ex": 32, "mafft_clin": 32, "slowdefault": 32, "123": [32, 68, 168, 236, 255], "cycl": 32, "exce": [32, 220], "847": 32, "024": 32, "stage": [32, 69, 274], "partit": [32, 129, 181], "6mer": 32, "alignment_n": 32, "6merpair": 32, "transmembran": [32, 53, 66, 271], "dialign2": 32, "bibiserv": 32, "techfak": 32, "uni": [32, 130], "bielefeld": 32, "dialign": 32, "morgenstern": 32, "w33": 32, "w36": 32, "dialign_clin": 32, "bigger": [32, 206, 221], "seq_fil": 32, "expens": 32, "sensit": [32, 269], "frg": 32, "alignmnet": 32, "consum": [32, 92, 94, 162, 203], "mahabhashyam": 32, "brudno": 32, "batzogl": 32, "330": [32, 243], "340": [32, 255], "probcons_clin": 32, "mfa": 32, "reestim": 32, "pretrain": 32, "t_coffe": 32, "tcoffe": 32, "projects_home_pag": 32, "t_coffee_home_pag": 32, "coffe": [32, 48, 63], "version_6": 32, "notredam": 32, "heringa": 32, "jmb": 32, "205": [32, 236], "tcoffee_clin": 32, "dna_protein": 32, "blosum62mt": 32, "quickaln": 32, "dali": 32, "3dcoffe": 32, "outputeith": 32, "clustalw_aln": 32, "msf_aln": 32, "pir_aln": 32, "fasta_aln": 32, "pir_seq": 32, "fasta_seq": 32, "msaprob": 32, "yongchao": 32, "liu": 32, "bertil": 32, "schmidt": [32, 65], "maskel": 32, "1958": 32, "1964": 32, "cline": [32, 67, 69, 80], "num_thread": [32, 68, 69], "3444411": [34, 280], "3916709": [34, 280], "7968486": [34, 280], "10666704": [34, 280], "mcdonald": [34, 279], "kreitman": [34, 279], "1904993": [34, 279], "mkt": [34, 279], "uab": [34, 279], "help_mkt": [34, 279], "faq": [35, 46, 51, 61, 220, 246], "faqformat": [35, 46, 51, 61, 246], "format1": 35, "strenm": [36, 45], "extra_indic": 36, "rewound": [36, 44, 45], "stretcher": [41, 80], "coding2cod": [42, 221], "est2genom": [42, 80, 221], "genome2genom": [42, 221], "ner": [42, 221], "protein2dna": [42, 221], "protein2genom": [42, 221], "stumbl": [42, 217, 221], "unpars": [42, 217, 221], "footer": [42, 45, 56, 59, 60, 237, 239, 245, 268], "redefin": [45, 60, 245], "exc_typ": [45, 68], "exc_valu": [45, 68], "exc_traceback": [45, 68], "_read_next_align": 45, "format5": [46, 61], "concaten": [46, 53, 56, 60, 66, 71, 95, 213, 237, 259, 269, 277], "xmfa": [47, 62], "pileup": [48, 56, 63, 269], "localpileup": [48, 63], "ONE": [49, 64, 181], "inputfil": [50, 65], "format2": 51, "wellcom": [52, 250, 252], "trust": [52, 53, 250, 252], "htslib": 52, "mapq": [52, 269], "rnext": [52, 168], "pnext": 52, "tlen": 52, "hat": 53, "pf02184": 53, "tpr": 53, "smart": 53, "kindli": 53, "cl0020": 53, "9478129": 53, "implic": 53, "preker": 53, "keller": 53, "biochem": [53, 176, 263], "sci": [53, 83, 263], "ipr003107": 53, "0001068": 53, "polypeptide_repeat": 53, "crn_drome": 53, "p17886": 53, "clf1_schpo": 53, "p87312": 53, "3jb9": 53, "o16376_caeel": 53, "233": 53, "o16376": 53, "keidrareiyerfvyvh": 53, "pdvknwikfarfe": 53, "henerargiyerfvvvh": 53, "pevtnwlrwarfee": 53, "hhhhhhhhhhhhh": 53, "keidrarsvyqrflhvhginvqnwikyakf": 53, "keidraruiyerfvavh": 53, "vpnwikaarfeec": 53, "keidrareiyerfvyvhpdvknwikfarfe": 53, "part_align": [53, 66], "sonnhamm": [53, 66], "sbc": [53, 66], "stockholm_format": [53, 66], "calibr": [53, 269], "nois": 53, "wk": 53, "csa": 53, "IN": [53, 60, 66, 129, 151], "sa": [53, 66, 269], "2l3j_b_ss": 53, "2l3j": 53, "as_con": 53, "csa_con": 53, "in_con": 53, "li_con": 53, "mm": [53, 66, 121, 152, 158, 263], "pk_ss": 53, "pp_con": 53, "rf": [53, 66, 123], "rna_el": 53, "rna_ligand_adocbl": 53, "adocbl": 53, "rna_ligand_aqcbl": 53, "aqcbl": 53, "rna_ligand_fmn": 53, "fmn": 53, "rna_ligand_guanidinium": 53, "guanidinium": 53, "rna_ligand_sam": 53, "rna_ligand_thf_1": 53, "thf": 53, "rna_ligand_thf_2": 53, "rna_ligand_tpp": 53, "tpp": 53, "rna_ligand_preq1": 53, "preq1": 53, "rna_motif_k_turn": 53, "rna_structural_el": 53, "repeat_unit": 53, "sa_con": 53, "tm_con": 53, "pas_con": 53, "sas_con": 53, "scorecon": 53, "scorecons_70": 53, "scorecons_80": 53, "scorecons_90": 53, "ndarrai": [54, 135, 162, 168, 175], "obj": [54, 190, 197], "super": [54, 235], "ufunc": 54, "unpickl": [54, 236], "isfortran": 54, "rawdata": 54, "ax": [54, 104, 299], "formatt": 54, "enum": 55, "btop": [55, 217], "get_splic": [56, 61], "id_width": [56, 65], "pfam_gr_map": [56, 66], "pfam_gc_map": [56, 66], "pfam_gs_map": [56, 66], "perspect": 56, "rgipp": 56, "maharvlllalavlataavavassssfadsnpirpvtdraastl": 56, "vaa": 56, "pvcgaaelsvnsl": 56, "plv": 56, "kilivddqygirillnevfnkegyqtfqaanglqaldivtk": 56, "ref_rec": 56, "lhivvvdddpgtcvyiesvfaelghtcksfvrpeaaeeyilthp": 56, "hke": 56, "94967506": 56, "phlyip": 56, "lowercas": [56, 235, 237, 259, 297], "intelligenet": [56, 237, 243], "mase": [56, 237, 243], "my_iter": 56, "in_format": [56, 216, 237, 273], "out_format": [56, 216, 237, 273], "abort": 56, "mesohippu": 56, "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa": 56, "hypohippu": 56, "aaacccccccaaaaaaaaacaaaaaaaaaaaaaaaaaaaa": 56, "archaeohip": 56, "caaaaaaaaaaaaaaaacacaaaaaaaaaaaaaaaaaaaa": 56, "parahippu": 56, "caaacaacaacaaaaaaaacaaaaaaaaaaaaaaaaaaaa": 56, "merychippu": 56, "ccaaccaccaccccacacccaaaaaaaaaaaaaaaaaaaa": 56, "secundu": 56, "ccaaccaccacccacaccccaaaaaaaaaaaaaaaaaaaa": 56, "nannipu": 56, "ccaaccacaaccccacacccaaaaaaaaaaaaaaaaaaaa": 56, "neohippari": 56, "ccaaccccccccccacacccaaaaaaaaaaaaaaaaaaaa": 56, "calippu": 56, "ccaaccacaacccacaccccaaaaaaaaaaaaaaaaaaaa": 56, "pliohippu": 56, "cccacccccccccacaccccaaaaaaaaaaaaaaaaaaaa": 56, "alignret": 58, "bioch": [59, 225], "virginia": [59, 225], "blown": 59, "contextu": 59, "THAT": 60, "newlin": [60, 65, 69, 94, 235, 237, 245], "sqlite_fil": 61, "maf_fil": 61, "target_seqnam": 61, "sole": [61, 176, 269], "closur": 61, "blog": 61, "silico": 61, "5417": 62, "5968": 62, "tttaaacatccctcggcccgtcgcccttttataatagcagtacgtgagaggagcgccctaagctttgggaaattcaagc": 62, "ctggaacgtacttgctggtttcgctactatttcaaacaagttagaggccgttacctcgggcgaacgtataaaccattctg": 62, "9476": 62, "10076": 62, "tttaaacacctttttggatg": 62, "gcccagttcgttcagttgtg": 62, "gggaggagatcgccccaaacgtatggtgagtcgggcg": 62, "tttcctatagctataggaccaatccacttaccatacgcccggcgtcgcccagtccggttcggtaccctccatgacccacg": 62, "aaatgagggcccagggtatgctt": 62, "5969": 62, "6015": 62, "gggcgaacgtataaaccattctg": 62, "9429": 62, "ttcggtaccctccatgacccacg": 62, "simple_short": 62, "tttaaacatccctcggcccgtcgcccttttataatagcagtacg": 62, "5416": 62, "9475": 62, "ttcggtaccctccatgacccacgaaatgagggcccagggtatgctt": 62, "9428": 62, "_id": 62, "tild": [63, 250], "whitespac": [65, 94, 129, 168, 181, 229, 235, 240, 250, 263], "tree_puzzl": 65, "guindon": [65, 181], "gascuel": [65, 181], "_phylip_id_width": 65, "compli": [65, 282], "carri": [65, 73], "entireti": 65, "sanitis": 65, "ap001509": 66, "uuaaucgagcucaacacucuucguauauccuc": 66, "ucaauaugg": 66, "gaugagggu": 66, "ae007476": 66, "aaaauugaauaucguuuuacuuguuuau": 66, "gucgugaau": 66, "ugg": 66, "cacga": 66, "cgu": [66, 259], "cucuac": 66, "aggua": 66, "ccguaaa": 66, "uaccuagcuacgaaaagaaugcaguuaaugu": 66, "uucuacaaggug": 66, "caccuaacaauaaguaagucagcagugagau": 66, "104": [66, 168, 277], "ugu": [66, 76], "gau": 66, "secondary_structur": [66, 259], "gaugagggucucuac": 66, "cguuucuacaaggug": 66, "ggua": 66, "cguuucuacaa": 66, "ggug": 66, "simpler": [66, 250, 273], "understood": 66, "alignn": [66, 273], "aucguuuuac": 66, "ucaacacucu": 66, "active_sit": 66, "ligand_bind": 66, "posterior_prob": 66, "surface_access": 66, "model_mask": 66, "reference_annot": 66, "IT": 66, "WILL": 66, "alignment_format": 66, "stockholm_multiple_alignment_format": 66, "mainten": 67, "burden": 67, "calledprocesserror": 67, "err": [67, 181], "helloworld": 67, "water_cmd": 67, "asi": 67, "acccgggcgcggt": 67, "acccgagcgcggt": 67, "temp_wat": 67, "privat": [67, 71, 76, 89, 91, 94, 129, 168, 196, 201, 236, 251], "workaround": 67, "csequenc": 67, "whitelist": 67, "cwd": 67, "env": [67, 228], "send": [67, 83, 217], "null": [67, 269], "std_output": 67, "err_output": 67, "check_output": 67, "diagnos": 67, "went": 67, "best_hit_overhang": [68, 69], "best_hit_score_edg": [68, 69], "comp_based_stat": [68, 69], "culling_limit": [68, 69], "db_hard_mask": [68, 69], "db_soft_mask": [68, 69], "dbsize": [68, 69], "entrez_queri": [68, 69, 70], "export_search_strategi": [68, 69], "gilist": [68, 69], "import_search_strategi": [68, 69], "lcase_mask": [68, 69, 70], "line_length": [68, 69], "max_hsp": [68, 69], "max_hsps_per_subject": [68, 69], "max_target_seq": [68, 69], "negative_gilist": [68, 69], "negative_seqidlist": [68, 69], "num_align": [68, 69, 71], "num_descript": [68, 69], "parse_deflin": [68, 69], "qcov_hsp_perc": [68, 69], "query_loc": [68, 69], "searchsp": [68, 69], "seg": [68, 69], "seqidlist": [68, 69], "show_gi": [68, 69], "soft_mask": [68, 69], "subject_loc": [68, 69], "sum_statist": [68, 69], "sum_stat": [68, 69], "use_sw_tback": [68, 69], "window_s": [68, 69, 71, 165], "word_siz": [68, 69, 70], "xdrop_gap": [68, 69], "xdrop_gap_fin": [68, 69], "xdrop_ungap": [68, 69], "dust": [68, 69], "filtering_db": [68, 69], "index_nam": [68, 69], "min_raw_gapped_scor": [68, 69], "no_greedi": [68, 69], "off_diagonal_rang": [68, 69], "perc_ident": [68, 69], "reward": [68, 69], "template_length": [68, 69, 70], "template_typ": [68, 69, 70], "use_index": [68, 69], "window_masker_db": [68, 69], "window_masker_taxid": [68, 69], "frame_shift_penalti": [68, 69], "max_intron_length": [68, 69], "query_gencod": [68, 69], "db_gencod": [68, 69], "in_pssm": [68, 69], "gap_trigg": [68, 69, 71], "ignore_msa_mast": [68, 69], "in_msa": [68, 69], "inclusion_ethresh": [68, 69], "msa_master_idx": [68, 69], "num_iter": [68, 69], "out_ascii_pssm": [68, 69], "out_pssm": [68, 69], "phi_pattern": [68, 69, 70], "save_each_pssm": [68, 69], "save_pssm_after_last_round": [68, 69], "domain_inclusion_ethresh": [68, 69], "rpsdb": [68, 69], "show_domain_hit": [68, 69], "blastdb_vers": [68, 69], "dbtype": [68, 69], "gi_mask": [68, 69], "gi_mask_nam": [68, 69], "hash_index": [68, 69], "input_typ": [68, 69], "logfil": [68, 69, 181], "mask_data": [68, 69], "mask_desc": [68, 69], "mask_id": [68, 69], "max_file_sz": [68, 69], "parse_seqid": [68, 69], "taxid_map": [68, 69], "append_item": [68, 71], "to_gener": [68, 71], "set_hit_id": [68, 71], "set_hit_def": [68, 71], "set_hit_access": [68, 71], "set_hit_len": [68, 71], "dtd": [68, 71, 83, 84, 117, 217], "ncbi_blastoutput": [68, 71, 217], "objwct": 68, "xml_2212l_blastx_001": 68, "556": 68, "1347369": 68, "g25137": 68, "est48004": 68, "2934173": 68, "1011751523": 68, "041": 68, "267": [68, 243], "319": [68, 221], "12654095": 68, "aah00859": 68, "3459481": 68, "630": 68, "247": 68, "69599e": 68, "dlqllikavnlfpagtnsrwevianymnihsssgvkrtakdvigkakslqkldphqkddinkkafdkfkkehgvvpqadnatpserf": 68, "gpytdftp": 68, "tte": 68, "qkl": 68, "eqal": 68, "typvnt": 68, "erw": 68, "ia": 68, "avpgr": 68, "155": [68, 264], "dlqllikavnlfpagtnsrwevianymnihsssgvkrtakdvigkakslqkldp": 68, "tkk": 68, "xke": 68, "530": 68, "xml_2218_blastp_002": 68, "gpipe": 68, "9606": [68, 287], "repeat_9606": 68, "585505": 68, "q08386": 68, "mopb_rhoca": 68, "129628": 68, "p07175": 68, "para_agrtu": 68, "wnt": [68, 216], "query_4": 68, "query_1": [68, 217], "query_2": [68, 217], "query_3": 68, "query_5": 68, "195230749": [68, 216], "1383": [68, 216], "wingless": 68, "mmtv": 68, "wnt2": 68, "325053704": [68, 216], "1166": [68, 216], "3a": 68, "wnt3a": 68, "156630997": [68, 216], "105": [68, 216, 236], "1160": [68, 216], "wnt4": 68, "371502086": [68, 216], "1205": [68, 216], "5a": 68, "wnt5a": 68, "53729353": [68, 216], "1313": [68, 216], "wnt6": 68, "xml_2900_blastn_001": 68, "g26684": 68, "sts_d11570": 68, "caller": [68, 198, 269, 276], "ncbi_blast_url": [68, 70], "auto_format": [68, 70], "composition_based_statist": [68, 70], "db_genetic_cod": [68, 70], "gapcost": [68, 70], "genetic_cod": [68, 70, 260], "hitlist_s": [68, 70], "i_thresh": [68, 70], "matrix_nam": [68, 70], "nucl_penalti": [68, 70], "nucl_reward": [68, 70], "other_advanc": [68, 70], "perc_id": [68, 70], "query_fil": [68, 70], "query_believe_deflin": [68, 70], "query_to": [68, 70], "searchsp_eff": [68, 70], "short_queri": [68, 70], "alignment_view": [68, 70], "entrez_links_new_window": [68, 70], "expect_low": [68, 70], "expect_high": [68, 70], "format_entrez_queri": [68, 70], "format_object": [68, 70], "ncbi_gi": [68, 70], "results_fil": [68, 70, 192, 194, 195], "show_overview": [68, 70], "usernam": [68, 70, 302], "page_typ": [68, 70], "blastdoc": [68, 70], "doc_typ": [68, 70], "cloudblast": [68, 70], "tblastn": [68, 69, 70, 71, 217], "alt": [68, 70, 117, 180, 196, 197], "pam30": [68, 70, 198], "pam70": [68, 70, 198], "blosum80": [68, 70, 198], "enhanc": 69, "acceler": [69, 181], "camacho": 69, "_ncbiblastmain2seqcommandlin": 69, "blastallcommandlin": 69, "rosemari": 69, "overhang": [69, 158], "911": 69, "cull": [69, 152, 168], "envelop": [69, 216, 228], "ddefault": [69, 269], "qseqid": [69, 217], "sseqid": [69, 217], "deflin": 69, "locut": 69, "hicut": 69, "wordfind": 69, "dropoff": [69, 269], "preliminari": [69, 271], "m_code": 69, "linker": 69, "greedi": 69, "dc": [69, 249], "vecscreen": 69, "discontigu": 69, "coding_and_optim": 69, "windowmask": 69, "2994": 69, "3005": 69, "uncondition": 69, "checkpoint": [69, 180, 181], "_ncbiblast2seqcommandlin": 69, "blastpgpcommandlin": 69, "restart": [69, 181], "002": 69, "save_pssm": 69, "save_ascii_pssm": 69, "_ncbiblastcommandlin": 69, "rpsblastcommandlin": 69, "1011": 69, "rpstblastn": 69, "blast_formatt": 69, "_ncbibaseblastcommandlin": 69, "deltablast": 69, "dtring": 69, "cdd_delta": 69, "makeblastdb": 69, "nucl": 69, "dustmask": 69, "segmask": 69, "sequenceid": 69, "taxonomyid": 69, "default_str": 71, "query_lett": 71, "database_sequ": 71, "database_lett": 71, "blastxml": 71, "hit_def": [71, 217], "align_length": 71, "query_end": [71, 217, 220, 221, 225, 228, 233], "sbjct_start": 71, "sbjct_end": 71, "3x": 71, "reused_seq": 71, "multiple_align": 71, "database_nam": 71, "num_letters_in_databas": 71, "num_sequences_in_databas": 71, "posted_d": 71, "ka_param": 71, "ka_params_gap": 71, "num_hit": 71, "num_sequ": 71, "num_good_extend": 71, "num_seqs_better_": 71, "hsps_no_gap": 71, "hsps_prelim_gap": 71, "prelim": 71, "hsps_prelim_gapped_attemp": 71, "hsps_gap": 71, "query_length": 71, "database_length": 71, "effective_hsp_length": 71, "effective_query_length": 71, "effective_database_length": 71, "effective_search_spac": 71, "effective_search_space_us": 71, "dropoff_1st_pass": 71, "gap_x_dropoff": 71, "gap_x_dropoff_fin": 71, "blast_cutoff": 71, "_xmlparser": 71, "_start_tag": 71, "_end_tag": 71, "cleav": 72, "polymorph": 72, "konieczni": 72, "ausubel": 72, "8106085": 72, "kwd": [72, 282, 290], "cutsit": 72, "cuts_in": 72, "blocked_in": 72, "dcut": 72, "mytre": 73, "ncolumn": 73, "median": 73, "euclidean": [73, 281], "citi": 73, "uncent": 73, "spearman": 73, "kendal": 73, "medoid": 73, "triangular": 73, "centroid": 73, "neighborbood": 73, "eac": 73, "nmin": 73, "amax": 73, "amin": 73, "ngene": 73, "nexp": 73, "sadreyev": 74, "mol": [74, 119, 140, 149, 157, 263], "326": 74, "317": 74, "ali1": 74, "ali2": 74, "back_tabl": [75, 76], "nucleotide_alphabet": [75, 76], "protein_alphabet": [75, 76], "__getattr__": [75, 76, 98, 104, 133, 139], "update_ncbi_codon_t": 76, "standard_dna_t": [76, 260], "generic_by_id": 76, "uuu": 76, "ucu": 76, "uau": 76, "uuc": 76, "ucc": 76, "uac": 76, "ugc": 76, "gua": 76, "gug": 76, "default_stop_codon": 76, "acdefghiklmnpqrstvwi": 76, "gauc": 76, "ambiguous_nucleotide_alphabet": 76, "ambiguous_nucleotide_valu": 76, "ambiguous_protein_alphabet": 76, "ambiguous_protein_valu": 76, "tar": [76, 149], "uag": 76, "uga": 76, "ura": 76, "trr": 76, "tra": 76, "ambiguous_nucleotid": 76, "ambiguous_protein": 76, "failobj": 76, "throw": [76, 235], "alt_nam": 76, "die": [79, 80], "dnaconc": [79, 80], "excludedregion": [79, 80], "explainflag": [79, 80], "forwardinput": [79, 80], "gcclamp": [79, 80], "hybridprob": [79, 80], "includedregion": [79, 80], "maxdifftm": [79, 80], "maxgc": [79, 80], "maxmisprim": [79, 80], "maxpolyx": [79, 80], "maxsiz": [79, 80, 205, 206], "maxtm": [79, 80], "mingc": [79, 80], "minsiz": [79, 80], "mintm": [79, 80], "mishyblibraryfil": [79, 80], "mispriminglibraryfil": [79, 80], "numreturn": [79, 80], "oanyself": [79, 80], "odnaconc": [79, 80], "oendself": [79, 80], "oexcludedregion": [79, 80], "ogcmax": [79, 80], "ogcmin": [79, 80], "ogcopt": [79, 80], "ogcperc": [79, 80], "oligoinput": [79, 80], "omaxs": [79, 80], "omins": [79, 80], "omishybmax": [79, 80], "opolyxmax": [79, 80], "opttm": [79, 80], "osaltconc": [79, 80], "osiz": [79, 80], "osizeopt": [79, 80], "otm": [79, 80], "otmmax": [79, 80], "otmmin": [79, 80], "otmopt": [79, 80], "prang": [79, 80], "psizeopt": [79, 80], "ptmmax": [79, 80], "ptmmin": [79, 80], "ptmopt": [79, 80], "reverseinput": [79, 80], "saltconc": [79, 80], "mismatchperc": [79, 80], "seqal": [79, 80], "snucleotid": [79, 80], "sprotein": [79, 80], "basefreq": [79, 80], "freqsfrom": [79, 80], "gammacoeffici": [79, 80], "invarfrac": [79, 80], "ncategori": [79, 80], "ttratio": [79, 80], "intreefil": [79, 80], "noroot": [79, 80], "outgrno": [79, 80], "jumbl": [79, 80], "matrixtyp": [79, 80], "outtreefil": [79, 80], "treeprint": [79, 80], "treetyp": [79, 80], "trout": [79, 80], "catergori": [79, 80], "dotdiff": [79, 80], "fracsampl": [79, 80], "jusweight": [79, 80], "rewriteformat": [79, 80], "njumbl": [79, 80], "thorough": [79, 80, 181], "thresh": [79, 80], "whichcod": [79, 80], "aacateg": [79, 80], "invarcoeffici": [79, 80], "mlfrac": [79, 80], "aformat": [79, 80], "nobrief": [79, 80], "endextend": [79, 80], "endopen": [79, 80], "endweight": [79, 80], "errorfil": [79, 80], "minscor": [79, 80], "pmismatch": [79, 80], "rformat": [79, 80], "gappenalti": [79, 80], "intronpenalti": [79, 80], "splicepenalti": [79, 80], "maxrepeat": [79, 80], "minrepeat": [79, 80], "gaplimit": [79, 80], "maxpallen": [79, 80], "minpallen": [79, 80], "nummismatch": [79, 80], "outseq": [79, 80], "aoutfeat": [79, 80], "boutfeat": [79, 80], "wordsiz": [79, 80], "disulphid": [79, 80], "lysinemodifi": [79, 80], "notermini": [79, 80], "osformat": [79, 80], "sformat": [79, 80], "add_primer_set": [79, 82], "eprimer3": [80, 81], "_embosscommandlin": 80, "mysequ": 80, "myresult": 80, "bogusparamet": 80, "1967": 80, "dbg": 80, "dy": 80, "nanomolar": 80, "concentr": [80, 263], "anneal": 80, "oligo": [80, 263], "pcr": [80, 252, 263, 269], "hyb": 80, "subregion": [80, 136, 168], "melt": [80, 263], "temperatur": [80, 135, 171, 263], "mispriminglibrari": 80, "mononucleotid": 80, "hybridis": 80, "complementar": 80, "optimum": 80, "millimolar": [80, 263], "salt": [80, 263], "amplicon": 80, "fdnadist": 80, "dnadist": 80, "empric": 80, "proportoin": 80, "tv": 80, "ftreedist": 80, "treedist": 80, "phylogent": 80, "ymetric": 80, "ranch": 80, "djacent": 80, "ossibl": 80, "erbos": 80, "ill": 80, "fneighbor": 80, "randommis": 80, "fseqboot": 80, "differenc": 80, "ataset": 80, "justweight": 80, "replic": [80, 181, 185], "hyilp": 80, "exu": 80, "rotein": 80, "fdnapar": 80, "dnapar": 80, "parsiomni": 80, "randomis": 80, "parsimoni": [80, 129, 180, 181, 198], "tranvers": 80, "fprotpar": 80, "protpar": 80, "fprotdist": 80, "protdist": 80, "pob": 80, "fconsens": 80, "consens": [80, 132], "mr": 80, "mre": 80, "otu": [80, 132], "needleal": 80, "fuzznuc": 80, "fuzzpro": 80, "donor": [80, 90], "acceptor": 80, "etandem": 80, "einvert": 80, "palindrom": 80, "tranalign": 80, "diffseq": 80, "iep": [80, 262], "isoelectr": [80, 262, 264], "iep_clin": 80, "terminu": [80, 274], "seqret": [80, 249], "_embossminimalcommandlin": 80, "interconvert": [80, 168], "intermedi": [80, 167, 181, 277], "wider": 80, "seqmatchal": 80, "retsult": 81, "forward_seq": 81, "forward_start": 81, "forward_length": 81, "forward_tm": 81, "forward_gc": 81, "reverse_seq": 81, "reverse_start": 81, "reverse_length": 81, "reverse_tm": 81, "reverse_gc": 81, "internal_seq": 81, "internal_start": 81, "internal_length": 81, "internal_tm": 81, "internal_gc": 81, "primer_nam": 82, "first_primer_seq": 82, "second_primer_seq": 82, "primersearchamplifi": 82, "amplif": 82, "primersearchoutputrecord": 82, "global_dtd_dir": [83, 84], "global_xsd_dir": [83, 84], "local_dtd_dir": [83, 84], "local_xsd_dir": [83, 84], "xmldeclhandl": [83, 84], "handlemissingdocumentdefinit": [83, 84], "startnamespacedeclhandl": [83, 84], "endnamespacedeclhandl": [83, 84], "schemahandl": [83, 84], "startelementhandl": [83, 84], "startrawelementhandl": [83, 84], "startskipelementhandl": [83, 84], "endstringelementhandl": [83, 84], "endrawelementhandl": [83, 84], "endskipelementhandl": [83, 84], "enderrorelementhandl": [83, 84], "endelementhandl": [83, 84], "endintegerelementhandl": [83, 84], "characterdatahandlerraw": [83, 84], "characterdatahandlerescap": [83, 84], "skipcharacterdatahandl": [83, 84], "parse_xsd": [83, 84], "elementdecl": [83, 84], "open_dtd_fil": [83, 84], "open_xsd_fil": [83, 84], "save_dtd_fil": [83, 84], "save_xsd_fil": [83, 84], "externalentityrefhandl": [83, 84], "retri": 83, "5xx": 83, "sleep": 83, "max_tri": 83, "sleep_between_tri": 83, "hyperlink": 83, "linkout": 83, "citat": [83, 87, 153, 271], "_open": [83, 208], "keywd": [83, 208], "nbk25499": 83, "chapter4": 83, "urlerror": 83, "accd": 83, "ef590893": 83, "ef590892": 83, "19923": 83, "pdbdescr": 83, "crystal": [83, 133, 174, 215], "aconitas": 83, "pubmedcentr": 83, "citation_1": 83, "journal_titl": 83, "proc": [83, 263], "natl": [83, 263], "acad": [83, 263], "1991": [83, 263], "first_pag": 83, "author_nam": 83, "mann": 83, "bj": 83, "bdata": 83, "2014248": 83, "escap": [83, 84], "multilevel": 83, "esearch1": 83, "my_el": 83, "pubmed1": 83, "social": 83, "justic": 83, "san": 83, "francisco": 83, "calif": 83, "biochimica": 83, "biophysica": 83, "acta": [83, 174], "subel": [84, 117], "allowed_tag": 84, "attr": [84, 89, 104, 251], "repeated_tag": 84, "dictionarai": 84, "first_tag": 84, "metaclass": 84, "classproperti": 84, "xsd": [84, 196, 233], "handler": [84, 251], "circleci": 84, "pyenv": 84, "neither": [84, 181, 196, 250], "systemid": 84, "publicid": 84, "startel": [85, 89], "endel": [85, 89], "sprot": 85, "does_not_exist": 85, "expasy_url": 85, "mar": [86, 88, 149], "cf": [86, 208, 210, 215], "cofactor": [86, 113], "novemb": [87, 122], "prosite_ref": 87, "2017_03": 88, "adh_zinc": 88, "ps00387": 88, "mmm": [88, 269], "yyyi": [88, 152], "dd": [88, 152], "data_upd": 88, "info_upd": 88, "ru": 88, "prorul": 88, "nr_sp_releas": 88, "nr_sp_seq": 88, "nr_total": 88, "nr_posit": 88, "nr_unknown": 88, "nr_false_po": 88, "nr_false_neg": 88, "nr_partial": 88, "cc_taxo_rang": 88, "cc_max_repeat": 88, "cc_site": 88, "desc": [88, 180, 196, 197, 233], "cc_skip_flag": 88, "cc_matrix_typ": 88, "cc_scaling_db": 88, "cc_author": 88, "cc_ft_kei": 88, "cc_ft_desc": 88, "cc_version": 88, "bank": [88, 149, 213, 237, 244], "dr_posit": 88, "dr_false_neg": 88, "dr_false_po": 88, "dr_potenti": 88, "fingerprint": 88, "dr_unknown": 88, "pdb_struct": 88, "uniprotkb": [89, 196, 254], "scanprosite_doc": 89, "expatpars": 89, "isfin": 89, "sequence_db": 89, "level_tag": 89, "bytestream": 90, "textstream": 90, "ox": 90, "15310": 90, "w7079": 90, "pc6": 90, "5alpha": 90, "cvcl_xxxx": 90, "ww": [90, 272], "diseas": [90, 113, 263], "oi": 90, "sx": 90, "histori": [90, 123], "handleish": 91, "pathlib": 91, "builtin": [91, 277], "direntri": 91, "nacgt": 91, "gb_line_length": [92, 93], "gb_base_ind": [92, 93], "gb_feature_ind": [92, 93], "gb_internal_ind": [92, 93], "gb_other_internal_ind": [92, 93], "gb_feature_internal_ind": [92, 93], "gb_sequence_ind": [92, 93], "base_format": [92, 93], "internal_format": [92, 93], "other_internal_format": [92, 93], "base_feature_format": [92, 93], "internal_feature_format": [92, 93], "sequence_format": [92, 93], "record_start": [92, 94], "header_width": [92, 94, 237, 244], "feature_start_mark": [92, 94], "feature_end_mark": [92, 94], "feature_qualifier_ind": [92, 94], "feature_qualifier_spac": [92, 94], "sequence_head": [92, 94], "set_handl": [92, 94], "find_start": [92, 94], "parse_head": [92, 94], "parse_featur": [92, 94], "parse_foot": [92, 94], "parse_record": [92, 94], "parse_cds_featur": [92, 94], "embl_ind": [92, 94], "embl_spac": [92, 94], "genbank_ind": [92, 94], "genbank_spac": [92, 94], "structured_comment_start": [92, 94, 237, 244], "structured_comment_end": [92, 94, 237, 244], "structured_comment_delim": [92, 94, 237, 244], "keys_to_process": [92, 95], "clean_valu": [92, 95], "debug_level": 92, "use_fuzzi": 92, "feature_clean": 92, "spit": 92, "cleaner": [92, 95], "nc_000932": [92, 236, 237, 277], "residue_typ": 93, "esoter": 93, "pri": 93, "primat": 93, "proteint": 93, "ab01234": 93, "db_sourc": 93, "came": [93, 277], "materi": 93, "genu": [93, 132, 196], "base_count": 93, "refseq": 93, "strive": 93, "gbrel": 93, "consrtm": 93, "consortium": 93, "dictyostelium": 93, "discoideum": 93, "_featureconsum": 94, "insdc": [94, 236, 244], "feature_t": 94, "collab": 94, "ft": [94, 181, 244], "ddbj": [94, 236, 244, 273, 274], "organis": 94, "preambl": [94, 229], "490883": 94, "490885": 94, "879": 94, "feature_kei": 94, "neq001": 94, "methanococcu": 94, "jannaschii": 94, "cog1583": 94, "uncharacter": [94, 276], "acr": 94, "ipr001472": 94, "bipartit": [94, 181], "ipr002743": 94, "duf57": 94, "np_963295": 94, "41614797": 94, "2732620": 94, "mrlllelkalnsidkkqlsnyliqgfiynilknteyswlhnwkk": 94, "ekyfnftlipkkdiienkryyliisspdkrfievlhnkikdldiitiglaqfqlrktk": 94, "kfdpklrfpwvtitpivlregkivilkgdkyykvfvkrleelkkynlikkkepileep": 94, "ieislnqikdgwkiidvkdryydfrnksfsafsnwlrdlkeqslrkynnfcgknfyf": 94, "eaifegftfyktvsiririnrgeavyigtlwkelnvyrkldkeerefykflydcglg": 94, "lnsmgfgfvntkknsar": 94, "ncog1583": 94, "mrlllelkalnsidkkqlsnyliqgfiynilknteyswlhnwkknekyfnft": 94, "do_featur": 94, "tags2id": 94, "wg": 94, "tsa": 94, "tl": [94, 181], "to_process": 95, "med": [95, 124], "ydpwnlrfqskyksrda": 95, "nydpwnlrfqskyksrda": 95, "medydpwnlrfqskyksrda": 95, "key_nam": [95, 295], "entity_typ": [97, 171], "entity_attribut": 97, "col_def": 97, "table_row": 97, "set_all_track": [98, 104], "write_to_str": [98, 104], "del_track": [98, 104], "get_track": [98, 104], "move_track": [98, 104], "renumber_track": [98, 104], "get_level": [98, 104, 133, 135, 139], "get_drawn_level": [98, 104], "del_set": [98, 104], "get_set": [98, 104], "to_str": [98, 104, 128, 132, 180, 184, 187, 189], "del_featur": [98, 104], "set_all_featur": [98, 104], "set_featur": [98, 104], "set_colour": [98, 104], "set_color": [98, 104], "new_graph": [98, 104], "del_graph": [98, 104], "get_graph": [98, 104], "data_quartil": [98, 104], "graphdata": [98, 104], "set_data": [98, 104, 128, 130], "get_data": [98, 104, 128, 130], "add_point": [98, 104], "quartil": [98, 104], "starta": [98, 104], "enda": [98, 104], "startb": [98, 104], "endb": [98, 104], "colortransl": [98, 104], "read_colorschem": [98, 104], "get_artemis_colorschem": [98, 104], "artemis_color": [98, 104], "get_colorschem": [98, 104], "scheme_color": [98, 104], "int255_color": [98, 104], "float1_color": [98, 104], "subcomponent_s": [98, 99], "v_init": [98, 100], "v_final": [98, 100], "jitter": [98, 100], "draw_to_fil": [98, 101], "add_count": [98, 102], "scale_segment_valu": [98, 102], "add_label": [98, 102], "set_scal": [98, 102], "get_segment_info": [98, 102], "fill_chromosom": [98, 102], "syteni": 99, "_chromosomecompon": 99, "renderpm": [99, 104], "output_format": [99, 101, 103], "chromosome_nam": 99, "instanti": [99, 107, 143, 151, 168, 184, 186, 189, 197], "start_x_posit": 99, "end_x_posit": 99, "start_y_posit": 99, "end_y_posit": 99, "title_s": 99, "subcompon": 99, "cur_draw": [99, 103], "x_posit": 99, "_posit": 99, "fill_color": 99, "chr_percent": 99, "bp_length": 99, "default_feature_color": 99, "name_qualifi": [99, 104], "caption": 99, "label_sep_perc": 99, "_draw_seg": 99, "room": 99, "cur_diagram": 99, "spiral": 100, "hsv": 100, "permit": [100, 117, 168, 236], "bang": 100, "wong": 100, "_7_": 100, "573": 100, "nmeth0810": 100, "exp": [100, 228, 269], "angl": [100, 104, 133, 136, 144, 152, 154, 160, 168, 175], "revolut": 100, "gradat": 100, "aid": [100, 123, 166], "revolv": 100, "rbg": 100, "evenli": [100, 108], "tradit": [101, 277], "display_info": [101, 103], "segment_nam": 102, "color_schem": [102, 282], "rainbow_color": 102, "envis": 102, "abund": [102, 264], "scale_valu": 102, "start_x": 103, "start_i": 103, "end_x": 103, "end_i": 103, "xl": 104, "xr": 104, "yt": 104, "yb": 104, "tracklin": 104, "fragment_s": 104, "track_siz": 104, "iso": [104, 277], "pixel": 104, "portrait": 104, "margin": [104, 105, 181], "sigil": 104, "realiti": 104, "test1": 104, "dpi": 104, "jpg": 104, "tiff": 104, "inch": 104, "prescrib": 104, "track_level": 104, "baselin": 104, "from_level": 104, "to_level": 104, "renumb": 104, "occupi": 104, "greytrack_label": 104, "greytrack_fonts": 104, "greytrack_font": 104, "helvetica": [104, 105], "greytrack_font_rot": 104, "greytrack_font_color": 104, "_grei": 104, "scale_format": 104, "scale_color": 104, "scale_font": 104, "scale_fonts": 104, "scale_fontangl": 104, "scale_largetick": 104, "scale_tick": 104, "scale_smalltick": 104, "scale_largetick_interv": 104, "1e6": 104, "scale_smalltick_interv": 104, "1e4": 104, "scale_largetick_label": 104, "scale_smalltick_label": 104, "axis_label": 104, "greytrack_font_colour": 104, "scale_colour": 104, "trackscale_fonts": 104, "sint": 104, "si": [104, 123, 161], "mbp": 104, "kbp": 104, "preexist": 104, "set_id": [104, 128, 130], "feature_id": 104, "decis": [104, 263], "lightgreen": 104, "remaind": 104, "label_font": 104, "label_strand": 104, "subfeatur": [104, 236], "unwrap": 104, "_featur": 104, "sensibli": [104, 250], "altcolor": 104, "darkseagreen": 104, "linewidth": 104, "altcolour": 104, "graph_id": 104, "lowerq": 104, "medianq": 104, "upperq": 104, "poscolor": 104, "negcolor": 104, "featurea": 104, "featureb": 104, "gdct": 104, "_color": 104, "003922": 104, "294118": 104, "941176": 104, "chaperon": 104, "degrad": [104, 152, 196], "intermediari": 104, "pseudogen": 104, "colorschem": 104, "ride": [104, 206], "plaintext": 104, "visualis": 105, "v0": [105, 117], "darker": 105, "rosetta": 105, "stone": 105, "import_imagemap": 105, "label_compound": 105, "label_ortholog": 105, "label_reaction_entri": 105, "label_map": 105, "show_map": 105, "fontnam": 105, "fontsiz": 105, "draw_rel": 105, "show_ortholog": 105, "show_compound": 105, "show_gen": 105, "show_reaction_entri": 105, "canva": 105, "forward_algorithm": [106, 107], "backward_algorithm": [106, 107], "default_pseudo": [106, 108], "get_markov_model": [106, 108], "set_initial_prob": [106, 108], "set_equal_prob": [106, 108], "set_random_initial_prob": [106, 108], "set_random_transition_prob": [106, 108], "set_random_emission_prob": [106, 108], "set_random_prob": [106, 108], "allow_all_transit": [106, 108], "allow_transit": [106, 108], "destroy_transit": [106, 108], "set_transition_scor": [106, 108], "set_transition_pseudocount": [106, 108], "set_emission_scor": [106, 108], "set_emission_pseudocount": [106, 108], "get_blank_transit": [106, 108], "get_blank_emiss": [106, 108], "transitions_from": [106, 108], "transitions_to": [106, 108], "log_likelihood": [106, 109, 121], "estimate_param": [106, 109], "ml_estim": [106, 109], "update_transit": [106, 109], "update_emiss": [106, 109], "markov_model": [107, 109, 121], "proper": [107, 250, 269], "_forward_recurs": 107, "underflow": 107, "_backward_recurs": 107, "p57": 107, "p58": 107, "rescal": [107, 181], "state_alphabet": 108, "emission_alphabet": 108, "builder": 108, "emit": [108, 121], "influenc": 108, "initial_prob": 108, "incompatibli": 108, "from_stat": 108, "to_stat": 108, "p62": 108, "seq_stat": 108, "emission_st": 108, "transition_prob": 108, "emission_prob": 108, "transition_pseudo": 108, "emission_pseudo": 108, "letter1": 108, "letter2": 108, "emmiss": [108, 109], "seq_lett": 108, "emmission_lett": 108, "state_lett": 108, "reachabl": 108, "outgo": 108, "state_lat": 108, "unreach": 108, "a_": 109, "kl": [109, 130], "e_": 109, "state_path": 109, "transition_count": 109, "emission_count": 109, "emissions_count": 109, "baum": [109, 121], "welch": [109, 121], "1972": 109, "maxima": 109, "training_seq": 109, "stopping_criteria": 109, "dp_method": 109, "p64": 109, "forward_var": 109, "backward_var": 109, "training_seq_prob": 109, "real_stat": 110, "predicted_st": 110, "emission_titl": 110, "real_titl": 110, "predicted_titl": 110, "line_width": 110, "kgml_parser": [111, 115], "kgmlparser": [111, 115, 116], "kgml_pathwai": [111, 115, 116], "kyoto": [111, 115, 119], "encyclopedia": [111, 115, 119], "mass": [112, 119, 135, 139, 260, 264], "struct": [112, 113, 157], "ligan": 112, "c00023": 112, "c00017": 112, "c00099": 112, "alanin": 112, "c00294": 112, "inosin": 112, "c00298": 112, "trypsin": 112, "c00348": 112, "undecaprenyl": 112, "c00349": 112, "methyl": 112, "oxopropano": 112, "c01386": 112, "nh2mec": 112, "sysnam": 113, "substrat": [113, 115, 117, 176], "inhibitor": 113, "effector": 113, "alcohol": 113, "dehydrogenas": 113, "17beta": 113, "estradiol": 113, "ubiquinon": [113, 271], "reductas": 113, "transloc": 113, "dihydroxypterocarpan": 113, "6a": 113, "monooxygenas": 113, "glycoprotein": 113, "fucosyltransferas": 113, "acetylesteras": 113, "acet": 113, "kinas": 113, "benzoat": 113, "coa": 113, "ligas": 113, "orthologi": [114, 196, 273], "role": 114, "b1174": 114, "mine": 114, "b1175": 114, "get_kgml": [115, 117], "add_entri": [115, 117], "remove_entri": [115, 117], "add_rel": [115, 117], "remove_rel": [115, 117], "ortholog": [115, 116, 117], "reaction_entri": [115, 117], "add_compon": [115, 117], "remove_compon": [115, 117], "add_graph": [115, 117], "remove_graph": [115, 117], "is_react": [115, 117], "fgcolor": [115, 117], "bgcolor": [115, 117], "add_substr": [115, 117], "add_product": [115, 117], "reactant_id": [115, 117], "entry1": [115, 117], "entry2": [115, 117], "patholog": 116, "elem": [116, 197, 257], "ko01100": 116, "3628": 116, "1672": 116, "ko00010": 116, "glycolysi": 116, "gluconeogenesi": 116, "ko": [116, 117], "keggid": 117, "rout": 117, "prettifi": 117, "xmin": 117, "ymin": 117, "xmax": 117, "ymax": 117, "particip": 117, "polylin": 117, "foreground": 117, "roundrectangl": 117, "irrevers": 117, "substrate_id": 117, "product_id": 117, "reactant": [117, 176], "subtyp": 117, "rxxxxx": 118, "3c": 118, "catalyz": 118, "t01001": 119, "drug": [119, 273], "exact_mass": 119, "dbentri": 119, "ntseq": 119, "kcf": 119, "glycan": [119, 273], "target_db": 119, "source_db": 119, "conv": 119, "source_db_or_dbentri": 119, "turtl": [119, 184, 273], "scikit": [120, 281], "insead": [120, 281], "update_fn": [120, 121, 122], "typecod": [120, 127, 281], "man": 121, "schutz": 121, "mle": 121, "p_initi": 121, "p_transit": 121, "p_emiss": 121, "training_data": 121, "pseudo_initi": 121, "pseudo_transit": 121, "pseudo_emiss": 121, "likelihoood": 121, "feature_fn": 122, "car": 122, "meisner": 122, "szege": 122, "hu": 122, "ormandi": 122, "teach": 122, "xcar": 122, "sport": 122, "domest": 122, "suv": 122, "ycar": 122, "udf1": 122, "udf2": 122, "udf3": 122, "user_funct": 122, "xe": 122, "xv": 122, "yv": 122, "xc": 122, "pred": 122, "unnorm": 122, "training_set": [122, 127], "max_iis_iter": 122, "iis_converg": 122, "max_newton_iter": 122, "newton_converg": 122, "newton": 122, "mnemon": 123, "ci": [123, 285], "irad": 123, "fau": 123, "cn": 123, "corpor": 123, "electron": [123, 271], "edat": 123, "gn": 123, "grant": 123, "fir": 123, "issn": 123, "la": 123, "mid": 123, "mhda": 123, "mh": 123, "jid": 123, "oab": 123, "oci": 123, "oid": 123, "ot": 123, "oto": 123, "owner": 123, "pagin": 123, "phst": 123, "pt": [123, 174], "registri": 123, "substanc": 123, "sfm": 123, "flight": 123, "mission": 123, "sb": 123, "transliter": 123, "cin": 123, "ein": 123, "erratum": 123, "efr": 123, "cri": 123, "republish": 123, "crf": 123, "prin": 123, "retract": 123, "rpi": 123, "rpf": 123, "rin": 123, "rof": 123, "uin": 123, "uof": 123, "spin": 123, "patient": 123, "ori": 123, "residue_dict": [124, 126], "bussel": 124, "rgb2003": 124, "cornel": 124, "noe": 125, "nmrview": [125, 126], "crosspeak": 125, "originnuc": 125, "detectednuc": 125, "originresnum": 125, "toresnum": 125, "xprtool": 125, "nucleu": [125, 126], "returnlin": 125, "xpk": [125, 126], "insur": 125, "n15": [125, 126], "magnet": [125, 158, 168], "headlin": 126, "xpkheadlin": 126, "sixth": [126, 154], "entrynum": 126, "1st": [126, 168], "infn": 126, "noed": 126, "firstlin": 126, "sw": [126, 269], "sf": [126, 208, 210], "nv": 126, "599": 126, "8230": 126, "7860": 126, "datalabel": 126, "15n2": 126, "vol": 126, "axislabel": 126, "15n": 126, "resdict": 126, "residue_d": 126, "maxr": 126, "minr": 126, "hn": 126, "663": 126, "021": 126, "010": 126, "341": 126, "324": [126, 237], "476": 126, "49840": 126, "outfn": 126, "fieldn": 126, "newentri": 126, "fn_list": 126, "keyatom": 126, "outlist": 126, "learner": 127, "supervis": [127, 281], "hardli": 127, "glossari": [127, 281], "p_condit": 127, "p_prior": 127, "peek": [128, 129, 277], "peek_nonwhitespac": [128, 129], "next_nonwhitespac": [128, 129], "skip_whitespac": [128, 129], "next_until": [128, 129], "peek_word": [128, 129], "next_word": [128, 129], "smprint": [128, 129], "get_original_taxon_ord": [128, 129], "set_original_taxon_ord": [128, 129], "original_taxon_ord": [128, 129], "write_nexus_data_partit": [128, 129], "write_nexus_data": [128, 129], "append_set": [128, 129], "export_fasta": [128, 129], "export_phylip": [128, 129], "cstatu": [128, 129], "weighted_stepmatrix": [128, 129], "crop_matrix": [128, 129], "add_sequ": [128, 129], "insert_gap": [128, 129], "gaponli": [128, 129], "terminal_gap_to_miss": [128, 129], "all_id": [128, 130], "kill": [128, 130], "unlink": [128, 130], "get_succ": [128, 130], "get_prev": [128, 130], "add_succ": [128, 130], "remove_succ": [128, 130], "set_succ": [128, 130], "set_prev": [128, 130], "search_taxon": [128, 132], "get_taxa": [128, 132], "is_intern": [128, 132], "collapse_genera": [128, 132], "sum_branchlength": [128, 132], "set_subtre": [128, 132], "is_ident": [128, 132], "is_compat": [128, 132], "branchlength2support": [128, 132], "convert_absolute_support": [128, 132], "has_support": [128, 132], "merge_with_support": [128, 132], "provis": [129, 130, 131, 132, 201], "punctuat": 129, "combinatori": [129, 165], "wheeler": [129, 269], "cladist": 129, "269": [129, 252], "your_name_her": 129, "mrbay": 129, "skiplist": 129, "combined_matrix": 129, "name1": 129, "nexus_instance1": 129, "name2": 129, "nexus_instance2": 129, "readjust": 129, "charpartit": 129, "taxa": [129, 132, 181, 182], "interleave_by_partit": 129, "omit_nexu": 129, "codons_block": 129, "include_codon": 129, "codons_onli": 129, "narrow": 129, "1981": 129, "linn": 129, "soc": 129, "183": 129, "196": 129, "leftgreedi": 129, "charset": 129, "charlist": 129, "include_miss": 129, "skip_n": 129, "predecessor": [130, 132, 217], "fkauff": [130, 268], "prev": 130, "disconnect": 130, "son": 130, "grandchild": 130, "node_id": [130, 132, 180, 196, 197], "new_succ": 130, "multist": 131, "uncer": 131, "uncertain": [131, 236], "my_cod": 131, "monphyli": 132, "congruenc": 132, "branchlength": 132, "values_are_support": 132, "max_support": 132, "ntree": 132, "parent_id": 132, "id_of_previous_nod": 132, "connectiong": 132, "downward": 132, "space_equals_underscor": 132, "subtre": [132, 181], "node1": 132, "node2": 132, "taxon_list": 132, "nrep": 132, "branchlength_sd": 132, "taxlabel": 132, "new_tre": 132, "polytomi": 132, "support_as_branchlength": 132, "branchlengths_onli": 132, "plain_newick": [132, 189], "ignore_com": 132, "bstree": 132, "constre": 132, "merge_bootstrap": 132, "bs_tree": 132, "list_of_tre": 132, "consre": 132, "consensus_tre": 132, "defaultpars": [133, 170], "structuredecod": [133, 170, 171], "get_from_decod": [133, 170], "strictly_equ": [133, 135, 139, 155], "set_serial_numb": [133, 135], "set_bfactor": [133, 135], "set_altloc": [133, 135], "set_occup": [133, 135], "set_sigatm": [133, 135, 162], "set_siguij": [133, 135, 162], "set_anis": [133, 135, 162], "set_charg": [133, 135], "set_radiu": [133, 135], "flag_disord": [133, 135, 155], "set_par": [133, 135, 139], "detach_par": [133, 135, 139], "get_serial_numb": [133, 135], "get_charg": [133, 135], "get_radiu": [133, 135], "center_of_mass": [133, 135, 139], "disordered_get_list": [133, 135, 139], "disordered_add": [133, 135, 139, 155], "disordered_remov": [133, 135, 139, 155], "__orig_bases__": [133, 136, 139, 144, 155, 160, 237, 245, 250], "__parameters__": [133, 136, 139, 144, 155, 160, 237, 238, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 255, 256, 258], "child_dict": [133, 136, 139, 144, 155, 160], "detach_child": [133, 139], "get_iter": [133, 139, 161], "disordered_get_id_list": [133, 139], "disordered_get": [133, 139], "get_resname_list": [133, 140], "add_residu": [133, 140], "pcb_vectors_pymol": [133, 141], "get_chain": [133, 144, 160], "search_al": [133, 146], "pdb_ref": [133, 149], "get_status_list": [133, 149], "get_recent_chang": [133, 149], "get_all_entri": [133, 149], "download_pdb_fil": [133, 149], "get_all_assembli": [133, 149], "retrieve_assembly_fil": [133, 149], "download_all_assembli": [133, 149], "download_obsolete_entri": [133, 149], "get_seqres_fil": [133, 149], "get_seq": [133, 153], "get_ca_list": [133, 154], "get_phi_psi_list": [133, 154], "get_tau_list": [133, 154], "get_theta_list": [133, 154], "get_model": [133, 160], "get_map": [133, 161], "set_head": [133, 162], "set_line_count": [133, 162], "init_structur": [133, 162, 170, 171], "init_model": [133, 162], "init_chain": [133, 162], "init_seg": [133, 162], "init_residu": [133, 162], "init_atom": [133, 162], "set_symmetri": [133, 162], "get_guide_coord_from_structur": [133, 165], "set_refer": [133, 165], "parallelassembleresidu": [133, 168], "atomarrai": [133, 167, 168], "dcoordspac": [133, 168], "dcsvalid": [133, 168], "__deepcopy__": [133, 168], "clear_ic": [133, 168], "build_atomarrai": [133, 168], "build_edraarrai": [133, 168], "assemble_residu": [133, 168], "assemble_residues_s": [133, 168], "init_edra": [133, 168], "init_atom_coord": [133, 168], "update_dcoordspac": [133, 168], "propagate_chang": [133, 168], "make_extend": [133, 168], "no_altloc": [133, 158, 168], "pic_accuraci": [133, 152, 167, 168], "accept_sidechain": [133, 168], "accept_mainchain": [133, 168], "accept_hydrogen": [133, 168], "accept_deuterium": [133, 168], "rak": [133, 168], "set_flex": [133, 158, 168], "set_hbond": [133, 158, 168], "clear_transform": [133, 168], "assembl": [133, 158, 168, 242, 267], "split_akl": [133, 168], "atom_sernum": [133, 168], "atom_chain": [133, 168], "picflagsdefault": [133, 152, 168], "picflagsdict": [133, 168], "bond_rot": [133, 152, 168], "bond_set": [133, 152, 168], "applymtx": [133, 168], "edron_r": [133, 168], "gen_kei": [133, 168], "gen_tupl": [133, 168], "is_backbon": [133, 168], "len12": [133, 168], "len23": [133, 168], "angle_dif": [133, 168], "angle_avg": [133, 168], "angle_pop_sd": [133, 168], "atom_r": [133, 168], "fieldnam": [133, 168], "altloc_match": [133, 168], "cr_class": [133, 168], "__neg__": [133, 175], "__truediv__": [133, 175], "__pow__": [133, 175], "normsq": [133, 175], "get_arrai": [133, 175], "right_multipli": [133, 175], "mmcif": [133, 137, 142, 143, 149, 150, 164, 168, 169, 171, 237, 247], "greener": 133, "lenna": 133, "peterson": 133, "joao": [133, 165], "rodrigu": [133, 165], "property_dict": 134, "property_kei": 134, "property_list": 134, "holder": [134, 158], "res_id": [134, 137], "apmap": 134, "entity_property_list": 134, "entity_1": 134, "property_1": 134, "entity_2": 134, "property_2": 134, "bfactor": [135, 152, 168], "altloc": [135, 158, 162, 168], "serial_numb": [135, 152, 162, 171], "pqr_charg": [135, 162], "pqr": [135, 148, 151, 162], "float0": [135, 162], "disord": [135, 136, 139, 155, 158, 168], "carbon": [135, 168, 171], "mercuri": [135, 162], "atom_nam": [135, 171], "_atomt": 135, "compare_coordin": [135, 139, 155], "serial": [135, 136, 158, 168, 171, 182, 184, 190, 197, 258, 298], "isotropt": 135, "sigatm_arrai": [135, 162], "siguij_arrai": [135, 162], "anisou_arrai": [135, 162], "3x3": [135, 139, 175], "hetero": [136, 139, 162], "_translate_id": 136, "undisord": 136, "bond": [136, 144, 152, 158, 160, 168, 171, 264, 271], "dihedr": [136, 144, 154, 160, 168, 175], "fin": [136, 158, 168, 271], "forwardref": [136, 144, 155, 160], "_parent": [136, 139, 144, 155, 160], "_child": [136, 139, 144, 155, 160], "asa": [137, 145, 157], "sander": 137, "rost": 137, "ahmad": 137, "10328": 137, "90038": 137, "340200303": 137, "wilk": 137, "tien": 137, "1371": [137, 181], "pone": [137, 181], "0080635": 137, "1mot": 137, "mkdssp": 137, "a_kei": 137, "nh": 137, "o_1_relidx": 137, "o_1_energi": 137, "nh_1_relidx": 137, "nh_1_energi": 137, "o_2_relidx": 137, "o_2_energi": 137, "nh_2_relidx": 137, "nh_2_energi": 137, "version_str": 137, "dssp_version": 137, "excut": 137, "out_dict": 137, "chainid": [137, 138, 152, 167, 213, 214], "resid": [137, 213], "dssp_tupl": 137, "dssp_dict": 137, "acc_arrai": 137, "file_typ": 137, "nh_o_1_relidx": 137, "nh_o_1_energi": 137, "o_nh_1_relidx": 137, "o_nh_1_energi": 137, "nh_o_2_relidx": 137, "nh_o_2_energi": 137, "o_nh_2_relidx": 137, "o_nh_2_energi": 137, "chop": 138, "storag": [139, 184, 304], "_self": 139, "detach": 139, "geometri": [139, 168], "disorderd": 139, "kolodni": 140, "koehl": 140, "guiba": 140, "levitt": 140, "323": 140, "297": [140, 287], "csblab": 140, "fragment_data": 140, "fm": 140, "lsize": 140, "flength": 140, "fdir": 140, "res152": [140, 156], "res157": 140, "fid": 140, "nx3": [140, 174, 215], "fragment1": 140, "fragment2": 140, "sphere": [141, 157, 158, 168], "_abstracthsexposur": 141, "hs_exp": 141, "filehandl": [142, 143, 148, 151, 169], "structure_build": [143, 151], "auth_chain": 143, "auth_residu": 143, "mmcipars": 143, "her": [143, 151], "polym": [143, 171], "serial_num": [144, 162], "pic": [144, 152, 166, 167, 168], "wolf": 145, "umist": 145, "accal": 145, "par": [145, 180, 181], "cube": 145, "recompil": 145, "probe_s": 145, "z_slice": 145, "temp_path": 145, "tmp": [145, 269], "rsa_data": 145, "rsa": 145, "naccess_binari": 145, "tmp_directori": 145, "bucket_s": 146, "bucket": 146, "reject": 148, "pdb_object": 148, "use_model_flag": 148, "_select": [148, 169, 172], "write_end": 148, "preserve_atom_numb": [148, 169], "obsolete_pdb": 149, "pdbml": [149, 150], "99999": 149, "realproxi": 149, "charit": 149, "888": 149, "bashrc": 149, "bernstein": 149, "koetzl": 149, "meyer": 149, "jr": [149, 152, 168], "brice": 149, "rodger": 149, "kennard": 149, "shimanouchi": 149, "tasumi": 149, "535": 149, "542": 149, "1977": 149, "moment": [149, 269, 276], "newest": 149, "20031013": 149, "drwxrwxr": 149, "sysadmin": 149, "512": [149, 168], "20031006": 149, "rw": 149, "1327": 149, "pdb_code": 149, "OF": 149, "obslt": 149, "116l": 149, "216l": 149, "1hft": 149, "2hft": 149, "1hfv": 149, "2j5x": 149, "1hg6": 149, "1hhb": 149, "2hhb": 149, "3hhb": 149, "1hid": 149, "2hid": 149, "1hiu": 149, "2hiu": 149, "1hke": 149, "1uuz": 149, "file_format": 149, "3j92": 149, "with_assembli": 149, "cron": 149, "max_num_thread": 149, "pmdml": 149, "assembly_num": 149, "rtype": 149, "listfil": 149, "savefil": 149, "pdb_seqr": 149, "pathlik": [150, 164, 237, 240, 244, 245, 248, 250, 255], "textio": [150, 152], "fatal": 151, "THESE": 151, "THE": 151, "unus": [151, 252], "idcod": [152, 158, 167], "bfac": 152, "hoh": 152, "conjunct": 152, "amid": [152, 168], "proton": [152, 168], "seqrec": 152, "datestr": 152, "month": 152, "yy": 152, "hcut": 152, "pcut": 152, "omg": [152, 168], "chi2": [152, 168, 180, 181, 191, 201], "chi3": [152, 168], "chi4": [152, 168], "chi5": [152, 168], "pomg": [152, 168], "classic_b": [152, 168], "initatom": [152, 168], "pisc": [152, 168], "wang": [152, 168], "1589": [152, 168], "1591": [152, 168], "9183534": 153, "labess": 153, "colloc": 153, "pothier": 153, "mornon": 153, "c_alpha": 153, "biosci": 153, "291": 153, "295": [153, 252], "lmcp": 153, "jussieu": 153, "sincri": 153, "fname": [153, 201, 202, 203, 217, 221, 282], "pname": 153, "pseq": 153, "hec": 153, "ss_seq": 153, "2beg": 154, "lvffaedvgsnkgaiiglmvggvvia": 154, "dirqgpkepfrdyvdrfyktlraeqasqevknw": 154, "tetllvqnanpdcktilkalgpgatle": 154, "tacqg": 154, "aa_onli": 154, "mdirqgpkepfrdyvdrfyktlraeqasqevknwmtetllvqnanpdcktilkalgpgatleemmtacqg": 154, "fme": 154, "a2l": 154, "torsion": 154, "calpha": 154, "outer": 154, "_ppbuilder": 154, "_residuet": 155, "mgltool": 156, "393": 156, "268": 156, "vertex": 156, "msms_exec": 156, "roll": [157, 302], "ball": 157, "shrake": 157, "ruplei": 157, "lysozym": 157, "probe_radiu": 157, "n_point": 157, "radii_dict": 157, "radii": [157, 158, 168], "atomic_radii": 157, "sr": 157, "1415": 157, "1lcd": 157, "7053": 157, "oe1": [157, 168], "exercis": 158, "printabl": 158, "meshmix": 158, "slicer": 158, "printer": 158, "primit": [158, 182], "ribbon": 158, "atomscal": 158, "bondradiu": 158, "hedrondispatch": 158, "phase": [158, 181, 269], "includecod": 158, "backboneonli": 158, "ring": 158, "len1": 158, "angle2": 158, "len3": 158, "coval": [158, 168, 271], "bipoython": 158, "0pdb": 158, "cbeta": 158, "inlin": 158, "internal_to_atom_coord": [158, 168], "caviti": 158, "reson": 158, "openascad": 158, "entity_list": 159, "target_level": 159, "unfold": 159, "nonetyp": 160, "fasta_align": 161, "m1": 161, "m2": 161, "sj": 161, "equiveal": 161, "line_count": 162, "resseq": 162, "b_factor": 162, "spacegroup": 162, "symmetri": 162, "alphafold": 164, "p00520": 164, "mmcif_pars": 164, "pdbstructur": [164, 167], "jason": 165, "vertre": 165, "shindyalov": 165, "bourn": 165, "ce": [165, 168], "engin": [165, 252, 264], "739": 165, "747": 165, "9796821": 165, "max_gap": 165, "c4": [165, 221], "loss": [165, 180, 196, 197], "imgt": [166, 237, 244], "imgteduc": 166, "memoir": 166, "_uk": 166, "aminoacid": [166, 264], "formuleaa": 166, "rebuild": [167, 168], "deuter": 167, "reportdict": 167, "hdr": 167, "mdl": 167, "chn": [167, 168], "res_": 167, "dih": 167, "hed": 167, "e0": 167, "e1": 167, "rtol": 167, "atol": 167, "acoordmatchcount": 167, "7rsa": 168, "pdb7rsa": 168, "r1": 168, "r1chi2": 168, "conform": [168, 184, 216, 264, 269], "r1chi2_obj": 168, "r1chi2_kei": 168, "1_k_ca": 168, "1_k_cb": 168, "1_k_cg": 168, "1_k_cd": 168, "r1chi2_index": 168, "r1chi2_valu": 168, "r1_cbeta_index": 168, "r1_cbeta_coord": 168, "leg": 168, "ric0": 168, "newatomcoord": 168, "oldatomcoord": 168, "douthart": 168, "dunker": 168, "isbn": 168, "5199": 168, "cartesian": 168, "getter": 168, "initncac": 168, "ncackei": 168, "hedralen": 168, "hedrandx": 168, "a2ha_map": 168, "dihedralen": 168, "a2da_map": 168, "atomndx": 168, "d2a_map": 168, "3rd": [168, 252], "id3_dh_index": 168, "id32_dh_index": 168, "h2": 168, "hatom": 168, "3x4": 168, "hatomsr": 168, "hatoms_needs_upd": 168, "l23": 168, "datom": 168, "4x4": [168, 175], "datoms_needs_upd": 168, "standardis": 168, "meth": 168, "interatom": 168, "internal_to_atom": 168, "memo": 168, "akset": 168, "aktupl": 168, "atomarrayvalid": 168, "rak_cach": 168, "_hedradict2chain": 168, "hcoordspac": 168, "a2h_map": 168, "h2aa": 168, "drev": 168, "dh1ndx": 168, "dh2ndx": 168, "h1d_map": 168, "h1kei": 168, "h2kei": 168, "hedron1": 168, "hedron2": 168, "float64p4": 168, "dfwd": 168, "a2d_map": 168, "vectoris": 168, "dset": 168, "dsetvalid": 168, "edra": 168, "_create_edra": 168, "hedrakei": 168, "dihedraanglerad": 168, "dihedrakei": 168, "workselector": 168, "backboneselect": 168, "distplot": 168, "dihedra_sign": 168, "arai": 168, "l13": 168, "dihedral14": 168, "explcitli": 168, "resetatom": 168, "l12": 168, "l14": 168, "loader": [168, 300], "recov": [168, 296], "rebuilt": 168, "tetrahedron": 168, "hedronometr": 168, "oa": 168, "ob": 168, "law": 168, "cosin": 168, "bc": [168, 180, 182, 197, 269, 277], "alternatv": 168, "ncac": 168, "bpatomarrai": 168, "ic_data_sidechain": 168, "13f": 168, "5f": [168, 189], "rprev": 168, "atom_coord": 168, "ak_set": 168, "alt_id": 168, "is20aa": 168, "isaccept": 168, "atomcoordsin": 168, "resetloc": 168, "clash": 168, "4lgy": 168, "1305": 168, "avg": 168, "occacb": 168, "ncaco": 168, "rslt": 168, "avg_rslt": 168, "stddev": 168, "sd_rslt": 168, "d1d": 168, "d2d": 168, "360": 168, "d1": [168, 249], "d2": 168, "re_class": 168, "aoacacaacb": 168, "anacaacao": 168, "682194862932": 168, "04403040513919": 168, "14098": 168, "oxt": 168, "cg1": 168, "og1": 168, "sg": 168, "cg2": 168, "cd1": 168, "sd": 168, "od1": 168, "nd1": 168, "cd2": 168, "nd2": 168, "ce1": 168, "ne1": 168, "ce2": 168, "oe2": 168, "ne2": 168, "ce3": 168, "cz": 168, "nz": 168, "cz2": 168, "cz3": 168, "od2": 168, "oh": 168, "ch2": 168, "nh1": 168, "nh2": 168, "h3": 168, "ha2": 168, "ha3": 168, "hb": 168, "hb1": 168, "hb2": 168, "hb3": 168, "hg2": 168, "hg3": 168, "hd2": 168, "hd3": 168, "he2": 168, "he3": 168, "hz1": 168, "hz2": 168, "hz3": 168, "hg11": 168, "hg12": 168, "hg13": 168, "hg21": 168, "hg22": 168, "hg23": 168, "hz": 168, "hd1": 168, "he1": 168, "hd11": 168, "hd12": 168, "hd13": 168, "hg1": 168, "hd21": 168, "hd22": 168, "hd23": 168, "he": 168, "hh11": 168, "hh12": 168, "hh21": 168, "hh22": 168, "he21": 168, "he22": 168, "hh2": 168, "da2": 168, "da3": 168, "db1": 168, "db2": 168, "db3": 168, "dg2": 168, "dg3": 168, "dd2": 168, "dd3": 168, "de2": 168, "de3": 168, "dz1": 168, "dz2": 168, "dz3": 168, "dg11": 168, "dg12": 168, "dg13": 168, "dg21": 168, "dg22": 168, "dg23": 168, "dz": 168, "dd1": 168, "de1": 168, "dd11": 168, "dd12": 168, "dd13": 168, "dg1": 168, "dd21": 168, "dd22": 168, "dd23": 168, "dh11": 168, "dh12": 168, "dh21": 168, "dh22": 168, "de21": 168, "de22": 168, "dh": 168, "dh2": 168, "ak": 168, "hbond": 168, "queue": 168, "4th": 168, "drain": 168, "lst": 168, "missingok": 168, "expand": 168, "ca_a_0": 168, "ca_b_0": 168, "id3_dh": 168, "496": 168, "525": 168, "1024": [168, 251], "2048": 168, "4096": 168, "7168": 168, "8192": 168, "16384": [168, 219], "31744": 168, "angle_kei": 168, "richardson1981": 168, "1n": 168, "1c": 168, "1ca": 168, "sca": 168, "nn": [168, 263], "nca": 168, "te": 168, "new_angl": 168, "current_angl": 168, "iwll": 168, "ak_spec": 168, "0c": 168, "finer": 168, "mtx": [168, 175], "_allbond": 168, "akc": 168, "dkt": 168, "hkt": 168, "needs_upd": 168, "e_class": 168, "cre_class": 168, "classs": 168, "2_a_c": 168, "3_p_n": 168, "3_p_ca": 168, "akstr": 168, "xrh_class": 168, "setter": 168, "ak_tpl": 168, "newlength": 168, "id3": [168, 271], "id32": 168, "hxkei": 168, "pclass": 168, "dihdral": 168, "bitmask": 168, "stackoverflow": 168, "36001014": 168, "2783487": 168, "alst": 168, "in_rad": 168, "out_rad": 168, "radian": [168, 175], "div": 168, "chix": 168, "respo": 168, "occ": 168, "atomarrayca": 168, "pheselect": 168, "atomarrayph": 168, "csb": 168, "za": [168, 196], "z0": [168, 196], "deuterium": 168, "52_g_ca": 168, "52b_g_ca": 168, "52_g_ca_0": 168, "52_g_ca_b_0": 168, "discount": 168, "xxxx": [168, 272], "xxxxx": 168, "iucr": 169, "spec": [169, 242, 269], "version1": 169, "cifsyntax": 169, "dic": [169, 247, 262], "filepath": [169, 172], "set_atom_info": [170, 171], "set_chain_info": [170, 171], "set_entity_info": [170, 171], "set_group_info": [170, 171], "set_model_info": [170, 171], "set_xtal_info": [170, 171], "set_header_info": [170, 171], "set_bio_assembly_tran": [170, 171], "finalize_structur": [170, 171], "set_group_bond": [170, 171], "set_inter_group_bond": [170, 171], "pdb_id": [170, 247], "file_path": 170, "total_num_bond": 171, "total_num_atom": 171, "total_num_group": 171, "total_num_chain": 171, "total_num_model": 171, "alternative_location_id": 171, "temperature_factor": 171, "formal": 171, "chain_nam": 171, "num_group": 171, "asym": 171, "chain_indic": 171, "group_nam": 171, "group_numb": 171, "insertion_cod": 171, "group_typ": 171, "atom_count": 171, "bond_count": 171, "single_letter_cod": 171, "sequence_index": 171, "secondary_structure_typ": 171, "chemcomp": 171, "chain_count": 171, "space_group": 171, "unit_cel": 171, "r_free": 171, "r_work": 171, "experimnetal_method": 171, "bio_assembly_index": 171, "input_chain_indic": 171, "input_transform": 171, "bioassembli": 171, "bioassmbli": 171, "cleanup": 171, "atom_index_on": 171, "atom_index_two": 171, "bond_ord": 171, "partner": 171, "emerg": 173, "columba": 173, "quaternion": 174, "polynomi": 174, "theobald": 174, "rapid": [174, 181, 209, 213], "crystallogr": 174, "478": 174, "1107": 174, "s0108767305015266": 174, "epub": 174, "15973002": 174, "coords1": 174, "coords2": 174, "natom": 174, "reference_coord": [174, 215], "nxdim": [174, 215], "untransform": [174, 215], "rad": 175, "qq": 175, "v2": [175, 228], "scalar": 175, "vectorxvector": 175, "vectorxscalar": 175, "angle_rad": 175, "spheric": 175, "azimuth": 175, "polar_angl": 175, "rev": [175, 263], "x3": 175, "x2": 175, "dlen": 175, "x3x3": 175, "multigraph": [176, 177], "df_search": [176, 177, 179], "bf_search": [176, 177, 179], "lightweight": [176, 251], "interchang": [176, 181, 198, 236, 250], "preprocess": 176, "prototyp": 176, "interacton": 176, "intention": 176, "catalyst": 176, "p1": [176, 249], "stochiometr": 176, "iff": 176, "hashcod": 176, "stoichiometri": 176, "stoch": 176, "coef": 176, "jth": 176, "ith": 176, "add_nod": [177, 178, 179], "add_edg": [177, 178, 179], "child_edg": [177, 178, 179], "parent_edg": [177, 178, 179], "remove_nod": [177, 178, 179], "remove_edg": [177, 178, 179], "reinvent": 177, "phymlcommandlin": [180, 181], "input_tre": [180, 181], "n_rand_start": [180, 181], "nclass": [180, 181], "print_site_lnl": [180, 181], "print_trac": [180, 181], "prop_invar": [180, 181], "r_seed": [180, 181], "rand_start": [180, 181], "run_id": [180, 181], "ts_tv_ratio": [180, 181], "raxmlcommandlin": [180, 181], "parsimony_se": [180, 181], "binary_constraint": [180, 181], "bipartition_filenam": [180, 181], "bootstrap_branch_length": [180, 181], "bootstrap_se": [180, 181], "cluster_threshold": [180, 181], "cluster_threshold_fast": [180, 181], "exclude_filenam": [180, 181], "grouping_constraint": [180, 181], "num_bootstrap_search": [180, 181], "num_categori": [180, 181], "num_repl": [180, 181], "partition_branch_length": [180, 181], "partition_filenam": [180, 181], "protein_model": [180, 181, 198], "random_starting_tre": [180, 181], "rapid_bootstrap_se": [180, 181], "starting_tre": [180, 181, 198], "weight_filenam": [180, 181], "fasttreecommandlin": [180, 181], "bionj": [180, 181], "boot": [180, 181], "constraintweight": [180, 181], "constraint": [180, 181], "expert": [180, 181], "gtrfreq": [180, 181], "gtrrate": [180, 181], "intre": [180, 181], "intree1": [180, 181], "makematrix": [180, 181], "mlacc": [180, 181], "mllen": [180, 181], "mlnni": [180, 181], "nni": [180, 181, 198], "no2nd": [180, 181], "nocat": [180, 181], "nomatrix": [180, 181], "nome": [180, 181], "noml": [180, 181], "nopr": [180, 181], "nosupport": [180, 181], "notop": [180, 181], "rawdist": [180, 181], "refresh": [180, 181], "slownni": [180, 181], "spr": [180, 181], "sprlength": [180, 181], "topm": [180, 181], "basemlerror": [180, 191, 192], "cdf_chi2": [180, 191, 193], "codemlerror": [180, 191, 194], "yn00error": [180, 191, 195], "from_clad": [180, 182, 196], "color_nam": [180, 182], "from_hex": [180, 182], "from_nam": [180, 182], "to_hex": [180, 182], "to_rgb": [180, 182], "parse_handle_to_graph": [180, 184], "parse_graph": [180, 184], "new_clad": [180, 184, 189], "get_node_info": [180, 184], "parse_children": [180, 184], "add_stmt_to_handl": [180, 184], "process_clad": [180, 184, 189], "add_annot": [180, 187], "new_label": [180, 187], "to_phyloxml_contain": [180, 196], "to_align": [180, 196], "to_phylogeni": [180, 196], "re_ref": [180, 196], "ok_typ": [180, 196], "re_valu": [180, 196], "ok_applies_to": [180, 196], "ok_datatyp": [180, 196], "from_seqfeatur": [180, 196], "to_seqfeatur": [180, 196], "re_doi": [180, 196], "re_symbol": [180, 196], "from_seqrecord": [180, 196], "to_seqrecord": [180, 196], "re_cod": [180, 196], "ok_rank": [180, 196], "binary_charact": [180, 196, 197], "clade_rel": [180, 196, 197], "domain_architectur": [180, 196, 197], "mol_seq": [180, 196, 197], "sequence_rel": [180, 196, 197], "lat": [180, 196, 197], "common_nam": [180, 196, 197], "scientific_nam": [180, 182, 196, 197], "format_phylip": [180, 198], "dna_model": [180, 198], "get_dist": [180, 198], "build_tre": [180, 198], "get_scor": [180, 198], "homepag": 181, "696": 181, "14530136": 181, "dufayard": 181, "jf": 181, "lefort": 181, "anisimova": 181, "hordijk": 181, "alrt": 181, "sh": 181, "fc": 181, "fg": 181, "hky85": 181, "jc69": 181, "k80": 181, "f81": 181, "f84": 181, "tn93": 181, "012345": 181, "mtrev": 181, "dcmut": 181, "rtrev": 181, "cprev": 181, "vt": 181, "mtmam": 181, "mtart": 181, "hivw": 181, "hivb": 181, "tlr": 181, "_phyml_lk": 181, "_phyml_trac": 181, "raxmlhpc": 181, "stamataki": 181, "hpc": 181, "2688": 181, "2690": 181, "raxml_clin": 181, "interlaced2": 181, "protcatwag": 181, "NO": 181, "mpi": 181, "hill": [181, 201, 202], "climb": 181, "gammai": 181, "ore": 181, "consel": 181, "raxml_bipartitionfrequ": 181, "outputfilenam": 181, "invar": 181, "pure": 181, "stepwis": 181, "elw": 181, "heterogen": 181, "shall": 181, "catmix": 181, "protmix": 181, "sequencefilenam": 181, "reducedbi": 181, "qt": 181, "raxml_reducedlist": 181, "mixi": 181, "multifurc": 181, "gtrcat": 181, "numberofcategori": 181, "gtrmix": 181, "gtrgamma": 181, "thereaft": 181, "gtrcat_gamma": 181, "gtrgammai": 181, "gtrmixi": 181, "gtrcat_gammai": 181, "protcatmatrixnam": 181, "protgammamatrixnam": 181, "protmixmatrixnam": 181, "protcat_gammamatrixnam": 181, "protgammaimatrixnam": 181, "protmiximatrixnam": 181, "protcat_gammaimatrixnam": 181, "420": [181, 243], "pthread": 181, "price": 181, "dehal": 181, "arkin": 181, "plo": 181, "e9490": 181, "0009490": 181, "fasttree_ex": 181, "fasttreewin32": 181, "examplealign": 181, "fsa": 181, "exampletre": 181, "shimodaira": 181, "hasegawa": 181, "strength": 181, "constrain": 181, "violat": 181, "alignmentfil": 181, "gammalogtopaup": 181, "juke": 181, "cantor": 181, "newickfil": 181, "crash": 181, "slowest": [181, 269], "dissimilar": 181, "fileprefix": 181, "regraft": 181, "evo": 181, "unweight": [181, 198], "deactiv": 181, "parenthes": 181, "colon": [181, 229, 243, 249], "whelan": 181, "taylor": 181, "thorton": 181, "travers": [182, 184], "truth": 182, "callabl": [182, 250], "phx": 182, "octvu": 182, "octopu": 182, "vulgari": 182, "more_target": 182, "more_termin": 182, "t3": 182, "apaf": 182, "versu": 182, "front": [182, 235], "meet": [182, 287], "n0": 182, "n1": [182, 249], "branch_stdev": 182, "outgroup_target": 182, "outgroup_branch_length": 182, "stabil": [182, 264], "client": [182, 196], "aqua": 182, "fuchsia": 182, "lime": 182, "magenta": 182, "maroon": 182, "navi": 182, "oliv": 182, "pink": 182, "silver": 182, "tan": [182, 235], "hexstr": 182, "hexadecim": 182, "css": 182, "ff8000": 182, "colornam": 182, "0cc864": 182, "rdf": [184, 273], "evolutionaryontologi": 184, "librdf": 184, "redland": 184, "treetext": [184, 187, 189], "parse_format": 184, "purl": 184, "obolibrari": 184, "obo": [184, 187], "owl": 184, "w3": 184, "tree_uri": 184, "record_complete_ancestri": 184, "stmt": 184, "_bitstr": 185, "assist": 185, "adam": 185, "target_tre": 185, "len_tre": 185, "tree_constructor": 185, "node_dict": 187, "meta_nod": 187, "values_are_confid": [187, 189], "obj_typ": 187, "newick_doc": 189, "comments_are_confid": 189, "confidence_as_branch_length": 189, "branch_length_onli": 189, "max_confid": 189, "format_confid": 189, "format_branch_length": 189, "write_ctl_fil": [191, 192, 194, 195], "read_ctl_fil": [191, 192, 194, 195], "print_opt": [191, 194], "oserror": [192, 194, 195], "ctl_file": [192, 194, 195], "han": 196, "zmasek": 196, "complianc": 196, "branch_length_unit": 196, "id_sourc": 196, "achiev": [196, 250, 259], "p17304": 196, "0008270": 196, "tetrachloroethen": 196, "9_": 196, "gained_count": 196, "lost_count": 196, "present_count": 196, "absent_count": 196, "id_ref_0": 196, "id_ref_1": 196, "silurian": 196, "mya": 196, "ago": 196, "geograph": [196, 197], "phylogeograph": 196, "kml": 196, "fusion": 196, "speciation_or_dupl": 196, "unassign": 196, "is_align": 196, "geodetic_datum": 196, "alt_unit": 196, "altitud": 196, "geodet": 196, "datum": 196, "wgs84": 196, "latitud": 196, "longitud": 196, "meter": 196, "applies_to": 196, "id_ref": 196, "noaa": 196, "parent_branch": 196, "anyuri": 196, "base64binari": 196, "datetim": 196, "durat": 196, "gdai": 196, "gmonth": 196, "gmonthdai": 196, "gyear": 196, "gyearmonth": 196, "hexbinari": 196, "negativeinteg": 196, "nonnegativeinteg": 196, "nonpositiveinteg": 196, "normalizedstr": 196, "positiveinteg": 196, "token": [196, 271], "unsignedbyt": 196, "unsignedint": 196, "unsignedlong": 196, "unsignedshort": 196, "feat": 196, "actm": 196, "actin": 196, "one_to_one_orthologi": 196, "paralogi": 196, "super_orthologi": 196, "ultra_paralogi": 196, "xenologi": 196, "6500": 196, "ncbi_taxonomi": 196, "hare": 196, "aplca": 196, "aplysia": 196, "californica": 196, "cooper": 196, "1863": 196, "cohort": 196, "cultivar": 196, "infraclass": 196, "infracohort": 196, "infradivis": 196, "infrakingdom": 196, "infralegion": 196, "infraphylum": 196, "infratrib": 196, "kingdom": 196, "legion": 196, "microphylum": 196, "phylum": 196, "subcohort": 196, "subdivis": 196, "subform": 196, "subgenu": 196, "subkingdom": 196, "sublegion": 196, "subord": 196, "subphylum": 196, "subspeci": 196, "subtrib": 196, "subvarieti": 196, "superclass": 196, "supercohort": 196, "superdivis": 196, "superlegion": 196, "superord": 196, "superphylum": 196, "superspeci": 196, "supertrib": 196, "tribe": 196, "reader": [197, 277], "elementtre": 197, "default_encod": 197, "localtag": 197, "etre": 197, "_matrix": 198, "writeabl": 198, "skip_lett": 198, "aacgtggccacat": 198, "aaggtcgccacac": 198, "cagttcgccacaa": 198, "gagatttccgcct": 198, "gagatctccgccc": 198, "dm": [198, 208, 210], "230769": 198, "384615": 198, "538462": 198, "615385": 198, "461538": 198, "153846": 198, "369048": 198, "493976": 198, "250000": [198, 298], "585366": 198, "547619": 198, "566265": 198, "700000": 198, "355556": 198, "488889": 198, "222222": 198, "feng": 198, "gonnet1992": 198, "hoxd70": 198, "johnson": 198, "levin": 198, "mclachlan": 198, "mdm78": 198, "rao": 198, "risler": 198, "blosum90": 198, "pam250": 198, "distance_calcul": 198, "upgmatre": 198, "inner4": 198, "18749999999999994": 198, "07692307692307693": 198, "11057692307692304": 198, "inner3": 198, "038461538461538464": 198, "11538461538461536": 198, "15384615384615383": 198, "njtree": 198, "18269230769230765": 198, "04807692307692307": 198, "27884615384615385": 198, "051282051282051266": 198, "10256410256410259": 198, "14423076923076922": 198, "distance_matrix": 198, "sankoff": 198, "searcher": 198, "tre": 198, "01421": 198, "23927": 198, "08531": 198, "13691": 198, "2923": 198, "07477": 198, "17523": 198, "pars_tre": 198, "19732999999999998": 198, "04194000000000003": 198, "genepopcontrol": [199, 200, 201, 202], "easycontrol": [199, 200], "filepars": [199, 200], "filerecord": [199, 200, 203], "largefilepars": [199, 200], "get_indiv": [199, 200, 204], "test_pop_hz_defici": [200, 201], "test_pop_hz_excess": [200, 201], "test_pop_hz_prob": [200, 201], "test_global_hz_defici": [200, 201], "test_global_hz_excess": [200, 201], "test_ld": [200, 201], "create_contingency_t": [200, 201], "test_genic_diff_al": [200, 201], "test_genic_diff_pair": [200, 201], "test_genotypic_diff_al": [200, 201], "test_genotypic_diff_pair": [200, 201], "estimate_nm": [200, 201, 202], "calc_allele_genotype_freq": [200, 201], "calc_diversities_fis_with_ident": [200, 201], "calc_diversities_fis_with_s": [200, 201], "calc_fst_al": [200, 201], "calc_fst_pair": [200, 201], "calc_rho_al": [200, 201], "calc_rho_pair": [200, 201], "calc_ibd_diplo": [200, 201], "calc_ibd_haplo": [200, 201], "get_basic_info": [200, 202], "test_hw_pop": [200, 202], "test_hw_glob": [200, 202], "test_ld_all_pair": [200, 202], "get_heterozygosity_info": [200, 202], "get_genotype_count": [200, 202], "get_fi": [200, 202], "get_allel": [200, 202], "get_alleles_all_pop": [200, 202], "get_allele_frequ": [200, 202], "get_multilocus_f_stat": [200, 202], "get_f_stat": [200, 202], "get_avg_fi": [200, 202], "get_avg_fst_pair": [200, 202], "get_avg_fst_pair_locu": [200, 202], "calc_ibd": [200, 202], "start_read": [200, 203], "skip_head": [200, 203], "seek_posit": [200, 203], "skip_popul": [200, 203], "get_individu": [200, 203], "remove_loci_by_posit": [200, 203], "remove_loci_by_nam": [200, 203], "data_gener": [200, 204], "wbiom": [200, 203], "help_input": [200, 203], "marker_len": [200, 203, 204], "comment_lin": [200, 203, 204], "pop_list": 200, "trustabl": 200, "haploid": [200, 201, 202, 203, 269], "genepop_dir": [201, 202], "enum_test": [201, 202], "dememor": [201, 202], "heterozygot": [201, 202, 269], "defici": [201, 202], "wehr": 201, "fi": [201, 202], "wc": 201, "rh": [201, 202], "ext": 201, "pop_po": [201, 202], "fisher": 201, "deg": 201, "freedom": 201, "locus_nam": [201, 202], "genotyp": [201, 202, 269], "conting": 201, "genic": 201, "migrant": 201, "allele1": 201, "allele2": 201, "homozygot": [201, 202], "hm": 201, "ht": [201, 287], "weir": [201, 202], "cockerham": [201, 202], "robertson": [201, 202], "divers": 201, "fst": [201, 202], "multilocusfi": 201, "multilocusfst": 201, "multilocu": [201, 202], "qintra": [201, 202], "qinter": [201, 202], "spatial": 201, "diploid": [201, 202, 204], "_calc_ibd": 201, "test_typ": 202, "locus1": 202, "locus2": 202, "heterozygos": 202, "is_diplo": 202, "indiv": 203, "largerecord": 204, "consolewidth": [205, 206], "namewidth": [205, 206], "cmodulo": [205, 206], "prefwidth": [205, 206], "lines": [205, 206], "print_a": [205, 206], "format_output": [205, 206], "print_that": [205, 206], "make_format": [205, 206], "pbs_mc": [205, 206], "ggtaccgggccccccctcgaggtcgacggtatcgataagcttgatatcgaattcctg": 205, "cagcccgggggatccactagttctagagcggccgccaccgcggtggagctc": 205, "pbluescript": [205, 206], "sk": 205, "allenzym": 205, "abasi": 205, "bmedi": 205, "ykri": 205, "accii": 205, "acii": 205, "asplei": 205, "bsthhi": 205, "cfoi": 205, "cviaii": 205, "faei": 205, "faii": 205, "fati": 205, "glai": 205, "hhai": 205, "hin1ii": 205, "hin6i": 205, "hinp1i": 205, "hpych4iv": 205, "hpyse526i": 205, "hsp92ii": 205, "hspai": 205, "maeii": 205, "msei": 205, "nlaiii": 205, "saqai": 205, "taii": 205, "tru1i": 205, "tru9i": 205, "blanklin": 205, "blunt": 205, "enzmy": 205, "cutter": 205, "afai": 205, "alubi": 205, "alui": 205, "bsh1236i": 205, "bshfi": 205, "bsni": 205, "bspani": 205, "cdii": 205, "mlyi": 205, "schi": 205, "sspd5i": 205, "aani": 205, "restrictionbatch": 206, "ggtaccgggccccccctcgaggtcgacggtatcgataagcttgatatcgaattc": 206, "restriction_batch": 206, "apai": 206, "my_map": 206, "mc": 206, "ccatggcccgggggggagctccagctgccatagctattcgaactatagcttaag": 206, "printlist": 206, "999": 206, "650": [206, 263], "2500": 206, "dct": 206, "summaris": 206, "_make_": 206, "rebas": 207, "309": [207, 237, 243, 259], "2023": 207, "getseqmap": [208, 213], "__iadd__": [208, 213], "getatom": [208, 213], "fold": [208, 210, 271], "intro": 208, "parsabl": 208, "sid": [208, 209, 210, 211], "nodecodedict": 208, "px": [208, 210, 260], "sccs1": 208, "sccs2": 208, "scc": [208, 209, 210], "compactli": 208, "d1tpt_1": 208, "thymidin": 208, "phosphorylas": 208, "cla_handl": 208, "des_handl": 208, "hie_handl": 208, "dir_path": 208, "db_handl": 208, "backend": 208, "mysqldb": [208, 287, 302, 304], "minimis": 208, "write_xxx_sql": 208, "sunid": [208, 209, 210, 212], "14986": 208, "node_typ": 208, "ancenstor": 208, "d5hbib_": 208, "astral_fil": 208, "scopseq": 208, "mysql": [208, 302, 303], "file_handl": 208, "disp": 208, "loc": [208, 236], "ioerror": 208, "txt_1": [209, 210], "d1danl2": 209, "nodetyp": [209, 210], "3109": 209, "berkelei": [210, 211, 282], "d1anu1": [210, 211], "fibronectin": 210, "seqr": [213, 237, 247], "serv": [213, 277], "arbit": 213, "10a": 213, "1010b": 213, "protein_letters_3to1_extend": 213, "one_letter_cod": 213, "mb": 213, "2drca": 213, "155c_": 213, "pdb_datestamp": 213, "datestamp": 213, "eras": 213, "pdb_handl": 213, "hetatom": 213, "seqnum": 213, "echo": 213, "1bba": 214, "pbd": 214, "unnam": 214, "1a": [214, 263], "startresid": 214, "endresid": 214, "superposit": 215, "hopkin": 215, "baltimor": 215, "lsq": 215, "y_on_x1": 215, "y_on_x2": 215, "17e": 215, "90e": 215, "01e": [215, 290], "04e": 215, "23e": 215, "06e": 215, "07e": 215, "16e": 215, "15e": 215, "02e": 215, "94e": 215, "29e": 215, "blast_tab": [216, 217], "blasttabindex": [216, 217, 218], "blasttabpars": [216, 217, 218], "blasttabwrit": [216, 217, 218], "blast_xml": [216, 217], "blastxmlpars": [216, 217, 219], "blastxmlindex": [216, 217, 219], "blastxmlwrit": [216, 217, 219], "exonerate_cigar": [216, 221], "exoneratecigarpars": [216, 221, 222], "exoneratecigarindex": [216, 221, 222], "exonerate_text": [216, 221], "exoneratetextpars": [216, 221, 223], "exoneratetextindex": [216, 221, 223], "exonerate_vulgar": [216, 221], "exoneratevulgarpars": [216, 221, 224], "exoneratevulgarindex": [216, 221, 222, 224], "hhsuite2_text": [216, 226], "hhsuite2textpars": [216, 226, 227], "hmmer2_text": [216, 228], "hmmer2textpars": [216, 228, 229], "hmmer2textindex": [216, 228, 229], "hmmer3_domtab": [216, 228], "hmmer3domtabhmmhitpars": [216, 228, 230], "hmmer3domtabhmmquerypars": [216, 228, 230], "hmmer3domtabhmmhitindex": [216, 228, 230], "hmmer3domtabhmmqueryindex": [216, 228, 230], "hmmer3domtabhmmhitwrit": [216, 228, 230], "hmmer3domtabhmmquerywrit": [216, 228, 230], "hmmer3_tab": [216, 228], "hmmer3tabpars": [216, 228, 231], "hmmer3tabindex": [216, 228, 230, 231], "hmmer3tabwrit": [216, 228, 231], "hmmer3_text": [216, 228], "hmmer3textpars": [216, 228, 232], "hmmer3textindex": [216, 228, 232], "hmmer2": [216, 229], "hmmer3": [216, 230, 231, 233], "domtab": [216, 230], "interproscan_xml": [216, 233], "interproscanxmlpars": [216, 233, 234], "interproscan": [216, 234], "queryresult": [216, 217, 218, 220, 221, 223, 224, 225, 228, 230, 231, 233], "hspfragment": [216, 217, 220, 221, 225, 228, 233], "33211": 216, "mir_1": 216, "33212": 216, "mir_2": 216, "33213": 216, "mir_3": 216, "xml_2226_blastp_004": 216, "pleckstrin": 216, "musculu": 216, "writabl": 216, "possess": 216, "pslx": [216, 220], "hmmscan": [216, 228], "subprogram": 216, "phmmer": [216, 228], "hmmpfam": [216, 228], "hhsuite2": 216, "hhsuit": [216, 226, 227], "tab_2226_tblastn_002": 216, "search_dict": 216, "key_func": 216, "unsuit": 216, "cpython": [216, 237], "mainli": 216, "search_idx": 216, "index_filenam": [216, 237], "persist": [216, 304], "idx_filenam": 216, "db_idx": 216, "seamless": 216, "in_kwarg": 216, "out_kwarg": 216, "in_fmt": 216, "out_fmt": 216, "qstart_mark": [217, 219], "qend_mark": [217, 219], "block_siz": [217, 219], "rewrit": 217, "biomedcentr": 217, "nbk1762": 217, "blastoutput_db": 217, "blastoutput_program": 217, "blastoutput_refer": 217, "blastoutput_vers": 217, "iteration_queri": 217, "parameters_expect": 217, "param_entrez_queri": 217, "parameters_entrez": 217, "param_filt": 217, "parameters_filt": 217, "param_gap_extend": 217, "parameters_gap": 217, "param_gap_open": 217, "param_includ": 217, "parameters_includ": 217, "param_matrix": 217, "parameters_matrix": 217, "param_pattern": 217, "parameters_pattern": 217, "param_score_match": 217, "parameters_sc": 217, "param_score_mismatch": 217, "stat_db_num": 217, "statistics_db": 217, "stat_db_len": 217, "stat_eff_spac": 217, "statistics_eff": 217, "stat_entropi": 217, "statistics_entropi": 217, "stat_hsp_len": 217, "statistics_hsp": 217, "stat_kappa": 217, "statistics_kappa": 217, "stat_lambda": 217, "statistics_lambda": 217, "hit_access": 217, "hit_len": 217, "hsp_bit": 217, "hsp_densiti": 217, "hsp_evalu": 217, "hsp_gap": 217, "hsp_ident": 217, "hsp_posit": 217, "hsp_score": 217, "hsp_align": 217, "hit_fram": [217, 221], "hsp_hit": 217, "hit_end": [217, 220, 221, 225, 228, 233], "hsp_hseq": 217, "aln_annot": [217, 221, 225, 228], "hsp_midlin": 217, "pattern_start": 217, "hsp_pattern": 217, "pattern_end": 217, "query_fram": [217, 221], "hsp_queri": 217, "hsp_qseq": 217, "gnl": 217, "bl_ord_id": 217, "lump": 217, "use_raw_query_id": [217, 219], "use_raw_hit_id": [217, 219], "blast_id": 217, "uncom": 217, "tab_2226_tblastn_004": 217, "tab_2226_tblastn_008": 217, "pident": 217, "qend": 217, "sstart": 217, "tab_2226_tblastn_009": 217, "custom_field": 217, "qacc": 217, "accession_vers": 217, "qaccver": 217, "qgi": 217, "qlen": 217, "sacc": 217, "sacc_ver": 217, "sgi": 217, "gi_al": 217, "sallgi": 217, "id_al": 217, "sallseqid": 217, "slen": 217, "gapopen_num": [217, 220], "nident": 217, "ident_pct": [217, 220, 225], "pos_pct": [217, 225], "ppo": 217, "qframe": 217, "qseq": 217, "sframe": 217, "sseq": 217, "_default_field": 218, "searchindex": [218, 219, 220, 225, 231], "qstart_id": 219, "start_offset": [219, 236], "cshlp": 220, "blatspec": 220, "soe": 220, "src": 220, "hgdownload": 220, "cse": 220, "admin": 220, "faqblat": 220, "blat4": 220, "psl_34_004": 220, "pslx_34_004": 220, "noncontigu": 220, "spread": 220, "nonconsecut": 220, "reanchor": 220, "hit_gap_num": 220, "hit_gapopen_num": 220, "hit_start_al": 220, "match_num": 220, "match_rep_num": 220, "n_num": 220, "query_gap_num": 220, "query_gapopen_num": 220, "query_span_al": 220, "query_start_al": 220, "query_strand": [220, 221, 225, 228], "query_is_protein": 220, "parse_alignment_block": [221, 222, 223, 224], "get_qresult_id": [221, 222, 223, 224], "showalignemnt": 221, "atgggcaatatccttcggaaaggtcagcaaat": 221, "1319220": 221, "tgccgttaccat": 221, "gacgaaagtattaat": 221, "cysargtyrhi": 221, "aspgluserileasn": 221, "1234593": 221, "gtgccgttaccatcggtgacgaaagtattaat": 221, "1234630": 221, "382": 221, "358": 221, "lysatgagcgatgaaaata": 221, "55423": 221, "eu": 221, "aspttgaatgatgaaaata": 221, "42322": 221, "97769": 221, "cagaaaa": 221, "ctgcccagaat": 221, "aacgagcgttccg": 221, "297911": 221, "ctgaaaa": 221, "ccgcccaaagt": 221, "aactggagttccg": 221, "297993": 221, "triplet": 221, "hit_split_codon": 221, "query_split_codon": 221, "query_inter_rang": 221, "exn_22_m_genome2genom": 221, "all_qresult": 221, "388": 221, "449": 221, "487387": 221, "641682": 221, "386207": 221, "487327": 221, "208677": 221, "386123": 221, "71917": 221, "208639": 221, "177k": 221, "hit_frame_al": 221, "query_frame_al": 221, "exn_22_m_coding2coding_fshift": 221, "_baseexoneratepars": [222, 223, 224], "_baseexonerateindex": [223, 224], "_parser": 224, "_base": 224, "_query_mark": 224, "ssearch": 225, "tfastx": 225, "fasta_www2": 225, "fasta_list2": 225, "shtml": [225, 269], "fasta_guid": 225, "parseabl": 225, "_bit": 225, "_expect": 225, "_ident": 225, "init1_scor": 225, "_init1": 225, "initn_scor": 225, "_initn": 225, "opt_scor": 225, "_opt": 225, "_sim": 225, "sw_score": 225, "_score": 225, "z_score": 225, "_z": 225, "al_con": 225, "_fastam10parser__parse_hit_t": 225, "soedinglab": 226, "read_next": [228, 229], "push_back": [228, 229], "parse_key_valu": [228, 229], "parse_preambl": [228, 229], "parse_qresult": [228, 229], "parse_hit": [228, 229], "parse_hsp": [228, 229], "parse_hsp_align": [228, 229], "qresult_start": [228, 229, 232], "qresult_end": [228, 229, 232], "hmm_as_hit": [228, 230], "eddylab": 228, "hmmscan3": 228, "hmmsearch3": 228, "phmmer3": 228, "ali": 228, "hmmfrom": 228, "alifrom": 228, "noali": 228, "notextw": 228, "textw": 228, "domain_exp_num": 228, "domain_obs_num": 228, "is_includ": 228, "acc_avg": 228, "domain_index": 228, "env_end": 228, "env_endtyp": 228, "env_start": 228, "evalue_cond": 228, "hit_endtyp": 228, "query_endtyp": 228, "hmmto": 228, "alito": 228, "cluster_num": 228, "domain_included_num": 228, "inc": [228, 241], "domain_reported_num": 228, "env_num": 228, "overlap_num": 228, "region_num": 228, "reg": [228, 269], "un": [229, 296], "hit_placehold": 229, "_basehmmertextindex": [229, 232], "hmmer3domtabpars": 230, "pmc3998142": 233, "pf": 233, "outputformat": 233, "signatur": 233, "ipr": 233, "xref": 233, "coil": [233, 271], "panther": 233, "phobiou": 233, "_undefinedsequencedata": 235, "_twobitsequencedata": [235, 256], "codec": 235, "maxsplit": 235, "formfe": 235, "substr": [235, 302], "start1": 235, "end1": 235, "start2": 235, "end2": 235, "_seqabstractbaseclass": 235, "mkqhkamivalivicitavvaalvtrkdlcevhirtgqtevavf": [235, 259], "my_undefined_sequ": 235, "my_partially_defined_sequ": 235, "_data": 235, "actcgtcgtcg": 235, "actcgacgtcg": 235, "actcgnnntcg": 235, "tctcgacgtcg": 235, "ctcgacgtcg": 235, "actcgacgtcga": 235, "aactcgacgtcg": 235, "aactcgacggtcg": 235, "actcgacgtc": 235, "actcgacgt": 235, "atcgacgtcg": 235, "tcgacgtcg": 235, "actcgacgtcgattt": 235, "actgn": [235, 260], "acugn": 235, "gtggccattgtaatgggccgctgaaagggtgcccgatag": 235, "vaivmgr": 235, "vaivmgrwkgar": 235, "coding_dna2": 235, "gtggccattgtaatgggccgc": 235, "coding_dna3": 235, "atggcacggaagtga": 235, "markw": 235, "inplac": 235, "cgaut": 235, "aatcg": 235, "aaucg": 235, "acgtuacgtuxyzxyz": 235, "zrxzrxaacgtaacgt": 235, "ucg": 235, "zrxzrxaacguaacgu": 235, "gctaa": 235, "gcuaa": 235, "tgcaatgcaaxrzxrz": 235, "gcu": 235, "ugcaaugcaaxrzxrz": 235, "biocorba": 236, "bias": [236, 271], "dread": 236, "f1": [236, 249], "f2": 236, "110": 236, "f3": 236, "parent_sequ": 236, "mkqhkamivalivicitavva": 236, "valiv": 236, "ggttacacttaccgataatgtctctgatga": 236, "gytyr": 236, "vtltdnvsd": 236, "parent_seq": 236, "thought": [236, 263], "1750": 236, "154478": [236, 277], "1716": 236, "4347": 236, "4310": 236, "1751": 236, "1717": 236, "4311": 236, "1760": 236, "456": 236, "al391218": 236, "105173": 236, "108462": 236, "2000000": 236, "105172": 236, "2644": 236, "2868": 236, "2643": 236, "specialis": [236, 277], "loc2": 236, "gff3": 236, "db_ref": 236, "feature_loc": 236, "caution": 236, "115": 236, "230": 236, "fl1": 236, "fl2": 236, "fl3": 236, "qhkamiliv": 236, "455": 236, "457": 236, "1901": 236, "write_record": [237, 240, 244, 245, 246, 248, 249, 250, 251, 252, 255], "qualifier_ind": [237, 244], "letters_per_lin": [237, 244], "sequence_ind": [237, 244], "qualifier_indent_str": [237, 244], "qualifier_indent_tmp": [237, 244], "feature_head": [237, 244], "letters_per_block": [237, 244], "blocks_per_lin": [237, 244], "position_pad": [237, 244], "startdocu": [237, 251], "startseqxmlel": [237, 251], "endseqxmlel": [237, 251], "startentryel": [237, 251], "endentryel": [237, 251], "startentryfieldelementversion01": [237, 251], "startentryfieldel": [237, 251], "startspeciesel": [237, 251], "endspeciesel": [237, 251], "startdescriptionel": [237, 251], "enddescriptionel": [237, 251], "startsequenceel": [237, 251], "endsequenceel": [237, 251], "startdbrefel": [237, 251], "enddbrefel": [237, 251], "startpropertyel": [237, 251], "endpropertyel": [237, 251], "f002": 237, "1348912": 237, "g26680": 237, "633": 237, "1348917": 237, "g26685": 237, "1592936": 237, "g29385": 237, "471": 237, "critic": 237, "f001": 237, "3318709": 237, "1a91": 237, "record_dict": 237, "sff": [237, 250, 252], "sts_d11734": 237, "cggagccagcgagcatatgctgcatgaggacctttctatcttacattatggctgggaatcttactctttc": 237, "atctgataccttgttcagatttcaaaatagttgtagccttatcctggttttacagatgtgaaactttcaa": 237, "gagatttactgactttcctagaatagtttctctactggaaacctgatgcttttataagccattgtgatta": 237, "ggatgactgttacaggcttagctttgtgtgaaanccagtcacctttctcctaggtaatgagtagtgctgt": 237, "tcatattactntaagttctatagcatacttgcnatcctttanccatgcttatcatangtaccatttgagg": 237, "aattgntttgcccttttgggtttnttnttggtaaannnttcccgggtgggggnggtnnngaaa": 237, "cggagccagcgagcatatgctgcatgaggacctttctatcttacattatggctgggaatc": 237, "ttactctttcatctgataccttgttcagatttcaaaatagttgtagccttatcctggttt": 237, "tacagatgtgaaactttcaagagatttactgactttcctagaatagtttctctactggaa": 237, "acctgatgcttttataagccattgtgattaggatgactgttacaggcttagctttgtgtg": 237, "aaanccagtcacctttctcctaggtaatgagtagtgctgttcatattactntaagttcta": 237, "tagcatacttgcnatcctttanccatgcttatcatangtaccatttgaggaattgntttg": 237, "cccttttgggtttnttnttggtaaannnttcccgggtgggggnggtnnngaaa": 237, "fastq_dict": 237, "eas54_6_r1_2_1_540_792": [237, 250], "example_do": 237, "hedgehog": 237, "167877390": 237, "eds40773": 237, "447": 237, "167234445": 237, "np_001107837": 237, "74100009": 237, "aaz99217": 237, "13990994": 237, "dbj": [237, 240, 259], "baa33523": 237, "56122354": 237, "aav74328": 237, "strong": [237, 239], "wors": [237, 250], "fileformat": 237, "abi": [237, 238], "biosystem": [237, 238], "mott": 237, "_pdbx_poly_seq_schem": [237, 247], "2line": [237, 240], "illumnia": 237, "casava": [237, 250], "gck": [237, 241], "kit": [237, 241], "gfa1": [237, 242], "assemblyv": 237, "gfa2": [237, 242], "fragement": 237, "nib": [237, 246], "nibbl": [237, 246], "phrap": [237, 248, 267, 268, 270], "cons": [237, 248, 267, 270], "seqxml": [237, 251], "schmitt": [237, 251], "snapgen": [237, 253], "earrai": 237, "xdna": [237, 258], "strider": [237, 258, 260], "serialclon": 237, "sweetpea": [237, 259], "nu": [237, 259], "3176602": [237, 259], "u78617": [237, 259], "lou78617": [237, 259], "naccggatgta": 237, "naggctcggtta": 237, "accggatgta": 237, "aggctcggtta": 237, "arab1": 237, "ac007323": 237, "86436": 237, "cor6_6": [237, 244], "x55053": [237, 244], "id_dict": 237, "x62281": [237, 244], "m81224": [237, 244], "aj237582": [237, 244], "l31939": [237, 244], "af297471": [237, 244], "brassica": 237, "rapa": 237, "bif72": 237, "kin": 237, "wqvmrl87qwcm9llo4": 237, "efg23vgg": 237, "bug6yxxskwecffh0l08jzalghq": 237, "sabzaa4v2ele9": 237, "2fm5fnyyy07j4": 237, "ttwsxo45s3zcliby4x": 237, "wjc39": 237, "l7gjjfe6w": 237, "s1jjn5": 237, "1asrukw": 237, "uveyeaqsv5edqonfoemmvea": 237, "oow": 237, "eas54_6_r1_2_1_413_324": [237, 250], "eas54_6_r1_2_1_443_348": [237, 250], "ttggcaggccaaggccgatggatca": [237, 250], "make_tupl": 237, "540": 237, "792": 237, "443": 237, "get_gi": 237, "idx_nam": 237, "7525076": 237, "np_051101": 237, "ycf2": 237, "45478717": [237, 255], "np_995572": [237, 255], "gttgcttctggcgtgggtggggggg": [237, 250], "bytesio": 237, "www6": 238, "appliedbiosystem": 238, "software_commun": 238, "abif_file_format": 238, "consed_sampl": 239, "contig1": 239, "agccccgggc": 239, "1475": 239, "mislead": [239, 302], "agagg": 239, "contig2": 239, "gaattactat": 239, "dup": 240, "acgta": 240, "cgtc": 240, "ccgcc": 240, "cgcgc": 240, "aster_no_wrap": 240, "3298468": [240, 259], "baa31520": [240, 259], "samipf": [240, 259], "ggh": 240, "aster": [240, 259], "mtfglvytvyataidpkkgslgtiapiaigfivgani": 240, "modify_record": [240, 250], "record2titl": [240, 249, 250], "myrecord": [240, 249], "textco": 241, "biosoftwar": 241, "gfa": 242, "commentari": 243, "embed": [243, 277], "tat_mase_nuc": 243, "a_u455": 243, "303": 243, "b_hxb2r": 243, "306": 243, "c_ug268a": 243, "d_eli": 243, "f_bz163a": 243, "o_ant70": 243, "342": 243, "o_mvp5180": 243, "cpzgab": 243, "cpzant": 243, "a_rod": 243, "390": 243, "b_ehoa": 243, "d_mm251": 243, "stm_stm": 243, "387": 243, "ver_agm3": 243, "354": 243, "gri_agm677": 243, "264": 243, "sab_sab1c": 243, "219": [243, 252], "syk_syk": 243, "japan": [244, 273], "nig": 244, "cine": 244, "ligm": 244, "userman_doc": 244, "ftable_doc": 244, "hla": [244, 249], "epo_prt_select": 244, "a00022": 244, "a00028": 244, "a00031": 244, "a00034": 244, "a00060": 244, "a00071": 244, "a00072": 244, "a00078": 244, "cq797900": 244, "_insdcwrit": 244, "nfh": 244, "myfastaread": 245, "anystr": 245, "maxcount": 245, "mincount": 245, "test_even_bigendian": 246, "nagaagagccgcnggcactt": 246, "jim": 246, "nibfrag": 246, "nagaagagccgcnggcacttgantatcgtcgccaccagncgncttgntgg": 246, "byteord": 246, "dbref": [247, 251], "dbref1": 247, "dbref2": 247, "seqadv": 247, "modr": 247, "format23": 247, "sect3": 247, "unp": 247, "p12497": 247, "pol_hv1n5": 247, "unrecognis": 247, "_entity_poly_seq": 247, "_struct_ref_seq": 247, "_pdbx_poly_seq": 247, "mmcif_pdbx_v40": 247, "pdbx_poly_seq_schem": 247, "mmcif_pdbx_v50": 247, "struct_ref_seq": 247, "phd1": 248, "34_222_": 248, "ab1": 248, "ctccgtcgga": 248, "425_103_": 248, "cgggatccca": 248, "425_7_": 248, "acataaatca": 248, "acataaatcaaattactnaccaacacacaaaccngtctcgcgtagtggag": 248, "pir_fram": 249, "kun": 249, "bioinf": 249, "crab_pir": 249, "crab_anapl": 249, "crystallin": 249, "mditihnpli": 249, "rrplfswlap": 249, "srifdqifg": 249, "hlqesellpa": 249, "spslspflmr": 249, "spifrmpswl": 249, "etglsemrl": 249, "kdkfsvnldv": 249, "khfspeelkv": 249, "kvlgdmveih": 249, "gkheerqdeh": 249, "gfiarefnrk": 249, "yripadvdpl": 249, "titsslsldg": 249, "vltvsaprkq": 249, "sdvpersipi": 249, "treekpaiag": 249, "aqrk": 249, "crab_bovin": 249, "mdiaihhpwi": 249, "rrpffpfhsp": 249, "srlfdqffge": 249, "hllesdlfpa": 249, "stslspfylr": 249, "ppsflrapsw": 249, "idtglsemrl": 249, "ekdrfsvnld": 249, "vkhfspeelk": 249, "vkvlgdviev": 249, "hgkheerqd": 249, "hgfisrefhr": 249, "kyripadvdp": 249, "laitsslssd": 249, "gvltvngprk": 249, "qasgpertip": 249, "itreekpavt": 249, "aapkk": 249, "s27231": 249, "rhodopsin": 249, "northern": 249, "leopard": 249, "frog": 249, "mngtegpnfi": 249, "ipmsnktgvv": 249, "rspfdypqyi": 249, "laepwkysvl": 249, "aaymfllil": 249, "glpinfmtli": 249, "vtiqhkklrt": 249, "plnyillnlg": 249, "vcnhfmvlcg": 249, "ftitmytslh": 249, "gyfvfgqtgc": 249, "yfegffatlg": 249, "geialwslvv": 249, "laieryivvc": 249, "kpmsnfrfge": 249, "nhammgvaft": 249, "wimalacavp": 249, "plfgwsryip": 249, "egmqcscgvd": 249, "yytlkpevnn": 249, "esfviymfvv": 249, "hflipliii": 249, "fcygrlvctv": 249, "keaaaqqq": 249, "attqkaekev": 249, "trmviimvif": 249, "flicwvpyai": 249, "vafyifthqg": 249, "sefgpifmtv": 249, "paffakssai": 249, "ynpviyimln": 249, "kqfrncmitt": 249, "lccgknpfgd": 249, "ddassaatsk": 249, "teatsvstsq": 249, "vspa": 249, "i51200": 249, "african": 249, "claw": 249, "vpmsnktgvv": 249, "laepwqys": 249, "glpinfmtlf": 249, "plnyillnlv": 249, "fanhfmvlcg": 249, "ftvtmytsmh": 249, "gyfifgptgc": 249, "yiegffatlg": 249, "gevalwslvv": 249, "laveryivvc": 249, "kpmanfrfg": 249, "nhaimgvaft": 249, "wimalscaap": 249, "esfviymfiv": 249, "hftiplivif": 249, "fcygrllctv": 249, "lttqkaekev": 249, "trmvvimvvf": 249, "snfgpvfmtv": 249, "ynpviyivln": 249, "kqfrnclitt": 249, "edgssaatsk": 249, "teassvsssq": 249, "jn0120": 249, "japanes": 249, "mngtegdnfi": 249, "vpfsnktgla": 249, "rspyeypqyi": 249, "laepwkys": 249, "aaymfflilv": 249, "gfpvnfltlf": 249, "vtvqhkklrt": 249, "plnyillnla": 249, "manlfmvlfg": 249, "ftvtmytsmn": 249, "gyfvfgptmc": 249, "siegffatlg": 249, "laieryiv": 249, "kpmgnfrfgn": 249, "thaimgvaft": 249, "wimalacaap": 249, "plvgwsryip": 249, "egmqcscgpd": 249, "yytlnpnfnn": 249, "esyvvymfvv": 249, "hflvpfviif": 249, "keaaaaqq": 249, "astqkaekev": 249, "trmvvlmvig": 249, "flvcwvpya": 249, "sdfgatfmtl": 249, "paffakss": 249, "ynpviyilmn": 249, "lccgknplgd": 249, "sgastskt": 249, "evssvstspv": 249, "spa": 249, "n3": 249, "dmb_prot": 249, "hla00489": 249, "hla00490": 249, "hla00491": 249, "hla00492": 249, "hla00493": 249, "hla01083": 249, "log10": 250, "pe": 250, "00000001": 250, "000000001": 250, "valuea": 250, "asci": 250, "phrep": 250, "confusingli": 250, "393333": 250, "zzzzzzzzzzzxzvzzmvzrxrrrr": 250, "sub_rec": 250, "ttctggcgtg": 250, "nacgtacgta": 250, "exclam": 250, "abcdejt": 250, "bcjt": 250, "probal": 250, "solexa_qu": [250, 259], "liter": 250, "logarith": 250, "071113_eas56_0053": 250, "998": 250, "tttcttgcccccatagactgagaccttccctaaata": 250, "iiiiiiiiiiiiiiiiiiiiiiiiiiiiicii": 250, "712": [250, 287], "acccagctaatttttgtatttttgttagagacagtg": 250, "iiiiiiiiiiiiiiicdiiiii": 250, "tgttctgaaggaaggtgtgcgtgcgtgtgtgtgtgt": 250, "iiiiiiiiiiiiciigiiiii": 250, "iaiiie65i": 250, "501": 250, "tgggaggttttatgtgga": 250, "aagcagcaatgtacaaga": 250, "iiiiiii": 250, "iiiiii1": 250, "nasti": 250, "thirdli": 250, "unavoid": 250, "wrongli": [250, 264], "tgggaggttttatgtggaaagcagcaatgtacaaga": 250, "slxa": 250, "b3_649_fc8437_r1_1_1_610_79": 250, "gatgtgcaatacctttgtagaggaa": 250, "yyyyyyyyyyyyyyyyyywywyysu": 250, "b3_649_fc8437_r1_1_1_397_389": 250, "ggtttgagaaagagaaatgagataa": 250, "yyyyyyyyywyyyywwyyywywyww": 250, "b3_649_fc8437_r1_1_1_850_123": 250, "gagggtgttgatcatgatgatggcg": 250, "yyyyyyyyyyyyywyywyysyyysi": 250, "b3_649_fc8437_r1_1_1_362_549": 250, "ggaaacaaagtttttctcaacatag": 250, "yyyyyyyyyyyyyyyyyywwwwywi": 250, "b3_649_fc8437_r1_1_1_183_714": 250, "gtattatttaatggcatacactcaa": 250, "yyyyyyyyyywyyyywywwuwwwqq": 250, "solexa_exampl": 250, "fake": 250, "slxa_0001_1_0001_01": [250, 259], "acgtacgtacgtacgtacgtacgtacgtacgtacgtacgtnnnnnn": [250, 259], "hgfedcba": 250, "zyxwvutsrqponmlkjihgfedcba": 250, "qualtityio": 250, "solexa_fak": [250, 259], "ihgfedcba": 250, "9876543210": 250, "illumina_fak": 250, "acgtacgtacgtacgtacgtacgtacgtacgtacgtacgtn": 250, "clutter": 250, "sanger_fak": 250, "zyxwvutsrqponmlkjhgfecb": 250, "fasta_sourc": 250, "qual_sourc": 250, "bib": 251, "bbr025": 251, "qname": 251, "stream_or_path": 251, "_attr_tagnam": 251, "_elem_tagnam": 251, "source_vers": 251, "ncbitaxid": 251, "whitehead": 252, "ion": [252, 263, 271], "torrent": 252, "pgm": 252, "e3mfgyr02jwq7t": 252, "tcagggtctacatgttggtt": 252, "e3mfgyr02ja6il": 252, "271": 252, "tcagttttttttggaaagga": 252, "e3mfgyr02jhd4h": 252, "tcagaaagacaagtggtatc": 252, "e3mfgyr02gfkuc": 252, "299": 252, "tcagcggccgggcctctcat": 252, "e3mfgyr02ftg": 252, "tcagtggtaatggggggaaa": 252, "e3mfgyr02fr9g7": 252, "tcagctccgtaagaaggtgc": 252, "e3mfgyr02gazm": 252, "278": 252, "tcagaaagaagtaaggtaaa": 252, "e3mfgyr02hhz8o": 252, "221": 252, "tcagactttcttctttaccg": 252, "e3mfgyr02gpgb1": 252, "tcagaagcagtggtatcaac": 252, "e3mfgyr02f7z7g": 252, "tcagaatcatccacttttta": 252, "tcagaatcat": 252, "sff_extract": 252, "clip_qual_left": 252, "clip_qual_right": 252, "aatcatccacttttta": 252, "caaaacacaaacag": 252, "atcttatcaacaaaactcaaagttcctaactgagacacgcaacaggggataagacaaggcacacaggggataggnnnnnnnnnnn": 252, "flow_kei": 252, "flow_valu": 252, "flow_index": 252, "homopolym": [252, 267, 269], "nonsens": 252, "2434": 252, "1658": 252, "ggtctacatgttggttaacc": 252, "ttttttttggaaaggaaaac": 252, "aaagacaagtggtatcaacg": 252, "cggccgggcctctcatcggt": 252, "tggtaatggggggaaattta": 252, "ctccgtaagaaggtgctgcc": 252, "aaagaagtaaggtaaataac": 252, "actttcttctttaccgtaac": 252, "aagcagtggtatcaacgcag": 252, "aatcatccactttttaacgt": 252, "aatcatccac": 252, "tcagggtctacatgttggttaacccgtactgatt": 252, "aaagannnnn": 252, "aaaga": 252, "temp_filt": 252, "filter_and_trim": 252, "caagtggtatcaacgcagag": 252, "agtaaggtaaataacaaacg": 252, "manifest": 252, "ssfinfo": 252, "gsl": 253, "biotech": 253, "llc": 253, "hoc": 255, "id123456": 255, "catcnagatgacactacgactacgactcagactac": 255, "id123457": 255, "acactacgactacgactcagactacaan": 255, "tsv": 255, "45478712": 255, "np_995567": 255, "45478713": 255, "np_995568": 255, "45478714": 255, "np_995569": 255, "45478715": 255, "np_995570": 255, "357": 255, "45478718": 255, "np_995573": 255, "45478719": 255, "np_995574": 255, "312": 255, "45478720": 255, "np_995575": 255, "45478721": 255, "np_995576": 255, "return_raw_com": 257, "skip_parsing_error": 257, "marck": 258, "cloner": 258, "mono": 258, "yp_025292": 259, "hokc": 259, "toxic": 259, "mkqhkamivaivicitavvaalvtrkdlcevhirtgqtevavf": 259, "acgtnnnnnn": 259, "abcdefghij": 259, "histidin": 259, "phosphoryl": 259, "maagvkqladdrtllmagvshdlrtpltrirlat": 259, "emmseqdgylaesinkdieecnaiieqfidylr": 259, "1joi": 259, "envz": 259, "homodimer": 259, "sssssshhhhhttthhhhhhhhhhhhhhhhhhhhhhthhhhhhhhhhhhhhhhhhhhhtt": 259, "maagvkqladdrtllmagvshdlrtpltrirlatemmseqdgylaesinkdie": 259, "ylr": 259, "fractur": 259, "rtllmagvshdlrtpltrirlatemmseqd": 259, "hhhhhttthhhhhhhhhhhhhhhhhhhhhh": 259, "maagvkqlad": 259, "iieqfidylr": 259, "loveliesbleed": 259, "masrgvnkvilvgnlgqdpevrympnggavanitlatseswrdkat": 259, "gemkeqtewhrvvlfgklaevaseylrkgsqvyiegqlrtrkwtdq": 259, "sgqdryttevvvnvggtmqmlggrqgggapaggnigggqpqggwgq": 259, "pqqpqggnqfsggaqsrpqqsapaapsneppmdfdddipf": 259, "np_418483": 259, "b4059": 259, "ssdna": 259, "asap": 259, "13298": 259, "16131885": 259, "948570": 259, "masrgvnkvilvgnlgqdpevrympnggavanitlatseswrdkatgemkeqt": 259, "ipf": 259, "nmkqhkamivalivicitavvaalvtrkdlcevhirtgqtevavf": 259, "noreturn": 259, "operand": [259, 298], "acgtacgtacgtacgtacgtacgtacgtacgtacgtacgtnnnnnnact": 259, "pbad30": 259, "4923": 259, "3765": 259, "actacgtacgtacgtacgtacgtacgtacgtacgtacgtacgtnnnnnn": 259, "_per_letter_annot": 259, "_restricteddict": 259, "gghvnpavtfgafvggnitllrgivyiiaqllgstvaclllkfvtndmavgvfslsagvg": 259, "vtnalvfeivmtfglvytvyataidpkkgslgtiapiaigfivgani": 259, "trbg361": 259, "rc_record": 259, "_rc": 259, "slxa_0001_1_0001_01_rc": 259, "nnnnnnacgtacgtacgtacgtacgtacgtacgtacgtacgtacgt": 259, "gctagcggagtgtatactggcttactatgttggcactgatgagggtgtcagtga": 259, "rc_plasmid": 259, "pbad30_rc": 259, "catgggcaaatattatacgcaaggcgacaaggtgctgatgccgctggcgattca": 259, "gone": 259, "1960": 259, "arac": 259, "arabinos": 259, "vntifkei": 259, "2963": 259, "3842": 259, "amend": 259, "protein_rec": 259, "tcgt": 259, "acga": 259, "gene_record": 259, "lathyru": 259, "odoratu": 259, "phytochrom": 259, "phya": 259, "caggctgcgcggtttctatttatgaagaacaaggtccgtatgatagttgattgtcatgca": 259, "aaacatgtgaaggttcttcaagacgaaaaactcccatttgatttgactctgtgcggttcg": 259, "accttaagagctccacatagttgccatttgcagtacatggctaacatggattcaattgct": 259, "tcattggttatggcagtggtcgtcaatgacagcgatgaagatggagatagccgtgacgca": 259, "gttctaccacaaaagaaaaagagactttggggtttggtagtttgtcataacactactccg": 259, "aggtttgtt": 259, "qaarflfmknkvrmivdchakhvkvlqdeklpfdltlcgstlraphschlqymanmdsia": 259, "slvmavvvndsdedgdsrdavlpqkkkrlwglvvchnttprfv": 259, "charge_at_ph": [260, 262, 264], "count_amino_acid": [260, 264], "get_amino_acids_perc": [260, 264], "aromat": [260, 264], "instability_index": [260, 264], "gravi": [260, 264], "protein_scal": [260, 264], "isoelectric_point": [260, 262, 264], "secondary_structure_fract": [260, 264], "molar_extinction_coeffici": [260, 264], "atcgsw": 260, "actgsw": 260, "bdhkmnrvxy": 260, "_gc_valu": 260, "actgssss": 260, "gdvv": 260, "6667": 260, "actgtn": 260, "skew": 260, "zoom": 260, "accumul": [260, 269], "subseq": 260, "custom_map": 260, "undef_cod": 260, "xaa": 260, "asx": 260, "xle": 260, "sel": 260, "pyl": 260, "ter": 260, "metalailevalmetglyargtrplysglyalaargt": 260, "metalailevalmetglyargtrplysglyalaarg": 260, "maivmgrwkga": 260, "metalailevalmetglyargtrplysglyala": 260, "argter": 260, "metalailevalmetglyargtrplysglyalaxaaxaaargt": 260, "maivmgrwkgaxxr": 260, "double_strand": 260, "monoisotop": [260, 264], "949": 260, "997": 260, "249": 260, "xbbtool": 260, "auggccauuguaaugggccgcuga": 260, "gc_frame": 260, "auggccauug": 260, "gggccgcuga": 260, "uaccgguaacauuacccggcgacu": 260, "cai": 260, "sharp": 260, "1281": 260, "w_ij": 260, "1295": 260, "transgen": 260, "fluorophor": 260, "optimz": 260, "acgtacgtacgt": 261, "20049947": 261, "1688586483": 261, "crc": 261, "c4fbb762c4a87ebd": 261, "da4509dc64a87ebd": 261, "gcg_checksum": 261, "sebastian": 261, "bassi": 261, "lenton": 261, "ziliani": 261, "gabriel": 261, "genellina": 261, "5688": 261, "if6hivcnrsqdvniaoefazysc6i4": 261, "anl": 261, "pmic": 261, "200600032": 261, "bjellqvist": 262, "hugh": 262, "pasquali": 262, "ch": 262, "paquet": 262, "ravier": 262, "sanchez": 262, "frutig": 262, "hochstrass": 262, "immobil": 262, "ph": [262, 264], "gradient": 262, "electrophoresi": 262, "1023": 262, "1031": 262, "bass": 262, "olsen": 262, "celi": 262, "529": 262, "tabb": 262, "dtaselect": 262, "20010710": 262, "protein_sequ": 262, "aa_cont": 262, "ingar": 262, "min_": 262, "max_": 262, "bisect": 262, "bisection_method": 262, "arginin": 262, "oligonucleotid": 263, "thermodynam": 263, "dangl": 263, "backtranscrib": 263, "duplex": 263, "unambigi": 263, "bulb": 263, "dmso": 263, "formaldehyd": 263, "mystr": 263, "cgttccaaagatgtgggcatgagcttac": 263, "myseq": 263, "breslauer": 263, "sugimoto": 263, "nn_tabl": 263, "dna_nn1": 263, "dna_nn2": 263, "rna_nn1": 263, "freier": 263, "r_dna_nn1": 263, "salc": 263, "saltcorr": 263, "monoval": 263, "cation": 263, "mg2": 263, "dntp": 263, "von": 263, "ahsen": 263, "owczarzi": 263, "gcaaggcttctacacccgtactcgaatg": 263, "tgcaaggcttctacacccgtactcgaatgc": 263, "c_seq": 263, "cguuccaaagaugugggcaugagcuuac": 263, "ugcaaggcuucuacacccguacucgaaugc": 263, "rna_nn3": 263, "de_tabl": 263, "rna_de1": 263, "ttcaaggcttctacacccgtactcgaatgc": 263, "lock": 263, "mytabl": 263, "oldtabl": 263, "dna_nn3": 263, "608": 263, "1t": 263, "923": 263, "cgttcca1agatgtgggcatgagcttac": 263, "allawi": 263, "santalucia": 263, "init_a": 263, "newtabl": 263, "init_g": 263, "corr": 263, "sodium": 263, "clin": 263, "1956": 263, "1961": 263, "na_eq": 263, "schildkraut": 263, "lifson": 263, "1965": 263, "wetmur": 263, "crit": 263, "227": 263, "259": 263, "biochemistri": 263, "3555": 263, "3562": 263, "1460": 263, "1465": 263, "368": 263, "x1e": 263, "40e": 263, "3537": 263, "3554": 263, "5336": 263, "5353": 263, "melting_temp": 263, "fmd": 263, "dmsofactor": 263, "fmdfactor": 263, "fmdmethod": 263, "formamid": 263, "rough": 263, "molar": [263, 264], "675": 263, "453": 263, "degc": 263, "thein": 263, "acgttgcaatgccgta": 263, "tgca": 263, "cgta": 263, "1acgt2tgca3atgc4cgta": 263, "valueset": 263, "userset": 263, "ctgctgatxgcacgaggttatgg": 263, "marmur": 263, "doti": 263, "1962": 263, "109": 263, "chester": 263, "marshak": 263, "anal": 263, "290": 263, "quikchang": 263, "manufactur": 263, "mutagenesi": [263, 271], "primer3plu": 263, "528": 263, "tradeoff": 263, "tmm_tabl": 263, "imm_tabl": 263, "dnac1": 263, "dnac2": 263, "selfcomp": 263, "tacg": 263, "ctacg": 263, "dna_nn4": 263, "hick": 263, "rna_nn2": 263, "xia": 263, "chen": 263, "1995": 263, "maket": 263, "dna_tmm1": 263, "peyret": 263, "insosin": 263, "dna_imm1": 263, "watkin": 263, "dna_de1": 263, "bommarito": 263, "turner": 263, "mathew": 263, "maegeittftaltekfnlppgnykkpkllycsngghflrilpdgtvdgt": 264, "rdrsdqhiqlqlsaesvgevyikstetgqylamdtsgllygsqtpseec": 264, "lflerleenhyntytskkhaeknwfvglkkngsckrgprthygqkailf": 264, "lplpv": 264, "17103": 264, "sec_struc": 264, "sheet": 264, "epsilon_prot": 264, "oxid": 264, "17420": 264, "disulfid": [264, 271], "17545": 264, "prot_sequ": 264, "isotop": 264, "amino_acids_cont": 264, "amino_acids_perc": 264, "mw": 264, "lobri": 264, "instabl": 264, "guruprasad": 264, "unstabl": 264, "reddi": 264, "pandit": 264, "vihinen": 264, "kytedoolitl": 264, "grand": 264, "hydropathi": 264, "kyte": 264, "doolitl": 264, "1982": 264, "doolittl": 264, "aboderin": 264, "abrahamleo": 264, "argo": 264, "blackmould": 264, "bullbrees": 264, "casari": 264, "cid": 264, "cowan3": 264, "cowan7": 264, "eisenberg": 264, "engelman": 264, "fasman": 264, "faucher": 264, "goldsack": 264, "juret": 264, "kidera": 264, "miyazawa": 264, "parker": 264, "ponnuswami": 264, "rose": 264, "roseman": 264, "tanford": 264, "wilson": 264, "zimmerman": 264, "param_dict": 264, "windows": 264, "protscal": 264, "haimov": 264, "srebnik": 264, "hutchinson": 264, "thornton": 264, "kim": 264, "berg": 264, "claim": 264, "extinct": 264, "cystin": 264, "wsize": 266, "andrzej": 266, "konopka": 266, "npg": 266, "el": 266, "0005260": 266, "bwaindexcommandlin": [267, 269], "bwaaligncommandlin": [267, 269], "read_fil": [267, 269], "bwasamsecommandlin": [267, 269], "sai_fil": [267, 269], "bwasampecommandlin": [267, 269], "read_file1": [267, 269], "read_file2": [267, 269], "sai_file1": [267, 269], "sai_file2": [267, 269], "bwabwaswcommandlin": [267, 269], "mate_fil": [267, 269], "bwamemcommandlin": [267, 269], "novoaligncommandlin": [267, 269], "adapter3": [267, 269], "adapter5": [267, 269], "good_bas": [267, 269], "qual_digit": [267, 269], "r_method": [267, 269], "read_cal": [267, 269], "readfil": [267, 269], "unconvert": [267, 269], "write_c": [267, 269], "samtoolsviewcommandlin": [267, 269], "fast_bam": [267, 269], "samtoolscalmdcommandlin": [267, 269], "input_bam": [267, 269], "samtoolscatcommandlin": [267, 269], "samtoolsfaidxcommandlin": [267, 269], "samtoolsfixmatecommandlin": [267, 269], "samtoolsidxstatscommandlin": [267, 269], "samtoolsindexcommandlin": [267, 269], "samtoolsmergecommandlin": [267, 269], "samtoolsmpileupcommandlin": [267, 269], "illumina_13": [267, 269], "samtoolsphasecommandlin": [267, 269], "in_bam": [267, 269], "samtoolsreheadercommandlin": [267, 269], "bam_fil": [267, 269], "sam_fil": [267, 269], "samtoolsrmdupcommandlin": [267, 269], "samtoolssortcommandlin": [267, 269], "samtoolsversion0xsortcommandlin": [267, 269], "out_prefix": [267, 269], "samtoolsversion1xsortcommandlin": [267, 269], "samtoolstargetcutcommandlin": [267, 269], "em0": [267, 269], "em1": [267, 269], "em2": [267, 269], "duke": 268, "my_ace_fil": 268, "ncontig": 268, "nread": 268, "contig3": 268, "read4": 268, "rd_of_read4": 268, "ds_of_read4": 268, "_recordconsum": 268, "entirerli": 268, "chromatogram": 268, "coru": 268, "uncompl": 268, "crossmatch": 268, "burrow": 269, "algotyp": 269, "reference_genom": 269, "index_cmd": 269, "bwtsw": 269, "bwt": 269, "37n": 269, "2gb": 269, "10mb": 269, "fq": 269, "read_1": 269, "output_sai_fil": 269, "align_cmd": 269, "barcod": 269, "suboptim": 269, "bestscor": 269, "mismsc": 269, "maxdiff": 269, "32bp": 269, "indel": 269, "argmax_x": 269, "q_i": 269, "q_l": 269, "sams": 269, "equvial": 269, "maxocc": 269, "output_sam_fil": 269, "samse_cmd": 269, "xa": 269, "samp": 269, "read_2": 269, "read_group": 269, "tid": 269, "tsm": 269, "backslash": 269, "sampe_cmd": 269, "disconcord": 269, "singleton": 269, "100000": [269, 277], "bwasw": 269, "bwasw_cmd": 269, "mate": 269, "band": [269, 274], "mem": 269, "cgtac": 269, "malform": 269, "dramat": 269, "picard": 269, "unpair": 269, "scoreread1": 269, "scoreread2": 269, "insertpenalti": 269, "minseedlen": 269, "fewer": 269, "novoalign": 269, "novocraft": 269, "novoalign_clin": 269, "some_db": 269, "some_seq": 269, "prbnseq": 269, "adaptor3": 269, "slxfq": 269, "stdfq": 269, "ilmfq": 269, "prb": 269, "n_g": 269, "cytosin": 269, "bisulfit": 269, "bchuh": 269, "reflist": 269, "reqflag": 269, "skipflag": 269, "minmapq": 269, "readgroup": 269, "rgfile": 269, "region1": 269, "sam_or_bam_fil": 269, "samtools_view_cmd": 269, "faidx": 269, "fai": 269, "ref_list": 269, "calmd": 269, "eeubsr": 269, "capqcoef": 269, "reference_fasta": 269, "calmd_cmd": 269, "jointli": 269, "baq": 269, "minor": 269, "bq": 269, "input_bam1": 269, "input_bam2": 269, "samtools_cat_cmd": 269, "samtools_faidx_cmd": 269, "fixmat": 269, "isiz": 269, "namesrt": 269, "out_bam": 269, "fixmate_cmd": 269, "idxstat": 269, "aln_bam": 269, "samtools_idxstats_cmd": 269, "samtools_index_cmd": 269, "nur1f": 269, "inh": 269, "merge_cmd": 269, "output_bam": 269, "mpileup": 269, "bcf": 269, "ebug": 269, "capmapq": 269, "minbaseq": 269, "samtools_mpileup_cmd": 269, "anomal": 269, "realign": 269, "misalign": 269, "downgrad": 269, "mnp": 269, "hurt": 269, "razip": 269, "heterozyg": 269, "minlod": 269, "samtools_phase_cmd": 269, "chimer": 269, "lod": 269, "rehead": 269, "input_head": 269, "header_sam_fil": 269, "input_bam_fil": 269, "reheader_cmd": 269, "rmdup": 269, "srt": 269, "input_sorted_bam": 269, "rmdup_cmd": 269, "maxmem": 269, "samtools_sort_cmd": 269, "frefix": 269, "file_nam": 269, "cram": 269, "nnnn": 269, "invoc": 269, "targetcut": 269, "inpenalti": 269, "samtools_targetcut_cmd": 269, "sprotxx": 271, "userman": 271, "offend": 271, "rl1_ecoli": 271, "p00321": 271, "orderedlocusnam": 271, "orfnam": 271, "host_taxonomy_id": 271, "id1": 271, "id2": 271, "protein_exist": 271, "example_filenam": 271, "p68308": 271, "nu3m_balph": 271, "p24973": 271, "transport": 271, "mitochondrion": 271, "nad": 271, "respiratori": 271, "translocas": 271, "balaenoptera": 271, "physalu": 271, "whale": 271, "balaena": 271, "mnllltlltnttlalllvfi": 271, "extent": 271, "isoform": 271, "ftid": 271, "carbohyd": 271, "propep": 271, "var_seq": 271, "act_sit": 271, "glycosyl": 271, "glyconnect": 271, "ca_bind": 271, "matur": 271, "compbia": 271, "composition": 271, "conflict": 271, "crosslnk": 271, "posttransation": 271, "dna_bind": 271, "init_met": 271, "intramem": 271, "lipid": 271, "moieti": 271, "mod_r": 271, "posttransl": 271, "ptm": 271, "vocabulari": 271, "ptmlist": 271, "mutagen": 271, "non_con": 271, "non_std": 271, "non_ter": 271, "np_bind": 271, "propeptid": 271, "prepeptid": 271, "topo_dom": 271, "thylakoid": 271, "cyanel": 271, "peroxisom": 271, "transmem": 271, "unsur": 271, "uncertainti": 271, "hominida": 271, "ap": 271, "zn_fing": 271, "zinc": 271, "finger": 271, "websevic": 273, "dbcl": 273, "shield": 273, "soap": 273, "pdbj": 273, "soappi": 273, "soapi": 273, "identi": 273, "gff": 273, "ttl": 273, "dad": 273, "onim": 273, "homologu": 273, "uniparc": 273, "uniref100": 273, "uniref90": 273, "uniref50": 273, "diabet": 273, "ebml": 273, "cytolog": 274, "gnm_terminu": 274, "polya": 274, "tail": 274, "txmap": 274, "rhpanel": 274, "radiat": 274, "panel": 274, "mgc": 274, "believ": 274, "htc": 274, "bt": 274, "gaf": [275, 276], "gpa": [275, 276], "_uniprotsearchresult": 275, "geneontologi": 276, "gpad": 276, "gp_inform": 276, "goa_uniprot": 276, "gene_associ": 276, "db_object_id": 276, "meantim": 276, "interat": 276, "goa_yeast": 276, "nd": 276, "ya19a_yeast": 276, "yal019w": 276, "taxon_id": 276, "559292": 276, "db_object_nam": 276, "outrec": 276, "gaf20field": 276, "outprotrec": 276, "fafbyproteinrec": 276, "inrec": 276, "fieldval": 276, "field_nam": 276, "val1": 276, "val2": 276, "realis": 277, "coffset": 277, "uoffset": 277, "unsign": 277, "petabyt": 277, "64kb": 277, "pollut": 277, "70000": 277, "70143": 277, "pai": 277, "attent": 277, "987828735": 277, "844718": 277, "84337": 277, "84771": 277, "85454": 277, "85843": 277, "55074": 277, "68521": 277, "tatgtcattc": 277, "gaaattgtat": 277, "aaagacaact": 277, "cctatttaat": 277, "agagctattt": 277, "gtgcaagtat": 277, "15073": 277, "65536": 277, "17857": 277, "32930": 277, "22144": 277, "131072": 277, "22230": 277, "196608": 277, "77304": 277, "14939": 277, "262144": 277, "43478": 277, "92243": 277, "305622": 277, "fifth": 277, "eof": 277, "196734": 277, "3609329790": 277, "latin1": 277, "8859": 277, "western": 277, "superset": 277, "lf": 277, "block_start_offset": 277, "within_block_offset": 277, "65535": 277, "65537": 277, "131071": 277, "6553600000": 277, "6553600001": 277, "6553600010": 277, "281474976710656": 277, "virtual_offset": 277, "sambam": 277, "18239": 277, "18223": 277, "36462": 277, "18017": 277, "54479": 277, "17342": 277, "71821": 277, "17715": 277, "89536": 277, "17728": 277, "327680": 277, "107264": 277, "17292": 277, "393216": 277, "63398": 277, "124556": 277, "456614": 277, "ex1_refresh": 277, "18195": 277, "65434": 277, "18248": 277, "18190": 277, "65472": 277, "65409": 277, "36438": 277, "18004": 277, "130881": 277, "65483": 277, "54442": 277, "17353": 277, "196364": 277, "65519": 277, "71795": 277, "17708": 277, "261883": 277, "65411": 277, "89503": 277, "17709": 277, "327294": 277, "65466": 277, "107212": 277, "17390": 277, "392760": 277, "63854": 277, "124602": 277, "18299": 277, "36489": 277, "130946": 277, "54493": 277, "196429": 277, "71846": 277, "261948": 277, "89554": 277, "327359": 277, "107263": 277, "392825": 277, "124653": 277, "456679": 277, "fileobj": 277, "max_cach": 277, "1195311108": 277, "65540": 277, "6mb": 277, "tr": 277, "br": 277, "tty": 277, "devic": 277, "descriptor": 277, "WITH": 277, "compresslevel": 277, "initil": 277, "get_aln_length": [278, 279], "tomultipleseqalign": [278, 279], "get_dn_ds_matrix": [278, 279], "get_dn_ds_tre": [278, 279], "from_msa": [278, 279], "get_codon": [278, 280], "get_codon_num": [278, 280], "toseq": [278, 280], "get_full_rf_t": [278, 280], "full_transl": [278, 280], "from_seq": [278, 280], "pro_align": 278, "nucl_seq": 278, "corr_dict": 278, "gap_char": [278, 280, 296], "complete_protein": 278, "biostar": 278, "89741": 278, "atgcgt": 278, "codon_aln": [278, 279], "aaaacgtcg": 279, "aaaaggtgg": 279, "dn_ds_method": 279, "tree_method": 279, "rf_tabl": 280, "aaatttgggccaaattt": 280, "kfgakf": 280, "aaatttcccgg": 280, "tgggtttaa": 280, "full_rf_tabl": 280, "ungap_seq": 280, "kfppwv": 280, "aaatttcccgggaa": 280, "ttttaa": 280, "codon_seq1": 280, "codon_seq2": 280, "neighborhood": 281, "weight_fn": 281, "distance_fn": 281, "base_id": [282, 286], "split_jaspar_id": [282, 286], "gc_content": [282, 289], "dist_pearson_at": [282, 289], "multiple_value_kei": [282, 294], "reference_kei": [282, 294], "handle_motif": [282, 295], "get_property_valu": [282, 295], "get_acgt": [282, 295], "get_text": [282, 295], "buster": [282, 285, 292], "cisbp": 282, "hocomoco": 282, "neph": 282, "tiffin": 282, "scertf": 282, "yetfasco": 282, "hdpi": 282, "idmmpmm": 282, "flyfactor": 282, "survei": 282, "tctacgattgag": 282, "ctgcacctagctacgagtgag": 282, "gtgccctaagcatactaggcg": 282, "gccactagcagagcagggggc": 282, "cgactcagaggtt": 282, "ccacgctaagagaagtgccggag": 282, "gcacgtccctgagca": 282, "gtccatcgcaaagcgtggggc": 282, "gagatcagagggccg": 282, "tggacgcgggg": 282, "gaccagagcctcgcatggggg": 282, "agcgcgcgtg": 282, "gccggttgctgttcattagg": 282, "accgacggcagctaaaaggg": 282, "gacgccggggat": 282, "cgactcgcgcttacaagg": 282, "aacgcca": [282, 294], "accgccc": [282, 294], "aactccg": [282, 294], "aacgcc": [282, 294], "accgcc": [282, 294], "aactcc": [282, 294], "threepluson": 282, "stack_width": 282, "stacks_per_lin": 282, "alphabet_dna": 282, "ignore_lower_cas": 282, "unit_nam": 282, "first_index": 282, "logo_start": 282, "logo_end": 282, "comp_auto": 282, "percentcg": 282, "scale_width": 282, "show_errorbar": 282, "logo_titl": 282, "logo_label": 282, "show_xaxi": 282, "xaxis_label": 282, "show_yaxi": 282, "yaxis_label": 282, "yaxis_scal": 282, "yaxis_tic_interv": 282, "show_end": 282, "show_fineprint": 282, "color_auto": 282, "symbols0": 282, "symbols1": 282, "symbols2": 282, "symbols3": 282, "symbols4": 282, "color0": 282, "color1": 282, "color2": 282, "color3": 282, "color4": 282, "zlab": 285, "bu": 285, "jaspar2014": 286, "unic": 286, "ma0047": 286, "credenti": 287, "jaspar2018": 287, "guest": 287, "ets1": 287, "ma0098": 287, "tryptophan": 287, "p14921": 287, "20517297": 287, "tf0000070": 287, "taipal": 287, "htselex": 287, "dbd": 287, "2683": 287, "425": 287, "1102": 287, "803": 287, "640": 287, "1580": 287, "1083": 287, "909": 287, "1970": 287, "396": 287, "homeo": 287, "tale": 287, "pou": 287, "loos": 287, "tfb": 287, "ma0001": 287, "ma0049": 287, "icm": 287, "tf_name": 287, "get_matrix_by_nam": 287, "jaspar_dflt_collect": 287, "min_length": 287, "min_sit": 287, "all_vers": 287, "nematod": 287, "chip": 287, "pbm": 287, "specificti": 287, "crp0": 288, "chunksiz": 289, "87e": 290, "62e": 290, "05e": 290, "69e": 290, "08e": 290, "ttgacwcytgcycwg": 290, "56e": 290, "59e": 290, "85e": 290, "11e": 290, "thereof": 290, "minimal_test": 291, "krp": 291, "ifxa": 291, "pfm_format": 292, "mo_prob": 293, "bg_prob": 293, "rate_proport": 293, "return_r": 293, "nodelist": 295, "nestedmica": 295, "motifexplor": 295, "match_dict": 296, "match_fn": 296, "opena": 296, "extenda": 296, "openb": 296, "extendb": 296, "gap_a_fn": 296, "gap_b_fn": 296, "penalize_extend_when_open": 296, "penalize_end_gap": 296, "force_gener": 296, "format_alignemt": 296, "globalmx": 296, "globalm": 296, "globaldx": 296, "gap_funct": 296, "globalmc": 296, "acccccgt": 296, "chara": 296, "charb": 296, "score_dict": 296, "prettili": 296, "get_row": [297, 298], "get_tim": [297, 298], "get_sign": [297, 298], "vendor": 297, "_toopm": 298, "plateid": 298, "a05": 298, "b02": 298, "b03": 298, "b12": 298, "c02": 298, "h02": 298, "minum": 298, "h03": 298, "c12": 298, "plate2": 298, "plate3": 298, "subplat": 298, "wid": 298, "first_row": 298, "last_row": 298, "h12": 298, "sub_plat": 298, "e12": 298, "d05": 298, "b05": 298, "c05": 298, "h05": 298, "b04": 298, "b06": 298, "e06": 298, "wellid": 298, "500000": 298, "750000": 298, "1250": 298, "well2": 298, "well1": 298, "zwieter": [298, 299], "16348228": [298, 299], "853516785566917": 298, "94630059171354": 298, "curve_fit": 299, "stannard": 299, "bioseq": 300, "dbseqrecord": [300, 301, 302], "bioseqdatabas": [300, 301, 304], "open_databas": [300, 302, 304], "dbserver": [300, 302, 304], "new_databas": [300, 302, 304], "load_database_sql": [300, 302], "commit": [300, 302], "rollback": [300, 302], "last_id": [300, 302, 303], "autocommit": [300, 302, 303], "fetch_dbid_by_dbnam": [300, 302], "fetch_seqid_by_display_id": [300, 302], "fetch_seqid_by_access": [300, 302], "fetch_seqids_by_access": [300, 302], "fetch_seqid_by_vers": [300, 302], "fetch_seqid_by_identifi": [300, 302], "list_biodatabase_nam": [300, 302], "list_bioentry_id": [300, 302], "list_bioentry_display_id": [300, 302], "list_any_id": [300, 302], "execute_on": [300, 302], "executemani": [300, 302, 303], "get_subseq_as_str": [300, 302], "execute_and_fetch_col0": [300, 302], "execute_and_fetchal": [300, 302], "mysqlconnectoradaptor": [300, 302], "get_seq_by_id": [300, 302], "get_seq_by_acc": [300, 302], "get_seq_by_v": [300, 302], "get_seqs_by_acc": [300, 302], "dbutil": [300, 302], "generic_dbutil": [300, 303], "tname": [300, 303], "sqlite_dbutil": [300, 303], "mysql_dbutil": [300, 303], "psycopg2_dbutil": [300, 303], "pgdb_dbutil": [300, 303], "get_dbutil": [300, 303], "databaseload": [300, 304], "load_seqrecord": [300, 304], "databaseremov": [300, 304], "primary_id": [301, 302], "driver": [302, 303, 304], "minidb": 302, "passwd": [302, 304], "conn": [302, 303], "module_nam": [302, 303], "biodatabas": 302, "db_name": [302, 304], "sql_file": 302, "wrap_cursor": 302, "cursor": [302, 303], "dbid": [302, 304], "bioentri": 302, "databa": 302, "connector": 302, "scrub": 302, "seq_rec": 302, "roa1_human": 302, "x77802": 302, "display_id": 302, "fetch_ncbi_taxonomi": [302, 304], "_postgresql_dbutil": 303, "psycopg2": 303, "postgresql": 303, "pgdb": 303, "pygresql": 303, "gbrows": 304, "localhost": 304, "sphinx": 305, "autodoc": 305}, "objects": {"": [[27, 0, 0, "-", "Bio"], [300, 0, 0, "-", "BioSQL"]], "Bio": [[28, 0, 0, "-", "Affy"], [30, 0, 0, "-", "Align"], [56, 0, 0, "-", "AlignIO"], [67, 0, 0, "-", "Application"], [27, 1, 1, "", "BiopythonDeprecationWarning"], [27, 1, 1, "", "BiopythonExperimentalWarning"], [27, 1, 1, "", "BiopythonParserWarning"], [27, 1, 1, "", "BiopythonWarning"], [68, 0, 0, "-", "Blast"], [72, 0, 0, "-", "CAPS"], [73, 0, 0, "-", "Cluster"], [74, 0, 0, "-", "Compass"], [75, 0, 0, "-", "Data"], [79, 0, 0, "-", "Emboss"], [83, 0, 0, "-", "Entrez"], [85, 0, 0, "-", "ExPASy"], [91, 0, 0, "-", "File"], [92, 0, 0, "-", "GenBank"], [96, 0, 0, "-", "Geo"], [98, 0, 0, "-", "Graphics"], [106, 0, 0, "-", "HMM"], [111, 0, 0, "-", "KEGG"], [120, 0, 0, "-", "LogisticRegression"], [121, 0, 0, "-", "MarkovModel"], [122, 0, 0, "-", "MaxEntropy"], [123, 0, 0, "-", "Medline"], [27, 1, 1, "", "MissingExternalDependencyError"], [27, 1, 1, "", "MissingPythonDependencyError"], [124, 0, 0, "-", "NMR"], [127, 0, 0, "-", "NaiveBayes"], [128, 0, 0, "-", "Nexus"], [133, 0, 0, "-", "PDB"], [176, 0, 0, "-", "Pathway"], [180, 0, 0, "-", "Phylo"], [199, 0, 0, "-", "PopGen"], [205, 0, 0, "-", "Restriction"], [208, 0, 0, "-", "SCOP"], [215, 0, 0, "-", "SVDSuperimposer"], [216, 0, 0, "-", "SearchIO"], [235, 0, 0, "-", "Seq"], [236, 0, 0, "-", "SeqFeature"], [237, 0, 0, "-", "SeqIO"], [259, 0, 0, "-", "SeqRecord"], [260, 0, 0, "-", "SeqUtils"], [267, 0, 0, "-", "Sequencing"], [27, 1, 1, "", "StreamModeError"], [271, 0, 0, "-", "SwissProt"], [273, 0, 0, "-", "TogoWS"], [274, 0, 0, "-", "UniGene"], [275, 0, 0, "-", "UniProt"], [277, 0, 0, "-", "bgzf"], [278, 0, 0, "-", "codonalign"], [281, 0, 0, "-", "kNN"], [282, 0, 0, "-", "motifs"], [296, 0, 0, "-", "pairwise2"], [297, 0, 0, "-", "phenotype"]], "Bio.Affy": [[29, 0, 0, "-", "CelFile"]], "Bio.Affy.CelFile": [[29, 1, 1, "", "ParserError"], [29, 3, 1, "", "Record"], [29, 4, 1, "", "read"]], "Bio.Affy.CelFile.ParserError": [[29, 2, 1, "", "__init__"]], "Bio.Affy.CelFile.Record": [[29, 2, 1, "", "__init__"]], "Bio.Align": [[31, 0, 0, "-", "AlignInfo"], [30, 3, 1, "", "Alignment"], [30, 3, 1, "", "AlignmentCounts"], [30, 3, 1, "", "Alignments"], [30, 3, 1, "", "AlignmentsAbstractBaseClass"], [32, 0, 0, "-", "Applications"], [30, 3, 1, "", "CodonAligner"], [30, 3, 1, "", "MultipleSeqAlignment"], [30, 3, 1, "", "PairwiseAligner"], [30, 3, 1, "", "PairwiseAlignments"], [33, 0, 0, "-", "a2m"], [34, 0, 0, "-", "analysis"], [35, 0, 0, "-", "bed"], [36, 0, 0, "-", "bigbed"], [37, 0, 0, "-", "bigmaf"], [38, 0, 0, "-", "bigpsl"], [39, 0, 0, "-", "chain"], [40, 0, 0, "-", "clustal"], [41, 0, 0, "-", "emboss"], [42, 0, 0, "-", "exonerate"], [43, 0, 0, "-", "fasta"], [44, 0, 0, "-", "hhr"], [45, 0, 0, "-", "interfaces"], [46, 0, 0, "-", "maf"], [47, 0, 0, "-", "mauve"], [48, 0, 0, "-", "msf"], [49, 0, 0, "-", "nexus"], [30, 4, 1, "", "parse"], [50, 0, 0, "-", "phylip"], [51, 0, 0, "-", "psl"], [30, 4, 1, "", "read"], [52, 0, 0, "-", "sam"], [53, 0, 0, "-", "stockholm"], [54, 0, 0, "-", "substitution_matrices"], [55, 0, 0, "-", "tabular"], [30, 4, 1, "", "write"]], "Bio.Align.AlignInfo": [[31, 3, 1, "", "PSSM"], [31, 3, 1, "", "SummaryInfo"], [31, 4, 1, "", "print_info_content"]], "Bio.Align.AlignInfo.PSSM": [[31, 2, 1, "", "__getitem__"], [31, 2, 1, "", "__init__"], [31, 2, 1, "", "__str__"], [31, 2, 1, "", "get_residue"]], "Bio.Align.AlignInfo.SummaryInfo": [[31, 2, 1, "", "__init__"], [31, 2, 1, "", "dumb_consensus"], [31, 2, 1, "", "gap_consensus"], [31, 2, 1, "", "get_column"], [31, 2, 1, "", "information_content"], [31, 2, 1, "", "pos_specific_score_matrix"], [31, 2, 1, "", "replacement_dictionary"]], "Bio.Align.Alignment": [[30, 2, 1, "", "__add__"], [30, 2, 1, "", "__array__"], [30, 2, 1, "", "__eq__"], [30, 2, 1, "", "__format__"], [30, 2, 1, "", "__ge__"], [30, 2, 1, "", "__getitem__"], [30, 2, 1, "", "__gt__"], [30, 5, 1, "", "__hash__"], [30, 2, 1, "", "__init__"], [30, 2, 1, "", "__le__"], [30, 2, 1, "", "__len__"], [30, 2, 1, "", "__lt__"], [30, 2, 1, "", "__ne__"], [30, 2, 1, "", "__repr__"], [30, 2, 1, "", "__str__"], [30, 6, 1, "", "aligned"], [30, 2, 1, "", "counts"], [30, 2, 1, "", "format"], [30, 6, 1, "", "frequencies"], [30, 6, 1, "", "indices"], [30, 2, 1, "", "infer_coordinates"], [30, 6, 1, "", "inverse_indices"], [30, 6, 1, "", "length"], [30, 2, 1, "", "map"], [30, 2, 1, "", "mapall"], [30, 6, 1, "", "query"], [30, 2, 1, "", "reverse_complement"], [30, 6, 1, "", "shape"], [30, 2, 1, "", "sort"], [30, 6, 1, "", "substitutions"], [30, 6, 1, "", "target"]], "Bio.Align.AlignmentCounts": [[30, 2, 1, "", "__getnewargs__"], [30, 2, 1, "", "__new__"], [30, 2, 1, "", "__repr__"], [30, 5, 1, "", "__slots__"], [30, 5, 1, "", "gaps"], [30, 5, 1, "", "identities"], [30, 5, 1, "", "mismatches"]], "Bio.Align.Alignments": [[30, 5, 1, "", "__abstractmethods__"], [30, 2, 1, "", "__init__"], [30, 2, 1, "", "__len__"], [30, 2, 1, "", "__next__"], [30, 2, 1, "", "rewind"]], "Bio.Align.AlignmentsAbstractBaseClass": [[30, 5, 1, "", "__abstractmethods__"], [30, 2, 1, "", "__iter__"], [30, 2, 1, "", "__len__"], [30, 2, 1, "", "__next__"], [30, 2, 1, "", "rewind"]], "Bio.Align.Applications": [[32, 3, 1, "", "ClustalOmegaCommandline"], [32, 3, 1, "", "ClustalwCommandline"], [32, 3, 1, "", "DialignCommandline"], [32, 3, 1, "", "MSAProbsCommandline"], [32, 3, 1, "", "MafftCommandline"], [32, 3, 1, "", "MuscleCommandline"], [32, 3, 1, "", "PrankCommandline"], [32, 3, 1, "", "ProbconsCommandline"], [32, 3, 1, "", "TCoffeeCommandline"]], "Bio.Align.Applications.ClustalOmegaCommandline": [[32, 2, 1, "", "__init__"], [32, 6, 1, "", "auto"], [32, 6, 1, "", "clusteringout"], [32, 6, 1, "", "clustersize"], [32, 6, 1, "", "dealign"], [32, 6, 1, "", "distmat_full"], [32, 6, 1, "", "distmat_full_iter"], [32, 6, 1, "", "distmat_in"], [32, 6, 1, "", "distmat_out"], [32, 6, 1, "", "force"], [32, 6, 1, "", "guidetree_in"], [32, 6, 1, "", "guidetree_out"], [32, 6, 1, "", "help"], [32, 6, 1, "", "hmm_input"], [32, 6, 1, "", "infile"], [32, 6, 1, "", "infmt"], [32, 6, 1, "", "isprofile"], [32, 6, 1, "", "iterations"], [32, 6, 1, "", "log"], [32, 6, 1, "", "long_version"], [32, 6, 1, "", "max_guidetree_iterations"], [32, 6, 1, "", "max_hmm_iterations"], [32, 6, 1, "", "maxnumseq"], [32, 6, 1, "", "maxseqlen"], [32, 6, 1, "", "outfile"], [32, 6, 1, "", "outfmt"], [32, 6, 1, "", "outputorder"], [32, 6, 1, "", "percentid"], [32, 6, 1, "", "profile1"], [32, 6, 1, "", "profile2"], [32, 6, 1, "", "residuenumber"], [32, 6, 1, "", "seqtype"], [32, 6, 1, "", "threads"], [32, 6, 1, "", "usekimura"], [32, 6, 1, "", "verbose"], [32, 6, 1, "", "version"], [32, 6, 1, "", "wrap"]], "Bio.Align.Applications.ClustalwCommandline": [[32, 2, 1, "", "__init__"], [32, 6, 1, "", "align"], [32, 6, 1, "", "bootlabels"], [32, 6, 1, "", "bootstrap"], [32, 6, 1, "", "case"], [32, 6, 1, "", "check"], [32, 6, 1, "", "clustering"], [32, 6, 1, "", "convert"], [32, 6, 1, "", "dnamatrix"], [32, 6, 1, "", "endgaps"], [32, 6, 1, "", "fullhelp"], [32, 6, 1, "", "gapdist"], [32, 6, 1, "", "gapext"], [32, 6, 1, "", "gapopen"], [32, 6, 1, "", "helixendin"], [32, 6, 1, "", "helixendout"], [32, 6, 1, "", "helixgap"], [32, 6, 1, "", "help"], [32, 6, 1, "", "hgapresidues"], [32, 6, 1, "", "infile"], [32, 6, 1, "", "iteration"], [32, 6, 1, "", "kimura"], [32, 6, 1, "", "ktuple"], [32, 6, 1, "", "loopgap"], [32, 6, 1, "", "matrix"], [32, 6, 1, "", "maxdiv"], [32, 6, 1, "", "maxseqlen"], [32, 6, 1, "", "negative"], [32, 6, 1, "", "newtree"], [32, 6, 1, "", "newtree1"], [32, 6, 1, "", "newtree2"], [32, 6, 1, "", "nohgap"], [32, 6, 1, "", "nopgap"], [32, 6, 1, "", "nosecstr1"], [32, 6, 1, "", "nosecstr2"], [32, 6, 1, "", "noweights"], [32, 6, 1, "", "numiter"], [32, 6, 1, "", "options"], [32, 6, 1, "", "outfile"], [32, 6, 1, "", "outorder"], [32, 6, 1, "", "output"], [32, 6, 1, "", "outputtree"], [32, 6, 1, "", "pairgap"], [32, 6, 1, "", "pim"], [32, 6, 1, "", "profile"], [32, 6, 1, "", "profile1"], [32, 6, 1, "", "profile2"], [32, 6, 1, "", "pwdnamatrix"], [32, 6, 1, "", "pwgapext"], [32, 6, 1, "", "pwgapopen"], [32, 6, 1, "", "pwmatrix"], [32, 6, 1, "", "quicktree"], [32, 6, 1, "", "quiet"], [32, 6, 1, "", "range"], [32, 6, 1, "", "score"], [32, 6, 1, "", "secstrout"], [32, 6, 1, "", "seed"], [32, 6, 1, "", "seqno_range"], [32, 6, 1, "", "seqnos"], [32, 6, 1, "", "sequences"], [32, 6, 1, "", "stats"], [32, 6, 1, "", "strandendin"], [32, 6, 1, "", "strandendout"], [32, 6, 1, "", "strandgap"], [32, 6, 1, "", "terminalgap"], [32, 6, 1, "", "topdiags"], [32, 6, 1, "", "tossgaps"], [32, 6, 1, "", "transweight"], [32, 6, 1, "", "tree"], [32, 6, 1, "", "type"], [32, 6, 1, "", "usetree"], [32, 6, 1, "", "usetree1"], [32, 6, 1, "", "usetree2"], [32, 6, 1, "", "window"]], "Bio.Align.Applications.DialignCommandline": [[32, 2, 1, "", "__init__"], [32, 6, 1, "", "afc"], [32, 6, 1, "", "afc_v"], [32, 6, 1, "", "anc"], [32, 6, 1, "", "cs"], [32, 6, 1, "", "cw"], [32, 6, 1, "", "ds"], [32, 6, 1, "", "fa"], [32, 6, 1, "", "ff"], [32, 6, 1, "", "fn"], [32, 6, 1, "", "fop"], [32, 6, 1, "", "fsm"], [32, 6, 1, "", "input"], [32, 6, 1, "", "iw"], [32, 6, 1, "", "lgs"], [32, 6, 1, "", "lgs_t"], [32, 6, 1, "", "lmax"], [32, 6, 1, "", "lo"], [32, 6, 1, "", "ma"], [32, 6, 1, "", "mask"], [32, 6, 1, "", "mat"], [32, 6, 1, "", "mat_thr"], [32, 6, 1, "", "max_link"], [32, 6, 1, "", "min_link"], [32, 6, 1, "", "mot"], [32, 6, 1, "", "msf"], [32, 6, 1, "", "n"], [32, 6, 1, "", "nt"], [32, 6, 1, "", "nta"], [32, 6, 1, "", "o"], [32, 6, 1, "", "ow"], [32, 6, 1, "", "pst"], [32, 6, 1, "", "smin"], [32, 6, 1, "", "stars"], [32, 6, 1, "", "stdo"], [32, 6, 1, "", "ta"], [32, 6, 1, "", "thr"], [32, 6, 1, "", "xfr"]], "Bio.Align.Applications.MSAProbsCommandline": [[32, 2, 1, "", "__init__"], [32, 6, 1, "", "alignment_order"], [32, 6, 1, "", "annot"], [32, 6, 1, "", "clustalw"], [32, 6, 1, "", "consistency"], [32, 6, 1, "", "infile"], [32, 6, 1, "", "iterative_refinement"], [32, 6, 1, "", "numthreads"], [32, 6, 1, "", "outfile"], [32, 6, 1, "", "verbose"], [32, 6, 1, "", "version"]], "Bio.Align.Applications.MafftCommandline": [[32, 6, 1, "", "LEXP"], [32, 6, 1, "", "LOP"], [32, 2, 1, "", "__init__"], [32, 6, 1, "", "aamatrix"], [32, 6, 1, "", "adjustdirection"], [32, 6, 1, "", "adjustdirectionaccurately"], [32, 6, 1, "", "amino"], [32, 6, 1, "", "auto"], [32, 6, 1, "", "bl"], [32, 6, 1, "", "clustalout"], [32, 6, 1, "", "dpparttree"], [32, 6, 1, "", "ep"], [32, 6, 1, "", "fastapair"], [32, 6, 1, "", "fastaparttree"], [32, 6, 1, "", "fft"], [32, 6, 1, "", "fmodel"], [32, 6, 1, "", "genafpair"], [32, 6, 1, "", "globalpair"], [32, 6, 1, "", "groupsize"], [32, 6, 1, "", "input"], [32, 6, 1, "", "input1"], [32, 6, 1, "", "inputorder"], [32, 6, 1, "", "jtt"], [32, 6, 1, "", "lep"], [32, 6, 1, "", "lexp"], [32, 6, 1, "", "localpair"], [32, 6, 1, "", "lop"], [32, 6, 1, "", "maxiterate"], [32, 6, 1, "", "memsave"], [32, 6, 1, "", "namelength"], [32, 6, 1, "", "nofft"], [32, 6, 1, "", "noscore"], [32, 6, 1, "", "nuc"], [32, 6, 1, "", "op"], [32, 6, 1, "", "partsize"], [32, 6, 1, "", "parttree"], [32, 6, 1, "", "phylipout"], [32, 6, 1, "", "quiet"], [32, 6, 1, "", "reorder"], [32, 6, 1, "", "retree"], [32, 6, 1, "", "seed"], [32, 6, 1, "", "sixmerpair"], [32, 6, 1, "", "thread"], [32, 6, 1, "", "tm"], [32, 6, 1, "", "treeout"], [32, 6, 1, "", "weighti"]], "Bio.Align.Applications.MuscleCommandline": [[32, 2, 1, "", "__init__"], [32, 6, 1, "", "anchors"], [32, 6, 1, "", "anchorspacing"], [32, 6, 1, "", "brenner"], [32, 6, 1, "", "center"], [32, 6, 1, "", "cluster"], [32, 6, 1, "", "cluster1"], [32, 6, 1, "", "cluster2"], [32, 6, 1, "", "clw"], [32, 6, 1, "", "clwout"], [32, 6, 1, "", "clwstrict"], [32, 6, 1, "", "clwstrictout"], [32, 6, 1, "", "core"], [32, 6, 1, "", "diagbreak"], [32, 6, 1, "", "diaglength"], [32, 6, 1, "", "diagmargin"], [32, 6, 1, "", "diags"], [32, 6, 1, "", "dimer"], [32, 6, 1, "", "distance1"], [32, 6, 1, "", "distance2"], [32, 6, 1, "", "fasta"], [32, 6, 1, "", "fastaout"], [32, 6, 1, "", "gapextend"], [32, 6, 1, "", "gapopen"], [32, 6, 1, "", "group"], [32, 6, 1, "", "html"], [32, 6, 1, "", "htmlout"], [32, 6, 1, "", "hydro"], [32, 6, 1, "", "hydrofactor"], [32, 6, 1, "", "in1"], [32, 6, 1, "", "in2"], [32, 6, 1, "", "input"], [32, 6, 1, "", "le"], [32, 6, 1, "", "log"], [32, 6, 1, "", "loga"], [32, 6, 1, "", "matrix"], [32, 6, 1, "", "maxdiagbreak"], [32, 6, 1, "", "maxhours"], [32, 6, 1, "", "maxiters"], [32, 6, 1, "", "maxtrees"], [32, 6, 1, "", "minbestcolscore"], [32, 6, 1, "", "minsmoothscore"], [32, 6, 1, "", "msf"], [32, 6, 1, "", "msfout"], [32, 6, 1, "", "noanchors"], [32, 6, 1, "", "nocore"], [32, 6, 1, "", "objscore"], [32, 6, 1, "", "out"], [32, 6, 1, "", "phyi"], [32, 6, 1, "", "phyiout"], [32, 6, 1, "", "phys"], [32, 6, 1, "", "physout"], [32, 6, 1, "", "profile"], [32, 6, 1, "", "quiet"], [32, 6, 1, "", "refine"], [32, 6, 1, "", "refinew"], [32, 6, 1, "", "refinewindow"], [32, 6, 1, "", "root1"], [32, 6, 1, "", "root2"], [32, 6, 1, "", "scorefile"], [32, 6, 1, "", "seqtype"], [32, 6, 1, "", "smoothscoreceil"], [32, 6, 1, "", "smoothwindow"], [32, 6, 1, "", "sp"], [32, 6, 1, "", "spn"], [32, 6, 1, "", "spscore"], [32, 6, 1, "", "stable"], [32, 6, 1, "", "sueff"], [32, 6, 1, "", "sv"], [32, 6, 1, "", "tree1"], [32, 6, 1, "", "tree2"], [32, 6, 1, "", "usetree"], [32, 6, 1, "", "verbose"], [32, 6, 1, "", "version"], [32, 6, 1, "", "weight1"], [32, 6, 1, "", "weight2"]], "Bio.Align.Applications.PrankCommandline": [[32, 6, 1, "", "F"], [32, 2, 1, "", "__init__"], [32, 6, 1, "", "codon"], [32, 6, 1, "", "convert"], [32, 6, 1, "", "d"], [32, 6, 1, "", "dnafreqs"], [32, 6, 1, "", "dots"], [32, 6, 1, "", "f"], [32, 6, 1, "", "fixedbranches"], [32, 6, 1, "", "gapext"], [32, 6, 1, "", "gaprate"], [32, 6, 1, "", "kappa"], [32, 6, 1, "", "longseq"], [32, 6, 1, "", "m"], [32, 6, 1, "", "matinitsize"], [32, 6, 1, "", "matresize"], [32, 6, 1, "", "maxbranches"], [32, 6, 1, "", "mttranslate"], [32, 6, 1, "", "nopost"], [32, 6, 1, "", "notree"], [32, 6, 1, "", "noxml"], [32, 6, 1, "", "o"], [32, 6, 1, "", "once"], [32, 6, 1, "", "printnodes"], [32, 6, 1, "", "pwdist"], [32, 6, 1, "", "pwgenomic"], [32, 6, 1, "", "pwgenomicdist"], [32, 6, 1, "", "quiet"], [32, 6, 1, "", "realbranches"], [32, 6, 1, "", "rho"], [32, 6, 1, "", "scalebranches"], [32, 6, 1, "", "shortnames"], [32, 6, 1, "", "showtree"], [32, 6, 1, "", "showxml"], [32, 6, 1, "", "skipins"], [32, 6, 1, "", "t"], [32, 6, 1, "", "termgap"], [32, 6, 1, "", "translate"], [32, 6, 1, "", "tree"], [32, 6, 1, "", "twice"], [32, 6, 1, "", "uselogs"], [32, 6, 1, "", "writeanc"]], "Bio.Align.Applications.ProbconsCommandline": [[32, 2, 1, "", "__init__"], [32, 6, 1, "", "a"], [32, 6, 1, "", "annot"], [32, 6, 1, "", "clustalw"], [32, 6, 1, "", "consistency"], [32, 6, 1, "", "emissions"], [32, 6, 1, "", "input"], [32, 6, 1, "", "ir"], [32, 6, 1, "", "pairs"], [32, 6, 1, "", "paramfile"], [32, 6, 1, "", "pre"], [32, 6, 1, "", "train"], [32, 6, 1, "", "verbose"], [32, 6, 1, "", "viterbi"]], "Bio.Align.Applications.TCoffeeCommandline": [[32, 5, 1, "", "SEQ_TYPES"], [32, 2, 1, "", "__init__"], [32, 6, 1, "", "convert"], [32, 6, 1, "", "gapext"], [32, 6, 1, "", "gapopen"], [32, 6, 1, "", "infile"], [32, 6, 1, "", "matrix"], [32, 6, 1, "", "mode"], [32, 6, 1, "", "outfile"], [32, 6, 1, "", "outorder"], [32, 6, 1, "", "output"], [32, 6, 1, "", "quiet"], [32, 6, 1, "", "type"]], "Bio.Align.CodonAligner": [[30, 2, 1, "", "__init__"], [30, 2, 1, "", "align"], [30, 2, 1, "", "score"]], "Bio.Align.MultipleSeqAlignment": [[30, 2, 1, "", "__add__"], [30, 2, 1, "", "__delitem__"], [30, 2, 1, "", "__format__"], [30, 2, 1, "", "__getitem__"], [30, 2, 1, "", "__init__"], [30, 2, 1, "", "__iter__"], [30, 2, 1, "", "__len__"], [30, 2, 1, "", "__repr__"], [30, 2, 1, "", "__str__"], [30, 6, 1, "", "alignment"], [30, 2, 1, "", "append"], [30, 6, 1, "", "column_annotations"], [30, 2, 1, "", "extend"], [30, 2, 1, "", "get_alignment_length"], [30, 2, 1, "", "sort"], [30, 6, 1, "", "substitutions"]], "Bio.Align.PairwiseAligner": [[30, 2, 1, "", "__getstate__"], [30, 2, 1, "", "__init__"], [30, 2, 1, "", "__setattr__"], [30, 2, 1, "", "__setstate__"], [30, 2, 1, "", "align"], [30, 2, 1, "", "score"]], "Bio.Align.PairwiseAlignments": [[30, 5, 1, "", "__abstractmethods__"], [30, 2, 1, "", "__getitem__"], [30, 2, 1, "", "__init__"], [30, 2, 1, "", "__len__"], [30, 2, 1, "", "__next__"], [30, 2, 1, "", "rewind"]], "Bio.Align.a2m": [[33, 3, 1, "", "AlignmentIterator"], [33, 3, 1, "", "AlignmentWriter"]], "Bio.Align.a2m.AlignmentIterator": [[33, 5, 1, "", "__abstractmethods__"], [33, 5, 1, "", "fmt"]], "Bio.Align.a2m.AlignmentWriter": [[33, 5, 1, "", "__abstractmethods__"], [33, 5, 1, "", "fmt"], [33, 2, 1, "", "format_alignment"], [33, 2, 1, "", "write_alignments"]], "Bio.Align.analysis": [[34, 4, 1, "", "calculate_dn_ds"], [34, 4, 1, "", "calculate_dn_ds_matrix"], [34, 4, 1, "", "mktest"]], "Bio.Align.bed": [[35, 3, 1, "", "AlignmentIterator"], [35, 3, 1, "", "AlignmentWriter"]], "Bio.Align.bed.AlignmentIterator": [[35, 5, 1, "", "__abstractmethods__"], [35, 5, 1, "", "fmt"]], "Bio.Align.bed.AlignmentWriter": [[35, 5, 1, "", "__abstractmethods__"], [35, 2, 1, "", "__init__"], [35, 2, 1, "", "format_alignment"]], "Bio.Align.bigbed": [[36, 3, 1, "", "AlignmentIterator"], [36, 3, 1, "", "AlignmentWriter"], [36, 3, 1, "", "AutoSQLTable"], [36, 3, 1, "", "Field"]], "Bio.Align.bigbed.AlignmentIterator": [[36, 5, 1, "", "__abstractmethods__"], [36, 2, 1, "", "__len__"], [36, 5, 1, "", "fmt"], [36, 5, 1, "", "mode"], [36, 2, 1, "", "search"]], "Bio.Align.bigbed.AlignmentWriter": [[36, 5, 1, "", "__abstractmethods__"], [36, 2, 1, "", "__init__"], [36, 5, 1, "", "fmt"], [36, 5, 1, "", "mode"], [36, 2, 1, "", "write_alignments"], [36, 2, 1, "", "write_file"]], "Bio.Align.bigbed.AutoSQLTable": [[36, 5, 1, "", "__annotations__"], [36, 2, 1, "", "__bytes__"], [36, 2, 1, "", "__getitem__"], [36, 2, 1, "", "__init__"], [36, 2, 1, "", "__str__"], [36, 5, 1, "", "default"], [36, 2, 1, "", "from_bytes"], [36, 2, 1, "", "from_string"]], "Bio.Align.bigbed.Field": [[36, 2, 1, "", "__getnewargs__"], [36, 2, 1, "", "__new__"], [36, 2, 1, "", "__repr__"], [36, 5, 1, "", "__slots__"], [36, 5, 1, "", "as_type"], [36, 5, 1, "", "comment"], [36, 5, 1, "", "name"]], "Bio.Align.bigmaf": [[37, 3, 1, "", "AlignmentIterator"], [37, 3, 1, "", "AlignmentWriter"]], "Bio.Align.bigmaf.AlignmentIterator": [[37, 5, 1, "", "__abstractmethods__"], [37, 2, 1, "", "__init__"], [37, 5, 1, "", "fmt"], [37, 5, 1, "", "mode"]], "Bio.Align.bigmaf.AlignmentWriter": [[37, 5, 1, "", "__abstractmethods__"], [37, 2, 1, "", "__init__"], [37, 5, 1, "", "fmt"], [37, 2, 1, "", "write_file"]], "Bio.Align.bigpsl": [[38, 3, 1, "", "AlignmentIterator"], [38, 3, 1, "", "AlignmentWriter"]], "Bio.Align.bigpsl.AlignmentIterator": [[38, 5, 1, "", "__abstractmethods__"], [38, 5, 1, "", "fmt"]], "Bio.Align.bigpsl.AlignmentWriter": [[38, 5, 1, "", "__abstractmethods__"], [38, 2, 1, "", "__init__"], [38, 5, 1, "", "fmt"], [38, 2, 1, "", "write_file"]], "Bio.Align.chain": [[39, 3, 1, "", "AlignmentIterator"], [39, 3, 1, "", "AlignmentWriter"]], "Bio.Align.chain.AlignmentIterator": [[39, 5, 1, "", "__abstractmethods__"], [39, 5, 1, "", "fmt"]], "Bio.Align.chain.AlignmentWriter": [[39, 5, 1, "", "__abstractmethods__"], [39, 5, 1, "", "fmt"], [39, 2, 1, "", "format_alignment"]], "Bio.Align.clustal": [[40, 3, 1, "", "AlignmentIterator"], [40, 3, 1, "", "AlignmentWriter"]], "Bio.Align.clustal.AlignmentIterator": [[40, 5, 1, "", "__abstractmethods__"], [40, 5, 1, "", "fmt"]], "Bio.Align.clustal.AlignmentWriter": [[40, 5, 1, "", "__abstractmethods__"], [40, 5, 1, "", "fmt"], [40, 2, 1, "", "format_alignment"], [40, 2, 1, "", "write_header"]], "Bio.Align.emboss": [[41, 3, 1, "", "AlignmentIterator"]], "Bio.Align.emboss.AlignmentIterator": [[41, 5, 1, "", "__abstractmethods__"], [41, 5, 1, "", "fmt"]], "Bio.Align.exonerate": [[42, 3, 1, "", "AlignmentIterator"], [42, 3, 1, "", "AlignmentWriter"]], "Bio.Align.exonerate.AlignmentIterator": [[42, 5, 1, "", "__abstractmethods__"], [42, 5, 1, "", "fmt"]], "Bio.Align.exonerate.AlignmentWriter": [[42, 5, 1, "", "__abstractmethods__"], [42, 2, 1, "", "__init__"], [42, 5, 1, "", "fmt"], [42, 2, 1, "", "write_footer"], [42, 2, 1, "", "write_header"]], "Bio.Align.fasta": [[43, 3, 1, "", "AlignmentIterator"], [43, 3, 1, "", "AlignmentWriter"]], "Bio.Align.fasta.AlignmentIterator": [[43, 5, 1, "", "__abstractmethods__"], [43, 5, 1, "", "fmt"]], "Bio.Align.fasta.AlignmentWriter": [[43, 5, 1, "", "__abstractmethods__"], [43, 5, 1, "", "fmt"], [43, 2, 1, "", "format_alignment"]], "Bio.Align.hhr": [[44, 3, 1, "", "AlignmentIterator"]], "Bio.Align.hhr.AlignmentIterator": [[44, 5, 1, "", "__abstractmethods__"], [44, 2, 1, "", "__len__"], [44, 5, 1, "", "fmt"]], "Bio.Align.interfaces": [[45, 3, 1, "", "AlignmentIterator"], [45, 3, 1, "", "AlignmentWriter"]], "Bio.Align.interfaces.AlignmentIterator": [[45, 5, 1, "", "__abstractmethods__"], [45, 5, 1, "", "__annotations__"], [45, 2, 1, "", "__enter__"], [45, 2, 1, "", "__exit__"], [45, 2, 1, "", "__getitem__"], [45, 2, 1, "", "__init__"], [45, 2, 1, "", "__len__"], [45, 2, 1, "", "__next__"], [45, 5, 1, "", "fmt"], [45, 5, 1, "", "mode"], [45, 2, 1, "", "rewind"]], "Bio.Align.interfaces.AlignmentWriter": [[45, 5, 1, "", "__abstractmethods__"], [45, 5, 1, "", "__annotations__"], [45, 2, 1, "", "__init__"], [45, 5, 1, "", "fmt"], [45, 2, 1, "", "format_alignment"], [45, 5, 1, "", "mode"], [45, 2, 1, "", "write"], [45, 2, 1, "", "write_alignments"], [45, 2, 1, "", "write_file"], [45, 2, 1, "", "write_footer"], [45, 2, 1, "", "write_header"], [45, 2, 1, "", "write_multiple_alignments"], [45, 2, 1, "", "write_single_alignment"]], "Bio.Align.maf": [[46, 3, 1, "", "AlignmentIterator"], [46, 3, 1, "", "AlignmentWriter"]], "Bio.Align.maf.AlignmentIterator": [[46, 5, 1, "", "__abstractmethods__"], [46, 5, 1, "", "empty_status_characters"], [46, 5, 1, "", "fmt"], [46, 5, 1, "", "status_characters"]], "Bio.Align.maf.AlignmentWriter": [[46, 5, 1, "", "__abstractmethods__"], [46, 5, 1, "", "fmt"], [46, 2, 1, "", "format_alignment"], [46, 2, 1, "", "write_header"]], "Bio.Align.mauve": [[47, 3, 1, "", "AlignmentIterator"], [47, 3, 1, "", "AlignmentWriter"]], "Bio.Align.mauve.AlignmentIterator": [[47, 5, 1, "", "__abstractmethods__"], [47, 5, 1, "", "fmt"]], "Bio.Align.mauve.AlignmentWriter": [[47, 5, 1, "", "__abstractmethods__"], [47, 2, 1, "", "__init__"], [47, 5, 1, "", "fmt"], [47, 2, 1, "", "format_alignment"], [47, 2, 1, "", "write_file"], [47, 2, 1, "", "write_header"]], "Bio.Align.msf": [[48, 3, 1, "", "AlignmentIterator"]], "Bio.Align.msf.AlignmentIterator": [[48, 5, 1, "", "__abstractmethods__"], [48, 5, 1, "", "fmt"]], "Bio.Align.nexus": [[49, 3, 1, "", "AlignmentIterator"], [49, 3, 1, "", "AlignmentWriter"]], "Bio.Align.nexus.AlignmentIterator": [[49, 5, 1, "", "__abstractmethods__"], [49, 5, 1, "", "fmt"]], "Bio.Align.nexus.AlignmentWriter": [[49, 5, 1, "", "__abstractmethods__"], [49, 2, 1, "", "__init__"], [49, 5, 1, "", "fmt"], [49, 2, 1, "", "format_alignment"], [49, 2, 1, "", "write_alignment"], [49, 2, 1, "", "write_alignments"], [49, 2, 1, "", "write_file"]], "Bio.Align.phylip": [[50, 3, 1, "", "AlignmentIterator"], [50, 3, 1, "", "AlignmentWriter"]], "Bio.Align.phylip.AlignmentIterator": [[50, 5, 1, "", "__abstractmethods__"], [50, 5, 1, "", "fmt"]], "Bio.Align.phylip.AlignmentWriter": [[50, 5, 1, "", "__abstractmethods__"], [50, 5, 1, "", "fmt"], [50, 2, 1, "", "format_alignment"]], "Bio.Align.psl": [[51, 3, 1, "", "AlignmentIterator"], [51, 3, 1, "", "AlignmentWriter"]], "Bio.Align.psl.AlignmentIterator": [[51, 5, 1, "", "__abstractmethods__"], [51, 5, 1, "", "fmt"]], "Bio.Align.psl.AlignmentWriter": [[51, 5, 1, "", "__abstractmethods__"], [51, 2, 1, "", "__init__"], [51, 5, 1, "", "fmt"], [51, 2, 1, "", "format_alignment"], [51, 2, 1, "", "write_header"]], "Bio.Align.sam": [[52, 3, 1, "", "AlignmentIterator"], [52, 3, 1, "", "AlignmentWriter"]], "Bio.Align.sam.AlignmentIterator": [[52, 5, 1, "", "__abstractmethods__"], [52, 5, 1, "", "fmt"]], "Bio.Align.sam.AlignmentWriter": [[52, 5, 1, "", "__abstractmethods__"], [52, 2, 1, "", "__init__"], [52, 5, 1, "", "fmt"], [52, 2, 1, "", "format_alignment"], [52, 2, 1, "", "write_header"]], "Bio.Align.stockholm": [[53, 3, 1, "", "AlignmentIterator"], [53, 3, 1, "", "AlignmentWriter"]], "Bio.Align.stockholm.AlignmentIterator": [[53, 5, 1, "", "__abstractmethods__"], [53, 5, 1, "", "fmt"], [53, 5, 1, "", "gc_mapping"], [53, 5, 1, "", "gf_mapping"], [53, 5, 1, "", "gr_mapping"], [53, 5, 1, "", "gs_mapping"], [53, 5, 1, "", "key"], [53, 5, 1, "", "keyword"], [53, 5, 1, "", "value"]], "Bio.Align.stockholm.AlignmentWriter": [[53, 5, 1, "", "__abstractmethods__"], [53, 5, 1, "", "fmt"], [53, 2, 1, "", "format_alignment"], [53, 5, 1, "", "gc_mapping"], [53, 5, 1, "", "gf_mapping"], [53, 5, 1, "", "gr_mapping"], [53, 5, 1, "", "gs_mapping"]], "Bio.Align.substitution_matrices": [[54, 3, 1, "", "Array"], [54, 4, 1, "", "load"], [54, 4, 1, "", "read"]], "Bio.Align.substitution_matrices.Array": [[54, 2, 1, "", "__array_finalize__"], [54, 2, 1, "", "__array_prepare__"], [54, 2, 1, "", "__array_ufunc__"], [54, 2, 1, "", "__array_wrap__"], [54, 2, 1, "", "__contains__"], [54, 2, 1, "", "__format__"], [54, 2, 1, "", "__getitem__"], [54, 2, 1, "", "__new__"], [54, 2, 1, "", "__reduce__"], [54, 2, 1, "", "__repr__"], [54, 2, 1, "", "__setitem__"], [54, 2, 1, "", "__setstate__"], [54, 2, 1, "", "__str__"], [54, 6, 1, "", "alphabet"], [54, 2, 1, "", "copy"], [54, 2, 1, "", "format"], [54, 2, 1, "", "get"], [54, 2, 1, "", "items"], [54, 2, 1, "", "keys"], [54, 2, 1, "", "select"], [54, 2, 1, "", "transpose"], [54, 2, 1, "", "update"], [54, 2, 1, "", "values"]], "Bio.Align.tabular": [[55, 3, 1, "", "AlignmentIterator"], [55, 3, 1, "", "State"]], "Bio.Align.tabular.AlignmentIterator": [[55, 5, 1, "", "__abstractmethods__"], [55, 5, 1, "", "fmt"], [55, 2, 1, "", "parse_btop"], [55, 2, 1, "", "parse_cigar"]], "Bio.Align.tabular.State": [[55, 5, 1, "", "MATCH"], [55, 5, 1, "", "NONE"], [55, 5, 1, "", "QUERY_GAP"], [55, 5, 1, "", "TARGET_GAP"]], "Bio.AlignIO": [[57, 0, 0, "-", "ClustalIO"], [58, 0, 0, "-", "EmbossIO"], [59, 0, 0, "-", "FastaIO"], [60, 0, 0, "-", "Interfaces"], [61, 0, 0, "-", "MafIO"], [62, 0, 0, "-", "MauveIO"], [63, 0, 0, "-", "MsfIO"], [64, 0, 0, "-", "NexusIO"], [65, 0, 0, "-", "PhylipIO"], [66, 0, 0, "-", "StockholmIO"], [56, 4, 1, "", "convert"], [56, 4, 1, "", "parse"], [56, 4, 1, "", "read"], [56, 4, 1, "", "write"]], "Bio.AlignIO.ClustalIO": [[57, 3, 1, "", "ClustalIterator"], [57, 3, 1, "", "ClustalWriter"]], "Bio.AlignIO.ClustalIO.ClustalIterator": [[57, 2, 1, "", "__next__"]], "Bio.AlignIO.ClustalIO.ClustalWriter": [[57, 2, 1, "", "write_alignment"]], "Bio.AlignIO.EmbossIO": [[58, 3, 1, "", "EmbossIterator"]], "Bio.AlignIO.EmbossIO.EmbossIterator": [[58, 2, 1, "", "__next__"]], "Bio.AlignIO.FastaIO": [[59, 4, 1, "", "FastaM10Iterator"]], "Bio.AlignIO.Interfaces": [[60, 3, 1, "", "AlignmentIterator"], [60, 3, 1, "", "AlignmentWriter"], [60, 3, 1, "", "SequentialAlignmentWriter"]], "Bio.AlignIO.Interfaces.AlignmentIterator": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "__iter__"], [60, 2, 1, "", "__next__"]], "Bio.AlignIO.Interfaces.AlignmentWriter": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "clean"], [60, 2, 1, "", "write_file"]], "Bio.AlignIO.Interfaces.SequentialAlignmentWriter": [[60, 2, 1, "", "__init__"], [60, 2, 1, "", "write_alignment"], [60, 2, 1, "", "write_file"], [60, 2, 1, "", "write_footer"], [60, 2, 1, "", "write_header"]], "Bio.AlignIO.MafIO": [[61, 3, 1, "", "MafIndex"], [61, 4, 1, "", "MafIterator"], [61, 3, 1, "", "MafWriter"]], "Bio.AlignIO.MafIO.MafIndex": [[61, 2, 1, "", "__init__"], [61, 2, 1, "", "__len__"], [61, 2, 1, "", "__repr__"], [61, 2, 1, "", "close"], [61, 2, 1, "", "get_spliced"], [61, 2, 1, "", "search"]], "Bio.AlignIO.MafIO.MafWriter": [[61, 2, 1, "", "write_alignment"], [61, 2, 1, "", "write_header"]], "Bio.AlignIO.MauveIO": [[62, 3, 1, "", "MauveIterator"], [62, 3, 1, "", "MauveWriter"]], "Bio.AlignIO.MauveIO.MauveIterator": [[62, 5, 1, "", "__annotations__"], [62, 2, 1, "", "__next__"]], "Bio.AlignIO.MauveIO.MauveWriter": [[62, 2, 1, "", "__init__"], [62, 2, 1, "", "write_alignment"]], "Bio.AlignIO.MsfIO": [[63, 3, 1, "", "MsfIterator"]], "Bio.AlignIO.MsfIO.MsfIterator": [[63, 2, 1, "", "__next__"]], "Bio.AlignIO.NexusIO": [[64, 4, 1, "", "NexusIterator"], [64, 3, 1, "", "NexusWriter"]], "Bio.AlignIO.NexusIO.NexusWriter": [[64, 2, 1, "", "write_alignment"], [64, 2, 1, "", "write_file"]], "Bio.AlignIO.PhylipIO": [[65, 3, 1, "", "PhylipIterator"], [65, 3, 1, "", "PhylipWriter"], [65, 3, 1, "", "RelaxedPhylipIterator"], [65, 3, 1, "", "RelaxedPhylipWriter"], [65, 3, 1, "", "SequentialPhylipIterator"], [65, 3, 1, "", "SequentialPhylipWriter"], [65, 4, 1, "", "sanitize_name"]], "Bio.AlignIO.PhylipIO.PhylipIterator": [[65, 2, 1, "", "__next__"], [65, 5, 1, "", "id_width"]], "Bio.AlignIO.PhylipIO.PhylipWriter": [[65, 2, 1, "", "write_alignment"]], "Bio.AlignIO.PhylipIO.RelaxedPhylipWriter": [[65, 2, 1, "", "write_alignment"]], "Bio.AlignIO.PhylipIO.SequentialPhylipIterator": [[65, 2, 1, "", "__next__"]], "Bio.AlignIO.PhylipIO.SequentialPhylipWriter": [[65, 2, 1, "", "write_alignment"]], "Bio.AlignIO.StockholmIO": [[66, 3, 1, "", "StockholmIterator"], [66, 3, 1, "", "StockholmWriter"]], "Bio.AlignIO.StockholmIO.StockholmIterator": [[66, 2, 1, "", "__next__"], [66, 5, 1, "", "pfam_gc_mapping"], [66, 5, 1, "", "pfam_gr_mapping"], [66, 5, 1, "", "pfam_gs_mapping"]], "Bio.AlignIO.StockholmIO.StockholmWriter": [[66, 5, 1, "", "pfam_gc_mapping"], [66, 5, 1, "", "pfam_gr_mapping"], [66, 5, 1, "", "pfam_gs_mapping"], [66, 2, 1, "", "write_alignment"]], "Bio.Application": [[67, 3, 1, "", "AbstractCommandline"], [67, 1, 1, "", "ApplicationError"]], "Bio.Application.AbstractCommandline": [[67, 2, 1, "", "__call__"], [67, 2, 1, "", "__init__"], [67, 2, 1, "", "__repr__"], [67, 2, 1, "", "__setattr__"], [67, 2, 1, "", "__str__"], [67, 5, 1, "", "parameters"], [67, 2, 1, "", "set_parameter"]], "Bio.Application.ApplicationError": [[67, 2, 1, "", "__init__"], [67, 2, 1, "", "__repr__"], [67, 2, 1, "", "__str__"]], "Bio.Blast": [[69, 0, 0, "-", "Applications"], [68, 1, 1, "", "CorruptedXMLError"], [68, 3, 1, "", "HSP"], [68, 3, 1, "", "Hit"], [70, 0, 0, "-", "NCBIWWW"], [71, 0, 0, "-", "NCBIXML"], [68, 1, 1, "", "NotXMLError"], [68, 3, 1, "", "Record"], [68, 3, 1, "", "Records"], [68, 4, 1, "", "parse"], [68, 4, 1, "", "qblast"], [68, 4, 1, "", "read"], [68, 4, 1, "", "write"]], "Bio.Blast.Applications": [[69, 3, 1, "", "NcbiblastformatterCommandline"], [69, 3, 1, "", "NcbiblastnCommandline"], [69, 3, 1, "", "NcbiblastpCommandline"], [69, 3, 1, "", "NcbiblastxCommandline"], [69, 3, 1, "", "NcbideltablastCommandline"], [69, 3, 1, "", "NcbimakeblastdbCommandline"], [69, 3, 1, "", "NcbipsiblastCommandline"], [69, 3, 1, "", "NcbirpsblastCommandline"], [69, 3, 1, "", "NcbirpstblastnCommandline"], [69, 3, 1, "", "NcbitblastnCommandline"], [69, 3, 1, "", "NcbitblastxCommandline"]], "Bio.Blast.Applications.NcbiblastformatterCommandline": [[69, 2, 1, "", "__init__"], [69, 6, 1, "", "archive"], [69, 6, 1, "", "h"], [69, 6, 1, "", "help"], [69, 6, 1, "", "html"], [69, 6, 1, "", "line_length"], [69, 6, 1, "", "max_target_seqs"], [69, 6, 1, "", "num_alignments"], [69, 6, 1, "", "num_descriptions"], [69, 6, 1, "", "out"], [69, 6, 1, "", "outfmt"], [69, 6, 1, "", "parse_deflines"], [69, 6, 1, "", "rid"], [69, 6, 1, "", "show_gis"], [69, 6, 1, "", "version"]], "Bio.Blast.Applications.NcbiblastnCommandline": [[69, 2, 1, "", "__init__"], [69, 6, 1, "", "best_hit_overhang"], [69, 6, 1, "", "best_hit_score_edge"], [69, 6, 1, "", "culling_limit"], [69, 6, 1, "", "db"], [69, 6, 1, "", "db_hard_mask"], [69, 6, 1, "", "db_soft_mask"], [69, 6, 1, "", "dbsize"], [69, 6, 1, "", "dust"], [69, 6, 1, "", "entrez_query"], [69, 6, 1, "", "evalue"], [69, 6, 1, "", "export_search_strategy"], [69, 6, 1, "", "filtering_db"], [69, 6, 1, "", "gapextend"], [69, 6, 1, "", "gapopen"], [69, 6, 1, "", "gilist"], [69, 6, 1, "", "h"], [69, 6, 1, "", "help"], [69, 6, 1, "", "html"], [69, 6, 1, "", "import_search_strategy"], [69, 6, 1, "", "index_name"], [69, 6, 1, "", "lcase_masking"], [69, 6, 1, "", "line_length"], [69, 6, 1, "", "max_hsps"], [69, 6, 1, "", "max_hsps_per_subject"], [69, 6, 1, "", "max_target_seqs"], [69, 6, 1, "", "min_raw_gapped_score"], [69, 6, 1, "", "negative_gilist"], [69, 6, 1, "", "negative_seqidlist"], [69, 6, 1, "", "no_greedy"], [69, 6, 1, "", "num_alignments"], [69, 6, 1, "", "num_descriptions"], [69, 6, 1, "", "num_threads"], [69, 6, 1, "", "off_diagonal_range"], [69, 6, 1, "", "out"], [69, 6, 1, "", "outfmt"], [69, 6, 1, "", "parse_deflines"], [69, 6, 1, "", "penalty"], [69, 6, 1, "", "perc_identity"], [69, 6, 1, "", "qcov_hsp_perc"], [69, 6, 1, "", "query"], [69, 6, 1, "", "query_loc"], [69, 6, 1, "", "remote"], [69, 6, 1, "", "reward"], [69, 6, 1, "", "searchsp"], [69, 6, 1, "", "seqidlist"], [69, 6, 1, "", "show_gis"], [69, 6, 1, "", "soft_masking"], [69, 6, 1, "", "strand"], [69, 6, 1, "", "subject"], [69, 6, 1, "", "subject_loc"], [69, 6, 1, "", "sum_statistics"], [69, 6, 1, "", "sum_stats"], [69, 6, 1, "", "task"], [69, 6, 1, "", "template_length"], [69, 6, 1, "", "template_type"], [69, 6, 1, "", "ungapped"], [69, 6, 1, "", "use_index"], [69, 6, 1, "", "version"], [69, 6, 1, "", "window_masker_db"], [69, 6, 1, "", "window_masker_taxid"], [69, 6, 1, "", "window_size"], [69, 6, 1, "", "word_size"], [69, 6, 1, "", "xdrop_gap"], [69, 6, 1, "", "xdrop_gap_final"], [69, 6, 1, "", "xdrop_ungap"]], "Bio.Blast.Applications.NcbiblastpCommandline": [[69, 2, 1, "", "__init__"], [69, 6, 1, "", "best_hit_overhang"], [69, 6, 1, "", "best_hit_score_edge"], [69, 6, 1, "", "comp_based_stats"], [69, 6, 1, "", "culling_limit"], [69, 6, 1, "", "db"], [69, 6, 1, "", "db_hard_mask"], [69, 6, 1, "", "db_soft_mask"], [69, 6, 1, "", "dbsize"], [69, 6, 1, "", "entrez_query"], [69, 6, 1, "", "evalue"], [69, 6, 1, "", "export_search_strategy"], [69, 6, 1, "", "gapextend"], [69, 6, 1, "", "gapopen"], [69, 6, 1, "", "gilist"], [69, 6, 1, "", "h"], [69, 6, 1, "", "help"], [69, 6, 1, "", "html"], [69, 6, 1, "", "import_search_strategy"], [69, 6, 1, "", "lcase_masking"], [69, 6, 1, "", "line_length"], [69, 6, 1, "", "matrix"], [69, 6, 1, "", "max_hsps"], [69, 6, 1, "", "max_hsps_per_subject"], [69, 6, 1, "", "max_target_seqs"], [69, 6, 1, "", "negative_gilist"], [69, 6, 1, "", "negative_seqidlist"], [69, 6, 1, "", "num_alignments"], [69, 6, 1, "", "num_descriptions"], [69, 6, 1, "", "num_threads"], [69, 6, 1, "", "out"], [69, 6, 1, "", "outfmt"], [69, 6, 1, "", "parse_deflines"], [69, 6, 1, "", "qcov_hsp_perc"], [69, 6, 1, "", "query"], [69, 6, 1, "", "query_loc"], [69, 6, 1, "", "remote"], [69, 6, 1, "", "searchsp"], [69, 6, 1, "", "seg"], [69, 6, 1, "", "seqidlist"], [69, 6, 1, "", "show_gis"], [69, 6, 1, "", "soft_masking"], [69, 6, 1, "", "subject"], [69, 6, 1, "", "subject_loc"], [69, 6, 1, "", "sum_statistics"], [69, 6, 1, "", "sum_stats"], [69, 6, 1, "", "task"], [69, 6, 1, "", "threshold"], [69, 6, 1, "", "ungapped"], [69, 6, 1, "", "use_sw_tback"], [69, 6, 1, "", "version"], [69, 6, 1, "", "window_size"], [69, 6, 1, "", "word_size"], [69, 6, 1, "", "xdrop_gap"], [69, 6, 1, "", "xdrop_gap_final"], [69, 6, 1, "", "xdrop_ungap"]], "Bio.Blast.Applications.NcbiblastxCommandline": [[69, 2, 1, "", "__init__"], [69, 6, 1, "", "best_hit_overhang"], [69, 6, 1, "", "best_hit_score_edge"], [69, 6, 1, "", "comp_based_stats"], [69, 6, 1, "", "culling_limit"], [69, 6, 1, "", "db"], [69, 6, 1, "", "db_hard_mask"], [69, 6, 1, "", "db_soft_mask"], [69, 6, 1, "", "dbsize"], [69, 6, 1, "", "entrez_query"], [69, 6, 1, "", "evalue"], [69, 6, 1, "", "export_search_strategy"], [69, 6, 1, "", "frame_shift_penalty"], [69, 6, 1, "", "gapextend"], [69, 6, 1, "", "gapopen"], [69, 6, 1, "", "gilist"], [69, 6, 1, "", "h"], [69, 6, 1, "", "help"], [69, 6, 1, "", "html"], [69, 6, 1, "", "import_search_strategy"], [69, 6, 1, "", "lcase_masking"], [69, 6, 1, "", "line_length"], [69, 6, 1, "", "matrix"], [69, 6, 1, "", "max_hsps"], [69, 6, 1, "", "max_hsps_per_subject"], [69, 6, 1, "", "max_intron_length"], [69, 6, 1, "", "max_target_seqs"], [69, 6, 1, "", "negative_gilist"], [69, 6, 1, "", "negative_seqidlist"], [69, 6, 1, "", "num_alignments"], [69, 6, 1, "", "num_descriptions"], [69, 6, 1, "", "num_threads"], [69, 6, 1, "", "out"], [69, 6, 1, "", "outfmt"], [69, 6, 1, "", "parse_deflines"], [69, 6, 1, "", "qcov_hsp_perc"], [69, 6, 1, "", "query"], [69, 6, 1, "", "query_gencode"], [69, 6, 1, "", "query_loc"], [69, 6, 1, "", "remote"], [69, 6, 1, "", "searchsp"], [69, 6, 1, "", "seg"], [69, 6, 1, "", "seqidlist"], [69, 6, 1, "", "show_gis"], [69, 6, 1, "", "soft_masking"], [69, 6, 1, "", "strand"], [69, 6, 1, "", "subject"], [69, 6, 1, "", "subject_loc"], [69, 6, 1, "", "sum_statistics"], [69, 6, 1, "", "sum_stats"], [69, 6, 1, "", "task"], [69, 6, 1, "", "threshold"], [69, 6, 1, "", "ungapped"], [69, 6, 1, "", "use_sw_tback"], [69, 6, 1, "", "version"], [69, 6, 1, "", "window_size"], [69, 6, 1, "", "word_size"], [69, 6, 1, "", "xdrop_gap"], [69, 6, 1, "", "xdrop_gap_final"], [69, 6, 1, "", "xdrop_ungap"]], "Bio.Blast.Applications.NcbideltablastCommandline": [[69, 2, 1, "", "__init__"], [69, 6, 1, "", "best_hit_overhang"], [69, 6, 1, "", "best_hit_score_edge"], [69, 6, 1, "", "comp_based_stats"], [69, 6, 1, "", "culling_limit"], [69, 6, 1, "", "db"], [69, 6, 1, "", "dbsize"], [69, 6, 1, "", "domain_inclusion_ethresh"], [69, 6, 1, "", "entrez_query"], [69, 6, 1, "", "evalue"], [69, 6, 1, "", "export_search_strategy"], [69, 6, 1, "", "gap_trigger"], [69, 6, 1, "", "gapextend"], [69, 6, 1, "", "gapopen"], [69, 6, 1, "", "gilist"], [69, 6, 1, "", "h"], [69, 6, 1, "", "help"], [69, 6, 1, "", "html"], [69, 6, 1, "", "import_search_strategy"], [69, 6, 1, "", "inclusion_ethresh"], [69, 6, 1, "", "lcase_masking"], [69, 6, 1, "", "line_length"], [69, 6, 1, "", "matrix"], [69, 6, 1, "", "max_hsps"], [69, 6, 1, "", "max_hsps_per_subject"], [69, 6, 1, "", "max_target_seqs"], [69, 6, 1, "", "negative_gilist"], [69, 6, 1, "", "negative_seqidlist"], [69, 6, 1, "", "num_alignments"], [69, 6, 1, "", "num_descriptions"], [69, 6, 1, "", "num_iterations"], [69, 6, 1, "", "num_threads"], [69, 6, 1, "", "out"], [69, 6, 1, "", "out_ascii_pssm"], [69, 6, 1, "", "out_pssm"], [69, 6, 1, "", "outfmt"], [69, 6, 1, "", "parse_deflines"], [69, 6, 1, "", "pseudocount"], [69, 6, 1, "", "qcov_hsp_perc"], [69, 6, 1, "", "query"], [69, 6, 1, "", "query_loc"], [69, 6, 1, "", "remote"], [69, 6, 1, "", "rpsdb"], [69, 6, 1, "", "save_each_pssm"], [69, 6, 1, "", "save_pssm_after_last_round"], [69, 6, 1, "", "searchsp"], [69, 6, 1, "", "seg"], [69, 6, 1, "", "seqidlist"], [69, 6, 1, "", "show_domain_hits"], [69, 6, 1, "", "show_gis"], [69, 6, 1, "", "soft_masking"], [69, 6, 1, "", "subject"], [69, 6, 1, "", "subject_loc"], [69, 6, 1, "", "sum_statistics"], [69, 6, 1, "", "sum_stats"], [69, 6, 1, "", "threshold"], [69, 6, 1, "", "use_sw_tback"], [69, 6, 1, "", "version"], [69, 6, 1, "", "window_size"], [69, 6, 1, "", "word_size"], [69, 6, 1, "", "xdrop_gap"], [69, 6, 1, "", "xdrop_gap_final"], [69, 6, 1, "", "xdrop_ungap"]], "Bio.Blast.Applications.NcbimakeblastdbCommandline": [[69, 2, 1, "", "__init__"], [69, 6, 1, "", "blastdb_version"], [69, 6, 1, "", "dbtype"], [69, 6, 1, "", "gi_mask"], [69, 6, 1, "", "gi_mask_name"], [69, 6, 1, "", "h"], [69, 6, 1, "", "hash_index"], [69, 6, 1, "", "help"], [69, 6, 1, "", "input_file"], [69, 6, 1, "", "input_type"], [69, 6, 1, "", "logfile"], [69, 6, 1, "", "mask_data"], [69, 6, 1, "", "mask_desc"], [69, 6, 1, "", "mask_id"], [69, 6, 1, "", "max_file_sz"], [69, 6, 1, "", "out"], [69, 6, 1, "", "parse_seqids"], [69, 6, 1, "", "taxid"], [69, 6, 1, "", "taxid_map"], [69, 6, 1, "", "title"], [69, 6, 1, "", "version"]], "Bio.Blast.Applications.NcbipsiblastCommandline": [[69, 2, 1, "", "__init__"], [69, 6, 1, "", "best_hit_overhang"], [69, 6, 1, "", "best_hit_score_edge"], [69, 6, 1, "", "comp_based_stats"], [69, 6, 1, "", "culling_limit"], [69, 6, 1, "", "db"], [69, 6, 1, "", "dbsize"], [69, 6, 1, "", "entrez_query"], [69, 6, 1, "", "evalue"], [69, 6, 1, "", "export_search_strategy"], [69, 6, 1, "", "gap_trigger"], [69, 6, 1, "", "gapextend"], [69, 6, 1, "", "gapopen"], [69, 6, 1, "", "gilist"], [69, 6, 1, "", "h"], [69, 6, 1, "", "help"], [69, 6, 1, "", "html"], [69, 6, 1, "", "ignore_msa_master"], [69, 6, 1, "", "import_search_strategy"], [69, 6, 1, "", "in_msa"], [69, 6, 1, "", "in_pssm"], [69, 6, 1, "", "inclusion_ethresh"], [69, 6, 1, "", "lcase_masking"], [69, 6, 1, "", "line_length"], [69, 6, 1, "", "matrix"], [69, 6, 1, "", "max_hsps"], [69, 6, 1, "", "max_hsps_per_subject"], [69, 6, 1, "", "max_target_seqs"], [69, 6, 1, "", "msa_master_idx"], [69, 6, 1, "", "negative_gilist"], [69, 6, 1, "", "negative_seqidlist"], [69, 6, 1, "", "num_alignments"], [69, 6, 1, "", "num_descriptions"], [69, 6, 1, "", "num_iterations"], [69, 6, 1, "", "num_threads"], [69, 6, 1, "", "out"], [69, 6, 1, "", "out_ascii_pssm"], [69, 6, 1, "", "out_pssm"], [69, 6, 1, "", "outfmt"], [69, 6, 1, "", "parse_deflines"], [69, 6, 1, "", "phi_pattern"], [69, 6, 1, "", "pseudocount"], [69, 6, 1, "", "qcov_hsp_perc"], [69, 6, 1, "", "query"], [69, 6, 1, "", "query_loc"], [69, 6, 1, "", "remote"], [69, 6, 1, "", "save_each_pssm"], [69, 6, 1, "", "save_pssm_after_last_round"], [69, 6, 1, "", "searchsp"], [69, 6, 1, "", "seg"], [69, 6, 1, "", "seqidlist"], [69, 6, 1, "", "show_gis"], [69, 6, 1, "", "soft_masking"], [69, 6, 1, "", "subject"], [69, 6, 1, "", "subject_loc"], [69, 6, 1, "", "sum_statistics"], [69, 6, 1, "", "sum_stats"], [69, 6, 1, "", "threshold"], [69, 6, 1, "", "use_sw_tback"], [69, 6, 1, "", "version"], [69, 6, 1, "", "window_size"], [69, 6, 1, "", "word_size"], [69, 6, 1, "", "xdrop_gap"], [69, 6, 1, "", "xdrop_gap_final"], [69, 6, 1, "", "xdrop_ungap"]], "Bio.Blast.Applications.NcbirpsblastCommandline": [[69, 2, 1, "", "__init__"], [69, 6, 1, "", "best_hit_overhang"], [69, 6, 1, "", "best_hit_score_edge"], [69, 6, 1, "", "comp_based_stats"], [69, 6, 1, "", "culling_limit"], [69, 6, 1, "", "db"], [69, 6, 1, "", "dbsize"], [69, 6, 1, "", "entrez_query"], [69, 6, 1, "", "evalue"], [69, 6, 1, "", "export_search_strategy"], [69, 6, 1, "", "gilist"], [69, 6, 1, "", "h"], [69, 6, 1, "", "help"], [69, 6, 1, "", "html"], [69, 6, 1, "", "import_search_strategy"], [69, 6, 1, "", "lcase_masking"], [69, 6, 1, "", "line_length"], [69, 6, 1, "", "max_hsps"], [69, 6, 1, "", "max_hsps_per_subject"], [69, 6, 1, "", "max_target_seqs"], [69, 6, 1, "", "negative_gilist"], [69, 6, 1, "", "negative_seqidlist"], [69, 6, 1, "", "num_alignments"], [69, 6, 1, "", "num_descriptions"], [69, 6, 1, "", "num_threads"], [69, 6, 1, "", "out"], [69, 6, 1, "", "outfmt"], [69, 6, 1, "", "parse_deflines"], [69, 6, 1, "", "qcov_hsp_perc"], [69, 6, 1, "", "query"], [69, 6, 1, "", "query_loc"], [69, 6, 1, "", "remote"], [69, 6, 1, "", "searchsp"], [69, 6, 1, "", "seg"], [69, 6, 1, "", "seqidlist"], [69, 6, 1, "", "show_gis"], [69, 6, 1, "", "soft_masking"], [69, 6, 1, "", "sum_statistics"], [69, 6, 1, "", "sum_stats"], [69, 6, 1, "", "use_sw_tback"], [69, 6, 1, "", "version"], [69, 6, 1, "", "window_size"], [69, 6, 1, "", "word_size"], [69, 6, 1, "", "xdrop_gap"], [69, 6, 1, "", "xdrop_gap_final"], [69, 6, 1, "", "xdrop_ungap"]], "Bio.Blast.Applications.NcbirpstblastnCommandline": [[69, 2, 1, "", "__init__"], [69, 6, 1, "", "comp_based_stats"], [69, 6, 1, "", "db"], [69, 6, 1, "", "dbsize"], [69, 6, 1, "", "entrez_query"], [69, 6, 1, "", "evalue"], [69, 6, 1, "", "export_search_strategy"], [69, 6, 1, "", "gilist"], [69, 6, 1, "", "h"], [69, 6, 1, "", "help"], [69, 6, 1, "", "html"], [69, 6, 1, "", "import_search_strategy"], [69, 6, 1, "", "lcase_masking"], [69, 6, 1, "", "line_length"], [69, 6, 1, "", "max_hsps"], [69, 6, 1, "", "max_hsps_per_subject"], [69, 6, 1, "", "max_target_seqs"], [69, 6, 1, "", "negative_gilist"], [69, 6, 1, "", "negative_seqidlist"], [69, 6, 1, "", "num_alignments"], [69, 6, 1, "", "num_descriptions"], [69, 6, 1, "", "num_threads"], [69, 6, 1, "", "out"], [69, 6, 1, "", "outfmt"], [69, 6, 1, "", "parse_deflines"], [69, 6, 1, "", "qcov_hsp_perc"], [69, 6, 1, "", "query"], [69, 6, 1, "", "query_gencode"], [69, 6, 1, "", "query_loc"], [69, 6, 1, "", "remote"], [69, 6, 1, "", "searchsp"], [69, 6, 1, "", "seg"], [69, 6, 1, "", "seqidlist"], [69, 6, 1, "", "show_gis"], [69, 6, 1, "", "soft_masking"], [69, 6, 1, "", "strand"], [69, 6, 1, "", "sum_statistics"], [69, 6, 1, "", "sum_stats"], [69, 6, 1, "", "ungapped"], [69, 6, 1, "", "use_sw_tback"], [69, 6, 1, "", "version"], [69, 6, 1, "", "window_size"], [69, 6, 1, "", "word_size"], [69, 6, 1, "", "xdrop_gap"], [69, 6, 1, "", "xdrop_gap_final"], [69, 6, 1, "", "xdrop_ungap"]], "Bio.Blast.Applications.NcbitblastnCommandline": [[69, 2, 1, "", "__init__"], [69, 6, 1, "", "best_hit_overhang"], [69, 6, 1, "", "best_hit_score_edge"], [69, 6, 1, "", "comp_based_stats"], [69, 6, 1, "", "culling_limit"], [69, 6, 1, "", "db"], [69, 6, 1, "", "db_gencode"], [69, 6, 1, "", "db_hard_mask"], [69, 6, 1, "", "db_soft_mask"], [69, 6, 1, "", "dbsize"], [69, 6, 1, "", "entrez_query"], [69, 6, 1, "", "evalue"], [69, 6, 1, "", "export_search_strategy"], [69, 6, 1, "", "frame_shift_penalty"], [69, 6, 1, "", "gapextend"], [69, 6, 1, "", "gapopen"], [69, 6, 1, "", "gilist"], [69, 6, 1, "", "h"], [69, 6, 1, "", "help"], [69, 6, 1, "", "html"], [69, 6, 1, "", "import_search_strategy"], [69, 6, 1, "", "in_pssm"], [69, 6, 1, "", "lcase_masking"], [69, 6, 1, "", "line_length"], [69, 6, 1, "", "matrix"], [69, 6, 1, "", "max_hsps"], [69, 6, 1, "", "max_hsps_per_subject"], [69, 6, 1, "", "max_intron_length"], [69, 6, 1, "", "max_target_seqs"], [69, 6, 1, "", "negative_gilist"], [69, 6, 1, "", "negative_seqidlist"], [69, 6, 1, "", "num_alignments"], [69, 6, 1, "", "num_descriptions"], [69, 6, 1, "", "num_threads"], [69, 6, 1, "", "out"], [69, 6, 1, "", "outfmt"], [69, 6, 1, "", "parse_deflines"], [69, 6, 1, "", "qcov_hsp_perc"], [69, 6, 1, "", "query"], [69, 6, 1, "", "query_loc"], [69, 6, 1, "", "remote"], [69, 6, 1, "", "searchsp"], [69, 6, 1, "", "seg"], [69, 6, 1, "", "seqidlist"], [69, 6, 1, "", "show_gis"], [69, 6, 1, "", "soft_masking"], [69, 6, 1, "", "subject"], [69, 6, 1, "", "subject_loc"], [69, 6, 1, "", "sum_statistics"], [69, 6, 1, "", "sum_stats"], [69, 6, 1, "", "task"], [69, 6, 1, "", "threshold"], [69, 6, 1, "", "ungapped"], [69, 6, 1, "", "use_sw_tback"], [69, 6, 1, "", "version"], [69, 6, 1, "", "window_size"], [69, 6, 1, "", "word_size"], [69, 6, 1, "", "xdrop_gap"], [69, 6, 1, "", "xdrop_gap_final"], [69, 6, 1, "", "xdrop_ungap"]], "Bio.Blast.Applications.NcbitblastxCommandline": [[69, 2, 1, "", "__init__"], [69, 6, 1, "", "best_hit_overhang"], [69, 6, 1, "", "best_hit_score_edge"], [69, 6, 1, "", "culling_limit"], [69, 6, 1, "", "db"], [69, 6, 1, "", "db_gencode"], [69, 6, 1, "", "db_hard_mask"], [69, 6, 1, "", "db_soft_mask"], [69, 6, 1, "", "dbsize"], [69, 6, 1, "", "entrez_query"], [69, 6, 1, "", "evalue"], [69, 6, 1, "", "export_search_strategy"], [69, 6, 1, "", "gapextend"], [69, 6, 1, "", "gapopen"], [69, 6, 1, "", "gilist"], [69, 6, 1, "", "h"], [69, 6, 1, "", "help"], [69, 6, 1, "", "html"], [69, 6, 1, "", "import_search_strategy"], [69, 6, 1, "", "lcase_masking"], [69, 6, 1, "", "line_length"], [69, 6, 1, "", "matrix"], [69, 6, 1, "", "max_hsps"], [69, 6, 1, "", "max_hsps_per_subject"], [69, 6, 1, "", "max_intron_length"], [69, 6, 1, "", "max_target_seqs"], [69, 6, 1, "", "negative_gilist"], [69, 6, 1, "", "negative_seqidlist"], [69, 6, 1, "", "num_alignments"], [69, 6, 1, "", "num_descriptions"], [69, 6, 1, "", "num_threads"], [69, 6, 1, "", "out"], [69, 6, 1, "", "outfmt"], [69, 6, 1, "", "parse_deflines"], [69, 6, 1, "", "qcov_hsp_perc"], [69, 6, 1, "", "query"], [69, 6, 1, "", "query_gencode"], [69, 6, 1, "", "query_loc"], [69, 6, 1, "", "remote"], [69, 6, 1, "", "searchsp"], [69, 6, 1, "", "seg"], [69, 6, 1, "", "seqidlist"], [69, 6, 1, "", "show_gis"], [69, 6, 1, "", "soft_masking"], [69, 6, 1, "", "strand"], [69, 6, 1, "", "subject"], [69, 6, 1, "", "subject_loc"], [69, 6, 1, "", "sum_statistics"], [69, 6, 1, "", "sum_stats"], [69, 6, 1, "", "threshold"], [69, 6, 1, "", "version"], [69, 6, 1, "", "window_size"], [69, 6, 1, "", "word_size"], [69, 6, 1, "", "xdrop_gap"], [69, 6, 1, "", "xdrop_gap_final"], [69, 6, 1, "", "xdrop_ungap"]], "Bio.Blast.CorruptedXMLError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__str__"]], "Bio.Blast.HSP": [[68, 2, 1, "", "__repr__"], [68, 2, 1, "", "__str__"]], "Bio.Blast.Hit": [[68, 5, 1, "", "__abstractmethods__"], [68, 2, 1, "", "__getitem__"], [68, 2, 1, "", "__repr__"], [68, 2, 1, "", "__str__"]], "Bio.Blast.NCBIWWW": [[70, 4, 1, "", "qblast"]], "Bio.Blast.NCBIXML": [[71, 3, 1, "", "Alignment"], [71, 3, 1, "", "Blast"], [71, 3, 1, "", "BlastParser"], [71, 3, 1, "", "DatabaseReport"], [71, 3, 1, "", "Description"], [71, 3, 1, "", "DescriptionExt"], [71, 3, 1, "", "DescriptionExtItem"], [71, 3, 1, "", "HSP"], [71, 3, 1, "", "Header"], [71, 3, 1, "", "MultipleAlignment"], [71, 3, 1, "", "PSIBlast"], [71, 3, 1, "", "Parameters"], [71, 3, 1, "", "Round"], [71, 4, 1, "", "fmt_"], [71, 4, 1, "", "parse"], [71, 4, 1, "", "read"]], "Bio.Blast.NCBIXML.Alignment": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__str__"]], "Bio.Blast.NCBIXML.Blast": [[71, 2, 1, "", "__init__"]], "Bio.Blast.NCBIXML.BlastParser": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "reset"], [71, 2, 1, "", "set_hit_accession"], [71, 2, 1, "", "set_hit_def"], [71, 2, 1, "", "set_hit_id"], [71, 2, 1, "", "set_hit_len"]], "Bio.Blast.NCBIXML.DatabaseReport": [[71, 2, 1, "", "__init__"]], "Bio.Blast.NCBIXML.Description": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__str__"]], "Bio.Blast.NCBIXML.DescriptionExt": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "append_item"]], "Bio.Blast.NCBIXML.DescriptionExtItem": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__str__"]], "Bio.Blast.NCBIXML.HSP": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "__str__"]], "Bio.Blast.NCBIXML.Header": [[71, 2, 1, "", "__init__"]], "Bio.Blast.NCBIXML.MultipleAlignment": [[71, 2, 1, "", "__init__"], [71, 2, 1, "", "to_generic"]], "Bio.Blast.NCBIXML.PSIBlast": [[71, 2, 1, "", "__init__"]], "Bio.Blast.NCBIXML.Parameters": [[71, 2, 1, "", "__init__"]], "Bio.Blast.NCBIXML.Round": [[71, 2, 1, "", "__init__"]], "Bio.Blast.NotXMLError": [[68, 2, 1, "", "__init__"], [68, 2, 1, "", "__str__"]], "Bio.Blast.Record": [[68, 2, 1, "", "__contains__"], [68, 2, 1, "", "__getitem__"], [68, 2, 1, "", "__init__"], [68, 2, 1, "", "__repr__"], [68, 2, 1, "", "__str__"], [68, 2, 1, "", "index"], [68, 2, 1, "", "keys"]], "Bio.Blast.Records": [[68, 5, 1, "", "__abstractmethods__"], [68, 2, 1, "", "__enter__"], [68, 2, 1, "", "__exit__"], [68, 2, 1, "", "__getitem__"], [68, 2, 1, "", "__init__"], [68, 2, 1, "", "__iter__"], [68, 2, 1, "", "__next__"], [68, 2, 1, "", "__repr__"], [68, 2, 1, "", "__str__"], [68, 6, 1, "", "data"]], "Bio.CAPS": [[72, 1, 1, "", "AlignmentHasDifferentLengthsError"], [72, 3, 1, "", "CAPSMap"], [72, 3, 1, "", "DifferentialCutsite"]], "Bio.CAPS.CAPSMap": [[72, 2, 1, "", "__init__"]], "Bio.CAPS.DifferentialCutsite": [[72, 2, 1, "", "__init__"]], "Bio.Cluster": [[73, 3, 1, "", "Node"], [73, 3, 1, "", "Record"], [73, 3, 1, "", "Tree"], [73, 4, 1, "", "clustercentroids"], [73, 4, 1, "", "clusterdistance"], [73, 4, 1, "", "distancematrix"], [73, 4, 1, "", "kcluster"], [73, 4, 1, "", "kmedoids"], [73, 4, 1, "", "pca"], [73, 4, 1, "", "read"], [73, 4, 1, "", "somcluster"], [73, 4, 1, "", "treecluster"]], "Bio.Cluster.Record": [[73, 2, 1, "", "__init__"], [73, 2, 1, "", "clustercentroids"], [73, 2, 1, "", "clusterdistance"], [73, 2, 1, "", "distancematrix"], [73, 2, 1, "", "kcluster"], [73, 2, 1, "", "save"], [73, 2, 1, "", "somcluster"], [73, 2, 1, "", "treecluster"]], "Bio.Cluster.Tree": [[73, 2, 1, "", "cut"], [73, 2, 1, "", "sort"]], "Bio.Compass": [[74, 3, 1, "", "Record"], [74, 4, 1, "", "parse"], [74, 4, 1, "", "read"]], "Bio.Compass.Record": [[74, 2, 1, "", "__init__"], [74, 2, 1, "", "hit_coverage"], [74, 2, 1, "", "query_coverage"]], "Bio.Data": [[76, 0, 0, "-", "CodonTable"], [77, 0, 0, "-", "IUPACData"], [78, 0, 0, "-", "PDBData"]], "Bio.Data.CodonTable": [[76, 3, 1, "", "AmbiguousCodonTable"], [76, 3, 1, "", "AmbiguousForwardTable"], [76, 3, 1, "", "CodonTable"], [76, 3, 1, "", "NCBICodonTable"], [76, 3, 1, "", "NCBICodonTableDNA"], [76, 3, 1, "", "NCBICodonTableRNA"], [76, 1, 1, "", "TranslationError"], [76, 4, 1, "", "list_ambiguous_codons"], [76, 4, 1, "", "list_possible_proteins"], [76, 4, 1, "", "make_back_table"], [76, 4, 1, "", "register_ncbi_table"]], "Bio.Data.CodonTable.AmbiguousCodonTable": [[76, 2, 1, "", "__getattr__"], [76, 2, 1, "", "__init__"]], "Bio.Data.CodonTable.AmbiguousForwardTable": [[76, 2, 1, "", "__contains__"], [76, 2, 1, "", "__getitem__"], [76, 2, 1, "", "__init__"], [76, 2, 1, "", "get"]], "Bio.Data.CodonTable.CodonTable": [[76, 5, 1, "", "__annotations__"], [76, 2, 1, "", "__init__"], [76, 2, 1, "", "__str__"], [76, 5, 1, "", "back_table"], [76, 5, 1, "", "forward_table"], [76, 5, 1, "", "start_codons"], [76, 5, 1, "", "stop_codons"]], "Bio.Data.CodonTable.NCBICodonTable": [[76, 5, 1, "", "__annotations__"], [76, 2, 1, "", "__init__"], [76, 2, 1, "", "__repr__"], [76, 5, 1, "", "nucleotide_alphabet"], [76, 5, 1, "", "protein_alphabet"]], "Bio.Data.CodonTable.NCBICodonTableDNA": [[76, 5, 1, "", "nucleotide_alphabet"]], "Bio.Data.CodonTable.NCBICodonTableRNA": [[76, 5, 1, "", "nucleotide_alphabet"]], "Bio.Emboss": [[80, 0, 0, "-", "Applications"], [81, 0, 0, "-", "Primer3"], [82, 0, 0, "-", "PrimerSearch"]], "Bio.Emboss.Applications": [[80, 3, 1, "", "DiffseqCommandline"], [80, 3, 1, "", "EInvertedCommandline"], [80, 3, 1, "", "ETandemCommandline"], [80, 3, 1, "", "Est2GenomeCommandline"], [80, 3, 1, "", "FConsenseCommandline"], [80, 3, 1, "", "FDNADistCommandline"], [80, 3, 1, "", "FDNAParsCommandline"], [80, 3, 1, "", "FNeighborCommandline"], [80, 3, 1, "", "FProtDistCommandline"], [80, 3, 1, "", "FProtParsCommandline"], [80, 3, 1, "", "FSeqBootCommandline"], [80, 3, 1, "", "FTreeDistCommandline"], [80, 3, 1, "", "FuzznucCommandline"], [80, 3, 1, "", "FuzzproCommandline"], [80, 3, 1, "", "IepCommandline"], [80, 3, 1, "", "NeedleCommandline"], [80, 3, 1, "", "NeedleallCommandline"], [80, 3, 1, "", "PalindromeCommandline"], [80, 3, 1, "", "Primer3Commandline"], [80, 3, 1, "", "PrimerSearchCommandline"], [80, 3, 1, "", "SeqmatchallCommandline"], [80, 3, 1, "", "SeqretCommandline"], [80, 3, 1, "", "StretcherCommandline"], [80, 3, 1, "", "TranalignCommandline"], [80, 3, 1, "", "WaterCommandline"]], "Bio.Emboss.Applications.DiffseqCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "aoutfeat"], [80, 6, 1, "", "asequence"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "boutfeat"], [80, 6, 1, "", "bsequence"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "rformat"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"], [80, 6, 1, "", "wordsize"]], "Bio.Emboss.Applications.EInvertedCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "gap"], [80, 6, 1, "", "help"], [80, 6, 1, "", "match"], [80, 6, 1, "", "maxrepeat"], [80, 6, 1, "", "mismatch"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "threshold"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.ETandemCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "maxrepeat"], [80, 6, 1, "", "minrepeat"], [80, 6, 1, "", "mismatch"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "rformat"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "threshold"], [80, 6, 1, "", "uniform"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.Est2GenomeCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "align"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "best"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "est"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "gappenalty"], [80, 6, 1, "", "genome"], [80, 6, 1, "", "help"], [80, 6, 1, "", "intronpenalty"], [80, 6, 1, "", "match"], [80, 6, 1, "", "minscore"], [80, 6, 1, "", "mismatch"], [80, 6, 1, "", "mode"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "reverse"], [80, 6, 1, "", "seed"], [80, 6, 1, "", "shuffle"], [80, 6, 1, "", "space"], [80, 6, 1, "", "splice"], [80, 6, 1, "", "splicepenalty"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"], [80, 6, 1, "", "width"]], "Bio.Emboss.Applications.FConsenseCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "intreefile"], [80, 6, 1, "", "method"], [80, 6, 1, "", "mlfrac"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "outgrno"], [80, 6, 1, "", "outtreefile"], [80, 6, 1, "", "root"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "trout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.FDNADistCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "basefreq"], [80, 6, 1, "", "categories"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "freqsfrom"], [80, 6, 1, "", "gamma"], [80, 6, 1, "", "gammacoefficient"], [80, 6, 1, "", "help"], [80, 6, 1, "", "invarfrac"], [80, 6, 1, "", "lower"], [80, 6, 1, "", "method"], [80, 6, 1, "", "ncategories"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "rate"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "ttratio"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"], [80, 6, 1, "", "weights"]], "Bio.Emboss.Applications.FDNAParsCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "dotdiff"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "intreefile"], [80, 6, 1, "", "maxtrees"], [80, 6, 1, "", "njumble"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "outgrno"], [80, 6, 1, "", "outtreefile"], [80, 6, 1, "", "rearrange"], [80, 6, 1, "", "seed"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "thorough"], [80, 6, 1, "", "thresh"], [80, 6, 1, "", "threshold"], [80, 6, 1, "", "transversion"], [80, 6, 1, "", "trout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"], [80, 6, 1, "", "weights"]], "Bio.Emboss.Applications.FNeighborCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "datafile"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "jumble"], [80, 6, 1, "", "matrixtype"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "outgrno"], [80, 6, 1, "", "outtreefile"], [80, 6, 1, "", "progress"], [80, 6, 1, "", "seed"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "treeprint"], [80, 6, 1, "", "treetype"], [80, 6, 1, "", "trout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.FProtDistCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "aacateg"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "basefreq"], [80, 6, 1, "", "catergories"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "ease"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "gamma"], [80, 6, 1, "", "gammacoefficient"], [80, 6, 1, "", "help"], [80, 6, 1, "", "invarcoefficient"], [80, 6, 1, "", "method"], [80, 6, 1, "", "ncategories"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "rate"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "ttratio"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"], [80, 6, 1, "", "weights"], [80, 6, 1, "", "whichcode"]], "Bio.Emboss.Applications.FProtParsCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "dotdiff"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "intreefile"], [80, 6, 1, "", "njumble"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "outgrno"], [80, 6, 1, "", "outtreefile"], [80, 6, 1, "", "seed"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "thresh"], [80, 6, 1, "", "threshold"], [80, 6, 1, "", "trout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"], [80, 6, 1, "", "weights"], [80, 6, 1, "", "whichcode"]], "Bio.Emboss.Applications.FSeqBootCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "blocksize"], [80, 6, 1, "", "catergories"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "dotdiff"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "fracsample"], [80, 6, 1, "", "help"], [80, 6, 1, "", "jusweights"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "regular"], [80, 6, 1, "", "reps"], [80, 6, 1, "", "rewriteformat"], [80, 6, 1, "", "seed"], [80, 6, 1, "", "seqtype"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "test"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"], [80, 6, 1, "", "weights"]], "Bio.Emboss.Applications.FTreeDistCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "dtype"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "intreefile"], [80, 6, 1, "", "noroot"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "outgrno"], [80, 6, 1, "", "pairing"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "style"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.FuzznucCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "complement"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "pattern"], [80, 6, 1, "", "pmismatch"], [80, 6, 1, "", "rformat"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.FuzzproCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "pattern"], [80, 6, 1, "", "pmismatch"], [80, 6, 1, "", "rformat"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.IepCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "amino"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "carboxyl"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "disulphides"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "lysinemodified"], [80, 6, 1, "", "notermini"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.NeedleCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "aformat"], [80, 6, 1, "", "asequence"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "brief"], [80, 6, 1, "", "bsequence"], [80, 6, 1, "", "datafile"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "endextend"], [80, 6, 1, "", "endopen"], [80, 6, 1, "", "endweight"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "gapextend"], [80, 6, 1, "", "gapopen"], [80, 6, 1, "", "help"], [80, 6, 1, "", "nobrief"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "similarity"], [80, 6, 1, "", "snucleotide"], [80, 6, 1, "", "sprotein"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.NeedleallCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "aformat"], [80, 6, 1, "", "asequence"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "brief"], [80, 6, 1, "", "bsequence"], [80, 6, 1, "", "datafile"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "endextend"], [80, 6, 1, "", "endopen"], [80, 6, 1, "", "endweight"], [80, 6, 1, "", "error"], [80, 6, 1, "", "errorfile"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "gapextend"], [80, 6, 1, "", "gapopen"], [80, 6, 1, "", "help"], [80, 6, 1, "", "minscore"], [80, 6, 1, "", "nobrief"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "similarity"], [80, 6, 1, "", "snucleotide"], [80, 6, 1, "", "sprotein"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.PalindromeCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "gaplimit"], [80, 6, 1, "", "help"], [80, 6, 1, "", "maxpallen"], [80, 6, 1, "", "minpallen"], [80, 6, 1, "", "nummismatches"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "overlap"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.Primer3Commandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "dnaconc"], [80, 6, 1, "", "error"], [80, 6, 1, "", "excludedregion"], [80, 6, 1, "", "explainflag"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "forwardinput"], [80, 6, 1, "", "gcclamp"], [80, 6, 1, "", "help"], [80, 6, 1, "", "hybridprobe"], [80, 6, 1, "", "includedregion"], [80, 6, 1, "", "maxdifftm"], [80, 6, 1, "", "maxgc"], [80, 6, 1, "", "maxmispriming"], [80, 6, 1, "", "maxpolyx"], [80, 6, 1, "", "maxsize"], [80, 6, 1, "", "maxtm"], [80, 6, 1, "", "mingc"], [80, 6, 1, "", "minsize"], [80, 6, 1, "", "mintm"], [80, 6, 1, "", "mishyblibraryfile"], [80, 6, 1, "", "mispriminglibraryfile"], [80, 6, 1, "", "numreturn"], [80, 6, 1, "", "oanyself"], [80, 6, 1, "", "odnaconc"], [80, 6, 1, "", "oendself"], [80, 6, 1, "", "oexcludedregion"], [80, 6, 1, "", "ogcmax"], [80, 6, 1, "", "ogcmin"], [80, 6, 1, "", "ogcopt"], [80, 6, 1, "", "ogcpercent"], [80, 6, 1, "", "oligoinput"], [80, 6, 1, "", "omaxsize"], [80, 6, 1, "", "ominsize"], [80, 6, 1, "", "omishybmax"], [80, 6, 1, "", "opolyxmax"], [80, 6, 1, "", "options"], [80, 6, 1, "", "opttm"], [80, 6, 1, "", "osaltconc"], [80, 6, 1, "", "osize"], [80, 6, 1, "", "osizeopt"], [80, 6, 1, "", "otm"], [80, 6, 1, "", "otmmax"], [80, 6, 1, "", "otmmin"], [80, 6, 1, "", "otmopt"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "prange"], [80, 6, 1, "", "psizeopt"], [80, 6, 1, "", "ptmmax"], [80, 6, 1, "", "ptmmin"], [80, 6, 1, "", "ptmopt"], [80, 6, 1, "", "reverseinput"], [80, 6, 1, "", "saltconc"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "target"], [80, 6, 1, "", "task"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.PrimerSearchCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "infile"], [80, 6, 1, "", "mismatchpercent"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "seqall"], [80, 6, 1, "", "snucleotide"], [80, 6, 1, "", "sprotein"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.SeqmatchallCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "aformat"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"], [80, 6, 1, "", "wordsize"]], "Bio.Emboss.Applications.SeqretCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "options"], [80, 6, 1, "", "osformat"], [80, 6, 1, "", "outseq"], [80, 6, 1, "", "sequence"], [80, 6, 1, "", "sformat"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.StretcherCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "aformat"], [80, 6, 1, "", "asequence"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "bsequence"], [80, 6, 1, "", "datafile"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "gapextend"], [80, 6, 1, "", "gapopen"], [80, 6, 1, "", "help"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "snucleotide"], [80, 6, 1, "", "sprotein"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.TranalignCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "asequence"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "bsequence"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "help"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "outseq"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "table"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Applications.WaterCommandline": [[80, 2, 1, "", "__init__"], [80, 6, 1, "", "aformat"], [80, 6, 1, "", "asequence"], [80, 6, 1, "", "auto"], [80, 6, 1, "", "brief"], [80, 6, 1, "", "bsequence"], [80, 6, 1, "", "datafile"], [80, 6, 1, "", "debug"], [80, 6, 1, "", "die"], [80, 6, 1, "", "error"], [80, 6, 1, "", "filter"], [80, 6, 1, "", "gapextend"], [80, 6, 1, "", "gapopen"], [80, 6, 1, "", "help"], [80, 6, 1, "", "nobrief"], [80, 6, 1, "", "options"], [80, 6, 1, "", "outfile"], [80, 6, 1, "", "similarity"], [80, 6, 1, "", "snucleotide"], [80, 6, 1, "", "sprotein"], [80, 6, 1, "", "stdout"], [80, 6, 1, "", "verbose"], [80, 6, 1, "", "warning"]], "Bio.Emboss.Primer3": [[81, 3, 1, "", "Primers"], [81, 3, 1, "", "Record"], [81, 4, 1, "", "parse"], [81, 4, 1, "", "read"]], "Bio.Emboss.Primer3.Primers": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__len__"]], "Bio.Emboss.Primer3.Record": [[81, 2, 1, "", "__init__"]], "Bio.Emboss.PrimerSearch": [[82, 3, 1, "", "Amplifier"], [82, 3, 1, "", "InputRecord"], [82, 3, 1, "", "OutputRecord"], [82, 4, 1, "", "read"]], "Bio.Emboss.PrimerSearch.Amplifier": [[82, 2, 1, "", "__init__"]], "Bio.Emboss.PrimerSearch.InputRecord": [[82, 2, 1, "", "__init__"], [82, 2, 1, "", "__str__"], [82, 2, 1, "", "add_primer_set"]], "Bio.Emboss.PrimerSearch.OutputRecord": [[82, 2, 1, "", "__init__"]], "Bio.Entrez": [[84, 0, 0, "-", "Parser"], [83, 4, 1, "", "ecitmatch"], [83, 4, 1, "", "efetch"], [83, 4, 1, "", "egquery"], [83, 4, 1, "", "einfo"], [83, 4, 1, "", "elink"], [83, 4, 1, "", "epost"], [83, 4, 1, "", "esearch"], [83, 4, 1, "", "espell"], [83, 4, 1, "", "esummary"], [83, 4, 1, "", "parse"], [83, 4, 1, "", "read"]], "Bio.Entrez.Parser": [[84, 1, 1, "", "CorruptedXMLError"], [84, 3, 1, "", "DataHandler"], [84, 3, 1, "", "DataHandlerMeta"], [84, 3, 1, "", "DictionaryElement"], [84, 3, 1, "", "ErrorElement"], [84, 3, 1, "", "IntegerElement"], [84, 3, 1, "", "ListElement"], [84, 3, 1, "", "NoneElement"], [84, 1, 1, "", "NotXMLError"], [84, 3, 1, "", "OrderedListElement"], [84, 3, 1, "", "StringElement"], [84, 1, 1, "", "ValidationError"]], "Bio.Entrez.Parser.CorruptedXMLError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__str__"]], "Bio.Entrez.Parser.DataHandler": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "characterDataHandlerEscape"], [84, 2, 1, "", "characterDataHandlerRaw"], [84, 2, 1, "", "elementDecl"], [84, 2, 1, "", "endElementHandler"], [84, 2, 1, "", "endErrorElementHandler"], [84, 2, 1, "", "endIntegerElementHandler"], [84, 2, 1, "", "endNamespaceDeclHandler"], [84, 2, 1, "", "endRawElementHandler"], [84, 2, 1, "", "endSkipElementHandler"], [84, 2, 1, "", "endStringElementHandler"], [84, 2, 1, "", "externalEntityRefHandler"], [84, 5, 1, "", "global_dtd_dir"], [84, 5, 1, "", "global_xsd_dir"], [84, 2, 1, "", "handleMissingDocumentDefinition"], [84, 5, 1, "", "local_dtd_dir"], [84, 5, 1, "", "local_xsd_dir"], [84, 2, 1, "", "open_dtd_file"], [84, 2, 1, "", "open_xsd_file"], [84, 2, 1, "", "parse"], [84, 2, 1, "", "parse_xsd"], [84, 2, 1, "", "read"], [84, 2, 1, "", "save_dtd_file"], [84, 2, 1, "", "save_xsd_file"], [84, 2, 1, "", "schemaHandler"], [84, 2, 1, "", "skipCharacterDataHandler"], [84, 2, 1, "", "startElementHandler"], [84, 2, 1, "", "startNamespaceDeclHandler"], [84, 2, 1, "", "startRawElementHandler"], [84, 2, 1, "", "startSkipElementHandler"], [84, 2, 1, "", "xmlDeclHandler"]], "Bio.Entrez.Parser.DataHandlerMeta": [[84, 2, 1, "", "__init__"], [84, 6, 1, "", "directory"]], "Bio.Entrez.Parser.DictionaryElement": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__repr__"], [84, 2, 1, "", "store"]], "Bio.Entrez.Parser.ErrorElement": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"], [84, 2, 1, "", "__repr__"]], "Bio.Entrez.Parser.IntegerElement": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"], [84, 2, 1, "", "__repr__"]], "Bio.Entrez.Parser.ListElement": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__repr__"], [84, 2, 1, "", "store"]], "Bio.Entrez.Parser.NoneElement": [[84, 2, 1, "", "__eq__"], [84, 5, 1, "", "__hash__"], [84, 2, 1, "", "__init__"], [84, 2, 1, "", "__ne__"], [84, 2, 1, "", "__repr__"]], "Bio.Entrez.Parser.NotXMLError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__str__"]], "Bio.Entrez.Parser.OrderedListElement": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__repr__"], [84, 2, 1, "", "store"]], "Bio.Entrez.Parser.StringElement": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__new__"], [84, 2, 1, "", "__repr__"]], "Bio.Entrez.Parser.ValidationError": [[84, 2, 1, "", "__init__"], [84, 2, 1, "", "__str__"]], "Bio.ExPASy": [[86, 0, 0, "-", "Enzyme"], [87, 0, 0, "-", "Prodoc"], [88, 0, 0, "-", "Prosite"], [89, 0, 0, "-", "ScanProsite"], [90, 0, 0, "-", "cellosaurus"], [85, 4, 1, "", "get_prodoc_entry"], [85, 4, 1, "", "get_prosite_entry"], [85, 4, 1, "", "get_prosite_raw"], [85, 4, 1, "", "get_sprot_raw"]], "Bio.ExPASy.Enzyme": [[86, 3, 1, "", "Record"], [86, 4, 1, "", "parse"], [86, 4, 1, "", "read"]], "Bio.ExPASy.Enzyme.Record": [[86, 2, 1, "", "__init__"], [86, 2, 1, "", "__repr__"], [86, 2, 1, "", "__str__"]], "Bio.ExPASy.Prodoc": [[87, 3, 1, "", "Record"], [87, 3, 1, "", "Reference"], [87, 4, 1, "", "parse"], [87, 4, 1, "", "read"]], "Bio.ExPASy.Prodoc.Record": [[87, 2, 1, "", "__init__"]], "Bio.ExPASy.Prodoc.Reference": [[87, 2, 1, "", "__init__"]], "Bio.ExPASy.Prosite": [[88, 3, 1, "", "Record"], [88, 4, 1, "", "parse"], [88, 4, 1, "", "read"]], "Bio.ExPASy.Prosite.Record": [[88, 2, 1, "", "__init__"]], "Bio.ExPASy.ScanProsite": [[89, 3, 1, "", "ContentHandler"], [89, 3, 1, "", "Parser"], [89, 3, 1, "", "Record"], [89, 4, 1, "", "read"], [89, 4, 1, "", "scan"]], "Bio.ExPASy.ScanProsite.ContentHandler": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "characters"], [89, 2, 1, "", "endElement"], [89, 5, 1, "", "integers"], [89, 2, 1, "", "startElement"], [89, 5, 1, "", "strings"]], "Bio.ExPASy.ScanProsite.Parser": [[89, 2, 1, "", "__init__"], [89, 2, 1, "", "feed"]], "Bio.ExPASy.ScanProsite.Record": [[89, 2, 1, "", "__init__"]], "Bio.ExPASy.cellosaurus": [[90, 3, 1, "", "Record"], [90, 4, 1, "", "parse"], [90, 4, 1, "", "read"]], "Bio.ExPASy.cellosaurus.Record": [[90, 2, 1, "", "__init__"], [90, 2, 1, "", "__repr__"], [90, 2, 1, "", "__str__"]], "Bio.File": [[91, 4, 1, "", "as_handle"]], "Bio.GenBank": [[92, 3, 1, "", "FeatureParser"], [92, 3, 1, "", "Iterator"], [92, 1, 1, "", "ParserFailureError"], [93, 0, 0, "-", "Record"], [92, 3, 1, "", "RecordParser"], [94, 0, 0, "-", "Scanner"], [92, 4, 1, "", "parse"], [92, 4, 1, "", "read"], [95, 0, 0, "-", "utils"]], "Bio.GenBank.FeatureParser": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "parse"]], "Bio.GenBank.Iterator": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "__iter__"], [92, 2, 1, "", "__next__"]], "Bio.GenBank.Record": [[93, 3, 1, "", "Feature"], [93, 3, 1, "", "Qualifier"], [93, 3, 1, "", "Record"], [93, 3, 1, "", "Reference"]], "Bio.GenBank.Record.Feature": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__repr__"], [93, 2, 1, "", "__str__"]], "Bio.GenBank.Record.Qualifier": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__repr__"], [93, 2, 1, "", "__str__"]], "Bio.GenBank.Record.Record": [[93, 5, 1, "", "BASE_FEATURE_FORMAT"], [93, 5, 1, "", "BASE_FORMAT"], [93, 5, 1, "", "GB_BASE_INDENT"], [93, 5, 1, "", "GB_FEATURE_INDENT"], [93, 5, 1, "", "GB_FEATURE_INTERNAL_INDENT"], [93, 5, 1, "", "GB_INTERNAL_INDENT"], [93, 5, 1, "", "GB_LINE_LENGTH"], [93, 5, 1, "", "GB_OTHER_INTERNAL_INDENT"], [93, 5, 1, "", "GB_SEQUENCE_INDENT"], [93, 5, 1, "", "INTERNAL_FEATURE_FORMAT"], [93, 5, 1, "", "INTERNAL_FORMAT"], [93, 5, 1, "", "OTHER_INTERNAL_FORMAT"], [93, 5, 1, "", "SEQUENCE_FORMAT"], [93, 2, 1, "", "__init__"], [93, 2, 1, "", "__str__"]], "Bio.GenBank.Record.Reference": [[93, 2, 1, "", "__init__"], [93, 2, 1, "", "__str__"]], "Bio.GenBank.RecordParser": [[92, 2, 1, "", "__init__"], [92, 2, 1, "", "parse"]], "Bio.GenBank.Scanner": [[94, 3, 1, "", "EmblScanner"], [94, 3, 1, "", "GenBankScanner"], [94, 3, 1, "", "InsdcScanner"]], "Bio.GenBank.Scanner.EmblScanner": [[94, 5, 1, "", "EMBL_INDENT"], [94, 5, 1, "", "EMBL_SPACER"], [94, 5, 1, "", "FEATURE_END_MARKERS"], [94, 5, 1, "", "FEATURE_QUALIFIER_INDENT"], [94, 5, 1, "", "FEATURE_QUALIFIER_SPACER"], [94, 5, 1, "", "FEATURE_START_MARKERS"], [94, 5, 1, "", "HEADER_WIDTH"], [94, 5, 1, "", "RECORD_START"], [94, 5, 1, "", "SEQUENCE_HEADERS"], [94, 2, 1, "", "parse_footer"]], "Bio.GenBank.Scanner.GenBankScanner": [[94, 5, 1, "", "FEATURE_END_MARKERS"], [94, 5, 1, "", "FEATURE_QUALIFIER_INDENT"], [94, 5, 1, "", "FEATURE_QUALIFIER_SPACER"], [94, 5, 1, "", "FEATURE_START_MARKERS"], [94, 5, 1, "", "GENBANK_INDENT"], [94, 5, 1, "", "GENBANK_SPACER"], [94, 5, 1, "", "HEADER_WIDTH"], [94, 5, 1, "", "RECORD_START"], [94, 5, 1, "", "SEQUENCE_HEADERS"], [94, 5, 1, "", "STRUCTURED_COMMENT_DELIM"], [94, 5, 1, "", "STRUCTURED_COMMENT_END"], [94, 5, 1, "", "STRUCTURED_COMMENT_START"], [94, 5, 1, "", "__annotations__"], [94, 2, 1, "", "parse_footer"]], "Bio.GenBank.Scanner.InsdcScanner": [[94, 5, 1, "", "FEATURE_END_MARKERS"], [94, 5, 1, "", "FEATURE_QUALIFIER_INDENT"], [94, 5, 1, "", "FEATURE_QUALIFIER_SPACER"], [94, 5, 1, "", "FEATURE_START_MARKERS"], [94, 5, 1, "", "HEADER_WIDTH"], [94, 5, 1, "", "RECORD_START"], [94, 5, 1, "", "SEQUENCE_HEADERS"], [94, 2, 1, "", "__init__"], [94, 2, 1, "", "feed"], [94, 2, 1, "", "find_start"], [94, 2, 1, "", "parse"], [94, 2, 1, "", "parse_cds_features"], [94, 2, 1, "", "parse_feature"], [94, 2, 1, "", "parse_features"], [94, 2, 1, "", "parse_footer"], [94, 2, 1, "", "parse_header"], [94, 2, 1, "", "parse_records"], [94, 2, 1, "", "set_handle"]], "Bio.GenBank.utils": [[95, 3, 1, "", "FeatureValueCleaner"]], "Bio.GenBank.utils.FeatureValueCleaner": [[95, 2, 1, "", "__init__"], [95, 2, 1, "", "__repr__"], [95, 2, 1, "", "clean_value"], [95, 5, 1, "", "keys_to_process"]], "Bio.Geo": [[97, 0, 0, "-", "Record"], [96, 4, 1, "", "parse"]], "Bio.Geo.Record": [[97, 3, 1, "", "Record"], [97, 4, 1, "", "out_block"]], "Bio.Geo.Record.Record": [[97, 2, 1, "", "__init__"], [97, 2, 1, "", "__str__"]], "Bio.Graphics": [[99, 0, 0, "-", "BasicChromosome"], [100, 0, 0, "-", "ColorSpiral"], [101, 0, 0, "-", "Comparative"], [102, 0, 0, "-", "DisplayRepresentation"], [103, 0, 0, "-", "Distribution"], [104, 0, 0, "-", "GenomeDiagram"], [105, 0, 0, "-", "KGML_vis"]], "Bio.Graphics.BasicChromosome": [[99, 3, 1, "", "AnnotatedChromosomeSegment"], [99, 3, 1, "", "Chromosome"], [99, 3, 1, "", "ChromosomeSegment"], [99, 3, 1, "", "Organism"], [99, 3, 1, "", "SpacerSegment"], [99, 3, 1, "", "TelomereSegment"]], "Bio.Graphics.BasicChromosome.AnnotatedChromosomeSegment": [[99, 2, 1, "", "__init__"]], "Bio.Graphics.BasicChromosome.Chromosome": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "draw"], [99, 2, 1, "", "subcomponent_size"]], "Bio.Graphics.BasicChromosome.ChromosomeSegment": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "draw"]], "Bio.Graphics.BasicChromosome.Organism": [[99, 2, 1, "", "__init__"], [99, 2, 1, "", "draw"]], "Bio.Graphics.BasicChromosome.SpacerSegment": [[99, 2, 1, "", "draw"]], "Bio.Graphics.BasicChromosome.TelomereSegment": [[99, 2, 1, "", "__init__"]], "Bio.Graphics.ColorSpiral": [[100, 3, 1, "", "ColorSpiral"], [100, 4, 1, "", "get_color_dict"], [100, 4, 1, "", "get_colors"]], "Bio.Graphics.ColorSpiral.ColorSpiral": [[100, 2, 1, "", "__init__"], [100, 6, 1, "", "a"], [100, 6, 1, "", "b"], [100, 2, 1, "", "get_colors"], [100, 6, 1, "", "jitter"], [100, 6, 1, "", "v_final"], [100, 6, 1, "", "v_init"]], "Bio.Graphics.Comparative": [[101, 3, 1, "", "ComparativeScatterPlot"]], "Bio.Graphics.Comparative.ComparativeScatterPlot": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "draw_to_file"]], "Bio.Graphics.DisplayRepresentation": [[102, 3, 1, "", "ChromosomeCounts"]], "Bio.Graphics.DisplayRepresentation.ChromosomeCounts": [[102, 2, 1, "", "__init__"], [102, 2, 1, "", "add_count"], [102, 2, 1, "", "add_label"], [102, 2, 1, "", "fill_chromosome"], [102, 2, 1, "", "get_segment_info"], [102, 2, 1, "", "scale_segment_value"], [102, 2, 1, "", "set_scale"]], "Bio.Graphics.Distribution": [[103, 3, 1, "", "BarChartDistribution"], [103, 3, 1, "", "DistributionPage"], [103, 3, 1, "", "LineDistribution"]], "Bio.Graphics.Distribution.BarChartDistribution": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "draw"]], "Bio.Graphics.Distribution.DistributionPage": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "draw"]], "Bio.Graphics.Distribution.LineDistribution": [[103, 2, 1, "", "__init__"], [103, 2, 1, "", "draw"]], "Bio.Graphics.GenomeDiagram": [[104, 3, 1, "", "ColorTranslator"], [104, 3, 1, "", "CrossLink"], [104, 3, 1, "", "Diagram"], [104, 3, 1, "", "Feature"], [104, 3, 1, "", "FeatureSet"], [104, 3, 1, "", "GraphData"], [104, 3, 1, "", "GraphSet"], [104, 3, 1, "", "Track"]], "Bio.Graphics.GenomeDiagram.ColorTranslator": [[104, 2, 1, "", "__init__"], [104, 2, 1, "", "artemis_color"], [104, 2, 1, "", "float1_color"], [104, 2, 1, "", "get_artemis_colorscheme"], [104, 2, 1, "", "get_colorscheme"], [104, 2, 1, "", "int255_color"], [104, 2, 1, "", "read_colorscheme"], [104, 2, 1, "", "scheme_color"], [104, 2, 1, "", "translate"]], "Bio.Graphics.GenomeDiagram.CrossLink": [[104, 2, 1, "", "__init__"], [104, 6, 1, "", "endA"], [104, 6, 1, "", "endB"], [104, 6, 1, "", "startA"], [104, 6, 1, "", "startB"]], "Bio.Graphics.GenomeDiagram.Diagram": [[104, 2, 1, "", "__getitem__"], [104, 2, 1, "", "__init__"], [104, 2, 1, "", "__str__"], [104, 2, 1, "", "add_track"], [104, 2, 1, "", "del_track"], [104, 2, 1, "", "draw"], [104, 2, 1, "", "get_drawn_levels"], [104, 2, 1, "", "get_levels"], [104, 2, 1, "", "get_tracks"], [104, 2, 1, "", "move_track"], [104, 2, 1, "", "new_track"], [104, 2, 1, "", "range"], [104, 2, 1, "", "renumber_tracks"], [104, 2, 1, "", "set_all_tracks"], [104, 2, 1, "", "write"], [104, 2, 1, "", "write_to_string"]], "Bio.Graphics.GenomeDiagram.Feature": [[104, 2, 1, "", "__getattr__"], [104, 2, 1, "", "__init__"], [104, 2, 1, "", "get_feature"], [104, 2, 1, "", "set_color"], [104, 2, 1, "", "set_colour"], [104, 2, 1, "", "set_feature"]], "Bio.Graphics.GenomeDiagram.FeatureSet": [[104, 2, 1, "", "__getitem__"], [104, 2, 1, "", "__init__"], [104, 2, 1, "", "__len__"], [104, 2, 1, "", "__str__"], [104, 2, 1, "", "add_feature"], [104, 2, 1, "", "del_feature"], [104, 2, 1, "", "get_features"], [104, 2, 1, "", "get_ids"], [104, 2, 1, "", "range"], [104, 2, 1, "", "set_all_features"], [104, 2, 1, "", "to_string"]], "Bio.Graphics.GenomeDiagram.GraphData": [[104, 2, 1, "", "__getitem__"], [104, 2, 1, "", "__init__"], [104, 2, 1, "", "__len__"], [104, 2, 1, "", "__str__"], [104, 2, 1, "", "add_point"], [104, 2, 1, "", "get_data"], [104, 2, 1, "", "mean"], [104, 2, 1, "", "quartiles"], [104, 2, 1, "", "range"], [104, 2, 1, "", "set_data"], [104, 2, 1, "", "stdev"]], "Bio.Graphics.GenomeDiagram.GraphSet": [[104, 2, 1, "", "__getitem__"], [104, 2, 1, "", "__init__"], [104, 2, 1, "", "__len__"], [104, 2, 1, "", "__str__"], [104, 2, 1, "", "data_quartiles"], [104, 2, 1, "", "del_graph"], [104, 2, 1, "", "get_graphs"], [104, 2, 1, "", "get_ids"], [104, 2, 1, "", "new_graph"], [104, 2, 1, "", "range"], [104, 2, 1, "", "to_string"]], "Bio.Graphics.GenomeDiagram.Track": [[104, 2, 1, "", "__getitem__"], [104, 2, 1, "", "__init__"], [104, 2, 1, "", "__str__"], [104, 2, 1, "", "add_set"], [104, 2, 1, "", "del_set"], [104, 2, 1, "", "get_ids"], [104, 2, 1, "", "get_sets"], [104, 2, 1, "", "new_set"], [104, 2, 1, "", "range"], [104, 2, 1, "", "to_string"]], "Bio.Graphics.KGML_vis": [[105, 3, 1, "", "KGMLCanvas"], [105, 4, 1, "", "color_to_reportlab"], [105, 4, 1, "", "darken"], [105, 4, 1, "", "get_temp_imagefilename"]], "Bio.Graphics.KGML_vis.KGMLCanvas": [[105, 2, 1, "", "__init__"], [105, 2, 1, "", "draw"]], "Bio.HMM": [[107, 0, 0, "-", "DynamicProgramming"], [108, 0, 0, "-", "MarkovModel"], [109, 0, 0, "-", "Trainer"], [110, 0, 0, "-", "Utilities"]], "Bio.HMM.DynamicProgramming": [[107, 3, 1, "", "AbstractDPAlgorithms"], [107, 3, 1, "", "LogDPAlgorithms"], [107, 3, 1, "", "ScaledDPAlgorithms"]], "Bio.HMM.DynamicProgramming.AbstractDPAlgorithms": [[107, 2, 1, "", "__init__"], [107, 2, 1, "", "backward_algorithm"], [107, 2, 1, "", "forward_algorithm"]], "Bio.HMM.DynamicProgramming.LogDPAlgorithms": [[107, 2, 1, "", "__init__"]], "Bio.HMM.DynamicProgramming.ScaledDPAlgorithms": [[107, 2, 1, "", "__init__"]], "Bio.HMM.MarkovModel": [[108, 3, 1, "", "HiddenMarkovModel"], [108, 3, 1, "", "MarkovModelBuilder"]], "Bio.HMM.MarkovModel.HiddenMarkovModel": [[108, 2, 1, "", "__init__"], [108, 2, 1, "", "get_blank_emissions"], [108, 2, 1, "", "get_blank_transitions"], [108, 2, 1, "", "transitions_from"], [108, 2, 1, "", "transitions_to"], [108, 2, 1, "", "viterbi"]], "Bio.HMM.MarkovModel.MarkovModelBuilder": [[108, 5, 1, "", "DEFAULT_PSEUDO"], [108, 2, 1, "", "__init__"], [108, 2, 1, "", "allow_all_transitions"], [108, 2, 1, "", "allow_transition"], [108, 2, 1, "", "destroy_transition"], [108, 2, 1, "", "get_markov_model"], [108, 2, 1, "", "set_emission_pseudocount"], [108, 2, 1, "", "set_emission_score"], [108, 2, 1, "", "set_equal_probabilities"], [108, 2, 1, "", "set_initial_probabilities"], [108, 2, 1, "", "set_random_emission_probabilities"], [108, 2, 1, "", "set_random_initial_probabilities"], [108, 2, 1, "", "set_random_probabilities"], [108, 2, 1, "", "set_random_transition_probabilities"], [108, 2, 1, "", "set_transition_pseudocount"], [108, 2, 1, "", "set_transition_score"]], "Bio.HMM.Trainer": [[109, 3, 1, "", "AbstractTrainer"], [109, 3, 1, "", "BaumWelchTrainer"], [109, 3, 1, "", "KnownStateTrainer"], [109, 3, 1, "", "TrainingSequence"]], "Bio.HMM.Trainer.AbstractTrainer": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "estimate_params"], [109, 2, 1, "", "log_likelihood"], [109, 2, 1, "", "ml_estimator"]], "Bio.HMM.Trainer.BaumWelchTrainer": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "train"], [109, 2, 1, "", "update_emissions"], [109, 2, 1, "", "update_transitions"]], "Bio.HMM.Trainer.KnownStateTrainer": [[109, 2, 1, "", "__init__"], [109, 2, 1, "", "train"]], "Bio.HMM.Trainer.TrainingSequence": [[109, 2, 1, "", "__init__"]], "Bio.HMM.Utilities": [[110, 4, 1, "", "pretty_print_prediction"]], "Bio.KEGG": [[112, 0, 0, "-", "Compound"], [113, 0, 0, "-", "Enzyme"], [114, 0, 0, "-", "Gene"], [115, 0, 0, "-", "KGML"], [118, 0, 0, "-", "Map"], [119, 0, 0, "-", "REST"]], "Bio.KEGG.Compound": [[112, 3, 1, "", "Record"], [112, 4, 1, "", "parse"]], "Bio.KEGG.Compound.Record": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "__str__"]], "Bio.KEGG.Enzyme": [[113, 3, 1, "", "Record"], [113, 4, 1, "", "parse"], [113, 4, 1, "", "read"]], "Bio.KEGG.Enzyme.Record": [[113, 2, 1, "", "__init__"], [113, 2, 1, "", "__str__"]], "Bio.KEGG.Gene": [[114, 3, 1, "", "Record"], [114, 4, 1, "", "parse"]], "Bio.KEGG.Gene.Record": [[114, 2, 1, "", "__init__"], [114, 2, 1, "", "__str__"]], "Bio.KEGG.KGML": [[116, 0, 0, "-", "KGML_parser"], [117, 0, 0, "-", "KGML_pathway"]], "Bio.KEGG.KGML.KGML_parser": [[116, 3, 1, "", "KGMLParser"], [116, 4, 1, "", "parse"], [116, 4, 1, "", "read"]], "Bio.KEGG.KGML.KGML_parser.KGMLParser": [[116, 2, 1, "", "__init__"], [116, 2, 1, "", "parse"]], "Bio.KEGG.KGML.KGML_pathway": [[117, 3, 1, "", "Component"], [117, 3, 1, "", "Entry"], [117, 3, 1, "", "Graphics"], [117, 3, 1, "", "Pathway"], [117, 3, 1, "", "Reaction"], [117, 3, 1, "", "Relation"]], "Bio.KEGG.KGML.KGML_pathway.Component": [[117, 2, 1, "", "__init__"], [117, 6, 1, "", "element"], [117, 6, 1, "", "id"]], "Bio.KEGG.KGML.KGML_pathway.Entry": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "__str__"], [117, 2, 1, "", "add_component"], [117, 2, 1, "", "add_graphics"], [117, 6, 1, "", "bounds"], [117, 6, 1, "", "element"], [117, 6, 1, "", "id"], [117, 6, 1, "", "is_reactant"], [117, 6, 1, "", "name"], [117, 6, 1, "", "reaction"], [117, 2, 1, "", "remove_component"], [117, 2, 1, "", "remove_graphics"]], "Bio.KEGG.KGML.KGML_pathway.Graphics": [[117, 2, 1, "", "__init__"], [117, 6, 1, "", "bgcolor"], [117, 6, 1, "", "bounds"], [117, 6, 1, "", "centre"], [117, 6, 1, "", "coords"], [117, 6, 1, "", "element"], [117, 6, 1, "", "fgcolor"], [117, 6, 1, "", "height"], [117, 6, 1, "", "width"], [117, 6, 1, "", "x"], [117, 6, 1, "", "y"]], "Bio.KEGG.KGML.KGML_pathway.Pathway": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "__str__"], [117, 2, 1, "", "add_entry"], [117, 2, 1, "", "add_reaction"], [117, 2, 1, "", "add_relation"], [117, 6, 1, "", "bounds"], [117, 6, 1, "", "compounds"], [117, 6, 1, "", "element"], [117, 6, 1, "", "genes"], [117, 2, 1, "", "get_KGML"], [117, 6, 1, "", "maps"], [117, 6, 1, "", "name"], [117, 6, 1, "", "number"], [117, 6, 1, "", "orthologs"], [117, 6, 1, "", "reaction_entries"], [117, 6, 1, "", "reactions"], [117, 6, 1, "", "relations"], [117, 2, 1, "", "remove_entry"], [117, 2, 1, "", "remove_reaction"], [117, 2, 1, "", "remove_relation"]], "Bio.KEGG.KGML.KGML_pathway.Reaction": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "__str__"], [117, 2, 1, "", "add_product"], [117, 2, 1, "", "add_substrate"], [117, 6, 1, "", "element"], [117, 6, 1, "", "entry"], [117, 6, 1, "", "id"], [117, 6, 1, "", "name"], [117, 6, 1, "", "products"], [117, 6, 1, "", "reactant_ids"], [117, 6, 1, "", "substrates"]], "Bio.KEGG.KGML.KGML_pathway.Relation": [[117, 2, 1, "", "__init__"], [117, 2, 1, "", "__str__"], [117, 6, 1, "", "element"], [117, 6, 1, "", "entry1"], [117, 6, 1, "", "entry2"]], "Bio.KEGG.Map": [[118, 4, 1, "", "parse"]], "Bio.KEGG.REST": [[119, 4, 1, "", "kegg_conv"], [119, 4, 1, "", "kegg_find"], [119, 4, 1, "", "kegg_get"], [119, 4, 1, "", "kegg_info"], [119, 4, 1, "", "kegg_link"], [119, 4, 1, "", "kegg_list"]], "Bio.LogisticRegression": [[120, 3, 1, "", "LogisticRegression"], [120, 4, 1, "", "calculate"], [120, 4, 1, "", "classify"], [120, 4, 1, "", "train"]], "Bio.LogisticRegression.LogisticRegression": [[120, 2, 1, "", "__init__"]], "Bio.MarkovModel": [[121, 3, 1, "", "MarkovModel"], [121, 4, 1, "", "find_states"], [121, 4, 1, "", "itemindex"], [121, 4, 1, "", "load"], [121, 4, 1, "", "save"], [121, 4, 1, "", "train_bw"], [121, 4, 1, "", "train_visible"]], "Bio.MarkovModel.MarkovModel": [[121, 2, 1, "", "__init__"], [121, 2, 1, "", "__str__"]], "Bio.MaxEntropy": [[122, 3, 1, "", "MaxEntropy"], [122, 4, 1, "", "calculate"], [122, 4, 1, "", "classify"], [122, 4, 1, "", "train"]], "Bio.MaxEntropy.MaxEntropy": [[122, 2, 1, "", "__init__"]], "Bio.Medline": [[123, 3, 1, "", "Record"], [123, 4, 1, "", "parse"], [123, 4, 1, "", "read"]], "Bio.NMR": [[125, 0, 0, "-", "NOEtools"], [126, 0, 0, "-", "xpktools"]], "Bio.NMR.NOEtools": [[125, 4, 1, "", "predictNOE"]], "Bio.NMR.xpktools": [[126, 3, 1, "", "Peaklist"], [126, 3, 1, "", "XpkEntry"], [126, 4, 1, "", "data_table"], [126, 4, 1, "", "replace_entry"]], "Bio.NMR.xpktools.Peaklist": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "residue_dict"], [126, 2, 1, "", "write_header"]], "Bio.NMR.xpktools.XpkEntry": [[126, 2, 1, "", "__init__"]], "Bio.NaiveBayes": [[127, 3, 1, "", "NaiveBayes"], [127, 4, 1, "", "calculate"], [127, 4, 1, "", "classify"], [127, 4, 1, "", "train"]], "Bio.NaiveBayes.NaiveBayes": [[127, 2, 1, "", "__init__"]], "Bio.Nexus": [[129, 0, 0, "-", "Nexus"], [130, 0, 0, "-", "Nodes"], [131, 0, 0, "-", "StandardData"], [132, 0, 0, "-", "Trees"]], "Bio.Nexus.Nexus": [[129, 3, 1, "", "Block"], [129, 3, 1, "", "CharBuffer"], [129, 3, 1, "", "Commandline"], [129, 3, 1, "", "Nexus"], [129, 1, 1, "", "NexusError"], [129, 3, 1, "", "StepMatrix"], [129, 4, 1, "", "combine"], [129, 4, 1, "", "get_start_end"], [129, 4, 1, "", "quotestrip"], [129, 4, 1, "", "safename"]], "Bio.Nexus.Nexus.Block": [[129, 2, 1, "", "__init__"]], "Bio.Nexus.Nexus.CharBuffer": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "__next__"], [129, 2, 1, "", "next_nonwhitespace"], [129, 2, 1, "", "next_until"], [129, 2, 1, "", "next_word"], [129, 2, 1, "", "peek"], [129, 2, 1, "", "peek_nonwhitespace"], [129, 2, 1, "", "peek_word"], [129, 2, 1, "", "rest"], [129, 2, 1, "", "skip_whitespace"]], "Bio.Nexus.Nexus.Commandline": [[129, 2, 1, "", "__init__"]], "Bio.Nexus.Nexus.Nexus": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "add_sequence"], [129, 2, 1, "", "append_sets"], [129, 2, 1, "", "bootstrap"], [129, 2, 1, "", "constant"], [129, 2, 1, "", "crop_matrix"], [129, 2, 1, "", "cstatus"], [129, 2, 1, "", "export_fasta"], [129, 2, 1, "", "export_phylip"], [129, 2, 1, "", "gaponly"], [129, 2, 1, "", "get_original_taxon_order"], [129, 2, 1, "", "insert_gap"], [129, 2, 1, "", "invert"], [129, 6, 1, "", "original_taxon_order"], [129, 2, 1, "", "read"], [129, 2, 1, "", "set_original_taxon_order"], [129, 2, 1, "", "terminal_gap_to_missing"], [129, 2, 1, "", "weighted_stepmatrix"], [129, 2, 1, "", "write_nexus_data"], [129, 2, 1, "", "write_nexus_data_partitions"]], "Bio.Nexus.Nexus.StepMatrix": [[129, 2, 1, "", "__init__"], [129, 2, 1, "", "add"], [129, 2, 1, "", "set"], [129, 2, 1, "", "smprint"], [129, 2, 1, "", "sum"], [129, 2, 1, "", "transformation"], [129, 2, 1, "", "weighting"]], "Bio.Nexus.Nodes": [[130, 3, 1, "", "Chain"], [130, 1, 1, "", "ChainException"], [130, 3, 1, "", "Node"], [130, 1, 1, "", "NodeException"]], "Bio.Nexus.Nodes.Chain": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "add"], [130, 2, 1, "", "all_ids"], [130, 2, 1, "", "collapse"], [130, 2, 1, "", "is_parent_of"], [130, 2, 1, "", "kill"], [130, 2, 1, "", "link"], [130, 2, 1, "", "trace"], [130, 2, 1, "", "unlink"]], "Bio.Nexus.Nodes.Node": [[130, 2, 1, "", "__init__"], [130, 2, 1, "", "add_succ"], [130, 2, 1, "", "get_data"], [130, 2, 1, "", "get_id"], [130, 2, 1, "", "get_prev"], [130, 2, 1, "", "get_succ"], [130, 2, 1, "", "remove_succ"], [130, 2, 1, "", "set_data"], [130, 2, 1, "", "set_id"], [130, 2, 1, "", "set_prev"], [130, 2, 1, "", "set_succ"]], "Bio.Nexus.StandardData": [[131, 1, 1, "", "NexusError"], [131, 3, 1, "", "StandardData"]], "Bio.Nexus.StandardData.StandardData": [[131, 2, 1, "", "__getitem__"], [131, 2, 1, "", "__init__"], [131, 2, 1, "", "__iter__"], [131, 2, 1, "", "__len__"], [131, 2, 1, "", "__next__"], [131, 2, 1, "", "__str__"], [131, 2, 1, "", "raw"]], "Bio.Nexus.Trees": [[132, 3, 1, "", "NodeData"], [132, 3, 1, "", "Tree"], [132, 1, 1, "", "TreeError"], [132, 4, 1, "", "consensus"]], "Bio.Nexus.Trees.NodeData": [[132, 2, 1, "", "__init__"]], "Bio.Nexus.Trees.Tree": [[132, 2, 1, "", "__init__"], [132, 2, 1, "", "__str__"], [132, 2, 1, "", "branchlength2support"], [132, 2, 1, "", "collapse_genera"], [132, 2, 1, "", "common_ancestor"], [132, 2, 1, "", "convert_absolute_support"], [132, 2, 1, "", "count_terminals"], [132, 2, 1, "", "display"], [132, 2, 1, "", "distance"], [132, 2, 1, "", "get_taxa"], [132, 2, 1, "", "get_terminals"], [132, 2, 1, "", "has_support"], [132, 2, 1, "", "is_bifurcating"], [132, 2, 1, "", "is_compatible"], [132, 2, 1, "", "is_identical"], [132, 2, 1, "", "is_internal"], [132, 2, 1, "", "is_monophyletic"], [132, 2, 1, "", "is_preterminal"], [132, 2, 1, "", "is_terminal"], [132, 2, 1, "", "merge_with_support"], [132, 2, 1, "", "node"], [132, 2, 1, "", "prune"], [132, 2, 1, "", "randomize"], [132, 2, 1, "", "root_with_outgroup"], [132, 2, 1, "", "search_taxon"], [132, 2, 1, "", "set_subtree"], [132, 2, 1, "", "split"], [132, 2, 1, "", "sum_branchlength"], [132, 2, 1, "", "to_string"], [132, 2, 1, "", "unroot"]], "Bio.PDB": [[134, 0, 0, "-", "AbstractPropertyMap"], [135, 0, 0, "-", "Atom"], [136, 0, 0, "-", "Chain"], [137, 0, 0, "-", "DSSP"], [138, 0, 0, "-", "Dice"], [139, 0, 0, "-", "Entity"], [140, 0, 0, "-", "FragmentMapper"], [141, 0, 0, "-", "HSExposure"], [142, 0, 0, "-", "MMCIF2Dict"], [143, 0, 0, "-", "MMCIFParser"], [144, 0, 0, "-", "Model"], [145, 0, 0, "-", "NACCESS"], [146, 0, 0, "-", "NeighborSearch"], [147, 0, 0, "-", "PDBExceptions"], [148, 0, 0, "-", "PDBIO"], [149, 0, 0, "-", "PDBList"], [150, 0, 0, "-", "PDBMLParser"], [151, 0, 0, "-", "PDBParser"], [152, 0, 0, "-", "PICIO"], [153, 0, 0, "-", "PSEA"], [154, 0, 0, "-", "Polypeptide"], [155, 0, 0, "-", "Residue"], [156, 0, 0, "-", "ResidueDepth"], [157, 0, 0, "-", "SASA"], [158, 0, 0, "-", "SCADIO"], [159, 0, 0, "-", "Selection"], [160, 0, 0, "-", "Structure"], [161, 0, 0, "-", "StructureAlignment"], [162, 0, 0, "-", "StructureBuilder"], [163, 0, 0, "-", "Superimposer"], [164, 0, 0, "-", "alphafold_db"], [165, 0, 0, "-", "cealign"], [166, 0, 0, "-", "ic_data"], [167, 0, 0, "-", "ic_rebuild"], [168, 0, 0, "-", "internal_coords"], [169, 0, 0, "-", "mmcifio"], [170, 0, 0, "-", "mmtf"], [173, 0, 0, "-", "parse_pdb_header"], [174, 0, 0, "-", "qcprot"], [175, 0, 0, "-", "vectors"]], "Bio.PDB.AbstractPropertyMap": [[134, 3, 1, "", "AbstractAtomPropertyMap"], [134, 3, 1, "", "AbstractPropertyMap"], [134, 3, 1, "", "AbstractResiduePropertyMap"]], "Bio.PDB.AbstractPropertyMap.AbstractAtomPropertyMap": [[134, 2, 1, "", "__init__"]], "Bio.PDB.AbstractPropertyMap.AbstractPropertyMap": [[134, 2, 1, "", "__contains__"], [134, 2, 1, "", "__getitem__"], [134, 2, 1, "", "__init__"], [134, 2, 1, "", "__iter__"], [134, 2, 1, "", "__len__"], [134, 2, 1, "", "keys"]], "Bio.PDB.AbstractPropertyMap.AbstractResiduePropertyMap": [[134, 2, 1, "", "__init__"]], "Bio.PDB.Atom": [[135, 3, 1, "", "Atom"], [135, 3, 1, "", "DisorderedAtom"]], "Bio.PDB.Atom.Atom": [[135, 2, 1, "", "__eq__"], [135, 2, 1, "", "__ge__"], [135, 2, 1, "", "__gt__"], [135, 2, 1, "", "__hash__"], [135, 2, 1, "", "__init__"], [135, 2, 1, "", "__le__"], [135, 2, 1, "", "__lt__"], [135, 2, 1, "", "__ne__"], [135, 2, 1, "", "__repr__"], [135, 2, 1, "", "__sub__"], [135, 2, 1, "", "copy"], [135, 2, 1, "", "detach_parent"], [135, 2, 1, "", "flag_disorder"], [135, 2, 1, "", "get_altloc"], [135, 2, 1, "", "get_anisou"], [135, 2, 1, "", "get_bfactor"], [135, 2, 1, "", "get_charge"], [135, 2, 1, "", "get_coord"], [135, 2, 1, "", "get_full_id"], [135, 2, 1, "", "get_fullname"], [135, 2, 1, "", "get_id"], [135, 2, 1, "", "get_level"], [135, 2, 1, "", "get_name"], [135, 2, 1, "", "get_occupancy"], [135, 2, 1, "", "get_parent"], [135, 2, 1, "", "get_radius"], [135, 2, 1, "", "get_serial_number"], [135, 2, 1, "", "get_sigatm"], [135, 2, 1, "", "get_siguij"], [135, 2, 1, "", "get_vector"], [135, 2, 1, "", "is_disordered"], [135, 2, 1, "", "set_altloc"], [135, 2, 1, "", "set_anisou"], [135, 2, 1, "", "set_bfactor"], [135, 2, 1, "", "set_charge"], [135, 2, 1, "", "set_coord"], [135, 2, 1, "", "set_occupancy"], [135, 2, 1, "", "set_parent"], [135, 2, 1, "", "set_radius"], [135, 2, 1, "", "set_serial_number"], [135, 2, 1, "", "set_sigatm"], [135, 2, 1, "", "set_siguij"], [135, 2, 1, "", "strictly_equals"], [135, 2, 1, "", "transform"]], "Bio.PDB.Atom.DisorderedAtom": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "__iter__"], [135, 2, 1, "", "__repr__"], [135, 2, 1, "", "center_of_mass"], [135, 2, 1, "", "disordered_add"], [135, 2, 1, "", "disordered_get_list"], [135, 2, 1, "", "disordered_remove"], [135, 2, 1, "", "transform"]], "Bio.PDB.Chain": [[136, 3, 1, "", "Chain"]], "Bio.PDB.Chain.Chain": [[136, 2, 1, "", "__contains__"], [136, 2, 1, "", "__delitem__"], [136, 2, 1, "", "__ge__"], [136, 2, 1, "", "__getitem__"], [136, 2, 1, "", "__gt__"], [136, 2, 1, "", "__init__"], [136, 2, 1, "", "__le__"], [136, 2, 1, "", "__lt__"], [136, 5, 1, "", "__orig_bases__"], [136, 5, 1, "", "__parameters__"], [136, 2, 1, "", "__repr__"], [136, 2, 1, "", "atom_to_internal_coordinates"], [136, 5, 1, "", "child_dict"], [136, 5, 1, "", "child_list"], [136, 2, 1, "", "get_atoms"], [136, 2, 1, "", "get_residues"], [136, 2, 1, "", "get_unpacked_list"], [136, 2, 1, "", "has_id"], [136, 2, 1, "", "internal_to_atom_coordinates"], [136, 5, 1, "", "level"], [136, 5, 1, "", "parent"]], "Bio.PDB.DSSP": [[137, 3, 1, "", "DSSP"], [137, 4, 1, "", "dssp_dict_from_pdb_file"], [137, 4, 1, "", "make_dssp_dict"], [137, 4, 1, "", "ss_to_index"], [137, 4, 1, "", "version"]], "Bio.PDB.DSSP.DSSP": [[137, 2, 1, "", "__init__"]], "Bio.PDB.Dice": [[138, 3, 1, "", "ChainSelector"], [138, 4, 1, "", "extract"]], "Bio.PDB.Dice.ChainSelector": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "accept_atom"], [138, 2, 1, "", "accept_chain"], [138, 2, 1, "", "accept_model"], [138, 2, 1, "", "accept_residue"]], "Bio.PDB.Entity": [[139, 3, 1, "", "DisorderedEntityWrapper"], [139, 3, 1, "", "Entity"]], "Bio.PDB.Entity.DisorderedEntityWrapper": [[139, 2, 1, "", "__contains__"], [139, 2, 1, "", "__ge__"], [139, 2, 1, "", "__getattr__"], [139, 2, 1, "", "__getitem__"], [139, 2, 1, "", "__gt__"], [139, 2, 1, "", "__init__"], [139, 2, 1, "", "__iter__"], [139, 2, 1, "", "__le__"], [139, 2, 1, "", "__len__"], [139, 2, 1, "", "__lt__"], [139, 2, 1, "", "__setitem__"], [139, 2, 1, "", "__sub__"], [139, 2, 1, "", "copy"], [139, 2, 1, "", "detach_parent"], [139, 2, 1, "", "disordered_add"], [139, 2, 1, "", "disordered_get"], [139, 2, 1, "", "disordered_get_id_list"], [139, 2, 1, "", "disordered_get_list"], [139, 2, 1, "", "disordered_has_id"], [139, 2, 1, "", "disordered_remove"], [139, 2, 1, "", "disordered_select"], [139, 2, 1, "", "get_id"], [139, 2, 1, "", "get_parent"], [139, 2, 1, "", "is_disordered"], [139, 2, 1, "", "set_parent"], [139, 2, 1, "", "strictly_equals"]], "Bio.PDB.Entity.Entity": [[139, 5, 1, "", "__annotations__"], [139, 2, 1, "", "__contains__"], [139, 2, 1, "", "__delitem__"], [139, 2, 1, "", "__eq__"], [139, 2, 1, "", "__ge__"], [139, 2, 1, "", "__getitem__"], [139, 2, 1, "", "__gt__"], [139, 2, 1, "", "__hash__"], [139, 2, 1, "", "__init__"], [139, 2, 1, "", "__iter__"], [139, 2, 1, "", "__le__"], [139, 2, 1, "", "__len__"], [139, 2, 1, "", "__lt__"], [139, 2, 1, "", "__ne__"], [139, 5, 1, "", "__orig_bases__"], [139, 5, 1, "", "__parameters__"], [139, 2, 1, "", "add"], [139, 2, 1, "", "center_of_mass"], [139, 5, 1, "", "child_dict"], [139, 5, 1, "", "child_list"], [139, 2, 1, "", "copy"], [139, 2, 1, "", "detach_child"], [139, 2, 1, "", "detach_parent"], [139, 2, 1, "", "get_full_id"], [139, 2, 1, "", "get_id"], [139, 2, 1, "", "get_iterator"], [139, 2, 1, "", "get_level"], [139, 2, 1, "", "get_list"], [139, 2, 1, "", "get_parent"], [139, 2, 1, "", "has_id"], [139, 6, 1, "", "id"], [139, 2, 1, "", "insert"], [139, 5, 1, "", "level"], [139, 5, 1, "", "parent"], [139, 2, 1, "", "set_parent"], [139, 2, 1, "", "strictly_equals"], [139, 2, 1, "", "transform"]], "Bio.PDB.FragmentMapper": [[140, 3, 1, "", "Fragment"], [140, 3, 1, "", "FragmentMapper"]], "Bio.PDB.FragmentMapper.Fragment": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "__len__"], [140, 2, 1, "", "__repr__"], [140, 2, 1, "", "__sub__"], [140, 2, 1, "", "add_residue"], [140, 2, 1, "", "get_coords"], [140, 2, 1, "", "get_id"], [140, 2, 1, "", "get_resname_list"]], "Bio.PDB.FragmentMapper.FragmentMapper": [[140, 2, 1, "", "__contains__"], [140, 2, 1, "", "__getitem__"], [140, 2, 1, "", "__init__"]], "Bio.PDB.HSExposure": [[141, 3, 1, "", "ExposureCN"], [141, 3, 1, "", "HSExposureCA"], [141, 3, 1, "", "HSExposureCB"]], "Bio.PDB.HSExposure.ExposureCN": [[141, 2, 1, "", "__init__"]], "Bio.PDB.HSExposure.HSExposureCA": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "pcb_vectors_pymol"]], "Bio.PDB.HSExposure.HSExposureCB": [[141, 2, 1, "", "__init__"]], "Bio.PDB.MMCIF2Dict": [[142, 3, 1, "", "MMCIF2Dict"]], "Bio.PDB.MMCIF2Dict.MMCIF2Dict": [[142, 2, 1, "", "__init__"]], "Bio.PDB.MMCIFParser": [[143, 3, 1, "", "FastMMCIFParser"], [143, 3, 1, "", "MMCIFParser"]], "Bio.PDB.MMCIFParser.FastMMCIFParser": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "get_structure"]], "Bio.PDB.MMCIFParser.MMCIFParser": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "get_structure"]], "Bio.PDB.Model": [[144, 3, 1, "", "Model"]], "Bio.PDB.Model.Model": [[144, 2, 1, "", "__init__"], [144, 5, 1, "", "__orig_bases__"], [144, 5, 1, "", "__parameters__"], [144, 2, 1, "", "__repr__"], [144, 2, 1, "", "atom_to_internal_coordinates"], [144, 5, 1, "", "child_dict"], [144, 5, 1, "", "child_list"], [144, 2, 1, "", "get_atoms"], [144, 2, 1, "", "get_chains"], [144, 2, 1, "", "get_residues"], [144, 2, 1, "", "internal_to_atom_coordinates"], [144, 5, 1, "", "level"], [144, 5, 1, "", "parent"]], "Bio.PDB.NACCESS": [[145, 3, 1, "", "NACCESS"], [145, 3, 1, "", "NACCESS_atomic"], [145, 4, 1, "", "process_asa_data"], [145, 4, 1, "", "process_rsa_data"], [145, 4, 1, "", "run_naccess"]], "Bio.PDB.NACCESS.NACCESS": [[145, 2, 1, "", "__init__"]], "Bio.PDB.NACCESS.NACCESS_atomic": [[145, 2, 1, "", "__init__"]], "Bio.PDB.NeighborSearch": [[146, 3, 1, "", "NeighborSearch"]], "Bio.PDB.NeighborSearch.NeighborSearch": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "search"], [146, 2, 1, "", "search_all"]], "Bio.PDB.PDBExceptions": [[147, 1, 1, "", "PDBConstructionException"], [147, 1, 1, "", "PDBConstructionWarning"], [147, 1, 1, "", "PDBException"], [147, 1, 1, "", "PDBIOException"]], "Bio.PDB.PDBIO": [[148, 3, 1, "", "PDBIO"], [148, 3, 1, "", "Select"], [148, 3, 1, "", "StructureIO"]], "Bio.PDB.PDBIO.PDBIO": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "save"]], "Bio.PDB.PDBIO.Select": [[148, 2, 1, "", "__repr__"], [148, 2, 1, "", "accept_atom"], [148, 2, 1, "", "accept_chain"], [148, 2, 1, "", "accept_model"], [148, 2, 1, "", "accept_residue"]], "Bio.PDB.PDBIO.StructureIO": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "set_structure"]], "Bio.PDB.PDBList": [[149, 3, 1, "", "PDBList"]], "Bio.PDB.PDBList.PDBList": [[149, 5, 1, "", "PDB_REF"], [149, 2, 1, "", "__init__"], [149, 2, 1, "", "download_all_assemblies"], [149, 2, 1, "", "download_entire_pdb"], [149, 2, 1, "", "download_obsolete_entries"], [149, 2, 1, "", "download_pdb_files"], [149, 2, 1, "", "get_all_assemblies"], [149, 2, 1, "", "get_all_entries"], [149, 2, 1, "", "get_all_obsolete"], [149, 2, 1, "", "get_recent_changes"], [149, 2, 1, "", "get_seqres_file"], [149, 2, 1, "", "get_status_list"], [149, 2, 1, "", "retrieve_assembly_file"], [149, 2, 1, "", "retrieve_pdb_file"], [149, 2, 1, "", "update_pdb"]], "Bio.PDB.PDBMLParser": [[150, 3, 1, "", "PDBMLParser"]], "Bio.PDB.PDBMLParser.PDBMLParser": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "get_structure"]], "Bio.PDB.PDBParser": [[151, 3, 1, "", "PDBParser"]], "Bio.PDB.PDBParser.PDBParser": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "get_header"], [151, 2, 1, "", "get_structure"], [151, 2, 1, "", "get_trailer"]], "Bio.PDB.PICIO": [[152, 4, 1, "", "enumerate_atoms"], [152, 4, 1, "", "pdb_date"], [152, 4, 1, "", "read_PIC"], [152, 4, 1, "", "read_PIC_seq"], [152, 4, 1, "", "write_PIC"]], "Bio.PDB.PSEA": [[153, 3, 1, "", "PSEA"], [153, 4, 1, "", "annotate"], [153, 4, 1, "", "psea"], [153, 4, 1, "", "psea2HEC"], [153, 4, 1, "", "run_psea"]], "Bio.PDB.PSEA.PSEA": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "get_seq"]], "Bio.PDB.Polypeptide": [[154, 3, 1, "", "CaPPBuilder"], [154, 3, 1, "", "PPBuilder"], [154, 3, 1, "", "Polypeptide"], [154, 4, 1, "", "index_to_one"], [154, 4, 1, "", "index_to_three"], [154, 4, 1, "", "is_aa"], [154, 4, 1, "", "is_nucleic"], [154, 4, 1, "", "one_to_index"], [154, 4, 1, "", "three_to_index"]], "Bio.PDB.Polypeptide.CaPPBuilder": [[154, 2, 1, "", "__init__"]], "Bio.PDB.Polypeptide.PPBuilder": [[154, 2, 1, "", "__init__"]], "Bio.PDB.Polypeptide.Polypeptide": [[154, 2, 1, "", "__repr__"], [154, 2, 1, "", "get_ca_list"], [154, 2, 1, "", "get_phi_psi_list"], [154, 2, 1, "", "get_sequence"], [154, 2, 1, "", "get_tau_list"], [154, 2, 1, "", "get_theta_list"]], "Bio.PDB.Residue": [[155, 3, 1, "", "DisorderedResidue"], [155, 3, 1, "", "Residue"]], "Bio.PDB.Residue.DisorderedResidue": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "__repr__"], [155, 2, 1, "", "add"], [155, 2, 1, "", "disordered_add"], [155, 2, 1, "", "disordered_remove"], [155, 2, 1, "", "sort"]], "Bio.PDB.Residue.Residue": [[155, 2, 1, "", "__init__"], [155, 5, 1, "", "__orig_bases__"], [155, 5, 1, "", "__parameters__"], [155, 2, 1, "", "__repr__"], [155, 2, 1, "", "add"], [155, 5, 1, "", "child_dict"], [155, 5, 1, "", "child_list"], [155, 2, 1, "", "flag_disordered"], [155, 2, 1, "", "get_atoms"], [155, 2, 1, "", "get_resname"], [155, 2, 1, "", "get_segid"], [155, 2, 1, "", "get_unpacked_list"], [155, 2, 1, "", "is_disordered"], [155, 5, 1, "", "level"], [155, 5, 1, "", "parent"], [155, 2, 1, "", "strictly_equals"]], "Bio.PDB.ResidueDepth": [[156, 3, 1, "", "ResidueDepth"], [156, 4, 1, "", "ca_depth"], [156, 4, 1, "", "get_surface"], [156, 4, 1, "", "min_dist"], [156, 4, 1, "", "residue_depth"]], "Bio.PDB.ResidueDepth.ResidueDepth": [[156, 2, 1, "", "__init__"]], "Bio.PDB.SASA": [[157, 3, 1, "", "ShrakeRupley"]], "Bio.PDB.SASA.ShrakeRupley": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "compute"]], "Bio.PDB.SCADIO": [[158, 4, 1, "", "write_SCAD"]], "Bio.PDB.Selection": [[159, 4, 1, "", "get_unique_parents"], [159, 4, 1, "", "unfold_entities"], [159, 4, 1, "", "uniqueify"]], "Bio.PDB.Structure": [[160, 3, 1, "", "Structure"]], "Bio.PDB.Structure.Structure": [[160, 2, 1, "", "__init__"], [160, 5, 1, "", "__orig_bases__"], [160, 5, 1, "", "__parameters__"], [160, 2, 1, "", "__repr__"], [160, 2, 1, "", "atom_to_internal_coordinates"], [160, 5, 1, "", "child_dict"], [160, 5, 1, "", "child_list"], [160, 2, 1, "", "get_atoms"], [160, 2, 1, "", "get_chains"], [160, 2, 1, "", "get_models"], [160, 2, 1, "", "get_residues"], [160, 2, 1, "", "internal_to_atom_coordinates"], [160, 5, 1, "", "level"], [160, 5, 1, "", "parent"]], "Bio.PDB.StructureAlignment": [[161, 3, 1, "", "StructureAlignment"]], "Bio.PDB.StructureAlignment.StructureAlignment": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "get_iterator"], [161, 2, 1, "", "get_maps"]], "Bio.PDB.StructureBuilder": [[162, 3, 1, "", "StructureBuilder"]], "Bio.PDB.StructureBuilder.StructureBuilder": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "get_structure"], [162, 2, 1, "", "init_atom"], [162, 2, 1, "", "init_chain"], [162, 2, 1, "", "init_model"], [162, 2, 1, "", "init_residue"], [162, 2, 1, "", "init_seg"], [162, 2, 1, "", "init_structure"], [162, 2, 1, "", "set_anisou"], [162, 2, 1, "", "set_header"], [162, 2, 1, "", "set_line_counter"], [162, 2, 1, "", "set_sigatm"], [162, 2, 1, "", "set_siguij"], [162, 2, 1, "", "set_symmetry"]], "Bio.PDB.Superimposer": [[163, 3, 1, "", "Superimposer"]], "Bio.PDB.Superimposer.Superimposer": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "apply"], [163, 2, 1, "", "set_atoms"]], "Bio.PDB.alphafold_db": [[164, 4, 1, "", "download_cif_for"], [164, 4, 1, "", "get_predictions"], [164, 4, 1, "", "get_structural_models_for"]], "Bio.PDB.cealign": [[165, 3, 1, "", "CEAligner"]], "Bio.PDB.cealign.CEAligner": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "align"], [165, 2, 1, "", "get_guide_coord_from_structure"], [165, 2, 1, "", "set_reference"]], "Bio.PDB.ic_rebuild": [[167, 4, 1, "", "IC_duplicate"], [167, 4, 1, "", "compare_residues"], [167, 4, 1, "", "report_IC"], [167, 4, 1, "", "structure_rebuild_test"], [167, 4, 1, "", "write_PDB"]], "Bio.PDB.internal_coords": [[168, 3, 1, "", "AtomKey"], [168, 3, 1, "", "Dihedron"], [168, 3, 1, "", "Edron"], [168, 3, 1, "", "Hedron"], [168, 1, 1, "", "HedronMatchError"], [168, 3, 1, "", "IC_Chain"], [168, 3, 1, "", "IC_Residue"], [168, 1, 1, "", "MissingAtomError"], [168, 4, 1, "", "set_accuracy_95"]], "Bio.PDB.internal_coords.AtomKey": [[168, 2, 1, "", "__deepcopy__"], [168, 2, 1, "", "__eq__"], [168, 2, 1, "", "__ge__"], [168, 2, 1, "", "__gt__"], [168, 2, 1, "", "__hash__"], [168, 2, 1, "", "__init__"], [168, 2, 1, "", "__le__"], [168, 2, 1, "", "__lt__"], [168, 2, 1, "", "__ne__"], [168, 2, 1, "", "__repr__"], [168, 2, 1, "", "altloc_match"], [168, 2, 1, "", "atm"], [168, 5, 1, "", "atom_re"], [168, 2, 1, "", "cr_class"], [168, 5, 1, "", "d2h"], [168, 5, 1, "", "fieldNames"], [168, 5, 1, "", "fields"], [168, 2, 1, "", "is_backbone"]], "Bio.PDB.internal_coords.Dihedron": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "__repr__"], [168, 6, 1, "", "angle"], [168, 2, 1, "", "angle_avg"], [168, 2, 1, "", "angle_dif"], [168, 2, 1, "", "angle_pop_sd"], [168, 2, 1, "", "bits"], [168, 5, 1, "", "cic"], [168, 2, 1, "", "difference"]], "Bio.PDB.internal_coords.Edron": [[168, 2, 1, "", "__contains__"], [168, 2, 1, "", "__deepcopy__"], [168, 2, 1, "", "__eq__"], [168, 2, 1, "", "__ge__"], [168, 2, 1, "", "__gt__"], [168, 2, 1, "", "__hash__"], [168, 2, 1, "", "__init__"], [168, 2, 1, "", "__le__"], [168, 2, 1, "", "__lt__"], [168, 2, 1, "", "__ne__"], [168, 2, 1, "", "__repr__"], [168, 5, 1, "", "edron_re"], [168, 2, 1, "", "gen_key"], [168, 2, 1, "", "gen_tuple"], [168, 2, 1, "", "is_backbone"]], "Bio.PDB.internal_coords.Hedron": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "__repr__"], [168, 6, 1, "", "angle"], [168, 5, 1, "", "cic"], [168, 2, 1, "", "get_length"], [168, 6, 1, "", "len12"], [168, 6, 1, "", "len23"], [168, 2, 1, "", "set_length"]], "Bio.PDB.internal_coords.IC_Chain": [[168, 5, 1, "", "AAsiz"], [168, 5, 1, "", "MaxPeptideBond"], [168, 5, 1, "", "ParallelAssembleResidues"], [168, 5, 1, "", "__annotations__"], [168, 2, 1, "", "__deepcopy__"], [168, 2, 1, "", "__init__"], [168, 2, 1, "", "assemble_residues"], [168, 2, 1, "", "assemble_residues_ser"], [168, 5, 1, "", "atomArray"], [168, 2, 1, "", "atom_to_internal_coordinates"], [168, 2, 1, "", "build_atomArray"], [168, 2, 1, "", "build_edraArrays"], [168, 2, 1, "", "clear_ic"], [168, 2, 1, "", "copy_initNCaCs"], [168, 5, 1, "", "dCoordSpace"], [168, 5, 1, "", "dcsValid"], [168, 2, 1, "", "dihedral_signs"], [168, 2, 1, "", "distance_plot"], [168, 2, 1, "", "distance_to_internal_coordinates"], [168, 2, 1, "", "distplot_to_dh_arrays"], [168, 2, 1, "", "init_atom_coords"], [168, 2, 1, "", "init_edra"], [168, 2, 1, "", "internal_to_atom_coordinates"], [168, 2, 1, "", "make_extended"], [168, 2, 1, "", "propagate_changes"], [168, 2, 1, "", "update_dCoordSpace"]], "Bio.PDB.internal_coords.IC_Residue": [[168, 5, 1, "", "__annotations__"], [168, 2, 1, "", "__contains__"], [168, 2, 1, "", "__deepcopy__"], [168, 2, 1, "", "__init__"], [168, 2, 1, "", "__repr__"], [168, 5, 1, "", "accept_atoms"], [168, 5, 1, "", "accept_backbone"], [168, 5, 1, "", "accept_deuteriums"], [168, 5, 1, "", "accept_hydrogens"], [168, 5, 1, "", "accept_mainchain"], [168, 5, 1, "", "accept_resnames"], [168, 5, 1, "", "accept_sidechain"], [168, 2, 1, "", "applyMtx"], [168, 2, 1, "", "assemble"], [168, 5, 1, "", "atom_chain"], [168, 5, 1, "", "atom_sernum"], [168, 2, 1, "", "bond_rotate"], [168, 2, 1, "", "bond_set"], [168, 2, 1, "", "clear_transforms"], [168, 2, 1, "", "get_angle"], [168, 2, 1, "", "get_length"], [168, 5, 1, "", "gly_Cbeta"], [168, 5, 1, "", "no_altloc"], [168, 2, 1, "", "pdb_residue_string"], [168, 5, 1, "", "picFlagsDefault"], [168, 5, 1, "", "picFlagsDict"], [168, 5, 1, "", "pic_accuracy"], [168, 5, 1, "", "pic_flags"], [168, 2, 1, "", "pick_angle"], [168, 2, 1, "", "pick_length"], [168, 2, 1, "", "pretty_str"], [168, 2, 1, "", "rak"], [168, 2, 1, "", "set_angle"], [168, 2, 1, "", "set_flexible"], [168, 2, 1, "", "set_hbond"], [168, 2, 1, "", "set_length"], [168, 2, 1, "", "split_akl"]], "Bio.PDB.mmcifio": [[169, 3, 1, "", "MMCIFIO"]], "Bio.PDB.mmcifio.MMCIFIO": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "save"], [169, 2, 1, "", "set_dict"]], "Bio.PDB.mmtf": [[171, 0, 0, "-", "DefaultParser"], [170, 3, 1, "", "MMTFParser"], [170, 4, 1, "", "get_from_decoded"], [172, 0, 0, "-", "mmtfio"]], "Bio.PDB.mmtf.DefaultParser": [[171, 3, 1, "", "StructureDecoder"]], "Bio.PDB.mmtf.DefaultParser.StructureDecoder": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "finalize_structure"], [171, 2, 1, "", "init_structure"], [171, 2, 1, "", "set_atom_info"], [171, 2, 1, "", "set_bio_assembly_trans"], [171, 2, 1, "", "set_chain_info"], [171, 2, 1, "", "set_entity_info"], [171, 2, 1, "", "set_group_bond"], [171, 2, 1, "", "set_group_info"], [171, 2, 1, "", "set_header_info"], [171, 2, 1, "", "set_inter_group_bond"], [171, 2, 1, "", "set_model_info"], [171, 2, 1, "", "set_xtal_info"]], "Bio.PDB.mmtf.MMTFParser": [[170, 2, 1, "", "get_structure"], [170, 2, 1, "", "get_structure_from_url"]], "Bio.PDB.mmtf.mmtfio": [[172, 3, 1, "", "MMTFIO"]], "Bio.PDB.mmtf.mmtfio.MMTFIO": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "save"]], "Bio.PDB.parse_pdb_header": [[173, 4, 1, "", "parse_pdb_header"]], "Bio.PDB.qcprot": [[174, 3, 1, "", "QCPSuperimposer"], [174, 4, 1, "", "qcp"]], "Bio.PDB.qcprot.QCPSuperimposer": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "apply"], [174, 2, 1, "", "get_init_rms"], [174, 2, 1, "", "get_rms"], [174, 2, 1, "", "get_rotran"], [174, 2, 1, "", "get_transformed"], [174, 2, 1, "", "run"], [174, 2, 1, "", "set"], [174, 2, 1, "", "set_atoms"]], "Bio.PDB.vectors": [[175, 3, 1, "", "Vector"], [175, 4, 1, "", "calc_angle"], [175, 4, 1, "", "calc_dihedral"], [175, 4, 1, "", "coord_space"], [175, 4, 1, "", "get_spherical_coordinates"], [175, 4, 1, "", "homog_rot_mtx"], [175, 4, 1, "", "homog_scale_mtx"], [175, 4, 1, "", "homog_trans_mtx"], [175, 4, 1, "", "m2rotaxis"], [175, 4, 1, "", "multi_coord_space"], [175, 4, 1, "", "multi_rot_Y"], [175, 4, 1, "", "multi_rot_Z"], [175, 4, 1, "", "refmat"], [175, 4, 1, "", "rotaxis"], [175, 4, 1, "", "rotaxis2m"], [175, 4, 1, "", "rotmat"], [175, 4, 1, "", "set_X_homog_rot_mtx"], [175, 4, 1, "", "set_Y_homog_rot_mtx"], [175, 4, 1, "", "set_Z_homog_rot_mtx"], [175, 4, 1, "", "set_homog_trans_mtx"], [175, 4, 1, "", "vector_to_axis"]], "Bio.PDB.vectors.Vector": [[175, 2, 1, "", "__add__"], [175, 2, 1, "", "__contains__"], [175, 2, 1, "", "__getitem__"], [175, 2, 1, "", "__init__"], [175, 2, 1, "", "__mul__"], [175, 2, 1, "", "__neg__"], [175, 2, 1, "", "__pow__"], [175, 2, 1, "", "__repr__"], [175, 2, 1, "", "__setitem__"], [175, 2, 1, "", "__sub__"], [175, 2, 1, "", "__truediv__"], [175, 2, 1, "", "angle"], [175, 2, 1, "", "copy"], [175, 2, 1, "", "get_array"], [175, 2, 1, "", "left_multiply"], [175, 2, 1, "", "norm"], [175, 2, 1, "", "normalize"], [175, 2, 1, "", "normalized"], [175, 2, 1, "", "normsq"], [175, 2, 1, "", "right_multiply"]], "Bio.Pathway": [[176, 3, 1, "", "Interaction"], [176, 3, 1, "", "Network"], [176, 3, 1, "", "Reaction"], [177, 0, 0, "-", "Rep"], [176, 3, 1, "", "System"]], "Bio.Pathway.Interaction": [[176, 2, 1, "", "__hash__"], [176, 2, 1, "", "__repr__"], [176, 2, 1, "", "__str__"]], "Bio.Pathway.Network": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "__repr__"], [176, 2, 1, "", "__str__"], [176, 2, 1, "", "add_interaction"], [176, 2, 1, "", "add_species"], [176, 2, 1, "", "interactions"], [176, 2, 1, "", "sink"], [176, 2, 1, "", "sink_interactions"], [176, 2, 1, "", "source"], [176, 2, 1, "", "source_interactions"], [176, 2, 1, "", "species"]], "Bio.Pathway.Reaction": [[176, 2, 1, "", "__eq__"], [176, 2, 1, "", "__hash__"], [176, 2, 1, "", "__init__"], [176, 2, 1, "", "__repr__"], [176, 2, 1, "", "__str__"], [176, 2, 1, "", "reverse"], [176, 2, 1, "", "species"]], "Bio.Pathway.Rep": [[178, 0, 0, "-", "Graph"], [179, 0, 0, "-", "MultiGraph"]], "Bio.Pathway.Rep.Graph": [[178, 3, 1, "", "Graph"]], "Bio.Pathway.Rep.Graph.Graph": [[178, 2, 1, "", "__eq__"], [178, 5, 1, "", "__hash__"], [178, 2, 1, "", "__init__"], [178, 2, 1, "", "__repr__"], [178, 2, 1, "", "__str__"], [178, 2, 1, "", "add_edge"], [178, 2, 1, "", "add_node"], [178, 2, 1, "", "child_edges"], [178, 2, 1, "", "children"], [178, 2, 1, "", "edges"], [178, 2, 1, "", "labels"], [178, 2, 1, "", "nodes"], [178, 2, 1, "", "parent_edges"], [178, 2, 1, "", "parents"], [178, 2, 1, "", "remove_edge"], [178, 2, 1, "", "remove_node"]], "Bio.Pathway.Rep.MultiGraph": [[179, 3, 1, "", "MultiGraph"], [179, 4, 1, "", "bf_search"], [179, 4, 1, "", "df_search"]], "Bio.Pathway.Rep.MultiGraph.MultiGraph": [[179, 2, 1, "", "__eq__"], [179, 5, 1, "", "__hash__"], [179, 2, 1, "", "__init__"], [179, 2, 1, "", "__repr__"], [179, 2, 1, "", "__str__"], [179, 2, 1, "", "add_edge"], [179, 2, 1, "", "add_node"], [179, 2, 1, "", "child_edges"], [179, 2, 1, "", "children"], [179, 2, 1, "", "edges"], [179, 2, 1, "", "labels"], [179, 2, 1, "", "nodes"], [179, 2, 1, "", "parent_edges"], [179, 2, 1, "", "parents"], [179, 2, 1, "", "remove_edge"], [179, 2, 1, "", "remove_node"]], "Bio.Pathway.System": [[176, 2, 1, "", "__init__"], [176, 2, 1, "", "__repr__"], [176, 2, 1, "", "__str__"], [176, 2, 1, "", "add_reaction"], [176, 2, 1, "", "reactions"], [176, 2, 1, "", "remove_reaction"], [176, 2, 1, "", "species"], [176, 2, 1, "", "stochiometry"]], "Bio.Phylo": [[181, 0, 0, "-", "Applications"], [182, 0, 0, "-", "BaseTree"], [183, 0, 0, "-", "CDAO"], [184, 0, 0, "-", "CDAOIO"], [185, 0, 0, "-", "Consensus"], [186, 0, 0, "-", "NeXML"], [187, 0, 0, "-", "NeXMLIO"], [188, 0, 0, "-", "Newick"], [189, 0, 0, "-", "NewickIO"], [190, 0, 0, "-", "NexusIO"], [191, 0, 0, "-", "PAML"], [196, 0, 0, "-", "PhyloXML"], [197, 0, 0, "-", "PhyloXMLIO"], [198, 0, 0, "-", "TreeConstruction"]], "Bio.Phylo.Applications": [[181, 3, 1, "", "FastTreeCommandline"], [181, 3, 1, "", "PhymlCommandline"], [181, 3, 1, "", "RaxmlCommandline"]], "Bio.Phylo.Applications.FastTreeCommandline": [[181, 2, 1, "", "__init__"], [181, 6, 1, "", "bionj"], [181, 6, 1, "", "boot"], [181, 6, 1, "", "cat"], [181, 6, 1, "", "close"], [181, 6, 1, "", "constraintWeight"], [181, 6, 1, "", "constraints"], [181, 6, 1, "", "expert"], [181, 6, 1, "", "fastest"], [181, 6, 1, "", "gamma"], [181, 6, 1, "", "gtr"], [181, 6, 1, "", "gtrfreq"], [181, 6, 1, "", "gtrrates"], [181, 6, 1, "", "help"], [181, 6, 1, "", "input"], [181, 6, 1, "", "intree"], [181, 6, 1, "", "intree1"], [181, 6, 1, "", "log"], [181, 6, 1, "", "makematrix"], [181, 6, 1, "", "matrix"], [181, 6, 1, "", "mlacc"], [181, 6, 1, "", "mllen"], [181, 6, 1, "", "mlnni"], [181, 6, 1, "", "n"], [181, 6, 1, "", "nj"], [181, 6, 1, "", "nni"], [181, 6, 1, "", "no2nd"], [181, 6, 1, "", "nocat"], [181, 6, 1, "", "nomatrix"], [181, 6, 1, "", "nome"], [181, 6, 1, "", "noml"], [181, 6, 1, "", "nopr"], [181, 6, 1, "", "nosupport"], [181, 6, 1, "", "notop"], [181, 6, 1, "", "nt"], [181, 6, 1, "", "out"], [181, 6, 1, "", "pseudo"], [181, 6, 1, "", "quiet"], [181, 6, 1, "", "quote"], [181, 6, 1, "", "rawdist"], [181, 6, 1, "", "refresh"], [181, 6, 1, "", "second"], [181, 6, 1, "", "seed"], [181, 6, 1, "", "slow"], [181, 6, 1, "", "slownni"], [181, 6, 1, "", "spr"], [181, 6, 1, "", "sprlength"], [181, 6, 1, "", "top"], [181, 6, 1, "", "topm"], [181, 6, 1, "", "wag"]], "Bio.Phylo.Applications.PhymlCommandline": [[181, 2, 1, "", "__init__"], [181, 6, 1, "", "alpha"], [181, 6, 1, "", "bootstrap"], [181, 6, 1, "", "datatype"], [181, 6, 1, "", "frequencies"], [181, 6, 1, "", "input"], [181, 6, 1, "", "input_tree"], [181, 6, 1, "", "model"], [181, 6, 1, "", "multiple"], [181, 6, 1, "", "n_rand_starts"], [181, 6, 1, "", "nclasses"], [181, 6, 1, "", "optimize"], [181, 6, 1, "", "pars"], [181, 6, 1, "", "print_site_lnl"], [181, 6, 1, "", "print_trace"], [181, 6, 1, "", "prop_invar"], [181, 6, 1, "", "quiet"], [181, 6, 1, "", "r_seed"], [181, 6, 1, "", "rand_start"], [181, 6, 1, "", "run_id"], [181, 6, 1, "", "search"], [181, 6, 1, "", "sequential"], [181, 6, 1, "", "ts_tv_ratio"]], "Bio.Phylo.Applications.RaxmlCommandline": [[181, 2, 1, "", "__init__"], [181, 6, 1, "", "algorithm"], [181, 6, 1, "", "binary_constraint"], [181, 6, 1, "", "bipartition_filename"], [181, 6, 1, "", "bootstrap_branch_lengths"], [181, 6, 1, "", "bootstrap_seed"], [181, 6, 1, "", "checkpoints"], [181, 6, 1, "", "cluster_threshold"], [181, 6, 1, "", "cluster_threshold_fast"], [181, 6, 1, "", "epsilon"], [181, 6, 1, "", "exclude_filename"], [181, 6, 1, "", "grouping_constraint"], [181, 6, 1, "", "model"], [181, 6, 1, "", "name"], [181, 6, 1, "", "num_bootstrap_searches"], [181, 6, 1, "", "num_categories"], [181, 6, 1, "", "num_replicates"], [181, 6, 1, "", "outgroup"], [181, 6, 1, "", "parsimony"], [181, 6, 1, "", "parsimony_seed"], [181, 6, 1, "", "partition_branch_lengths"], [181, 6, 1, "", "partition_filename"], [181, 6, 1, "", "protein_model"], [181, 6, 1, "", "random_starting_tree"], [181, 6, 1, "", "rapid_bootstrap_seed"], [181, 6, 1, "", "rearrangements"], [181, 6, 1, "", "sequences"], [181, 6, 1, "", "starting_tree"], [181, 6, 1, "", "threads"], [181, 6, 1, "", "version"], [181, 6, 1, "", "weight_filename"], [181, 6, 1, "", "working_dir"]], "Bio.Phylo.BaseTree": [[182, 3, 1, "", "BranchColor"], [182, 3, 1, "", "Clade"], [182, 3, 1, "", "Tree"], [182, 3, 1, "", "TreeElement"], [182, 3, 1, "", "TreeMixin"]], "Bio.Phylo.BaseTree.BranchColor": [[182, 2, 1, "", "__init__"], [182, 2, 1, "", "__repr__"], [182, 2, 1, "", "__str__"], [182, 5, 1, "", "color_names"], [182, 2, 1, "", "from_hex"], [182, 2, 1, "", "from_name"], [182, 2, 1, "", "to_hex"], [182, 2, 1, "", "to_rgb"]], "Bio.Phylo.BaseTree.Clade": [[182, 2, 1, "", "__bool__"], [182, 2, 1, "", "__getitem__"], [182, 2, 1, "", "__init__"], [182, 2, 1, "", "__iter__"], [182, 2, 1, "", "__len__"], [182, 2, 1, "", "__str__"], [182, 6, 1, "", "color"], [182, 2, 1, "", "is_terminal"], [182, 6, 1, "", "root"]], "Bio.Phylo.BaseTree.Tree": [[182, 2, 1, "", "__format__"], [182, 2, 1, "", "__init__"], [182, 2, 1, "", "__str__"], [182, 2, 1, "", "as_phyloxml"], [182, 6, 1, "", "clade"], [182, 2, 1, "", "format"], [182, 2, 1, "", "from_clade"], [182, 2, 1, "", "is_terminal"], [182, 2, 1, "", "randomized"], [182, 2, 1, "", "root_at_midpoint"], [182, 2, 1, "", "root_with_outgroup"]], "Bio.Phylo.BaseTree.TreeElement": [[182, 2, 1, "", "__repr__"], [182, 2, 1, "", "__str__"]], "Bio.Phylo.BaseTree.TreeMixin": [[182, 2, 1, "", "collapse"], [182, 2, 1, "", "collapse_all"], [182, 2, 1, "", "common_ancestor"], [182, 2, 1, "", "count_terminals"], [182, 2, 1, "", "depths"], [182, 2, 1, "", "distance"], [182, 2, 1, "", "find_any"], [182, 2, 1, "", "find_clades"], [182, 2, 1, "", "find_elements"], [182, 2, 1, "", "get_nonterminals"], [182, 2, 1, "", "get_path"], [182, 2, 1, "", "get_terminals"], [182, 2, 1, "", "is_bifurcating"], [182, 2, 1, "", "is_monophyletic"], [182, 2, 1, "", "is_parent_of"], [182, 2, 1, "", "is_preterminal"], [182, 2, 1, "", "ladderize"], [182, 2, 1, "", "prune"], [182, 2, 1, "", "split"], [182, 2, 1, "", "total_branch_length"], [182, 2, 1, "", "trace"]], "Bio.Phylo.CDAO": [[183, 3, 1, "", "Clade"], [183, 3, 1, "", "Tree"]], "Bio.Phylo.CDAO.Clade": [[183, 2, 1, "", "__init__"]], "Bio.Phylo.CDAO.Tree": [[183, 2, 1, "", "__init__"]], "Bio.Phylo.CDAOIO": [[184, 3, 1, "", "Parser"], [184, 3, 1, "", "Writer"], [184, 4, 1, "", "format_label"], [184, 4, 1, "", "parse"], [184, 4, 1, "", "qUri"], [184, 4, 1, "", "write"]], "Bio.Phylo.CDAOIO.Parser": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "from_string"], [184, 2, 1, "", "get_node_info"], [184, 2, 1, "", "new_clade"], [184, 2, 1, "", "parse"], [184, 2, 1, "", "parse_children"], [184, 2, 1, "", "parse_graph"], [184, 2, 1, "", "parse_handle_to_graph"]], "Bio.Phylo.CDAOIO.Writer": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "add_stmt_to_handle"], [184, 5, 1, "", "prefixes"], [184, 2, 1, "", "process_clade"], [184, 2, 1, "", "write"]], "Bio.Phylo.Consensus": [[185, 4, 1, "", "adam_consensus"], [185, 4, 1, "", "bootstrap"], [185, 4, 1, "", "bootstrap_consensus"], [185, 4, 1, "", "bootstrap_trees"], [185, 4, 1, "", "get_support"], [185, 4, 1, "", "majority_consensus"], [185, 4, 1, "", "strict_consensus"]], "Bio.Phylo.NeXML": [[186, 3, 1, "", "Clade"], [186, 3, 1, "", "Tree"]], "Bio.Phylo.NeXML.Clade": [[186, 2, 1, "", "__init__"]], "Bio.Phylo.NeXML.Tree": [[186, 2, 1, "", "__init__"]], "Bio.Phylo.NeXMLIO": [[187, 1, 1, "", "NeXMLError"], [187, 3, 1, "", "Parser"], [187, 3, 1, "", "Writer"], [187, 4, 1, "", "cdao_to_obo"], [187, 4, 1, "", "matches"], [187, 4, 1, "", "parse"], [187, 4, 1, "", "qUri"], [187, 4, 1, "", "write"]], "Bio.Phylo.NeXMLIO.Parser": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "add_annotation"], [187, 2, 1, "", "from_string"], [187, 2, 1, "", "parse"]], "Bio.Phylo.NeXMLIO.Writer": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "new_label"], [187, 2, 1, "", "write"]], "Bio.Phylo.Newick": [[188, 3, 1, "", "Clade"], [188, 3, 1, "", "Tree"]], "Bio.Phylo.Newick.Clade": [[188, 2, 1, "", "__init__"]], "Bio.Phylo.Newick.Tree": [[188, 2, 1, "", "__init__"]], "Bio.Phylo.NewickIO": [[189, 1, 1, "", "NewickError"], [189, 3, 1, "", "Parser"], [189, 3, 1, "", "Writer"], [189, 4, 1, "", "parse"], [189, 4, 1, "", "write"]], "Bio.Phylo.NewickIO.Parser": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "from_string"], [189, 2, 1, "", "new_clade"], [189, 2, 1, "", "parse"], [189, 2, 1, "", "process_clade"]], "Bio.Phylo.NewickIO.Writer": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "to_strings"], [189, 2, 1, "", "write"]], "Bio.Phylo.NexusIO": [[190, 4, 1, "", "parse"], [190, 4, 1, "", "write"]], "Bio.Phylo.PAML": [[192, 0, 0, "-", "baseml"], [193, 0, 0, "-", "chi2"], [194, 0, 0, "-", "codeml"], [195, 0, 0, "-", "yn00"]], "Bio.Phylo.PAML.baseml": [[192, 3, 1, "", "Baseml"], [192, 1, 1, "", "BasemlError"], [192, 4, 1, "", "read"]], "Bio.Phylo.PAML.baseml.Baseml": [[192, 2, 1, "", "__init__"], [192, 2, 1, "", "read_ctl_file"], [192, 2, 1, "", "run"], [192, 2, 1, "", "write_ctl_file"]], "Bio.Phylo.PAML.chi2": [[193, 4, 1, "", "cdf_chi2"]], "Bio.Phylo.PAML.codeml": [[194, 3, 1, "", "Codeml"], [194, 1, 1, "", "CodemlError"], [194, 4, 1, "", "read"]], "Bio.Phylo.PAML.codeml.Codeml": [[194, 2, 1, "", "__init__"], [194, 2, 1, "", "print_options"], [194, 2, 1, "", "read_ctl_file"], [194, 2, 1, "", "run"], [194, 2, 1, "", "write_ctl_file"]], "Bio.Phylo.PAML.yn00": [[195, 3, 1, "", "Yn00"], [195, 1, 1, "", "Yn00Error"], [195, 4, 1, "", "read"]], "Bio.Phylo.PAML.yn00.Yn00": [[195, 2, 1, "", "__init__"], [195, 2, 1, "", "read_ctl_file"], [195, 2, 1, "", "run"], [195, 2, 1, "", "write_ctl_file"]], "Bio.Phylo.PhyloXML": [[196, 3, 1, "", "Accession"], [196, 3, 1, "", "Annotation"], [196, 3, 1, "", "BinaryCharacters"], [196, 3, 1, "", "BranchColor"], [196, 3, 1, "", "Clade"], [196, 3, 1, "", "CladeRelation"], [196, 3, 1, "", "Confidence"], [196, 3, 1, "", "Date"], [196, 3, 1, "", "Distribution"], [196, 3, 1, "", "DomainArchitecture"], [196, 3, 1, "", "Events"], [196, 3, 1, "", "Id"], [196, 3, 1, "", "MolSeq"], [196, 3, 1, "", "Other"], [196, 3, 1, "", "PhyloElement"], [196, 1, 1, "", "PhyloXMLWarning"], [196, 3, 1, "", "Phylogeny"], [196, 3, 1, "", "Phyloxml"], [196, 3, 1, "", "Point"], [196, 3, 1, "", "Polygon"], [196, 3, 1, "", "Property"], [196, 3, 1, "", "ProteinDomain"], [196, 3, 1, "", "Reference"], [196, 3, 1, "", "Sequence"], [196, 3, 1, "", "SequenceRelation"], [196, 3, 1, "", "Taxonomy"], [196, 3, 1, "", "Uri"]], "Bio.Phylo.PhyloXML.Accession": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "__str__"]], "Bio.Phylo.PhyloXML.Annotation": [[196, 2, 1, "", "__init__"], [196, 5, 1, "", "re_ref"]], "Bio.Phylo.PhyloXML.BinaryCharacters": [[196, 2, 1, "", "__init__"]], "Bio.Phylo.PhyloXML.BranchColor": [[196, 2, 1, "", "__init__"]], "Bio.Phylo.PhyloXML.Clade": [[196, 2, 1, "", "__init__"], [196, 6, 1, "", "confidence"], [196, 2, 1, "", "from_clade"], [196, 6, 1, "", "taxonomy"], [196, 2, 1, "", "to_phylogeny"]], "Bio.Phylo.PhyloXML.CladeRelation": [[196, 2, 1, "", "__init__"]], "Bio.Phylo.PhyloXML.Confidence": [[196, 2, 1, "", "__new__"], [196, 6, 1, "", "value"]], "Bio.Phylo.PhyloXML.Date": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "__str__"]], "Bio.Phylo.PhyloXML.Distribution": [[196, 2, 1, "", "__init__"]], "Bio.Phylo.PhyloXML.DomainArchitecture": [[196, 2, 1, "", "__init__"]], "Bio.Phylo.PhyloXML.Events": [[196, 2, 1, "", "__contains__"], [196, 2, 1, "", "__delitem__"], [196, 2, 1, "", "__getitem__"], [196, 2, 1, "", "__init__"], [196, 2, 1, "", "__iter__"], [196, 2, 1, "", "__len__"], [196, 2, 1, "", "__setitem__"], [196, 2, 1, "", "items"], [196, 2, 1, "", "keys"], [196, 5, 1, "", "ok_type"], [196, 2, 1, "", "values"]], "Bio.Phylo.PhyloXML.Id": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "__str__"]], "Bio.Phylo.PhyloXML.MolSeq": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "__str__"], [196, 5, 1, "", "re_value"]], "Bio.Phylo.PhyloXML.Other": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "__iter__"]], "Bio.Phylo.PhyloXML.Phylogeny": [[196, 2, 1, "", "__init__"], [196, 6, 1, "", "alignment"], [196, 2, 1, "", "as_phyloxml"], [196, 6, 1, "", "confidence"], [196, 2, 1, "", "from_clade"], [196, 2, 1, "", "from_tree"], [196, 2, 1, "", "to_alignment"], [196, 2, 1, "", "to_phyloxml_container"]], "Bio.Phylo.PhyloXML.Phyloxml": [[196, 2, 1, "", "__getitem__"], [196, 2, 1, "", "__init__"], [196, 2, 1, "", "__iter__"], [196, 2, 1, "", "__len__"], [196, 2, 1, "", "__str__"]], "Bio.Phylo.PhyloXML.Point": [[196, 2, 1, "", "__init__"]], "Bio.Phylo.PhyloXML.Polygon": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "__str__"]], "Bio.Phylo.PhyloXML.Property": [[196, 2, 1, "", "__init__"], [196, 5, 1, "", "ok_applies_to"], [196, 5, 1, "", "ok_datatype"], [196, 5, 1, "", "re_ref"]], "Bio.Phylo.PhyloXML.ProteinDomain": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "from_seqfeature"], [196, 2, 1, "", "to_seqfeature"]], "Bio.Phylo.PhyloXML.Reference": [[196, 2, 1, "", "__init__"], [196, 5, 1, "", "re_doi"]], "Bio.Phylo.PhyloXML.Sequence": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "from_seqrecord"], [196, 5, 1, "", "re_symbol"], [196, 2, 1, "", "to_seqrecord"], [196, 5, 1, "", "types"]], "Bio.Phylo.PhyloXML.SequenceRelation": [[196, 2, 1, "", "__init__"], [196, 5, 1, "", "ok_type"]], "Bio.Phylo.PhyloXML.Taxonomy": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "__str__"], [196, 5, 1, "", "ok_rank"], [196, 5, 1, "", "re_code"]], "Bio.Phylo.PhyloXML.Uri": [[196, 2, 1, "", "__init__"], [196, 2, 1, "", "__str__"]], "Bio.Phylo.PhyloXMLIO": [[197, 3, 1, "", "Parser"], [197, 1, 1, "", "PhyloXMLError"], [197, 3, 1, "", "Writer"], [197, 4, 1, "", "parse"], [197, 4, 1, "", "read"], [197, 4, 1, "", "write"]], "Bio.Phylo.PhyloXMLIO.Parser": [[197, 2, 1, "", "__init__"], [197, 2, 1, "", "accession"], [197, 2, 1, "", "annotation"], [197, 2, 1, "", "binary_characters"], [197, 2, 1, "", "clade_relation"], [197, 2, 1, "", "color"], [197, 2, 1, "", "confidence"], [197, 2, 1, "", "date"], [197, 2, 1, "", "distribution"], [197, 2, 1, "", "domain"], [197, 2, 1, "", "domain_architecture"], [197, 2, 1, "", "events"], [197, 2, 1, "", "id"], [197, 2, 1, "", "mol_seq"], [197, 2, 1, "", "other"], [197, 2, 1, "", "parse"], [197, 2, 1, "", "point"], [197, 2, 1, "", "polygon"], [197, 2, 1, "", "property"], [197, 2, 1, "", "read"], [197, 2, 1, "", "reference"], [197, 2, 1, "", "sequence_relation"], [197, 2, 1, "", "uri"]], "Bio.Phylo.PhyloXMLIO.Writer": [[197, 2, 1, "", "__init__"], [197, 2, 1, "", "accession"], [197, 2, 1, "", "alt"], [197, 2, 1, "", "annotation"], [197, 2, 1, "", "bc"], [197, 2, 1, "", "binary_characters"], [197, 2, 1, "", "blue"], [197, 2, 1, "", "branch_length"], [197, 2, 1, "", "clade"], [197, 2, 1, "", "clade_relation"], [197, 2, 1, "", "code"], [197, 2, 1, "", "color"], [197, 2, 1, "", "common_name"], [197, 2, 1, "", "confidence"], [197, 2, 1, "", "date"], [197, 2, 1, "", "desc"], [197, 2, 1, "", "description"], [197, 2, 1, "", "distribution"], [197, 2, 1, "", "domain"], [197, 2, 1, "", "domain_architecture"], [197, 2, 1, "", "duplications"], [197, 2, 1, "", "events"], [197, 2, 1, "", "green"], [197, 2, 1, "", "id"], [197, 2, 1, "", "lat"], [197, 2, 1, "", "location"], [197, 2, 1, "", "long"], [197, 2, 1, "", "losses"], [197, 2, 1, "", "maximum"], [197, 2, 1, "", "minimum"], [197, 2, 1, "", "mol_seq"], [197, 2, 1, "", "name"], [197, 2, 1, "", "node_id"], [197, 2, 1, "", "other"], [197, 2, 1, "", "phylogeny"], [197, 2, 1, "", "phyloxml"], [197, 2, 1, "", "point"], [197, 2, 1, "", "polygon"], [197, 2, 1, "", "property"], [197, 2, 1, "", "rank"], [197, 2, 1, "", "red"], [197, 2, 1, "", "reference"], [197, 2, 1, "", "scientific_name"], [197, 2, 1, "", "sequence"], [197, 2, 1, "", "sequence_relation"], [197, 2, 1, "", "speciations"], [197, 2, 1, "", "symbol"], [197, 2, 1, "", "synonym"], [197, 2, 1, "", "taxonomy"], [197, 2, 1, "", "type"], [197, 2, 1, "", "uri"], [197, 2, 1, "", "value"], [197, 2, 1, "", "width"], [197, 2, 1, "", "write"]], "Bio.Phylo.TreeConstruction": [[198, 3, 1, "", "DistanceCalculator"], [198, 3, 1, "", "DistanceMatrix"], [198, 3, 1, "", "DistanceTreeConstructor"], [198, 3, 1, "", "NNITreeSearcher"], [198, 3, 1, "", "ParsimonyScorer"], [198, 3, 1, "", "ParsimonyTreeConstructor"], [198, 3, 1, "", "Scorer"], [198, 3, 1, "", "TreeConstructor"], [198, 3, 1, "", "TreeSearcher"]], "Bio.Phylo.TreeConstruction.DistanceCalculator": [[198, 2, 1, "", "__init__"], [198, 5, 1, "", "dna_models"], [198, 2, 1, "", "get_distance"], [198, 5, 1, "", "models"], [198, 5, 1, "", "protein_models"]], "Bio.Phylo.TreeConstruction.DistanceMatrix": [[198, 2, 1, "", "__init__"], [198, 2, 1, "", "__setitem__"], [198, 2, 1, "", "format_phylip"]], "Bio.Phylo.TreeConstruction.DistanceTreeConstructor": [[198, 2, 1, "", "__init__"], [198, 2, 1, "", "build_tree"], [198, 5, 1, "", "methods"], [198, 2, 1, "", "nj"], [198, 2, 1, "", "upgma"]], "Bio.Phylo.TreeConstruction.NNITreeSearcher": [[198, 2, 1, "", "__init__"], [198, 2, 1, "", "search"]], "Bio.Phylo.TreeConstruction.ParsimonyScorer": [[198, 2, 1, "", "__init__"], [198, 2, 1, "", "get_score"]], "Bio.Phylo.TreeConstruction.ParsimonyTreeConstructor": [[198, 2, 1, "", "__init__"], [198, 2, 1, "", "build_tree"]], "Bio.Phylo.TreeConstruction.Scorer": [[198, 2, 1, "", "get_score"]], "Bio.Phylo.TreeConstruction.TreeConstructor": [[198, 2, 1, "", "build_tree"]], "Bio.Phylo.TreeConstruction.TreeSearcher": [[198, 2, 1, "", "search"]], "Bio.PopGen": [[200, 0, 0, "-", "GenePop"]], "Bio.PopGen.GenePop": [[201, 0, 0, "-", "Controller"], [202, 0, 0, "-", "EasyController"], [203, 0, 0, "-", "FileParser"], [204, 0, 0, "-", "LargeFileParser"], [200, 3, 1, "", "Record"], [200, 4, 1, "", "get_indiv"], [200, 4, 1, "", "read"]], "Bio.PopGen.GenePop.Controller": [[201, 3, 1, "", "GenePopController"]], "Bio.PopGen.GenePop.Controller.GenePopController": [[201, 2, 1, "", "__init__"], [201, 2, 1, "", "calc_allele_genotype_freqs"], [201, 2, 1, "", "calc_diversities_fis_with_identity"], [201, 2, 1, "", "calc_diversities_fis_with_size"], [201, 2, 1, "", "calc_fst_all"], [201, 2, 1, "", "calc_fst_pair"], [201, 2, 1, "", "calc_ibd_diplo"], [201, 2, 1, "", "calc_ibd_haplo"], [201, 2, 1, "", "calc_rho_all"], [201, 2, 1, "", "calc_rho_pair"], [201, 2, 1, "", "create_contingency_tables"], [201, 2, 1, "", "estimate_nm"], [201, 2, 1, "", "test_genic_diff_all"], [201, 2, 1, "", "test_genic_diff_pair"], [201, 2, 1, "", "test_genotypic_diff_all"], [201, 2, 1, "", "test_genotypic_diff_pair"], [201, 2, 1, "", "test_global_hz_deficiency"], [201, 2, 1, "", "test_global_hz_excess"], [201, 2, 1, "", "test_ld"], [201, 2, 1, "", "test_pop_hz_deficiency"], [201, 2, 1, "", "test_pop_hz_excess"], [201, 2, 1, "", "test_pop_hz_prob"]], "Bio.PopGen.GenePop.EasyController": [[202, 3, 1, "", "EasyController"]], "Bio.PopGen.GenePop.EasyController.EasyController": [[202, 2, 1, "", "__init__"], [202, 2, 1, "", "calc_ibd"], [202, 2, 1, "", "estimate_nm"], [202, 2, 1, "", "get_allele_frequency"], [202, 2, 1, "", "get_alleles"], [202, 2, 1, "", "get_alleles_all_pops"], [202, 2, 1, "", "get_avg_fis"], [202, 2, 1, "", "get_avg_fst_pair"], [202, 2, 1, "", "get_avg_fst_pair_locus"], [202, 2, 1, "", "get_basic_info"], [202, 2, 1, "", "get_f_stats"], [202, 2, 1, "", "get_fis"], [202, 2, 1, "", "get_genotype_count"], [202, 2, 1, "", "get_heterozygosity_info"], [202, 2, 1, "", "get_multilocus_f_stats"], [202, 2, 1, "", "test_hw_global"], [202, 2, 1, "", "test_hw_pop"], [202, 2, 1, "", "test_ld_all_pair"]], "Bio.PopGen.GenePop.FileParser": [[203, 3, 1, "", "FileRecord"], [203, 4, 1, "", "read"]], "Bio.PopGen.GenePop.FileParser.FileRecord": [[203, 2, 1, "", "__init__"], [203, 2, 1, "", "__str__"], [203, 2, 1, "", "get_individual"], [203, 2, 1, "", "remove_loci_by_name"], [203, 2, 1, "", "remove_loci_by_position"], [203, 2, 1, "", "remove_locus_by_name"], [203, 2, 1, "", "remove_locus_by_position"], [203, 2, 1, "", "remove_population"], [203, 2, 1, "", "seek_position"], [203, 2, 1, "", "skip_header"], [203, 2, 1, "", "skip_population"], [203, 2, 1, "", "start_read"]], "Bio.PopGen.GenePop.LargeFileParser": [[204, 3, 1, "", "Record"], [204, 4, 1, "", "get_indiv"], [204, 4, 1, "", "read"]], "Bio.PopGen.GenePop.LargeFileParser.Record": [[204, 2, 1, "", "__init__"], [204, 2, 1, "", "data_generator"]], "Bio.PopGen.GenePop.Record": [[200, 2, 1, "", "__init__"], [200, 2, 1, "", "__str__"], [200, 2, 1, "", "remove_locus_by_name"], [200, 2, 1, "", "remove_locus_by_position"], [200, 2, 1, "", "remove_population"], [200, 2, 1, "", "split_in_loci"], [200, 2, 1, "", "split_in_pops"]], "Bio.Restriction": [[206, 0, 0, "-", "PrintFormat"], [207, 0, 0, "-", "Restriction_Dictionary"]], "Bio.Restriction.PrintFormat": [[206, 3, 1, "", "PrintFormat"]], "Bio.Restriction.PrintFormat.PrintFormat": [[206, 5, 1, "", "Cmodulo"], [206, 5, 1, "", "ConsoleWidth"], [206, 5, 1, "", "Indent"], [206, 5, 1, "", "MaxSize"], [206, 5, 1, "", "NameWidth"], [206, 5, 1, "", "PrefWidth"], [206, 2, 1, "", "format_output"], [206, 5, 1, "", "linesize"], [206, 2, 1, "", "make_format"], [206, 2, 1, "", "print_as"], [206, 2, 1, "", "print_that"]], "Bio.SCOP": [[208, 3, 1, "", "Astral"], [209, 0, 0, "-", "Cla"], [210, 0, 0, "-", "Des"], [211, 0, 0, "-", "Dom"], [208, 3, 1, "", "Domain"], [212, 0, 0, "-", "Hie"], [208, 3, 1, "", "Node"], [213, 0, 0, "-", "Raf"], [214, 0, 0, "-", "Residues"], [208, 3, 1, "", "Scop"], [208, 4, 1, "", "cmp_sccs"], [208, 4, 1, "", "parse_domain"], [208, 4, 1, "", "search"]], "Bio.SCOP.Astral": [[208, 2, 1, "", "__init__"], [208, 2, 1, "", "domainsClusteredByEv"], [208, 2, 1, "", "domainsClusteredById"], [208, 2, 1, "", "getAstralDomainsFromFile"], [208, 2, 1, "", "getAstralDomainsFromSQL"], [208, 2, 1, "", "getSeq"], [208, 2, 1, "", "getSeqBySid"], [208, 2, 1, "", "hashedDomainsByEv"], [208, 2, 1, "", "hashedDomainsById"], [208, 2, 1, "", "isDomainInEv"], [208, 2, 1, "", "isDomainInId"], [208, 2, 1, "", "writeToSQL"]], "Bio.SCOP.Cla": [[209, 3, 1, "", "Index"], [209, 3, 1, "", "Record"], [209, 4, 1, "", "parse"]], "Bio.SCOP.Cla.Index": [[209, 2, 1, "", "__getitem__"], [209, 2, 1, "", "__init__"]], "Bio.SCOP.Cla.Record": [[209, 2, 1, "", "__init__"], [209, 2, 1, "", "__str__"]], "Bio.SCOP.Des": [[210, 3, 1, "", "Record"], [210, 4, 1, "", "parse"]], "Bio.SCOP.Des.Record": [[210, 2, 1, "", "__init__"], [210, 2, 1, "", "__str__"]], "Bio.SCOP.Dom": [[211, 3, 1, "", "Record"], [211, 4, 1, "", "parse"]], "Bio.SCOP.Dom.Record": [[211, 2, 1, "", "__init__"], [211, 2, 1, "", "__str__"]], "Bio.SCOP.Domain": [[208, 2, 1, "", "__init__"], [208, 2, 1, "", "__str__"], [208, 2, 1, "", "toClaRecord"], [208, 2, 1, "", "toDesRecord"]], "Bio.SCOP.Hie": [[212, 3, 1, "", "Record"], [212, 4, 1, "", "parse"]], "Bio.SCOP.Hie.Record": [[212, 2, 1, "", "__init__"], [212, 2, 1, "", "__str__"]], "Bio.SCOP.Node": [[208, 2, 1, "", "__init__"], [208, 2, 1, "", "__str__"], [208, 2, 1, "", "getAscendent"], [208, 2, 1, "", "getChildren"], [208, 2, 1, "", "getDescendents"], [208, 2, 1, "", "getParent"], [208, 2, 1, "", "toDesRecord"], [208, 2, 1, "", "toHieRecord"]], "Bio.SCOP.Raf": [[213, 3, 1, "", "Res"], [213, 3, 1, "", "SeqMap"], [213, 3, 1, "", "SeqMapIndex"], [213, 4, 1, "", "normalize_letters"], [213, 4, 1, "", "parse"]], "Bio.SCOP.Raf.Res": [[213, 2, 1, "", "__init__"]], "Bio.SCOP.Raf.SeqMap": [[213, 2, 1, "", "__add__"], [213, 2, 1, "", "__getitem__"], [213, 2, 1, "", "__iadd__"], [213, 2, 1, "", "__init__"], [213, 2, 1, "", "append"], [213, 2, 1, "", "extend"], [213, 2, 1, "", "getAtoms"], [213, 2, 1, "", "index"]], "Bio.SCOP.Raf.SeqMapIndex": [[213, 2, 1, "", "__getitem__"], [213, 2, 1, "", "__init__"], [213, 2, 1, "", "getSeqMap"]], "Bio.SCOP.Residues": [[214, 3, 1, "", "Residues"]], "Bio.SCOP.Residues.Residues": [[214, 2, 1, "", "__init__"], [214, 2, 1, "", "__str__"]], "Bio.SCOP.Scop": [[208, 2, 1, "", "__init__"], [208, 2, 1, "", "getAscendentFromSQL"], [208, 2, 1, "", "getDescendentsFromSQL"], [208, 2, 1, "", "getDomainBySid"], [208, 2, 1, "", "getDomainFromSQL"], [208, 2, 1, "", "getDomains"], [208, 2, 1, "", "getNodeBySunid"], [208, 2, 1, "", "getRoot"], [208, 2, 1, "", "write_cla"], [208, 2, 1, "", "write_cla_sql"], [208, 2, 1, "", "write_des"], [208, 2, 1, "", "write_des_sql"], [208, 2, 1, "", "write_hie"], [208, 2, 1, "", "write_hie_sql"]], "Bio.SVDSuperimposer": [[215, 3, 1, "", "SVDSuperimposer"]], "Bio.SVDSuperimposer.SVDSuperimposer": [[215, 2, 1, "", "__init__"], [215, 2, 1, "", "get_init_rms"], [215, 2, 1, "", "get_rms"], [215, 2, 1, "", "get_rotran"], [215, 2, 1, "", "get_transformed"], [215, 2, 1, "", "run"], [215, 2, 1, "", "set"]], "Bio.SearchIO": [[217, 0, 0, "-", "BlastIO"], [220, 0, 0, "-", "BlatIO"], [221, 0, 0, "-", "ExonerateIO"], [225, 0, 0, "-", "FastaIO"], [226, 0, 0, "-", "HHsuiteIO"], [228, 0, 0, "-", "HmmerIO"], [233, 0, 0, "-", "InterproscanIO"], [216, 4, 1, "", "convert"], [216, 4, 1, "", "index"], [216, 4, 1, "", "index_db"], [216, 4, 1, "", "parse"], [216, 4, 1, "", "read"], [216, 4, 1, "", "to_dict"], [216, 4, 1, "", "write"]], "Bio.SearchIO.BlastIO": [[218, 0, 0, "-", "blast_tab"], [219, 0, 0, "-", "blast_xml"]], "Bio.SearchIO.BlastIO.blast_tab": [[218, 3, 1, "", "BlastTabIndexer"], [218, 3, 1, "", "BlastTabParser"], [218, 3, 1, "", "BlastTabWriter"]], "Bio.SearchIO.BlastIO.blast_tab.BlastTabIndexer": [[218, 5, 1, "", "__abstractmethods__"], [218, 2, 1, "", "__init__"], [218, 2, 1, "", "__iter__"], [218, 2, 1, "", "get_raw"]], "Bio.SearchIO.BlastIO.blast_tab.BlastTabParser": [[218, 2, 1, "", "__init__"], [218, 2, 1, "", "__iter__"]], "Bio.SearchIO.BlastIO.blast_tab.BlastTabWriter": [[218, 2, 1, "", "__init__"], [218, 2, 1, "", "write_file"]], "Bio.SearchIO.BlastIO.blast_xml": [[219, 3, 1, "", "BlastXmlIndexer"], [219, 3, 1, "", "BlastXmlParser"], [219, 3, 1, "", "BlastXmlWriter"]], "Bio.SearchIO.BlastIO.blast_xml.BlastXmlIndexer": [[219, 5, 1, "", "__abstractmethods__"], [219, 2, 1, "", "__init__"], [219, 2, 1, "", "__iter__"], [219, 5, 1, "", "block_size"], [219, 2, 1, "", "get_raw"], [219, 5, 1, "", "qend_mark"], [219, 5, 1, "", "qstart_mark"]], "Bio.SearchIO.BlastIO.blast_xml.BlastXmlParser": [[219, 2, 1, "", "__init__"], [219, 2, 1, "", "__iter__"]], "Bio.SearchIO.BlastIO.blast_xml.BlastXmlWriter": [[219, 2, 1, "", "__init__"], [219, 2, 1, "", "write_file"]], "Bio.SearchIO.BlatIO": [[220, 3, 1, "", "BlatPslIndexer"], [220, 3, 1, "", "BlatPslParser"], [220, 3, 1, "", "BlatPslWriter"]], "Bio.SearchIO.BlatIO.BlatPslIndexer": [[220, 5, 1, "", "__abstractmethods__"], [220, 2, 1, "", "__init__"], [220, 2, 1, "", "__iter__"], [220, 2, 1, "", "get_raw"]], "Bio.SearchIO.BlatIO.BlatPslParser": [[220, 2, 1, "", "__init__"], [220, 2, 1, "", "__iter__"]], "Bio.SearchIO.BlatIO.BlatPslWriter": [[220, 2, 1, "", "__init__"], [220, 2, 1, "", "write_file"]], "Bio.SearchIO.ExonerateIO": [[222, 0, 0, "-", "exonerate_cigar"], [223, 0, 0, "-", "exonerate_text"], [224, 0, 0, "-", "exonerate_vulgar"]], "Bio.SearchIO.ExonerateIO.exonerate_cigar": [[222, 3, 1, "", "ExonerateCigarIndexer"], [222, 3, 1, "", "ExonerateCigarParser"]], "Bio.SearchIO.ExonerateIO.exonerate_cigar.ExonerateCigarIndexer": [[222, 5, 1, "", "__abstractmethods__"], [222, 2, 1, "", "get_qresult_id"]], "Bio.SearchIO.ExonerateIO.exonerate_cigar.ExonerateCigarParser": [[222, 5, 1, "", "__abstractmethods__"], [222, 2, 1, "", "parse_alignment_block"]], "Bio.SearchIO.ExonerateIO.exonerate_text": [[223, 3, 1, "", "ExonerateTextIndexer"], [223, 3, 1, "", "ExonerateTextParser"]], "Bio.SearchIO.ExonerateIO.exonerate_text.ExonerateTextIndexer": [[223, 5, 1, "", "__abstractmethods__"], [223, 2, 1, "", "get_qresult_id"], [223, 2, 1, "", "get_raw"]], "Bio.SearchIO.ExonerateIO.exonerate_text.ExonerateTextParser": [[223, 5, 1, "", "__abstractmethods__"], [223, 2, 1, "", "parse_alignment_block"]], "Bio.SearchIO.ExonerateIO.exonerate_vulgar": [[224, 3, 1, "", "ExonerateVulgarIndexer"], [224, 3, 1, "", "ExonerateVulgarParser"]], "Bio.SearchIO.ExonerateIO.exonerate_vulgar.ExonerateVulgarIndexer": [[224, 5, 1, "", "__abstractmethods__"], [224, 5, 1, "", "__annotations__"], [224, 2, 1, "", "get_qresult_id"], [224, 2, 1, "", "get_raw"]], "Bio.SearchIO.ExonerateIO.exonerate_vulgar.ExonerateVulgarParser": [[224, 5, 1, "", "__abstractmethods__"], [224, 2, 1, "", "parse_alignment_block"]], "Bio.SearchIO.FastaIO": [[225, 3, 1, "", "FastaM10Indexer"], [225, 3, 1, "", "FastaM10Parser"]], "Bio.SearchIO.FastaIO.FastaM10Indexer": [[225, 5, 1, "", "__abstractmethods__"], [225, 2, 1, "", "__init__"], [225, 2, 1, "", "__iter__"], [225, 2, 1, "", "get_raw"]], "Bio.SearchIO.FastaIO.FastaM10Parser": [[225, 2, 1, "", "__init__"], [225, 2, 1, "", "__iter__"]], "Bio.SearchIO.HHsuiteIO": [[227, 0, 0, "-", "hhsuite2_text"]], "Bio.SearchIO.HHsuiteIO.hhsuite2_text": [[227, 3, 1, "", "Hhsuite2TextParser"]], "Bio.SearchIO.HHsuiteIO.hhsuite2_text.Hhsuite2TextParser": [[227, 2, 1, "", "__init__"], [227, 2, 1, "", "__iter__"]], "Bio.SearchIO.HmmerIO": [[229, 0, 0, "-", "hmmer2_text"], [230, 0, 0, "-", "hmmer3_domtab"], [231, 0, 0, "-", "hmmer3_tab"], [232, 0, 0, "-", "hmmer3_text"]], "Bio.SearchIO.HmmerIO.hmmer2_text": [[229, 3, 1, "", "Hmmer2TextIndexer"], [229, 3, 1, "", "Hmmer2TextParser"]], "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextIndexer": [[229, 5, 1, "", "__abstractmethods__"], [229, 2, 1, "", "__iter__"], [229, 5, 1, "", "qresult_end"], [229, 5, 1, "", "qresult_start"]], "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextParser": [[229, 2, 1, "", "__init__"], [229, 2, 1, "", "__iter__"], [229, 2, 1, "", "parse_hits"], [229, 2, 1, "", "parse_hsp_alignments"], [229, 2, 1, "", "parse_hsps"], [229, 2, 1, "", "parse_key_value"], [229, 2, 1, "", "parse_preamble"], [229, 2, 1, "", "parse_qresult"], [229, 2, 1, "", "push_back"], [229, 2, 1, "", "read_next"]], "Bio.SearchIO.HmmerIO.hmmer3_domtab": [[230, 3, 1, "", "Hmmer3DomtabHmmhitIndexer"], [230, 3, 1, "", "Hmmer3DomtabHmmhitParser"], [230, 3, 1, "", "Hmmer3DomtabHmmhitWriter"], [230, 3, 1, "", "Hmmer3DomtabHmmqueryIndexer"], [230, 3, 1, "", "Hmmer3DomtabHmmqueryParser"], [230, 3, 1, "", "Hmmer3DomtabHmmqueryWriter"]], "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmhitIndexer": [[230, 5, 1, "", "__abstractmethods__"]], "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmhitParser": [[230, 5, 1, "", "hmm_as_hit"]], "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmhitWriter": [[230, 2, 1, "", "__init__"], [230, 5, 1, "", "hmm_as_hit"], [230, 2, 1, "", "write_file"]], "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmqueryIndexer": [[230, 5, 1, "", "__abstractmethods__"]], "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmqueryParser": [[230, 5, 1, "", "hmm_as_hit"]], "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmqueryWriter": [[230, 5, 1, "", "hmm_as_hit"]], "Bio.SearchIO.HmmerIO.hmmer3_tab": [[231, 3, 1, "", "Hmmer3TabIndexer"], [231, 3, 1, "", "Hmmer3TabParser"], [231, 3, 1, "", "Hmmer3TabWriter"]], "Bio.SearchIO.HmmerIO.hmmer3_tab.Hmmer3TabIndexer": [[231, 5, 1, "", "__abstractmethods__"], [231, 2, 1, "", "__iter__"], [231, 2, 1, "", "get_raw"]], "Bio.SearchIO.HmmerIO.hmmer3_tab.Hmmer3TabParser": [[231, 2, 1, "", "__init__"], [231, 2, 1, "", "__iter__"]], "Bio.SearchIO.HmmerIO.hmmer3_tab.Hmmer3TabWriter": [[231, 2, 1, "", "__init__"], [231, 2, 1, "", "write_file"]], "Bio.SearchIO.HmmerIO.hmmer3_text": [[232, 3, 1, "", "Hmmer3TextIndexer"], [232, 3, 1, "", "Hmmer3TextParser"]], "Bio.SearchIO.HmmerIO.hmmer3_text.Hmmer3TextIndexer": [[232, 5, 1, "", "__abstractmethods__"], [232, 2, 1, "", "__iter__"], [232, 5, 1, "", "qresult_end"], [232, 5, 1, "", "qresult_start"]], "Bio.SearchIO.HmmerIO.hmmer3_text.Hmmer3TextParser": [[232, 2, 1, "", "__init__"], [232, 2, 1, "", "__iter__"]], "Bio.SearchIO.InterproscanIO": [[234, 0, 0, "-", "interproscan_xml"]], "Bio.SearchIO.InterproscanIO.interproscan_xml": [[234, 3, 1, "", "InterproscanXmlParser"]], "Bio.SearchIO.InterproscanIO.interproscan_xml.InterproscanXmlParser": [[234, 2, 1, "", "__init__"], [234, 2, 1, "", "__iter__"]], "Bio.Seq": [[235, 3, 1, "", "MutableSeq"], [235, 3, 1, "", "Seq"], [235, 3, 1, "", "SequenceDataAbstractBaseClass"], [235, 1, 1, "", "UndefinedSequenceError"], [235, 4, 1, "", "back_transcribe"], [235, 4, 1, "", "complement"], [235, 4, 1, "", "complement_rna"], [235, 4, 1, "", "reverse_complement"], [235, 4, 1, "", "reverse_complement_rna"], [235, 4, 1, "", "transcribe"], [235, 4, 1, "", "translate"]], "Bio.Seq.MutableSeq": [[235, 5, 1, "", "__abstractmethods__"], [235, 2, 1, "", "__delitem__"], [235, 2, 1, "", "__init__"], [235, 2, 1, "", "__setitem__"], [235, 2, 1, "", "append"], [235, 2, 1, "", "extend"], [235, 2, 1, "", "insert"], [235, 2, 1, "", "pop"], [235, 2, 1, "", "remove"], [235, 2, 1, "", "reverse"]], "Bio.Seq.Seq": [[235, 5, 1, "", "__abstractmethods__"], [235, 5, 1, "", "__annotations__"], [235, 2, 1, "", "__hash__"], [235, 2, 1, "", "__init__"]], "Bio.Seq.SequenceDataAbstractBaseClass": [[235, 5, 1, "", "__abstractmethods__"], [235, 2, 1, "", "__add__"], [235, 2, 1, "", "__bytes__"], [235, 2, 1, "", "__contains__"], [235, 2, 1, "", "__eq__"], [235, 2, 1, "", "__ge__"], [235, 2, 1, "", "__getitem__"], [235, 2, 1, "", "__gt__"], [235, 2, 1, "", "__hash__"], [235, 2, 1, "", "__init__"], [235, 2, 1, "", "__le__"], [235, 2, 1, "", "__len__"], [235, 2, 1, "", "__lt__"], [235, 2, 1, "", "__mul__"], [235, 2, 1, "", "__radd__"], [235, 5, 1, "", "__slots__"], [235, 2, 1, "", "count"], [235, 2, 1, "", "decode"], [235, 6, 1, "", "defined"], [235, 6, 1, "", "defined_ranges"], [235, 2, 1, "", "endswith"], [235, 2, 1, "", "find"], [235, 2, 1, "", "index"], [235, 2, 1, "", "islower"], [235, 2, 1, "", "isupper"], [235, 2, 1, "", "lower"], [235, 2, 1, "", "lstrip"], [235, 2, 1, "", "removeprefix"], [235, 2, 1, "", "removesuffix"], [235, 2, 1, "", "replace"], [235, 2, 1, "", "rfind"], [235, 2, 1, "", "rindex"], [235, 2, 1, "", "rsplit"], [235, 2, 1, "", "rstrip"], [235, 2, 1, "", "split"], [235, 2, 1, "", "startswith"], [235, 2, 1, "", "strip"], [235, 2, 1, "", "translate"], [235, 2, 1, "", "upper"]], "Bio.SeqFeature": [[236, 3, 1, "", "AfterPosition"], [236, 3, 1, "", "BeforePosition"], [236, 3, 1, "", "BetweenPosition"], [236, 3, 1, "", "CompoundLocation"], [236, 3, 1, "", "ExactPosition"], [236, 5, 1, "", "FeatureLocation"], [236, 3, 1, "", "Location"], [236, 1, 1, "", "LocationParserError"], [236, 3, 1, "", "OneOfPosition"], [236, 3, 1, "", "Position"], [236, 3, 1, "", "Reference"], [236, 3, 1, "", "SeqFeature"], [236, 3, 1, "", "SimpleLocation"], [236, 3, 1, "", "UncertainPosition"], [236, 3, 1, "", "UnknownPosition"], [236, 3, 1, "", "WithinPosition"]], "Bio.SeqFeature.AfterPosition": [[236, 5, 1, "", "__abstractmethods__"], [236, 2, 1, "", "__add__"], [236, 2, 1, "", "__new__"], [236, 2, 1, "", "__repr__"], [236, 2, 1, "", "__str__"]], "Bio.SeqFeature.BeforePosition": [[236, 5, 1, "", "__abstractmethods__"], [236, 2, 1, "", "__add__"], [236, 2, 1, "", "__new__"], [236, 2, 1, "", "__repr__"], [236, 2, 1, "", "__str__"]], "Bio.SeqFeature.BetweenPosition": [[236, 5, 1, "", "__abstractmethods__"], [236, 2, 1, "", "__add__"], [236, 2, 1, "", "__getnewargs__"], [236, 2, 1, "", "__new__"], [236, 2, 1, "", "__repr__"], [236, 2, 1, "", "__str__"]], "Bio.SeqFeature.CompoundLocation": [[236, 5, 1, "", "__abstractmethods__"], [236, 2, 1, "", "__add__"], [236, 2, 1, "", "__contains__"], [236, 2, 1, "", "__eq__"], [236, 5, 1, "", "__hash__"], [236, 2, 1, "", "__init__"], [236, 2, 1, "", "__iter__"], [236, 2, 1, "", "__len__"], [236, 2, 1, "", "__nonzero__"], [236, 2, 1, "", "__radd__"], [236, 2, 1, "", "__repr__"], [236, 2, 1, "", "__str__"], [236, 6, 1, "", "end"], [236, 2, 1, "", "extract"], [236, 6, 1, "", "ref"], [236, 6, 1, "", "ref_db"], [236, 6, 1, "", "start"], [236, 6, 1, "", "strand"]], "Bio.SeqFeature.ExactPosition": [[236, 5, 1, "", "__abstractmethods__"], [236, 2, 1, "", "__add__"], [236, 2, 1, "", "__new__"], [236, 2, 1, "", "__repr__"], [236, 2, 1, "", "__str__"]], "Bio.SeqFeature.Location": [[236, 5, 1, "", "__abstractmethods__"], [236, 2, 1, "", "__repr__"], [236, 2, 1, "", "fromstring"]], "Bio.SeqFeature.OneOfPosition": [[236, 5, 1, "", "__abstractmethods__"], [236, 2, 1, "", "__add__"], [236, 2, 1, "", "__getnewargs__"], [236, 2, 1, "", "__new__"], [236, 2, 1, "", "__repr__"], [236, 2, 1, "", "__str__"]], "Bio.SeqFeature.Position": [[236, 5, 1, "", "__abstractmethods__"], [236, 2, 1, "", "__repr__"], [236, 2, 1, "", "fromstring"]], "Bio.SeqFeature.Reference": [[236, 2, 1, "", "__eq__"], [236, 5, 1, "", "__hash__"], [236, 2, 1, "", "__init__"], [236, 2, 1, "", "__repr__"], [236, 2, 1, "", "__str__"]], "Bio.SeqFeature.SeqFeature": [[236, 2, 1, "", "__bool__"], [236, 2, 1, "", "__contains__"], [236, 2, 1, "", "__eq__"], [236, 5, 1, "", "__hash__"], [236, 2, 1, "", "__init__"], [236, 2, 1, "", "__iter__"], [236, 2, 1, "", "__len__"], [236, 2, 1, "", "__repr__"], [236, 2, 1, "", "__str__"], [236, 2, 1, "", "extract"], [236, 6, 1, "", "ref"], [236, 6, 1, "", "ref_db"], [236, 6, 1, "", "strand"], [236, 2, 1, "", "translate"]], "Bio.SeqFeature.SimpleLocation": [[236, 5, 1, "", "__abstractmethods__"], [236, 2, 1, "", "__add__"], [236, 2, 1, "", "__contains__"], [236, 2, 1, "", "__eq__"], [236, 5, 1, "", "__hash__"], [236, 2, 1, "", "__init__"], [236, 2, 1, "", "__iter__"], [236, 2, 1, "", "__len__"], [236, 2, 1, "", "__nonzero__"], [236, 2, 1, "", "__radd__"], [236, 2, 1, "", "__repr__"], [236, 2, 1, "", "__str__"], [236, 2, 1, "", "__sub__"], [236, 6, 1, "", "end"], [236, 2, 1, "", "extract"], [236, 2, 1, "", "fromstring"], [236, 6, 1, "", "parts"], [236, 6, 1, "", "start"], [236, 6, 1, "", "strand"]], "Bio.SeqFeature.UncertainPosition": [[236, 5, 1, "", "__abstractmethods__"]], "Bio.SeqFeature.UnknownPosition": [[236, 5, 1, "", "__abstractmethods__"], [236, 2, 1, "", "__add__"], [236, 2, 1, "", "__hash__"], [236, 2, 1, "", "__repr__"]], "Bio.SeqFeature.WithinPosition": [[236, 5, 1, "", "__abstractmethods__"], [236, 2, 1, "", "__add__"], [236, 2, 1, "", "__getnewargs__"], [236, 2, 1, "", "__new__"], [236, 2, 1, "", "__repr__"], [236, 2, 1, "", "__str__"]], "Bio.SeqIO": [[238, 0, 0, "-", "AbiIO"], [239, 0, 0, "-", "AceIO"], [240, 0, 0, "-", "FastaIO"], [241, 0, 0, "-", "GckIO"], [242, 0, 0, "-", "GfaIO"], [243, 0, 0, "-", "IgIO"], [244, 0, 0, "-", "InsdcIO"], [245, 0, 0, "-", "Interfaces"], [246, 0, 0, "-", "NibIO"], [247, 0, 0, "-", "PdbIO"], [248, 0, 0, "-", "PhdIO"], [249, 0, 0, "-", "PirIO"], [250, 0, 0, "-", "QualityIO"], [251, 0, 0, "-", "SeqXmlIO"], [252, 0, 0, "-", "SffIO"], [253, 0, 0, "-", "SnapGeneIO"], [254, 0, 0, "-", "SwissIO"], [255, 0, 0, "-", "TabIO"], [256, 0, 0, "-", "TwoBitIO"], [257, 0, 0, "-", "UniprotIO"], [258, 0, 0, "-", "XdnaIO"], [237, 4, 1, "", "convert"], [237, 4, 1, "", "index"], [237, 4, 1, "", "index_db"], [237, 4, 1, "", "parse"], [237, 4, 1, "", "read"], [237, 4, 1, "", "to_dict"], [237, 4, 1, "", "write"]], "Bio.SeqIO.AbiIO": [[238, 3, 1, "", "AbiIterator"]], "Bio.SeqIO.AbiIO.AbiIterator": [[238, 5, 1, "", "__abstractmethods__"], [238, 2, 1, "", "__init__"], [238, 5, 1, "", "__parameters__"], [238, 2, 1, "", "iterate"], [238, 2, 1, "", "parse"]], "Bio.SeqIO.AceIO": [[239, 4, 1, "", "AceIterator"]], "Bio.SeqIO.FastaIO": [[240, 3, 1, "", "FastaIterator"], [240, 3, 1, "", "FastaTwoLineIterator"], [240, 4, 1, "", "FastaTwoLineParser"], [240, 3, 1, "", "FastaTwoLineWriter"], [240, 3, 1, "", "FastaWriter"], [240, 4, 1, "", "SimpleFastaParser"], [240, 4, 1, "", "as_fasta"], [240, 4, 1, "", "as_fasta_2line"]], "Bio.SeqIO.FastaIO.FastaIterator": [[240, 5, 1, "", "__abstractmethods__"], [240, 2, 1, "", "__init__"], [240, 5, 1, "", "__parameters__"], [240, 2, 1, "", "iterate"], [240, 2, 1, "", "parse"]], "Bio.SeqIO.FastaIO.FastaTwoLineIterator": [[240, 5, 1, "", "__abstractmethods__"], [240, 2, 1, "", "__init__"], [240, 5, 1, "", "__parameters__"], [240, 2, 1, "", "iterate"], [240, 2, 1, "", "parse"]], "Bio.SeqIO.FastaIO.FastaTwoLineWriter": [[240, 2, 1, "", "__init__"]], "Bio.SeqIO.FastaIO.FastaWriter": [[240, 2, 1, "", "__init__"], [240, 2, 1, "", "write_record"]], "Bio.SeqIO.GckIO": [[241, 3, 1, "", "GckIterator"]], "Bio.SeqIO.GckIO.GckIterator": [[241, 5, 1, "", "__abstractmethods__"], [241, 2, 1, "", "__init__"], [241, 5, 1, "", "__parameters__"], [241, 2, 1, "", "parse"]], "Bio.SeqIO.GfaIO": [[242, 4, 1, "", "Gfa1Iterator"], [242, 4, 1, "", "Gfa2Iterator"]], "Bio.SeqIO.IgIO": [[243, 3, 1, "", "IgIterator"]], "Bio.SeqIO.IgIO.IgIterator": [[243, 5, 1, "", "__abstractmethods__"], [243, 2, 1, "", "__init__"], [243, 5, 1, "", "__parameters__"], [243, 2, 1, "", "iterate"], [243, 2, 1, "", "parse"]], "Bio.SeqIO.InsdcIO": [[244, 3, 1, "", "EmblCdsFeatureIterator"], [244, 3, 1, "", "EmblIterator"], [244, 3, 1, "", "EmblWriter"], [244, 3, 1, "", "GenBankCdsFeatureIterator"], [244, 3, 1, "", "GenBankIterator"], [244, 3, 1, "", "GenBankWriter"], [244, 3, 1, "", "ImgtIterator"], [244, 3, 1, "", "ImgtWriter"]], "Bio.SeqIO.InsdcIO.EmblCdsFeatureIterator": [[244, 5, 1, "", "__abstractmethods__"], [244, 2, 1, "", "__init__"], [244, 5, 1, "", "__parameters__"], [244, 2, 1, "", "parse"]], "Bio.SeqIO.InsdcIO.EmblIterator": [[244, 5, 1, "", "__abstractmethods__"], [244, 2, 1, "", "__init__"], [244, 5, 1, "", "__parameters__"], [244, 2, 1, "", "parse"]], "Bio.SeqIO.InsdcIO.EmblWriter": [[244, 5, 1, "", "BLOCKS_PER_LINE"], [244, 5, 1, "", "FEATURE_HEADER"], [244, 5, 1, "", "HEADER_WIDTH"], [244, 5, 1, "", "LETTERS_PER_BLOCK"], [244, 5, 1, "", "LETTERS_PER_LINE"], [244, 5, 1, "", "POSITION_PADDING"], [244, 5, 1, "", "QUALIFIER_INDENT"], [244, 5, 1, "", "QUALIFIER_INDENT_STR"], [244, 5, 1, "", "QUALIFIER_INDENT_TMP"], [244, 2, 1, "", "write_record"]], "Bio.SeqIO.InsdcIO.GenBankCdsFeatureIterator": [[244, 5, 1, "", "__abstractmethods__"], [244, 2, 1, "", "__init__"], [244, 5, 1, "", "__parameters__"], [244, 2, 1, "", "parse"]], "Bio.SeqIO.InsdcIO.GenBankIterator": [[244, 5, 1, "", "__abstractmethods__"], [244, 2, 1, "", "__init__"], [244, 5, 1, "", "__parameters__"], [244, 2, 1, "", "parse"]], "Bio.SeqIO.InsdcIO.GenBankWriter": [[244, 5, 1, "", "HEADER_WIDTH"], [244, 5, 1, "", "LETTERS_PER_LINE"], [244, 5, 1, "", "QUALIFIER_INDENT"], [244, 5, 1, "", "SEQUENCE_INDENT"], [244, 5, 1, "", "STRUCTURED_COMMENT_DELIM"], [244, 5, 1, "", "STRUCTURED_COMMENT_END"], [244, 5, 1, "", "STRUCTURED_COMMENT_START"], [244, 2, 1, "", "write_record"]], "Bio.SeqIO.InsdcIO.ImgtIterator": [[244, 5, 1, "", "__abstractmethods__"], [244, 2, 1, "", "__init__"], [244, 5, 1, "", "__parameters__"], [244, 2, 1, "", "parse"]], "Bio.SeqIO.InsdcIO.ImgtWriter": [[244, 5, 1, "", "FEATURE_HEADER"], [244, 5, 1, "", "HEADER_WIDTH"], [244, 5, 1, "", "QUALIFIER_INDENT"], [244, 5, 1, "", "QUALIFIER_INDENT_STR"], [244, 5, 1, "", "QUALIFIER_INDENT_TMP"]], "Bio.SeqIO.Interfaces": [[245, 3, 1, "", "SequenceIterator"], [245, 3, 1, "", "SequenceWriter"]], "Bio.SeqIO.Interfaces.SequenceIterator": [[245, 5, 1, "", "__abstractmethods__"], [245, 2, 1, "", "__init__"], [245, 2, 1, "", "__iter__"], [245, 2, 1, "", "__next__"], [245, 5, 1, "", "__orig_bases__"], [245, 5, 1, "", "__parameters__"], [245, 2, 1, "", "parse"]], "Bio.SeqIO.Interfaces.SequenceWriter": [[245, 2, 1, "", "__init__"], [245, 2, 1, "", "clean"], [245, 2, 1, "", "write_file"], [245, 2, 1, "", "write_footer"], [245, 2, 1, "", "write_header"], [245, 2, 1, "", "write_record"], [245, 2, 1, "", "write_records"]], "Bio.SeqIO.NibIO": [[246, 3, 1, "", "NibIterator"], [246, 3, 1, "", "NibWriter"]], "Bio.SeqIO.NibIO.NibIterator": [[246, 5, 1, "", "__abstractmethods__"], [246, 2, 1, "", "__init__"], [246, 5, 1, "", "__parameters__"], [246, 2, 1, "", "iterate"], [246, 2, 1, "", "parse"]], "Bio.SeqIO.NibIO.NibWriter": [[246, 2, 1, "", "__init__"], [246, 2, 1, "", "write_file"], [246, 2, 1, "", "write_header"], [246, 2, 1, "", "write_record"]], "Bio.SeqIO.PdbIO": [[247, 4, 1, "", "AtomIterator"], [247, 4, 1, "", "CifAtomIterator"], [247, 4, 1, "", "CifSeqresIterator"], [247, 4, 1, "", "PdbAtomIterator"], [247, 3, 1, "", "PdbSeqresIterator"]], "Bio.SeqIO.PdbIO.PdbSeqresIterator": [[247, 5, 1, "", "__abstractmethods__"], [247, 2, 1, "", "__init__"], [247, 5, 1, "", "__parameters__"], [247, 2, 1, "", "iterate"], [247, 2, 1, "", "parse"]], "Bio.SeqIO.PhdIO": [[248, 4, 1, "", "PhdIterator"], [248, 3, 1, "", "PhdWriter"]], "Bio.SeqIO.PhdIO.PhdWriter": [[248, 2, 1, "", "__init__"], [248, 2, 1, "", "write_record"]], "Bio.SeqIO.PirIO": [[249, 3, 1, "", "PirIterator"], [249, 3, 1, "", "PirWriter"]], "Bio.SeqIO.PirIO.PirIterator": [[249, 5, 1, "", "__abstractmethods__"], [249, 2, 1, "", "__init__"], [249, 5, 1, "", "__parameters__"], [249, 2, 1, "", "iterate"], [249, 2, 1, "", "parse"]], "Bio.SeqIO.PirIO.PirWriter": [[249, 2, 1, "", "__init__"], [249, 2, 1, "", "write_record"]], "Bio.SeqIO.QualityIO": [[250, 4, 1, "", "FastqGeneralIterator"], [250, 4, 1, "", "FastqIlluminaIterator"], [250, 3, 1, "", "FastqIlluminaWriter"], [250, 3, 1, "", "FastqPhredIterator"], [250, 3, 1, "", "FastqPhredWriter"], [250, 4, 1, "", "FastqSolexaIterator"], [250, 3, 1, "", "FastqSolexaWriter"], [250, 4, 1, "", "PairedFastaQualIterator"], [250, 3, 1, "", "QualPhredIterator"], [250, 3, 1, "", "QualPhredWriter"], [250, 4, 1, "", "as_fastq"], [250, 4, 1, "", "as_fastq_illumina"], [250, 4, 1, "", "as_fastq_solexa"], [250, 4, 1, "", "as_qual"], [250, 4, 1, "", "phred_quality_from_solexa"], [250, 4, 1, "", "solexa_quality_from_phred"]], "Bio.SeqIO.QualityIO.FastqIlluminaWriter": [[250, 2, 1, "", "write_record"]], "Bio.SeqIO.QualityIO.FastqPhredIterator": [[250, 5, 1, "", "__abstractmethods__"], [250, 2, 1, "", "__init__"], [250, 5, 1, "", "__orig_bases__"], [250, 5, 1, "", "__parameters__"], [250, 2, 1, "", "iterate"], [250, 2, 1, "", "parse"]], "Bio.SeqIO.QualityIO.FastqPhredWriter": [[250, 2, 1, "", "write_record"]], "Bio.SeqIO.QualityIO.FastqSolexaWriter": [[250, 2, 1, "", "write_record"]], "Bio.SeqIO.QualityIO.QualPhredIterator": [[250, 5, 1, "", "__abstractmethods__"], [250, 2, 1, "", "__init__"], [250, 5, 1, "", "__parameters__"], [250, 2, 1, "", "iterate"], [250, 2, 1, "", "parse"]], "Bio.SeqIO.QualityIO.QualPhredWriter": [[250, 2, 1, "", "__init__"], [250, 2, 1, "", "write_record"]], "Bio.SeqIO.SeqXmlIO": [[251, 3, 1, "", "ContentHandler"], [251, 3, 1, "", "SeqXmlIterator"], [251, 3, 1, "", "SeqXmlWriter"]], "Bio.SeqIO.SeqXmlIO.ContentHandler": [[251, 2, 1, "", "__init__"], [251, 2, 1, "", "characters"], [251, 2, 1, "", "endDBRefElement"], [251, 2, 1, "", "endDescriptionElement"], [251, 2, 1, "", "endEntryElement"], [251, 2, 1, "", "endPropertyElement"], [251, 2, 1, "", "endSeqXMLElement"], [251, 2, 1, "", "endSequenceElement"], [251, 2, 1, "", "endSpeciesElement"], [251, 2, 1, "", "startDBRefElement"], [251, 2, 1, "", "startDescriptionElement"], [251, 2, 1, "", "startDocument"], [251, 2, 1, "", "startEntryElement"], [251, 2, 1, "", "startEntryFieldElement"], [251, 2, 1, "", "startEntryFieldElementVersion01"], [251, 2, 1, "", "startPropertyElement"], [251, 2, 1, "", "startSeqXMLElement"], [251, 2, 1, "", "startSequenceElement"], [251, 2, 1, "", "startSpeciesElement"]], "Bio.SeqIO.SeqXmlIO.SeqXmlIterator": [[251, 5, 1, "", "BLOCK"], [251, 5, 1, "", "__abstractmethods__"], [251, 2, 1, "", "__init__"], [251, 5, 1, "", "__parameters__"], [251, 2, 1, "", "iterate"], [251, 2, 1, "", "parse"]], "Bio.SeqIO.SeqXmlIO.SeqXmlWriter": [[251, 2, 1, "", "__init__"], [251, 2, 1, "", "write_footer"], [251, 2, 1, "", "write_header"], [251, 2, 1, "", "write_record"]], "Bio.SeqIO.SffIO": [[252, 4, 1, "", "ReadRocheXmlManifest"], [252, 3, 1, "", "SffIterator"], [252, 3, 1, "", "SffWriter"]], "Bio.SeqIO.SffIO.SffIterator": [[252, 5, 1, "", "__abstractmethods__"], [252, 2, 1, "", "__init__"], [252, 5, 1, "", "__parameters__"], [252, 2, 1, "", "iterate"], [252, 2, 1, "", "parse"]], "Bio.SeqIO.SffIO.SffWriter": [[252, 2, 1, "", "__init__"], [252, 2, 1, "", "write_file"], [252, 2, 1, "", "write_header"], [252, 2, 1, "", "write_record"]], "Bio.SeqIO.SnapGeneIO": [[253, 3, 1, "", "SnapGeneIterator"]], "Bio.SeqIO.SnapGeneIO.SnapGeneIterator": [[253, 5, 1, "", "__abstractmethods__"], [253, 2, 1, "", "__init__"], [253, 5, 1, "", "__parameters__"], [253, 2, 1, "", "iterate"], [253, 2, 1, "", "parse"]], "Bio.SeqIO.SwissIO": [[254, 4, 1, "", "SwissIterator"]], "Bio.SeqIO.TabIO": [[255, 3, 1, "", "TabIterator"], [255, 3, 1, "", "TabWriter"], [255, 4, 1, "", "as_tab"]], "Bio.SeqIO.TabIO.TabIterator": [[255, 5, 1, "", "__abstractmethods__"], [255, 2, 1, "", "__init__"], [255, 5, 1, "", "__parameters__"], [255, 2, 1, "", "iterate"], [255, 2, 1, "", "parse"]], "Bio.SeqIO.TabIO.TabWriter": [[255, 2, 1, "", "write_record"]], "Bio.SeqIO.TwoBitIO": [[256, 3, 1, "", "TwoBitIterator"]], "Bio.SeqIO.TwoBitIO.TwoBitIterator": [[256, 5, 1, "", "__abstractmethods__"], [256, 2, 1, "", "__getitem__"], [256, 2, 1, "", "__init__"], [256, 2, 1, "", "__len__"], [256, 5, 1, "", "__parameters__"], [256, 2, 1, "", "keys"], [256, 2, 1, "", "parse"]], "Bio.SeqIO.UniprotIO": [[257, 3, 1, "", "Parser"], [257, 4, 1, "", "UniprotIterator"]], "Bio.SeqIO.UniprotIO.Parser": [[257, 2, 1, "", "__init__"], [257, 2, 1, "", "parse"]], "Bio.SeqIO.XdnaIO": [[258, 3, 1, "", "XdnaIterator"], [258, 3, 1, "", "XdnaWriter"]], "Bio.SeqIO.XdnaIO.XdnaIterator": [[258, 5, 1, "", "__abstractmethods__"], [258, 2, 1, "", "__init__"], [258, 5, 1, "", "__parameters__"], [258, 2, 1, "", "iterate"], [258, 2, 1, "", "parse"]], "Bio.SeqIO.XdnaIO.XdnaWriter": [[258, 2, 1, "", "__init__"], [258, 2, 1, "", "write_file"]], "Bio.SeqRecord": [[259, 3, 1, "", "SeqRecord"]], "Bio.SeqRecord.SeqRecord": [[259, 2, 1, "", "__add__"], [259, 5, 1, "", "__annotations__"], [259, 2, 1, "", "__bool__"], [259, 2, 1, "", "__bytes__"], [259, 2, 1, "", "__contains__"], [259, 2, 1, "", "__eq__"], [259, 2, 1, "", "__format__"], [259, 2, 1, "", "__ge__"], [259, 2, 1, "", "__getitem__"], [259, 2, 1, "", "__gt__"], [259, 5, 1, "", "__hash__"], [259, 2, 1, "", "__init__"], [259, 2, 1, "", "__iter__"], [259, 2, 1, "", "__le__"], [259, 2, 1, "", "__len__"], [259, 2, 1, "", "__lt__"], [259, 2, 1, "", "__ne__"], [259, 2, 1, "", "__radd__"], [259, 2, 1, "", "__repr__"], [259, 2, 1, "", "__str__"], [259, 5, 1, "", "annotations"], [259, 2, 1, "", "count"], [259, 5, 1, "", "dbxrefs"], [259, 2, 1, "", "format"], [259, 2, 1, "", "islower"], [259, 2, 1, "", "isupper"], [259, 6, 1, "", "letter_annotations"], [259, 2, 1, "", "lower"], [259, 2, 1, "", "reverse_complement"], [259, 6, 1, "", "seq"], [259, 2, 1, "", "translate"], [259, 2, 1, "", "upper"]], "Bio.SeqUtils": [[261, 0, 0, "-", "CheckSum"], [260, 3, 1, "", "CodonAdaptationIndex"], [260, 4, 1, "", "GC123"], [260, 4, 1, "", "GC_skew"], [262, 0, 0, "-", "IsoelectricPoint"], [263, 0, 0, "-", "MeltingTemp"], [264, 0, 0, "-", "ProtParam"], [265, 0, 0, "-", "ProtParamData"], [260, 4, 1, "", "gc_fraction"], [266, 0, 0, "-", "lcc"], [260, 4, 1, "", "molecular_weight"], [260, 4, 1, "", "nt_search"], [260, 4, 1, "", "seq1"], [260, 4, 1, "", "seq3"], [260, 4, 1, "", "six_frame_translations"], [260, 4, 1, "", "xGC_skew"]], "Bio.SeqUtils.CheckSum": [[261, 4, 1, "", "crc32"], [261, 4, 1, "", "crc64"], [261, 4, 1, "", "gcg"], [261, 4, 1, "", "seguid"]], "Bio.SeqUtils.CodonAdaptationIndex": [[260, 2, 1, "", "__init__"], [260, 2, 1, "", "__str__"], [260, 2, 1, "", "calculate"], [260, 2, 1, "", "optimize"]], "Bio.SeqUtils.IsoelectricPoint": [[262, 3, 1, "", "IsoelectricPoint"]], "Bio.SeqUtils.IsoelectricPoint.IsoelectricPoint": [[262, 2, 1, "", "__init__"], [262, 2, 1, "", "charge_at_pH"], [262, 2, 1, "", "pi"]], "Bio.SeqUtils.MeltingTemp": [[263, 4, 1, "", "Tm_GC"], [263, 4, 1, "", "Tm_NN"], [263, 4, 1, "", "Tm_Wallace"], [263, 4, 1, "", "chem_correction"], [263, 4, 1, "", "make_table"], [263, 4, 1, "", "salt_correction"]], "Bio.SeqUtils.ProtParam": [[264, 3, 1, "", "ProteinAnalysis"]], "Bio.SeqUtils.ProtParam.ProteinAnalysis": [[264, 2, 1, "", "__init__"], [264, 2, 1, "", "aromaticity"], [264, 2, 1, "", "charge_at_pH"], [264, 2, 1, "", "count_amino_acids"], [264, 2, 1, "", "flexibility"], [264, 2, 1, "", "get_amino_acids_percent"], [264, 2, 1, "", "gravy"], [264, 2, 1, "", "instability_index"], [264, 2, 1, "", "isoelectric_point"], [264, 2, 1, "", "molar_extinction_coefficient"], [264, 2, 1, "", "molecular_weight"], [264, 2, 1, "", "protein_scale"], [264, 2, 1, "", "secondary_structure_fraction"]], "Bio.SeqUtils.lcc": [[266, 4, 1, "", "lcc_mult"], [266, 4, 1, "", "lcc_simp"]], "Bio.Sequencing": [[268, 0, 0, "-", "Ace"], [269, 0, 0, "-", "Applications"], [270, 0, 0, "-", "Phd"]], "Bio.Sequencing.Ace": [[268, 3, 1, "", "ACEFileRecord"], [268, 3, 1, "", "Contig"], [268, 3, 1, "", "Reads"], [268, 3, 1, "", "af"], [268, 3, 1, "", "bs"], [268, 3, 1, "", "ct"], [268, 3, 1, "", "ds"], [268, 4, 1, "", "parse"], [268, 3, 1, "", "qa"], [268, 3, 1, "", "rd"], [268, 4, 1, "", "read"], [268, 3, 1, "", "rt"], [268, 3, 1, "", "wa"], [268, 3, 1, "", "wr"]], "Bio.Sequencing.Ace.ACEFileRecord": [[268, 2, 1, "", "__init__"], [268, 2, 1, "", "sort"]], "Bio.Sequencing.Ace.Contig": [[268, 2, 1, "", "__init__"]], "Bio.Sequencing.Ace.Reads": [[268, 2, 1, "", "__init__"]], "Bio.Sequencing.Ace.af": [[268, 2, 1, "", "__init__"]], "Bio.Sequencing.Ace.bs": [[268, 2, 1, "", "__init__"]], "Bio.Sequencing.Ace.ct": [[268, 2, 1, "", "__init__"]], "Bio.Sequencing.Ace.ds": [[268, 2, 1, "", "__init__"]], "Bio.Sequencing.Ace.qa": [[268, 2, 1, "", "__init__"]], "Bio.Sequencing.Ace.rd": [[268, 2, 1, "", "__init__"]], "Bio.Sequencing.Ace.rt": [[268, 2, 1, "", "__init__"]], "Bio.Sequencing.Ace.wa": [[268, 2, 1, "", "__init__"]], "Bio.Sequencing.Ace.wr": [[268, 2, 1, "", "__init__"]], "Bio.Sequencing.Applications": [[269, 3, 1, "", "BwaAlignCommandline"], [269, 3, 1, "", "BwaBwaswCommandline"], [269, 3, 1, "", "BwaIndexCommandline"], [269, 3, 1, "", "BwaMemCommandline"], [269, 3, 1, "", "BwaSampeCommandline"], [269, 3, 1, "", "BwaSamseCommandline"], [269, 3, 1, "", "NovoalignCommandline"], [269, 3, 1, "", "SamtoolsCalmdCommandline"], [269, 3, 1, "", "SamtoolsCatCommandline"], [269, 3, 1, "", "SamtoolsFaidxCommandline"], [269, 3, 1, "", "SamtoolsFixmateCommandline"], [269, 3, 1, "", "SamtoolsIdxstatsCommandline"], [269, 3, 1, "", "SamtoolsIndexCommandline"], [269, 3, 1, "", "SamtoolsMergeCommandline"], [269, 3, 1, "", "SamtoolsMpileupCommandline"], [269, 3, 1, "", "SamtoolsPhaseCommandline"], [269, 3, 1, "", "SamtoolsReheaderCommandline"], [269, 3, 1, "", "SamtoolsRmdupCommandline"], [269, 5, 1, "", "SamtoolsSortCommandline"], [269, 3, 1, "", "SamtoolsTargetcutCommandline"], [269, 3, 1, "", "SamtoolsVersion0xSortCommandline"], [269, 3, 1, "", "SamtoolsVersion1xSortCommandline"], [269, 3, 1, "", "SamtoolsViewCommandline"]], "Bio.Sequencing.Applications.BwaAlignCommandline": [[269, 6, 1, "", "B"], [269, 6, 1, "", "E"], [269, 6, 1, "", "I"], [269, 6, 1, "", "M"], [269, 6, 1, "", "N"], [269, 6, 1, "", "O"], [269, 6, 1, "", "R"], [269, 2, 1, "", "__init__"], [269, 6, 1, "", "b"], [269, 6, 1, "", "b1"], [269, 6, 1, "", "b2"], [269, 6, 1, "", "c"], [269, 6, 1, "", "d"], [269, 6, 1, "", "e"], [269, 6, 1, "", "i"], [269, 6, 1, "", "k"], [269, 6, 1, "", "l"], [269, 6, 1, "", "n"], [269, 6, 1, "", "o"], [269, 6, 1, "", "q"], [269, 6, 1, "", "read_file"], [269, 6, 1, "", "reference"], [269, 6, 1, "", "t"]], "Bio.Sequencing.Applications.BwaBwaswCommandline": [[269, 6, 1, "", "N"], [269, 6, 1, "", "T"], [269, 2, 1, "", "__init__"], [269, 6, 1, "", "a"], [269, 6, 1, "", "b"], [269, 6, 1, "", "c"], [269, 6, 1, "", "mate_file"], [269, 6, 1, "", "q"], [269, 6, 1, "", "r"], [269, 6, 1, "", "read_file"], [269, 6, 1, "", "reference"], [269, 6, 1, "", "s"], [269, 6, 1, "", "t"], [269, 6, 1, "", "w"], [269, 6, 1, "", "z"]], "Bio.Sequencing.Applications.BwaIndexCommandline": [[269, 2, 1, "", "__init__"], [269, 6, 1, "", "algorithm"], [269, 6, 1, "", "c"], [269, 6, 1, "", "infile"], [269, 6, 1, "", "prefix"]], "Bio.Sequencing.Applications.BwaMemCommandline": [[269, 6, 1, "", "A"], [269, 6, 1, "", "B"], [269, 6, 1, "", "C"], [269, 6, 1, "", "E"], [269, 6, 1, "", "H"], [269, 6, 1, "", "L"], [269, 6, 1, "", "M"], [269, 6, 1, "", "O"], [269, 6, 1, "", "P"], [269, 6, 1, "", "R"], [269, 6, 1, "", "T"], [269, 6, 1, "", "U"], [269, 2, 1, "", "__init__"], [269, 6, 1, "", "a"], [269, 6, 1, "", "c"], [269, 6, 1, "", "d"], [269, 6, 1, "", "k"], [269, 6, 1, "", "p"], [269, 6, 1, "", "r"], [269, 6, 1, "", "read_file1"], [269, 6, 1, "", "read_file2"], [269, 6, 1, "", "reference"], [269, 6, 1, "", "t"], [269, 6, 1, "", "v"], [269, 6, 1, "", "w"]], "Bio.Sequencing.Applications.BwaSampeCommandline": [[269, 6, 1, "", "N"], [269, 2, 1, "", "__init__"], [269, 6, 1, "", "a"], [269, 6, 1, "", "n"], [269, 6, 1, "", "o"], [269, 6, 1, "", "r"], [269, 6, 1, "", "read_file1"], [269, 6, 1, "", "read_file2"], [269, 6, 1, "", "reference"], [269, 6, 1, "", "sai_file1"], [269, 6, 1, "", "sai_file2"]], "Bio.Sequencing.Applications.BwaSamseCommandline": [[269, 2, 1, "", "__init__"], [269, 6, 1, "", "n"], [269, 6, 1, "", "r"], [269, 6, 1, "", "read_file"], [269, 6, 1, "", "reference"], [269, 6, 1, "", "sai_file"]], "Bio.Sequencing.Applications.NovoalignCommandline": [[269, 2, 1, "", "__init__"], [269, 6, 1, "", "adapter3"], [269, 6, 1, "", "adapter5"], [269, 6, 1, "", "cores"], [269, 6, 1, "", "database"], [269, 6, 1, "", "format"], [269, 6, 1, "", "fragment"], [269, 6, 1, "", "gap_extend"], [269, 6, 1, "", "gap_open"], [269, 6, 1, "", "good_bases"], [269, 6, 1, "", "homopolymer"], [269, 6, 1, "", "miRNA"], [269, 6, 1, "", "qual_digits"], [269, 6, 1, "", "quality"], [269, 6, 1, "", "r_method"], [269, 6, 1, "", "read_cal"], [269, 6, 1, "", "readfile"], [269, 6, 1, "", "recorded"], [269, 6, 1, "", "repeats"], [269, 6, 1, "", "report"], [269, 6, 1, "", "threshold"], [269, 6, 1, "", "trimming"], [269, 6, 1, "", "truncate"], [269, 6, 1, "", "unconverted"], [269, 6, 1, "", "variation"], [269, 6, 1, "", "write_cal"]], "Bio.Sequencing.Applications.SamtoolsCalmdCommandline": [[269, 6, 1, "", "A"], [269, 6, 1, "", "C"], [269, 6, 1, "", "E"], [269, 6, 1, "", "S"], [269, 2, 1, "", "__init__"], [269, 6, 1, "", "b"], [269, 6, 1, "", "e"], [269, 6, 1, "", "input_bam"], [269, 6, 1, "", "r"], [269, 6, 1, "", "ref"], [269, 6, 1, "", "u"]], "Bio.Sequencing.Applications.SamtoolsCatCommandline": [[269, 2, 1, "", "__init__"], [269, 6, 1, "", "bams"], [269, 6, 1, "", "h"], [269, 6, 1, "", "o"]], "Bio.Sequencing.Applications.SamtoolsFaidxCommandline": [[269, 2, 1, "", "__init__"], [269, 6, 1, "", "ref"]], "Bio.Sequencing.Applications.SamtoolsFixmateCommandline": [[269, 2, 1, "", "__init__"], [269, 6, 1, "", "input_file"], [269, 6, 1, "", "output_file"]], "Bio.Sequencing.Applications.SamtoolsIdxstatsCommandline": [[269, 2, 1, "", "__init__"], [269, 6, 1, "", "input_bam"]], "Bio.Sequencing.Applications.SamtoolsIndexCommandline": [[269, 2, 1, "", "__init__"], [269, 6, 1, "", "input_bam"]], "Bio.Sequencing.Applications.SamtoolsMergeCommandline": [[269, 6, 1, "", "R"], [269, 2, 1, "", "__init__"], [269, 6, 1, "", "bam"], [269, 6, 1, "", "f"], [269, 6, 1, "", "fast_bam"], [269, 6, 1, "", "h"], [269, 6, 1, "", "n"], [269, 6, 1, "", "output"], [269, 6, 1, "", "r"], [269, 6, 1, "", "u"]], "Bio.Sequencing.Applications.SamtoolsMpileupCommandline": [[269, 6, 1, "", "A"], [269, 6, 1, "", "B"], [269, 6, 1, "", "C"], [269, 6, 1, "", "D"], [269, 6, 1, "", "E"], [269, 6, 1, "", "I"], [269, 6, 1, "", "L"], [269, 6, 1, "", "M"], [269, 6, 1, "", "Q"], [269, 6, 1, "", "S"], [269, 2, 1, "", "__init__"], [269, 6, 1, "", "b"], [269, 6, 1, "", "d"], [269, 6, 1, "", "e"], [269, 6, 1, "", "f"], [269, 6, 1, "", "g"], [269, 6, 1, "", "h"], [269, 6, 1, "", "illumina_13"], [269, 6, 1, "", "input_file"], [269, 6, 1, "", "l"], [269, 6, 1, "", "o"], [269, 6, 1, "", "p"], [269, 6, 1, "", "q"], [269, 6, 1, "", "r"], [269, 6, 1, "", "u"]], "Bio.Sequencing.Applications.SamtoolsPhaseCommandline": [[269, 6, 1, "", "A"], [269, 6, 1, "", "F"], [269, 6, 1, "", "Q"], [269, 2, 1, "", "__init__"], [269, 6, 1, "", "b"], [269, 6, 1, "", "in_bam"], [269, 6, 1, "", "k"], [269, 6, 1, "", "q"]], "Bio.Sequencing.Applications.SamtoolsReheaderCommandline": [[269, 2, 1, "", "__init__"], [269, 6, 1, "", "bam_file"], [269, 6, 1, "", "sam_file"]], "Bio.Sequencing.Applications.SamtoolsRmdupCommandline": [[269, 6, 1, "", "S"], [269, 2, 1, "", "__init__"], [269, 6, 1, "", "input_file"], [269, 6, 1, "", "output_file"], [269, 6, 1, "", "s"]], "Bio.Sequencing.Applications.SamtoolsTargetcutCommandline": [[269, 6, 1, "", "Q"], [269, 2, 1, "", "__init__"], [269, 6, 1, "", "em0"], [269, 6, 1, "", "em1"], [269, 6, 1, "", "em2"], [269, 6, 1, "", "f"], [269, 6, 1, "", "i"], [269, 6, 1, "", "in_bam"]], "Bio.Sequencing.Applications.SamtoolsVersion0xSortCommandline": [[269, 2, 1, "", "__init__"], [269, 6, 1, "", "input"], [269, 6, 1, "", "m"], [269, 6, 1, "", "n"], [269, 6, 1, "", "o"], [269, 6, 1, "", "out_prefix"]], "Bio.Sequencing.Applications.SamtoolsVersion1xSortCommandline": [[269, 6, 1, "", "I"], [269, 6, 1, "", "O"], [269, 6, 1, "", "T"], [269, 2, 1, "", "__init__"], [269, 6, 1, "", "input"], [269, 6, 1, "", "m"], [269, 6, 1, "", "n"], [269, 6, 1, "", "o"]], "Bio.Sequencing.Applications.SamtoolsViewCommandline": [[269, 6, 1, "", "F"], [269, 6, 1, "", "H"], [269, 6, 1, "", "R"], [269, 6, 1, "", "S"], [269, 2, 1, "", "__init__"], [269, 6, 1, "", "b"], [269, 6, 1, "", "c"], [269, 6, 1, "", "f"], [269, 6, 1, "", "fast_bam"], [269, 6, 1, "", "h"], [269, 6, 1, "", "input_file"], [269, 6, 1, "", "l"], [269, 6, 1, "", "o"], [269, 6, 1, "", "q"], [269, 6, 1, "", "r"], [269, 6, 1, "", "region"], [269, 6, 1, "", "t"], [269, 6, 1, "", "u"]], "Bio.Sequencing.Phd": [[270, 3, 1, "", "Record"], [270, 4, 1, "", "parse"], [270, 4, 1, "", "read"]], "Bio.Sequencing.Phd.Record": [[270, 2, 1, "", "__init__"]], "Bio.SwissProt": [[271, 3, 1, "", "FeatureTable"], [272, 0, 0, "-", "KeyWList"], [271, 3, 1, "", "Record"], [271, 3, 1, "", "Reference"], [271, 1, 1, "", "SwissProtParserError"], [271, 4, 1, "", "parse"], [271, 4, 1, "", "read"]], "Bio.SwissProt.KeyWList": [[272, 3, 1, "", "Record"], [272, 4, 1, "", "parse"]], "Bio.SwissProt.KeyWList.Record": [[272, 2, 1, "", "__init__"]], "Bio.SwissProt.Record": [[271, 2, 1, "", "__init__"]], "Bio.SwissProt.Reference": [[271, 2, 1, "", "__init__"]], "Bio.SwissProt.SwissProtParserError": [[271, 2, 1, "", "__init__"]], "Bio.TogoWS": [[273, 4, 1, "", "convert"], [273, 4, 1, "", "entry"], [273, 4, 1, "", "search"], [273, 4, 1, "", "search_count"], [273, 4, 1, "", "search_iter"]], "Bio.UniGene": [[274, 3, 1, "", "ProtsimLine"], [274, 3, 1, "", "Record"], [274, 3, 1, "", "STSLine"], [274, 3, 1, "", "SequenceLine"], [274, 4, 1, "", "parse"], [274, 4, 1, "", "read"]], "Bio.UniGene.ProtsimLine": [[274, 2, 1, "", "__init__"], [274, 2, 1, "", "__repr__"]], "Bio.UniGene.Record": [[274, 2, 1, "", "__init__"], [274, 2, 1, "", "__repr__"]], "Bio.UniGene.STSLine": [[274, 2, 1, "", "__init__"], [274, 2, 1, "", "__repr__"]], "Bio.UniGene.SequenceLine": [[274, 2, 1, "", "__init__"], [274, 2, 1, "", "__repr__"]], "Bio.UniProt": [[276, 0, 0, "-", "GOA"], [275, 4, 1, "", "search"]], "Bio.UniProt.GOA": [[276, 4, 1, "", "gafbyproteiniterator"], [276, 4, 1, "", "gafiterator"], [276, 4, 1, "", "gpa_iterator"], [276, 4, 1, "", "gpi_iterator"], [276, 4, 1, "", "record_has"], [276, 4, 1, "", "writebyproteinrec"], [276, 4, 1, "", "writerec"]], "Bio.bgzf": [[277, 4, 1, "", "BgzfBlocks"], [277, 3, 1, "", "BgzfReader"], [277, 3, 1, "", "BgzfWriter"], [277, 4, 1, "", "make_virtual_offset"], [277, 4, 1, "", "open"], [277, 4, 1, "", "split_virtual_offset"]], "Bio.bgzf.BgzfReader": [[277, 2, 1, "", "__enter__"], [277, 2, 1, "", "__exit__"], [277, 2, 1, "", "__init__"], [277, 2, 1, "", "__iter__"], [277, 2, 1, "", "__next__"], [277, 2, 1, "", "close"], [277, 2, 1, "", "fileno"], [277, 2, 1, "", "isatty"], [277, 2, 1, "", "read"], [277, 2, 1, "", "readline"], [277, 2, 1, "", "seek"], [277, 2, 1, "", "seekable"], [277, 2, 1, "", "tell"]], "Bio.bgzf.BgzfWriter": [[277, 2, 1, "", "__enter__"], [277, 2, 1, "", "__exit__"], [277, 2, 1, "", "__init__"], [277, 2, 1, "", "close"], [277, 2, 1, "", "fileno"], [277, 2, 1, "", "flush"], [277, 2, 1, "", "isatty"], [277, 2, 1, "", "seekable"], [277, 2, 1, "", "tell"], [277, 2, 1, "", "write"]], "Bio.codonalign": [[278, 4, 1, "", "build"], [279, 0, 0, "-", "codonalignment"], [280, 0, 0, "-", "codonseq"]], "Bio.codonalign.codonalignment": [[279, 3, 1, "", "CodonAlignment"], [279, 4, 1, "", "mktest"]], "Bio.codonalign.codonalignment.CodonAlignment": [[279, 2, 1, "", "__add__"], [279, 2, 1, "", "__getitem__"], [279, 2, 1, "", "__init__"], [279, 2, 1, "", "__str__"], [279, 2, 1, "", "from_msa"], [279, 2, 1, "", "get_aln_length"], [279, 2, 1, "", "get_dn_ds_matrix"], [279, 2, 1, "", "get_dn_ds_tree"], [279, 2, 1, "", "toMultipleSeqAlignment"]], "Bio.codonalign.codonseq": [[280, 3, 1, "", "CodonSeq"], [280, 4, 1, "", "cal_dn_ds"]], "Bio.codonalign.codonseq.CodonSeq": [[280, 5, 1, "", "__abstractmethods__"], [280, 2, 1, "", "__init__"], [280, 2, 1, "", "from_seq"], [280, 2, 1, "", "full_translate"], [280, 2, 1, "", "get_codon"], [280, 2, 1, "", "get_codon_num"], [280, 2, 1, "", "get_full_rf_table"], [280, 2, 1, "", "toSeq"], [280, 2, 1, "", "translate"], [280, 2, 1, "", "ungap"]], "Bio.kNN": [[281, 4, 1, "", "calculate"], [281, 4, 1, "", "classify"], [281, 4, 1, "", "equal_weight"], [281, 3, 1, "", "kNN"], [281, 4, 1, "", "train"]], "Bio.kNN.kNN": [[281, 2, 1, "", "__init__"]], "Bio.motifs": [[282, 3, 1, "", "Instances"], [282, 3, 1, "", "Motif"], [283, 0, 0, "-", "alignace"], [284, 0, 0, "-", "applications"], [285, 0, 0, "-", "clusterbuster"], [282, 4, 1, "", "create"], [286, 0, 0, "-", "jaspar"], [288, 0, 0, "-", "mast"], [289, 0, 0, "-", "matrix"], [290, 0, 0, "-", "meme"], [291, 0, 0, "-", "minimal"], [282, 4, 1, "", "parse"], [292, 0, 0, "-", "pfm"], [282, 4, 1, "", "read"], [293, 0, 0, "-", "thresholds"], [294, 0, 0, "-", "transfac"], [282, 4, 1, "", "write"], [295, 0, 0, "-", "xms"]], "Bio.motifs.Instances": [[282, 2, 1, "", "__init__"], [282, 2, 1, "", "__str__"], [282, 2, 1, "", "count"], [282, 2, 1, "", "reverse_complement"], [282, 2, 1, "", "search"]], "Bio.motifs.Motif": [[282, 2, 1, "", "__format__"], [282, 2, 1, "", "__getitem__"], [282, 2, 1, "", "__init__"], [282, 2, 1, "", "__len__"], [282, 2, 1, "", "__str__"], [282, 6, 1, "", "anticonsensus"], [282, 6, 1, "", "background"], [282, 6, 1, "", "consensus"], [282, 6, 1, "", "degenerate_consensus"], [282, 2, 1, "", "format"], [282, 6, 1, "", "instances"], [282, 6, 1, "", "mask"], [282, 6, 1, "", "pseudocounts"], [282, 6, 1, "", "pssm"], [282, 6, 1, "", "pwm"], [282, 6, 1, "", "relative_entropy"], [282, 2, 1, "", "reverse_complement"], [282, 2, 1, "", "weblogo"]], "Bio.motifs.alignace": [[283, 3, 1, "", "Record"], [283, 4, 1, "", "read"]], "Bio.motifs.alignace.Record": [[283, 2, 1, "", "__init__"]], "Bio.motifs.clusterbuster": [[285, 3, 1, "", "Record"], [285, 4, 1, "", "read"], [285, 4, 1, "", "write"]], "Bio.motifs.clusterbuster.Record": [[285, 2, 1, "", "__str__"]], "Bio.motifs.jaspar": [[286, 3, 1, "", "Motif"], [286, 3, 1, "", "Record"], [286, 4, 1, "", "calculate_pseudocounts"], [287, 0, 0, "-", "db"], [286, 4, 1, "", "read"], [286, 4, 1, "", "split_jaspar_id"], [286, 4, 1, "", "write"]], "Bio.motifs.jaspar.Motif": [[286, 2, 1, "", "__eq__"], [286, 2, 1, "", "__hash__"], [286, 2, 1, "", "__init__"], [286, 2, 1, "", "__str__"], [286, 6, 1, "", "base_id"], [286, 6, 1, "", "version"]], "Bio.motifs.jaspar.Record": [[286, 2, 1, "", "__init__"], [286, 2, 1, "", "__str__"], [286, 2, 1, "", "to_dict"]], "Bio.motifs.jaspar.db": [[287, 3, 1, "", "JASPAR5"]], "Bio.motifs.jaspar.db.JASPAR5": [[287, 2, 1, "", "__init__"], [287, 2, 1, "", "__str__"], [287, 2, 1, "", "fetch_motif_by_id"], [287, 2, 1, "", "fetch_motifs"], [287, 2, 1, "", "fetch_motifs_by_name"]], "Bio.motifs.mast": [[288, 3, 1, "", "Record"], [288, 4, 1, "", "read"]], "Bio.motifs.mast.Record": [[288, 2, 1, "", "__getitem__"], [288, 2, 1, "", "__init__"]], "Bio.motifs.matrix": [[289, 3, 1, "", "FrequencyPositionMatrix"], [289, 3, 1, "", "GenericPositionMatrix"], [289, 3, 1, "", "PositionSpecificScoringMatrix"], [289, 3, 1, "", "PositionWeightMatrix"]], "Bio.motifs.matrix.FrequencyPositionMatrix": [[289, 2, 1, "", "normalize"]], "Bio.motifs.matrix.GenericPositionMatrix": [[289, 2, 1, "", "__getitem__"], [289, 2, 1, "", "__init__"], [289, 2, 1, "", "__str__"], [289, 6, 1, "", "anticonsensus"], [289, 2, 1, "", "calculate_consensus"], [289, 6, 1, "", "consensus"], [289, 6, 1, "", "degenerate_consensus"], [289, 6, 1, "", "gc_content"], [289, 2, 1, "", "reverse_complement"]], "Bio.motifs.matrix.PositionSpecificScoringMatrix": [[289, 2, 1, "", "calculate"], [289, 2, 1, "", "dist_pearson"], [289, 2, 1, "", "dist_pearson_at"], [289, 2, 1, "", "distribution"], [289, 6, 1, "", "gc_content"], [289, 6, 1, "", "max"], [289, 2, 1, "", "mean"], [289, 6, 1, "", "min"], [289, 2, 1, "", "search"], [289, 2, 1, "", "std"]], "Bio.motifs.matrix.PositionWeightMatrix": [[289, 2, 1, "", "__init__"], [289, 2, 1, "", "log_odds"]], "Bio.motifs.meme": [[290, 3, 1, "", "Instance"], [290, 3, 1, "", "Motif"], [290, 3, 1, "", "Record"], [290, 4, 1, "", "read"]], "Bio.motifs.meme.Instance": [[290, 5, 1, "", "__abstractmethods__"], [290, 2, 1, "", "__init__"]], "Bio.motifs.meme.Motif": [[290, 2, 1, "", "__init__"]], "Bio.motifs.meme.Record": [[290, 2, 1, "", "__getitem__"], [290, 2, 1, "", "__init__"]], "Bio.motifs.minimal": [[291, 3, 1, "", "Record"], [291, 4, 1, "", "read"]], "Bio.motifs.minimal.Record": [[291, 2, 1, "", "__getitem__"], [291, 2, 1, "", "__init__"]], "Bio.motifs.pfm": [[292, 3, 1, "", "Record"], [292, 4, 1, "", "read"], [292, 4, 1, "", "write"]], "Bio.motifs.pfm.Record": [[292, 2, 1, "", "__str__"]], "Bio.motifs.thresholds": [[293, 3, 1, "", "ScoreDistribution"]], "Bio.motifs.thresholds.ScoreDistribution": [[293, 2, 1, "", "__init__"], [293, 2, 1, "", "modify"], [293, 2, 1, "", "threshold_balanced"], [293, 2, 1, "", "threshold_fnr"], [293, 2, 1, "", "threshold_fpr"], [293, 2, 1, "", "threshold_patser"]], "Bio.motifs.transfac": [[294, 3, 1, "", "Motif"], [294, 3, 1, "", "Record"], [294, 4, 1, "", "read"], [294, 4, 1, "", "write"]], "Bio.motifs.transfac.Motif": [[294, 2, 1, "", "__getitem__"], [294, 5, 1, "", "multiple_value_keys"], [294, 5, 1, "", "reference_keys"]], "Bio.motifs.transfac.Record": [[294, 2, 1, "", "__init__"], [294, 2, 1, "", "__str__"]], "Bio.motifs.xms": [[295, 3, 1, "", "Record"], [295, 3, 1, "", "XMSScanner"], [295, 4, 1, "", "read"]], "Bio.motifs.xms.Record": [[295, 2, 1, "", "__str__"]], "Bio.motifs.xms.XMSScanner": [[295, 2, 1, "", "__init__"], [295, 2, 1, "", "get_acgt"], [295, 2, 1, "", "get_property_value"], [295, 2, 1, "", "get_text"], [295, 2, 1, "", "handle_motif"]], "Bio.pairwise2": [[296, 3, 1, "", "Alignment"], [296, 3, 1, "", "affine_penalty"], [296, 4, 1, "", "calc_affine_penalty"], [296, 3, 1, "", "dictionary_match"], [296, 4, 1, "", "format_alignment"], [296, 3, 1, "", "identity_match"], [296, 4, 1, "", "print_matrix"]], "Bio.pairwise2.Alignment": [[296, 2, 1, "", "__getnewargs__"], [296, 2, 1, "", "__new__"], [296, 2, 1, "", "__repr__"], [296, 5, 1, "", "__slots__"], [296, 5, 1, "", "end"], [296, 5, 1, "", "score"], [296, 5, 1, "", "seqA"], [296, 5, 1, "", "seqB"], [296, 5, 1, "", "start"]], "Bio.pairwise2.affine_penalty": [[296, 2, 1, "", "__call__"], [296, 2, 1, "", "__init__"]], "Bio.pairwise2.dictionary_match": [[296, 2, 1, "", "__call__"], [296, 2, 1, "", "__init__"]], "Bio.pairwise2.identity_match": [[296, 2, 1, "", "__call__"], [296, 2, 1, "", "__init__"]], "Bio.phenotype": [[297, 4, 1, "", "parse"], [298, 0, 0, "-", "phen_micro"], [299, 0, 0, "-", "pm_fitting"], [297, 4, 1, "", "read"], [297, 4, 1, "", "write"]], "Bio.phenotype.phen_micro": [[298, 4, 1, "", "CsvIterator"], [298, 4, 1, "", "JsonIterator"], [298, 3, 1, "", "JsonWriter"], [298, 3, 1, "", "PlateRecord"], [298, 3, 1, "", "WellRecord"]], "Bio.phenotype.phen_micro.JsonWriter": [[298, 2, 1, "", "__init__"], [298, 2, 1, "", "write"]], "Bio.phenotype.phen_micro.PlateRecord": [[298, 2, 1, "", "__add__"], [298, 2, 1, "", "__contains__"], [298, 2, 1, "", "__delitem__"], [298, 2, 1, "", "__eq__"], [298, 2, 1, "", "__getitem__"], [298, 5, 1, "", "__hash__"], [298, 2, 1, "", "__init__"], [298, 2, 1, "", "__iter__"], [298, 2, 1, "", "__len__"], [298, 2, 1, "", "__repr__"], [298, 2, 1, "", "__setitem__"], [298, 2, 1, "", "__str__"], [298, 2, 1, "", "__sub__"], [298, 2, 1, "", "get_column"], [298, 2, 1, "", "get_row"], [298, 2, 1, "", "subtract_control"]], "Bio.phenotype.phen_micro.WellRecord": [[298, 2, 1, "", "__add__"], [298, 2, 1, "", "__eq__"], [298, 2, 1, "", "__getitem__"], [298, 5, 1, "", "__hash__"], [298, 2, 1, "", "__init__"], [298, 2, 1, "", "__iter__"], [298, 2, 1, "", "__len__"], [298, 2, 1, "", "__repr__"], [298, 2, 1, "", "__setitem__"], [298, 2, 1, "", "__str__"], [298, 2, 1, "", "__sub__"], [298, 2, 1, "", "fit"], [298, 2, 1, "", "get_raw"], [298, 2, 1, "", "get_signals"], [298, 2, 1, "", "get_times"]], "Bio.phenotype.pm_fitting": [[299, 4, 1, "", "fit"], [299, 4, 1, "", "get_area"], [299, 4, 1, "", "gompertz"], [299, 4, 1, "", "guess_lag"], [299, 4, 1, "", "guess_plateau"], [299, 4, 1, "", "logistic"], [299, 4, 1, "", "richards"]], "BioSQL": [[301, 0, 0, "-", "BioSeq"], [302, 0, 0, "-", "BioSeqDatabase"], [303, 0, 0, "-", "DBUtils"], [304, 0, 0, "-", "Loader"]], "BioSQL.BioSeq": [[301, 3, 1, "", "DBSeqRecord"]], "BioSQL.BioSeq.DBSeqRecord": [[301, 2, 1, "", "__init__"], [301, 6, 1, "", "annotations"], [301, 6, 1, "", "dbxrefs"], [301, 6, 1, "", "features"], [301, 6, 1, "", "seq"]], "BioSQL.BioSeqDatabase": [[302, 3, 1, "", "Adaptor"], [302, 3, 1, "", "BioSeqDatabase"], [302, 3, 1, "", "DBServer"], [302, 3, 1, "", "MysqlConnectorAdaptor"], [302, 4, 1, "", "open_database"]], "BioSQL.BioSeqDatabase.Adaptor": [[302, 2, 1, "", "__init__"], [302, 2, 1, "", "autocommit"], [302, 2, 1, "", "close"], [302, 2, 1, "", "commit"], [302, 2, 1, "", "execute"], [302, 2, 1, "", "execute_and_fetch_col0"], [302, 2, 1, "", "execute_and_fetchall"], [302, 2, 1, "", "execute_one"], [302, 2, 1, "", "executemany"], [302, 2, 1, "", "fetch_dbid_by_dbname"], [302, 2, 1, "", "fetch_seqid_by_accession"], [302, 2, 1, "", "fetch_seqid_by_display_id"], [302, 2, 1, "", "fetch_seqid_by_identifier"], [302, 2, 1, "", "fetch_seqid_by_version"], [302, 2, 1, "", "fetch_seqids_by_accession"], [302, 2, 1, "", "get_subseq_as_string"], [302, 2, 1, "", "last_id"], [302, 2, 1, "", "list_any_ids"], [302, 2, 1, "", "list_biodatabase_names"], [302, 2, 1, "", "list_bioentry_display_ids"], [302, 2, 1, "", "list_bioentry_ids"], [302, 2, 1, "", "rollback"]], "BioSQL.BioSeqDatabase.BioSeqDatabase": [[302, 2, 1, "", "__contains__"], [302, 2, 1, "", "__delitem__"], [302, 2, 1, "", "__getitem__"], [302, 2, 1, "", "__init__"], [302, 2, 1, "", "__iter__"], [302, 2, 1, "", "__len__"], [302, 2, 1, "", "__repr__"], [302, 2, 1, "", "get_Seq_by_acc"], [302, 2, 1, "", "get_Seq_by_id"], [302, 2, 1, "", "get_Seq_by_ver"], [302, 2, 1, "", "get_Seqs_by_acc"], [302, 2, 1, "", "items"], [302, 2, 1, "", "keys"], [302, 2, 1, "", "load"], [302, 2, 1, "", "lookup"], [302, 2, 1, "", "values"]], "BioSQL.BioSeqDatabase.DBServer": [[302, 2, 1, "", "__contains__"], [302, 2, 1, "", "__delitem__"], [302, 2, 1, "", "__getitem__"], [302, 2, 1, "", "__init__"], [302, 2, 1, "", "__iter__"], [302, 2, 1, "", "__len__"], [302, 2, 1, "", "__repr__"], [302, 2, 1, "", "close"], [302, 2, 1, "", "commit"], [302, 2, 1, "", "items"], [302, 2, 1, "", "keys"], [302, 2, 1, "", "load_database_sql"], [302, 2, 1, "", "new_database"], [302, 2, 1, "", "rollback"], [302, 2, 1, "", "values"]], "BioSQL.BioSeqDatabase.MysqlConnectorAdaptor": [[302, 2, 1, "", "execute_and_fetch_col0"], [302, 2, 1, "", "execute_and_fetchall"], [302, 2, 1, "", "execute_one"]], "BioSQL.DBUtils": [[303, 3, 1, "", "Generic_dbutils"], [303, 3, 1, "", "Mysql_dbutils"], [303, 3, 1, "", "Pgdb_dbutils"], [303, 3, 1, "", "Psycopg2_dbutils"], [303, 3, 1, "", "Sqlite_dbutils"], [303, 4, 1, "", "get_dbutils"]], "BioSQL.DBUtils.Generic_dbutils": [[303, 2, 1, "", "__init__"], [303, 2, 1, "", "autocommit"], [303, 2, 1, "", "execute"], [303, 2, 1, "", "executemany"], [303, 2, 1, "", "last_id"], [303, 2, 1, "", "tname"]], "BioSQL.DBUtils.Mysql_dbutils": [[303, 2, 1, "", "last_id"]], "BioSQL.DBUtils.Pgdb_dbutils": [[303, 2, 1, "", "autocommit"]], "BioSQL.DBUtils.Psycopg2_dbutils": [[303, 2, 1, "", "autocommit"]], "BioSQL.DBUtils.Sqlite_dbutils": [[303, 2, 1, "", "execute"], [303, 2, 1, "", "executemany"]], "BioSQL.Loader": [[304, 3, 1, "", "DatabaseLoader"], [304, 3, 1, "", "DatabaseRemover"]], "BioSQL.Loader.DatabaseLoader": [[304, 2, 1, "", "__init__"], [304, 2, 1, "", "load_seqrecord"]], "BioSQL.Loader.DatabaseRemover": [[304, 2, 1, "", "__init__"], [304, 2, 1, "", "remove"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:method", "3": "py:class", "4": "py:function", "5": "py:attribute", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "exception", "Python exception"], "2": ["py", "method", "Python method"], "3": ["py", "class", "Python class"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "property", "Python property"]}, "titleterms": {"sequenc": [0, 6, 7, 11, 12, 13, 15, 19, 20, 21, 22, 23, 216, 236, 267, 268, 269, 270], "align": [0, 12, 13, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 237], "object": [0, 11, 12, 13, 15, 17, 20, 21, 22, 23], "creat": [0, 1, 11, 21], "an": [0, 7, 11, 13, 15], "from": [0, 1, 5, 7, 11, 12, 13, 15, 21, 23], "coordin": [0, 15, 216], "common": [0, 15], "attribut": [0, 13, 15], "slice": [0, 11, 12, 21, 22], "index": [0, 6, 20, 23], "get": [0, 12, 23], "inform": [0, 7, 12, 17, 236], "about": [0, 1, 7, 19, 20, 236, 277], "shape": 0, "compar": [0, 11, 22, 101], "find": [0, 7, 9, 11, 22], "indic": 0, "count": [0, 7, 12], "ident": 0, "mismatch": [0, 13], "gap": [0, 13], "letter": 0, "frequenc": 0, "substitut": [0, 12, 13], "arrai": [0, 12, 13], "oper": 0, "sort": [0, 3, 6], "revers": [0, 11, 13, 21, 22, 23], "complement": [0, 11, 21, 22, 23], "ad": [0, 21, 22], "map": [0, 4, 15, 118], "pairwis": [0, 13, 14], "multipl": [0, 8, 12, 13, 237], "The": [0, 3, 4, 7, 11, 13, 15, 20, 21, 24], "class": [0, 3, 236], "read": [0, 6, 11, 12, 13, 15, 20, 23], "write": [0, 3, 11, 12, 15, 16, 20, 23, 24], "print": [0, 15], "file": [0, 4, 6, 7, 11, 12, 13, 15, 19, 20, 21, 23, 25, 56, 91, 237, 297], "format": [0, 3, 11, 12, 15, 19, 21, 23, 56, 216, 217, 220, 221, 225, 228, 233, 237, 297], "fasta": [0, 6, 19, 21, 23, 43, 225], "clustalw": [0, 12], "stockholm": [0, 53], "phylip": [0, 50], "output": [0, 3, 20, 23, 56, 216, 237, 297], "emboss": [0, 12, 41, 79, 80, 81, 82], "gcg": 0, "msf": [0, 48], "exoner": [0, 42, 221], "nexu": [0, 49, 128, 129, 130, 131, 132], "tabular": [0, 55], "blast": [0, 3, 20, 68, 69, 70, 71, 217], "hh": 0, "suit": 0, "a2m": [0, 33], "mauv": [0, 47], "extend": 0, "multi": 0, "xmfa": 0, "sam": [0, 52], "browser": 0, "extens": 0, "data": [0, 4, 6, 15, 16, 23, 75, 76, 77, 78], "bed": [0, 35], "bigb": [0, 36], "pattern": 0, "space": 0, "layout": 0, "psl": [0, 51], "bigpsl": [0, 38], "maf": [0, 46], "bigmaf": [0, 37], "ucsc": 0, "chain": [0, 15, 39, 136], "appendix": 1, "us": [1, 7, 11, 13, 14, 15, 17, 23, 24], "stuff": 1, "python": [1, 216], "what": [1, 9, 17, 19], "heck": 1, "i": [1, 7, 9, 15, 17, 19], "handl": [1, 4, 7], "string": [1, 12, 22, 23], "bibliographi": 2, "new": [3, 12], "run": [3, 17, 24], "over": [3, 13, 15, 23], "internet": 3, "argument": 3, "save": [3, 4], "result": [3, 4], "obtain": [3, 7, 11, 15], "other": [3, 15, 20], "local": [3, 15], "introduct": [3, 8, 9, 277], "standalon": 3, "ncbi": [3, 7], "version": 3, "pars": [3, 6, 7, 10, 12, 15, 16, 19, 23, 25], "record": [3, 7, 10, 23, 25, 93, 97, 237, 297], "hit": [3, 20], "hsp": [3, 20], "filter": [3, 6], "deal": [3, 20], "psi": 3, "rp": 3, "old": [3, 8], "cluster": [4, 73], "analysi": [4, 11, 34], "represent": [4, 15], "miss": [4, 7], "valu": [4, 15, 216], "random": [4, 6], "number": [4, 13], "gener": [4, 13, 15, 19], "distanc": [4, 15], "function": [4, 17], "euclidean": 4, "citi": 4, "block": 4, "pearson": 4, "correl": 4, "coeffici": 4, "absolut": 4, "uncent": 4, "cosin": 4, "angl": [4, 15], "spearman": 4, "rank": 4, "kendal": 4, "": [4, 7, 15, 17], "tau": 4, "weight": [4, 11], "calcul": [4, 12, 13, 15], "matrix": [4, 11, 12, 13, 289], "properti": 4, "centroid": 4, "between": [4, 8, 12, 23], "partit": 4, "algorithm": 4, "k": 4, "mean": 4, "median": 4, "medoid": 4, "hierarch": 4, "repres": 4, "solut": 4, "perform": [4, 13], "self": 4, "organ": [4, 7], "princip": 4, "compon": 4, "treeview": 4, "type": 4, "exampl": [4, 5, 7, 8, 13, 15, 19, 90, 137, 205, 264, 277], "where": 5, "go": [5, 15], "here": 5, "contribut": 5, "biopython": [5, 9, 19, 24, 26, 306], "bug": 5, "report": 5, "featur": [5, 8, 17, 21, 236], "request": 5, "mail": 5, "list": [5, 7, 23, 25], "help": 5, "newcom": 5, "document": [5, 25, 305, 306], "cookbook": [5, 6, 26], "maintain": 5, "distribut": [5, 103], "platform": 5, "unit": 5, "test": [5, 13, 15, 21, 24], "code": [5, 8, 15], "cool": 6, "thing": 6, "do": [6, 19], "work": [6, 19, 22], "produc": 6, "genom": 6, "translat": [6, 22], "cd": 6, "entri": 6, "make": 6, "upper": 6, "case": [6, 15, 22], "simpl": [6, 8, 19], "qualiti": 6, "fastq": [6, 23], "trim": 6, "off": 6, "primer": 6, "adaptor": 6, "convert": [6, 8, 12, 20, 23], "qual": 6, "sff": 6, "identifi": [6, 7], "open": 6, "frame": [6, 216], "plu": 6, "plot": [6, 15], "histogram": 6, "length": [6, 15], "gc": 6, "nucleotid": [6, 7, 13, 22], "dot": 6, "score": [6, 11, 12, 13], "biosql": [6, 300, 301, 302, 303, 304], "store": [6, 11], "relat": [6, 7, 15], "databas": [6, 7, 11, 19, 23, 25], "access": [7, 11, 15, 16, 25], "entrez": [7, 83, 84], "guidelin": 7, "einfo": 7, "esearch": 7, "search": [7, 11, 17, 20, 25], "epost": 7, "upload": 7, "esummari": 7, "retriev": [7, 25], "summari": [7, 12], "primari": 7, "id": 7, "efetch": 7, "download": [7, 15], "full": 7, "elink": 7, "item": 7, "egqueri": 7, "global": 7, "queri": [7, 10], "term": 7, "espel": 7, "spell": 7, "suggest": 7, "huge": 7, "xml": [7, 15, 217, 233], "html": 7, "escap": 7, "charact": 7, "error": [7, 15], "end": 7, "prematur": 7, "otherwis": 7, "corrupt": 7, "contain": [7, 15], "ar": 7, "associ": [7, 11, 15], "dtd": 7, "messag": 7, "special": 7, "parser": [7, 23, 84], "medlin": [7, 123], "geo": [7, 96, 97], "unigen": [7, 274], "proxi": 7, "pubm": 7, "genbank": [7, 19, 21, 23, 92, 93, 94, 95], "lineag": 7, "histori": 7, "webenv": 7, "abstract": 7, "citat": 7, "graphic": [8, 15, 98, 99, 100, 101, 102, 103, 104, 105], "includ": 8, "genomediagram": [8, 104], "diagram": 8, "track": 8, "set": 8, "A": [8, 15, 19, 20], "top": 8, "down": 8, "bottom": 8, "up": [8, 15], "without": 8, "seqfeatur": [8, 21, 236], "caption": 8, "sigil": 8, "arrow": 8, "nice": 8, "cross": 8, "link": [8, 11], "further": 8, "option": 8, "chromosom": 8, "annot": [8, 21], "can": [9, 19], "packag": [9, 27, 28, 30, 32, 54, 56, 67, 68, 72, 73, 74, 75, 79, 83, 85, 92, 96, 98, 104, 106, 111, 112, 113, 114, 115, 118, 123, 124, 128, 133, 170, 176, 177, 180, 181, 191, 199, 200, 205, 208, 215, 216, 217, 221, 226, 228, 233, 237, 260, 267, 269, 271, 273, 274, 275, 278, 282, 284, 286, 297, 300], "instal": 9, "frequent": 9, "ask": 9, "question": [9, 15], "faq": 9, "kegg": [10, 111, 112, 113, 114, 115, 116, 117, 118, 119], "api": [10, 305], "motif": [11, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295], "bio": [11, 15, 16, 17, 18, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299], "instanc": 11, "consensu": [11, 12, 185], "rel": 11, "entropi": 11, "logo": 11, "jaspar": [11, 286, 287], "site": [11, 13], "pfm": [11, 292], "compat": 11, "perl": 11, "tfb": 11, "modul": [11, 15, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304], "meme": [11, 290], "mast": [11, 288], "transfac": [11, 294], "field": 11, "commonli": 11, "found": 11, "refer": [11, 21, 165, 236], "posit": [11, 12, 21], "matric": [11, 12, 13], "specif": [11, 12, 15], "exact": 11, "match": [11, 13], "pssm": 11, "select": [11, 15, 159], "threshold": [11, 293], "each": [11, 15], "ha": 11, "de": [11, 210], "novo": 11, "singl": [12, 237, 297], "ambigu": 12, "your": [12, 23], "manipul": [12, 16], "quick": [12, 19], "content": [12, 22, 26, 27, 28, 30, 32, 54, 56, 67, 68, 72, 73, 74, 75, 79, 83, 85, 92, 96, 98, 104, 106, 111, 112, 113, 114, 115, 118, 123, 124, 128, 133, 170, 176, 177, 180, 181, 191, 199, 200, 205, 208, 215, 216, 217, 221, 226, 228, 233, 237, 260, 267, 269, 271, 273, 274, 275, 278, 282, 284, 286, 297, 300, 305, 306], "style": [12, 216], "tool": [12, 20], "muscl": 12, "needl": 12, "water": [12, 15], "basic": 13, "usag": [13, 19, 137], "affin": 13, "meta": 13, "pre": 13, "defin": [13, 22], "iter": [13, 15, 23], "strand": [13, 216], "load": 13, "predefin": 13, "alphabet": 13, "integ": 13, "codon": 13, "amino": 13, "acid": 13, "codonalign": [13, 278, 279, 280], "analyz": [13, 15, 16], "nonsynonym": 13, "synonym": 13, "per": 13, "mcdonald": 13, "kreitman": 13, "pairwise2": [14, 296], "3d": 15, "pdb": [15, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "crystal": 15, "structur": [15, 160], "mmcif": 15, "mmtf": [15, 170, 171, 172], "pqr": 15, "pdbml": 15, "model": [15, 20, 144], "residu": [15, 155, 214], "atom": [15, 135], "extract": [15, 16, 23], "disord": 15, "approach": 15, "point": 15, "mutat": 15, "hetero": 15, "problem": 15, "navig": 15, "through": 15, "some": 15, "all": 15, "e": 15, "g": 15, "glucos": 15, "glc": 15, "moieti": 15, "resseq": 15, "10": 15, "out": 15, "ca": 15, "b": 15, "factor": 15, "50": 15, "loop": 15, "altloc": 15, "present": 15, "polypeptid": [15, 154], "measur": 15, "torsion": 15, "intern": 15, "etc": 15, "dihedr": 15, "bond": 15, "complet": 15, "modifi": [15, 23], "rebuild": 15, "protein": 15, "pic": 15, "default": 15, "atomarrai": 15, "build": 15, "superimpos": [15, 163], "neighborhood": 15, "internal_coord": [15, 168], "control": [15, 16, 201], "determin": 15, "contact": 15, "two": 15, "onto": 15, "half": 15, "sphere": 15, "exposur": 15, "secondari": 15, "dssp": [15, 137], "depth": 15, "duplic": 15, "automat": 15, "correct": 15, "blank": 15, "broken": 15, "fatal": 15, "bank": 15, "entir": 15, "keep": 15, "copi": 15, "date": 15, "how": 15, "well": [15, 16], "fast": 15, "support": [15, 216, 217, 220, 221, 225, 228, 233], "molecular": 15, "who": 15, "phenotyp": [16, 297, 298, 299], "microarrai": 16, "raw": [16, 23], "interpol": 16, "subtract": 16, "paramet": 16, "phylogenet": 17, "phylo": [17, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "demo": 17, "tree": [17, 132], "color": 17, "branch": 17, "within": 17, "o": 17, "view": 17, "export": 17, "clade": 17, "travers": 17, "method": [17, 21], "modif": 17, "phyloxml": [17, 196], "extern": 17, "applic": [17, 32, 67, 69, 80, 181, 269, 284], "paml": [17, 191, 192, 193, 194, 195], "integr": 17, "futur": 17, "plan": 17, "popgen": [18, 199, 200, 201, 202, 203, 204], "popul": 18, "genet": 18, "genepop": [18, 200, 201, 202, 203, 204], "start": 19, "you": 19, "overview": 19, "provid": 19, "love": 19, "pleas": 19, "don": 19, "t": 19, "stop": 19, "talk": 19, "connect": 19, "biolog": 19, "next": 19, "searchio": [20, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "queryresult": 20, "hspfragment": 20, "note": [20, 65], "standard": 20, "convent": [20, 216], "larg": 20, "seqrecord": [21, 23, 259], "scratch": 21, "locat": [21, 236], "simpleloc": 21, "compoundloc": 21, "fuzzi": 21, "describ": 21, "comparison": 21, "act": 22, "like": 22, "turn": 22, "seq": [22, 235], "concaten": 22, "chang": 22, "transcript": 22, "tabl": [22, 26, 306], "unknown": 22, "partial": 22, "mutableseq": 22, "subsequ": 22, "directli": 22, "input": [23, 56, 216, 237, 297], "compress": 23, "net": 23, "swissprot": [23, 271, 272], "dictionari": 23, "In": 23, "memori": 23, "specifi": [23, 236], "kei": 23, "seguid": 23, "checksum": [23, 261], "discuss": 23, "round": 23, "trip": 23, "low": 23, "level": 23, "framework": 24, "tox": 24, "unittest": 24, "doctest": 24, "tutori": [24, 26], "swiss": 25, "prot": 25, "expasi": [25, 85, 86, 87, 88, 89, 90], "keyword": 25, "categori": 25, "prosit": [25, 88], "enzym": [25, 86, 113], "server": 25, "uniprot": [25, 275, 276], "scan": 25, "subpackag": [27, 30, 98, 111, 133, 176, 180, 199, 216, 267, 282], "submodul": [27, 28, 30, 56, 68, 75, 79, 83, 85, 92, 96, 98, 106, 111, 115, 124, 128, 133, 170, 177, 180, 191, 200, 205, 208, 216, 217, 221, 226, 228, 233, 237, 260, 267, 271, 275, 278, 282, 286, 297, 300], "affi": [28, 29], "celfil": 29, "aligninfo": 31, "clustal": 40, "hhr": 44, "interfac": [45, 60, 245], "substitution_matric": 54, "alignio": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "convers": [56, 216, 237], "clustalio": 57, "embossio": 58, "fastaio": [59, 225, 240], "mafio": 61, "mauveio": 62, "msfio": 63, "nexusio": [64, 190], "phylipio": 65, "stockholmio": 66, "ncbiwww": 70, "ncbixml": 71, "cap": 72, "compass": 74, "codont": 76, "iupacdata": 77, "pdbdata": 78, "primer3": 81, "primersearch": 82, "prodoc": 87, "scanprosit": 89, "cellosauru": 90, "scanner": 94, "util": [95, 110], "basicchromosom": 99, "colorspir": 100, "displayrepresent": 102, "kgml_vi": 105, "hmm": [106, 107, 108, 109, 110], "dynamicprogram": 107, "markovmodel": [108, 121], "trainer": 109, "compound": 112, "gene": 114, "kgml": [115, 116, 117], "kgml_parser": 116, "kgml_pathwai": 117, "rest": 119, "logisticregress": 120, "maxentropi": 122, "nmr": [124, 125, 126], "noetool": 125, "xpktool": 126, "naivebay": 127, "node": 130, "standarddata": 131, "abstractpropertymap": 134, "dice": 138, "entiti": 139, "fragmentmapp": 140, "hsexposur": 141, "mmcif2dict": 142, "mmcifpars": 143, "naccess": 145, "neighborsearch": 146, "pdbexcept": 147, "pdbio": [148, 247], "pdblist": 149, "pdbmlparser": 150, "pdbparser": 151, "picio": 152, "psea": 153, "residuedepth": 156, "sasa": 157, "scadio": 158, "structurealign": 161, "structurebuild": 162, "alphafold_db": 164, "cealign": 165, "ic_data": 166, "ic_rebuild": 167, "todo": 168, "mmcifio": 169, "defaultpars": 171, "mmtfio": 172, "parse_pdb_head": 173, "qcprot": 174, "vector": 175, "pathwai": [176, 177, 178, 179], "rep": [177, 178, 179], "graph": 178, "multigraph": 179, "basetre": 182, "cdao": 183, "cdaoio": 184, "nexml": 186, "nexmlio": 187, "newick": 188, "newickio": 189, "baseml": 192, "chi2": 193, "codeml": 194, "yn00": 195, "see": 196, "also": 196, "phyloxmlio": 197, "treeconstruct": 198, "easycontrol": 202, "filepars": 203, "largefilepars": 204, "restrict": [205, 206, 207], "printformat": 206, "restriction_dictionari": 207, "scop": [208, 209, 210, 211, 212, 213, 214], "cla": 209, "dom": 211, "hie": 212, "raf": 213, "svdsuperimpos": 215, "order": 216, "blastio": [217, 218, 219], "tab": [217, 228], "blast_tab": 218, "blast_xml": 219, "blatio": 220, "exonerateio": [221, 222, 223, 224], "text": [221, 228, 277], "vulgar": 221, "cigar": 221, "exonerate_cigar": 222, "exonerate_text": 223, "exonerate_vulgar": 224, "m10": 225, "hhsuiteio": [226, 227], "hhsuite2_text": 227, "hmmerio": [228, 229, 230, 231, 232], "hmmer2": 228, "hmmer3": 228, "domtab": 228, "hmmer2_text": 229, "hmmer3_domtab": 230, "hmmer3_tab": 231, "hmmer3_text": 232, "interproscanio": [233, 234], "interproscan": 233, "interproscan_xml": 234, "base": 236, "hold": 236, "seqio": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "advanc": 237, "abiio": 238, "aceio": 239, "gckio": 241, "gfaio": 242, "igio": 243, "insdcio": 244, "nibio": 246, "phdio": 248, "pirio": 249, "qualityio": 250, "seqxmlio": 251, "sffio": 252, "snapgeneio": 253, "swissio": 254, "tabio": 255, "twobitio": 256, "uniprotio": 257, "xdnaio": 258, "sequtil": [260, 261, 262, 263, 264, 265, 266], "isoelectricpoint": 262, "meltingtemp": 263, "protparam": 264, "protparamdata": 265, "lcc": 266, "ac": 268, "phd": 270, "keywlist": 272, "togow": 273, "goa": 276, "bgzf": 277, "aim": 277, "thi": 277, "technic": 277, "warn": 277, "namespac": 277, "mode": 277, "codonseq": 280, "knn": 281, "alignac": 283, "clusterbust": 285, "db": 287, "minim": 291, "xm": 295, "phen_micro": 298, "pm_fit": 299, "bioseq": 301, "bioseqdatabas": 302, "dbutil": 303, "loader": 304}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Sequence alignments": [[0, "sequence-alignments"]], "Alignment objects": [[0, "alignment-objects"]], "Creating an Alignment object from sequences and coordinates": [[0, "creating-an-alignment-object-from-sequences-and-coordinates"]], "Creating an Alignment object from aligned sequences": [[0, "creating-an-alignment-object-from-aligned-sequences"]], "Common alignment attributes": [[0, "common-alignment-attributes"]], "Slicing and indexing an alignment": [[0, "slicing-and-indexing-an-alignment"]], "Getting information about the alignment": [[0, "getting-information-about-the-alignment"]], "Alignment shape": [[0, "alignment-shape"]], "Comparing alignments": [[0, "comparing-alignments"]], "Finding the indices of aligned sequences": [[0, "finding-the-indices-of-aligned-sequences"]], "Counting identities, mismatches, and gaps": [[0, "counting-identities-mismatches-and-gaps"]], "Letter frequencies": [[0, "letter-frequencies"]], "Substitutions": [[0, "substitutions"]], "Alignments as arrays": [[0, "alignments-as-arrays"], [12, "alignments-as-arrays"]], "Operations on an alignment": [[0, "operations-on-an-alignment"]], "Sorting an alignment": [[0, "sorting-an-alignment"]], "Reverse-complementing the alignment": [[0, "reverse-complementing-the-alignment"]], "Adding alignments": [[0, "adding-alignments"]], "Mapping a pairwise sequence alignment": [[0, "mapping-a-pairwise-sequence-alignment"]], "Mapping a multiple sequence alignment": [[0, "mapping-a-multiple-sequence-alignment"]], "The Alignments class": [[0, "the-alignments-class"]], "Reading and writing alignments": [[0, "reading-and-writing-alignments"]], "Reading alignments": [[0, "reading-alignments"]], "Writing alignments": [[0, "writing-alignments"]], "Printing alignments": [[0, "printing-alignments"]], "Alignment file formats": [[0, "alignment-file-formats"]], "Aligned FASTA": [[0, "aligned-fasta"]], "ClustalW": [[0, "clustalw"], [12, "clustalw"]], "Stockholm": [[0, "stockholm"]], "PHYLIP output files": [[0, "phylip-output-files"]], "EMBOSS": [[0, "emboss"]], "GCG Multiple Sequence Format (MSF)": [[0, "gcg-multiple-sequence-format-msf"]], "Exonerate": [[0, "exonerate"]], "NEXUS": [[0, "nexus"]], "Tabular output from BLAST or FASTA": [[0, "tabular-output-from-blast-or-fasta"]], "HH-suite output files": [[0, "hh-suite-output-files"]], "A2M": [[0, "a2m"]], "Mauve eXtended Multi-FastA (xmfa) format": [[0, "mauve-extended-multi-fasta-xmfa-format"]], "Sequence Alignment/Map (SAM)": [[0, "sequence-alignment-map-sam"]], "Browser Extensible Data (BED)": [[0, "browser-extensible-data-bed"]], "bigBed": [[0, "bigbed"]], "Pattern Space Layout (PSL)": [[0, "pattern-space-layout-psl"]], "bigPsl": [[0, "bigpsl"]], "Multiple Alignment Format (MAF)": [[0, "multiple-alignment-format-maf"]], "bigMaf": [[0, "bigmaf"]], "UCSC chain file format": [[0, "ucsc-chain-file-format"]], "Appendix: Useful stuff about Python": [[1, "appendix-useful-stuff-about-python"]], "What the heck is a handle?": [[1, "what-the-heck-is-a-handle"]], "Creating a handle from a string": [[1, "creating-a-handle-from-a-string"]], "Bibliography": [[2, "bibliography"]], "BLAST (new)": [[3, "blast-new"]], "Running BLAST over the Internet": [[3, "running-blast-over-the-internet"], [3, "id1"]], "BLAST arguments": [[3, "blast-arguments"]], "Saving BLAST results": [[3, "saving-blast-results"]], "Obtaining BLAST output in other formats": [[3, "obtaining-blast-output-in-other-formats"]], "Running BLAST locally": [[3, "running-blast-locally"], [3, "id2"]], "Introduction": [[3, "introduction"], [3, "introduction-1"], [8, "introduction"], [9, "introduction"]], "Standalone NCBI BLAST+": [[3, "standalone-ncbi-blast"], [3, "standalone-ncbi-blast-1"]], "Other versions of BLAST": [[3, "other-versions-of-blast"], [3, "id5"]], "Parsing BLAST output": [[3, "parsing-blast-output"], [3, "id6"]], "The BLAST Records, Record, and Hit classes": [[3, "the-blast-records-record-and-hit-classes"]], "The BLAST Records class": [[3, "the-blast-records-class"]], "The BLAST Record class": [[3, "the-blast-record-class"]], "The BLAST Hit class": [[3, "the-blast-hit-class"]], "The BLAST HSP class": [[3, "the-blast-hsp-class"]], "Sorting and filtering BLAST output": [[3, "sorting-and-filtering-blast-output"]], "Writing BLAST records": [[3, "writing-blast-records"]], "Dealing with PSI-BLAST": [[3, "dealing-with-psi-blast"], [3, "dealing-with-psi-blast-1"]], "Dealing with RPS-BLAST": [[3, "dealing-with-rps-blast"], [3, "dealing-with-rps-blast-1"]], "BLAST (old)": [[3, "blast-old"]], "The BLAST record class": [[3, "id7"]], "Cluster analysis": [[4, "cluster-analysis"]], "Data representation": [[4, "data-representation"]], "Missing values": [[4, "missing-values"]], "Random number generator": [[4, "random-number-generator"]], "Distance functions": [[4, "distance-functions"]], "Euclidean distance": [[4, "euclidean-distance"]], "City-block distance": [[4, "city-block-distance"]], "The Pearson correlation coefficient": [[4, "the-pearson-correlation-coefficient"]], "Absolute Pearson correlation": [[4, "absolute-pearson-correlation"]], "Uncentered correlation (cosine of the angle)": [[4, "uncentered-correlation-cosine-of-the-angle"]], "Absolute uncentered correlation": [[4, "absolute-uncentered-correlation"]], "Spearman rank correlation": [[4, "spearman-rank-correlation"]], "Kendall\u2019s \\tau": [[4, "kendalls-tau"]], "Weighting": [[4, "weighting"]], "Calculating the distance matrix": [[4, "calculating-the-distance-matrix"], [4, "id12"]], "Calculating cluster properties": [[4, "calculating-cluster-properties"]], "Calculating the cluster centroids": [[4, "calculating-the-cluster-centroids"], [4, "id13"]], "Calculating the distance between clusters": [[4, "calculating-the-distance-between-clusters"], [4, "calculating-the-distance-between-clusters-1"]], "Partitioning algorithms": [[4, "partitioning-algorithms"]], "k-means and k-medians": [[4, "k-means-and-k-medians"]], "k-medoids clustering": [[4, "k-medoids-clustering"]], "Hierarchical clustering": [[4, "hierarchical-clustering"]], "Representing a hierarchical clustering solution": [[4, "representing-a-hierarchical-clustering-solution"]], "Performing hierarchical clustering": [[4, "performing-hierarchical-clustering"], [4, "performing-hierarchical-clustering-1"]], "Self-Organizing Maps": [[4, "self-organizing-maps"]], "Principal Component Analysis": [[4, "principal-component-analysis"]], "Handling Cluster/TreeView-type files": [[4, "handling-cluster-treeview-type-files"]], "Performing k-means or k-medians clustering": [[4, "performing-k-means-or-k-medians-clustering"]], "Calculating a Self-Organizing Map": [[4, "calculating-a-self-organizing-map"]], "Saving the clustering result": [[4, "saving-the-clustering-result"]], "Example calculation": [[4, "example-calculation"]], "Where to go from here \u2013 contributing to Biopython": [[5, "where-to-go-from-here-contributing-to-biopython"]], "Bug Reports + Feature Requests": [[5, "bug-reports-feature-requests"]], "Mailing lists and helping newcomers": [[5, "mailing-lists-and-helping-newcomers"]], "Contributing Documentation": [[5, "contributing-documentation"]], "Contributing cookbook examples": [[5, "contributing-cookbook-examples"]], "Maintaining a distribution for a platform": [[5, "maintaining-a-distribution-for-a-platform"]], "Contributing Unit Tests": [[5, "contributing-unit-tests"]], "Contributing Code": [[5, "contributing-code"]], "Cookbook \u2013 Cool things to do with it": [[6, "cookbook-cool-things-to-do-with-it"]], "Working with sequence files": [[6, "working-with-sequence-files"]], "Filtering a sequence file": [[6, "filtering-a-sequence-file"]], "Producing randomized genomes": [[6, "producing-randomized-genomes"]], "Translating a FASTA file of CDS entries": [[6, "translating-a-fasta-file-of-cds-entries"]], "Making the sequences in a FASTA file upper case": [[6, "making-the-sequences-in-a-fasta-file-upper-case"]], "Sorting a sequence file": [[6, "sorting-a-sequence-file"]], "Simple quality filtering for FASTQ files": [[6, "simple-quality-filtering-for-fastq-files"]], "Trimming off primer sequences": [[6, "trimming-off-primer-sequences"]], "Trimming off adaptor sequences": [[6, "trimming-off-adaptor-sequences"]], "Converting FASTQ files": [[6, "converting-fastq-files"]], "Converting FASTA and QUAL files into FASTQ files": [[6, "converting-fasta-and-qual-files-into-fastq-files"]], "Indexing a FASTQ file": [[6, "indexing-a-fastq-file"]], "Converting SFF files": [[6, "converting-sff-files"]], "Identifying open reading frames": [[6, "identifying-open-reading-frames"]], "Sequence parsing plus simple plots": [[6, "sequence-parsing-plus-simple-plots"]], "Histogram of sequence lengths": [[6, "histogram-of-sequence-lengths"]], "Plot of sequence GC%": [[6, "plot-of-sequence-gc"]], "Nucleotide dot plots": [[6, "nucleotide-dot-plots"]], "Plotting the quality scores of sequencing read data": [[6, "plotting-the-quality-scores-of-sequencing-read-data"]], "BioSQL \u2013 storing sequences in a relational database": [[6, "biosql-storing-sequences-in-a-relational-database"]], "Accessing NCBI\u2019s Entrez databases": [[7, "accessing-ncbis-entrez-databases"]], "Entrez Guidelines": [[7, "entrez-guidelines"]], "EInfo: Obtaining information about the Entrez databases": [[7, "einfo-obtaining-information-about-the-entrez-databases"]], "ESearch: Searching the Entrez databases": [[7, "esearch-searching-the-entrez-databases"]], "EPost: Uploading a list of identifiers": [[7, "epost-uploading-a-list-of-identifiers"]], "ESummary: Retrieving summaries from primary IDs": [[7, "esummary-retrieving-summaries-from-primary-ids"]], "EFetch: Downloading full records from Entrez": [[7, "efetch-downloading-full-records-from-entrez"]], "ELink: Searching for related items in NCBI Entrez": [[7, "elink-searching-for-related-items-in-ncbi-entrez"]], "EGQuery: Global Query - counts for search terms": [[7, "egquery-global-query-counts-for-search-terms"]], "ESpell: Obtaining spelling suggestions": [[7, "espell-obtaining-spelling-suggestions"]], "Parsing huge Entrez XML files": [[7, "parsing-huge-entrez-xml-files"]], "HTML escape characters": [[7, "html-escape-characters"]], "Handling errors": [[7, "handling-errors"]], "The file is not an XML file": [[7, "the-file-is-not-an-xml-file"]], "The file ends prematurely or is otherwise corrupted": [[7, "the-file-ends-prematurely-or-is-otherwise-corrupted"]], "The file contains items that are missing from the associated DTD": [[7, "the-file-contains-items-that-are-missing-from-the-associated-dtd"]], "The file contains an error message": [[7, "the-file-contains-an-error-message"]], "Specialized parsers": [[7, "specialized-parsers"]], "Parsing Medline records": [[7, "parsing-medline-records"]], "Parsing GEO records": [[7, "parsing-geo-records"]], "Parsing UniGene records": [[7, "parsing-unigene-records"]], "Using a proxy": [[7, "using-a-proxy"]], "Examples": [[7, "examples"], [13, "examples"], [15, "examples"], [90, "examples"], [137, "examples"], [205, "examples"], [264, "examples"], [277, "examples"]], "PubMed and Medline": [[7, "pubmed-and-medline"]], "Searching, downloading, and parsing Entrez Nucleotide records": [[7, "searching-downloading-and-parsing-entrez-nucleotide-records"]], "Searching, downloading, and parsing GenBank records": [[7, "searching-downloading-and-parsing-genbank-records"]], "Finding the lineage of an organism": [[7, "finding-the-lineage-of-an-organism"]], "Using the history and WebEnv": [[7, "using-the-history-and-webenv"]], "Searching for and downloading sequences using the history": [[7, "searching-for-and-downloading-sequences-using-the-history"]], "Searching for and downloading abstracts using the history": [[7, "searching-for-and-downloading-abstracts-using-the-history"]], "Searching for citations": [[7, "searching-for-citations"]], "Graphics including GenomeDiagram": [[8, "graphics-including-genomediagram"]], "GenomeDiagram": [[8, "genomediagram"]], "Diagrams, tracks, feature-sets and features": [[8, "diagrams-tracks-feature-sets-and-features"]], "A top down example": [[8, "a-top-down-example"]], "A bottom up example": [[8, "a-bottom-up-example"]], "Features without a SeqFeature": [[8, "features-without-a-seqfeature"]], "Feature captions": [[8, "feature-captions"]], "Feature sigils": [[8, "feature-sigils"]], "Arrow sigils": [[8, "arrow-sigils"]], "A nice example": [[8, "a-nice-example"]], "Multiple tracks": [[8, "multiple-tracks"]], "Cross-Links between tracks": [[8, "cross-links-between-tracks"]], "Further options": [[8, "further-options"]], "Converting old code": [[8, "converting-old-code"]], "Chromosomes": [[8, "chromosomes"]], "Simple Chromosomes": [[8, "simple-chromosomes"]], "Annotated Chromosomes": [[8, "annotated-chromosomes"]], "What is Biopython?": [[9, "what-is-biopython"]], "What can I find in the Biopython package": [[9, "what-can-i-find-in-the-biopython-package"]], "Installing Biopython": [[9, "installing-biopython"]], "Frequently Asked Questions (FAQ)": [[9, "frequently-asked-questions-faq"]], "KEGG": [[10, "kegg"]], "Parsing KEGG records": [[10, "parsing-kegg-records"]], "Querying the KEGG API": [[10, "querying-the-kegg-api"]], "Sequence motif analysis using Bio.motifs": [[11, "sequence-motif-analysis-using-bio-motifs"]], "Motif objects": [[11, "motif-objects"]], "Creating a motif from instances": [[11, "creating-a-motif-from-instances"]], "Obtaining a consensus sequence": [[11, "obtaining-a-consensus-sequence"]], "Reverse-complementing a motif": [[11, "reverse-complementing-a-motif"]], "Slicing a motif": [[11, "slicing-a-motif"]], "Relative entropy": [[11, "relative-entropy"]], "Creating a sequence logo": [[11, "creating-a-sequence-logo"]], "Reading motifs": [[11, "reading-motifs"]], "JASPAR": [[11, "jaspar"]], "The JASPAR sites format": [[11, "the-jaspar-sites-format"]], "The JASPAR pfm format": [[11, "the-jaspar-pfm-format"]], "The JASPAR format jaspar": [[11, "the-jaspar-format-jaspar"]], "Accessing the JASPAR database": [[11, "accessing-the-jaspar-database"]], "Compatibility with Perl TFBS modules": [[11, "compatibility-with-perl-tfbs-modules"]], "MEME": [[11, "meme"], [11, "sec-meme"]], "MAST": [[11, "mast"]], "TRANSFAC": [[11, "transfac"]], "Fields commonly found in TRANSFAC files": [[11, "table-transfaccodes"]], "Fields used to store references in TRANSFAC files": [[11, "id8"]], "Writing motifs": [[11, "writing-motifs"]], "Position-Weight Matrices": [[11, "position-weight-matrices"]], "Position-Specific Scoring Matrices": [[11, "position-specific-scoring-matrices"]], "Searching for instances": [[11, "searching-for-instances"]], "Searching for exact matches": [[11, "searching-for-exact-matches"]], "Searching for matches using the PSSM score": [[11, "searching-for-matches-using-the-pssm-score"]], "Selecting a score threshold": [[11, "selecting-a-score-threshold"]], "Each motif object has an associated Position-Specific Scoring Matrix": [[11, "each-motif-object-has-an-associated-position-specific-scoring-matrix"]], "Comparing motifs": [[11, "comparing-motifs"]], "De novo motif finding": [[11, "de-novo-motif-finding"]], "Useful links": [[11, "useful-links"]], "Multiple Sequence Alignment objects": [[12, "multiple-sequence-alignment-objects"]], "Parsing or Reading Sequence Alignments": [[12, "parsing-or-reading-sequence-alignments"]], "Single Alignments": [[12, "single-alignments"]], "Multiple Alignments": [[12, "multiple-alignments"]], "Ambiguous Alignments": [[12, "ambiguous-alignments"]], "Writing Alignments": [[12, "writing-alignments"]], "Converting between sequence alignment file formats": [[12, "converting-between-sequence-alignment-file-formats"]], "Getting your alignment objects as formatted strings": [[12, "getting-your-alignment-objects-as-formatted-strings"]], "Manipulating Alignments": [[12, "manipulating-alignments"]], "Slicing alignments": [[12, "slicing-alignments"]], "Counting substitutions": [[12, "counting-substitutions"]], "Calculating summary information": [[12, "calculating-summary-information"]], "Calculating a quick consensus sequence": [[12, "calculating-a-quick-consensus-sequence"]], "Position Specific Score Matrices": [[12, "position-specific-score-matrices"]], "Information Content": [[12, "information-content"]], "Getting a new-style Alignment object": [[12, "getting-a-new-style-alignment-object"]], "Calculating a substitution matrix from a multiple sequence alignment": [[12, "calculating-a-substitution-matrix-from-a-multiple-sequence-alignment"], [13, "calculating-a-substitution-matrix-from-a-multiple-sequence-alignment"]], "Alignment Tools": [[12, "alignment-tools"]], "MUSCLE": [[12, "muscle"]], "EMBOSS needle and water": [[12, "emboss-needle-and-water"]], "Pairwise sequence alignment": [[13, "pairwise-sequence-alignment"]], "Basic usage": [[13, "basic-usage"]], "The pairwise aligner object": [[13, "the-pairwise-aligner-object"]], "Substitution scores": [[13, "substitution-scores"]], "Affine gap scores": [[13, "affine-gap-scores"]], "Meta-attributes of the pairwise aligner objects.": [[13, "table-align-meta-attributes"]], "General gap scores": [[13, "general-gap-scores"]], "Using a pre-defined substitution matrix and gap scores": [[13, "using-a-pre-defined-substitution-matrix-and-gap-scores"]], "Iterating over alignments": [[13, "iterating-over-alignments"]], "Aligning to the reverse strand": [[13, "aligning-to-the-reverse-strand"]], "Substitution matrices": [[13, "substitution-matrices"]], "Array objects": [[13, "array-objects"]], "Calculating a substitution matrix from a pairwise sequence alignment": [[13, "calculating-a-substitution-matrix-from-a-pairwise-sequence-alignment"]], "Reading Array objects from file": [[13, "reading-array-objects-from-file"]], "Loading predefined substitution matrices": [[13, "loading-predefined-substitution-matrices"]], "Generalized pairwise alignments": [[13, "generalized-pairwise-alignments"]], "Generalized pairwise alignments using a substitution matrix and alphabet": [[13, "generalized-pairwise-alignments-using-a-substitution-matrix-and-alphabet"]], "Generalized pairwise alignments using match/mismatch scores and an alphabet": [[13, "generalized-pairwise-alignments-using-match-mismatch-scores-and-an-alphabet"]], "Generalized pairwise alignments using match/mismatch scores and integer sequences": [[13, "generalized-pairwise-alignments-using-match-mismatch-scores-and-integer-sequences"]], "Generalized pairwise alignments using a substitution matrix and integer sequences": [[13, "generalized-pairwise-alignments-using-a-substitution-matrix-and-integer-sequences"]], "Codon alignments": [[13, "codon-alignments"]], "Aligning a nucleotide sequence to an amino acid sequence": [[13, "aligning-a-nucleotide-sequence-to-an-amino-acid-sequence"]], "Meta-attributes of CodonAligner objects.": [[13, "table-codonalign-meta-attributes"]], "Generating a multiple sequence alignment of codon sequences": [[13, "generating-a-multiple-sequence-alignment-of-codon-sequences"]], "Analyzing a codon alignment": [[13, "analyzing-a-codon-alignment"]], "Calculating the number of nonsynonymous and synonymous substitutions per site": [[13, "calculating-the-number-of-nonsynonymous-and-synonymous-substitutions-per-site"]], "Performing the McDonald-Kreitman test": [[13, "performing-the-mcdonald-kreitman-test"]], "Pairwise alignments using pairwise2": [[14, "pairwise-alignments-using-pairwise2"]], "Going 3D: The PDB module": [[15, "going-3d-the-pdb-module"]], "Reading and writing crystal structure files": [[15, "reading-and-writing-crystal-structure-files"]], "Reading an mmCIF file": [[15, "reading-an-mmcif-file"]], "Reading files in the MMTF format": [[15, "reading-files-in-the-mmtf-format"]], "Reading a PDB file": [[15, "reading-a-pdb-file"]], "Reading a PQR file": [[15, "reading-a-pqr-file"]], "Reading a PDBML (PDB XML) file": [[15, "reading-a-pdbml-pdb-xml-file"]], "Writing mmCIF files": [[15, "writing-mmcif-files"]], "Writing PDB files": [[15, "writing-pdb-files"]], "Writing PQR files": [[15, "writing-pqr-files"]], "Writing MMTF files": [[15, "writing-mmtf-files"]], "Structure representation": [[15, "structure-representation"]], "Structure": [[15, "structure"]], "Model": [[15, "model"]], "Chain": [[15, "chain"]], "Residue": [[15, "residue"]], "Atom": [[15, "atom"]], "Extracting a specific Atom/Residue/Chain/Model from a Structure": [[15, "extracting-a-specific-atom-residue-chain-model-from-a-structure"]], "Disorder": [[15, "disorder"]], "General approach": [[15, "general-approach"]], "Disordered atoms": [[15, "disordered-atoms"]], "Disordered residues": [[15, "disordered-residues"]], "Common case": [[15, "common-case"]], "Point mutations": [[15, "point-mutations"]], "Hetero residues": [[15, "hetero-residues"]], "Associated problems": [[15, "associated-problems"]], "Water residues": [[15, "water-residues"]], "Other hetero residues": [[15, "other-hetero-residues"]], "Navigating through a Structure object": [[15, "navigating-through-a-structure-object"]], "Parse a PDB file, and extract some Model, Chain, Residue and Atom objects": [[15, "parse-a-pdb-file-and-extract-some-model-chain-residue-and-atom-objects"]], "Iterating through all atoms of a structure": [[15, "iterating-through-all-atoms-of-a-structure"]], "Iterating over all residues of a model": [[15, "iterating-over-all-residues-of-a-model"]], "Extract hetero residue from chain (e.g. glucose (GLC) moiety with resseq 10)": [[15, "extract-hetero-residue-from-chain-e-g-glucose-glc-moiety-with-resseq-10"]], "Print all hetero residues in chain": [[15, "print-all-hetero-residues-in-chain"]], "Print out coordinates of all CA atoms in structure with B factor over 50": [[15, "print-out-coordinates-of-all-ca-atoms-in-structure-with-b-factor-over-50"]], "Print out all the residues that contain disordered atoms": [[15, "print-out-all-the-residues-that-contain-disordered-atoms"]], "Loop over all disordered atoms, and select all atoms with altloc A (if present)": [[15, "loop-over-all-disordered-atoms-and-select-all-atoms-with-altloc-a-if-present"]], "Extracting polypeptides from a Structure object": [[15, "extracting-polypeptides-from-a-structure-object"]], "Obtaining the sequence of a structure": [[15, "obtaining-the-sequence-of-a-structure"]], "Analyzing structures": [[15, "analyzing-structures"]], "Measuring distances": [[15, "measuring-distances"]], "Measuring angles": [[15, "measuring-angles"]], "Measuring torsion angles": [[15, "measuring-torsion-angles"]], "Internal coordinates - distances, angles, torsion angles, distance plots, etc": [[15, "internal-coordinates-distances-angles-torsion-angles-distance-plots-etc"]], "Accessing dihedrals, angles and bond lengths": [[15, "accessing-dihedrals-angles-and-bond-lengths"]], "Testing structures for completeness": [[15, "testing-structures-for-completeness"]], "Modifying and rebuilding structures": [[15, "modifying-and-rebuilding-structures"]], "Protein Internal Coordinate (.pic) files and default values": [[15, "protein-internal-coordinate-pic-files-and-default-values"]], "Accessing the all-atom AtomArray": [[15, "accessing-the-all-atom-atomarray"]], "Distance Plots": [[15, "distance-plots"]], "Building a structure from a distance plot": [[15, "building-a-structure-from-a-distance-plot"]], "Superimposing residues and their neighborhoods": [[15, "superimposing-residues-and-their-neighborhoods"]], "3D printing protein structures": [[15, "d-printing-protein-structures"]], "internal_coords control attributes": [[15, "internal-coords-control-attributes"]], "Control attributes in Bio.PDB.internal_coords.": [[15, "table-ic-attribs"]], "Determining atom-atom contacts": [[15, "determining-atom-atom-contacts"]], "Superimposing two structures": [[15, "superimposing-two-structures"]], "Mapping the residues of two related structures onto each other": [[15, "mapping-the-residues-of-two-related-structures-onto-each-other"]], "Calculating the Half Sphere Exposure": [[15, "calculating-the-half-sphere-exposure"]], "Determining the secondary structure": [[15, "determining-the-secondary-structure"]], "DSSP codes in Bio.PDB.": [[15, "table-dssp-codes"]], "Calculating the residue depth": [[15, "calculating-the-residue-depth"]], "Common problems in PDB files": [[15, "common-problems-in-pdb-files"]], "Duplicate residues": [[15, "duplicate-residues"], [15, "duplicate-residues-1"]], "Duplicate atoms": [[15, "duplicate-atoms"], [15, "duplicate-atoms-1"]], "Automatic correction": [[15, "automatic-correction"]], "A blank altloc for a disordered atom": [[15, "a-blank-altloc-for-a-disordered-atom"]], "Broken chains": [[15, "broken-chains"]], "Fatal errors": [[15, "fatal-errors"]], "Accessing the Protein Data Bank": [[15, "accessing-the-protein-data-bank"]], "Downloading structures from the Protein Data Bank": [[15, "downloading-structures-from-the-protein-data-bank"]], "Downloading the entire PDB": [[15, "downloading-the-entire-pdb"]], "Keeping a local copy of the PDB up to date": [[15, "keeping-a-local-copy-of-the-pdb-up-to-date"]], "General questions": [[15, "general-questions"]], "How well tested is Bio.PDB?": [[15, "how-well-tested-is-bio-pdb"]], "How fast is it?": [[15, "how-fast-is-it"]], "Is there support for molecular graphics?": [[15, "is-there-support-for-molecular-graphics"]], "Who\u2019s using Bio.PDB?": [[15, "whos-using-bio-pdb"]], "Bio.phenotype: analyze phenotypic data": [[16, "bio-phenotype-analyze-phenotypic-data"]], "Phenotype Microarrays": [[16, "phenotype-microarrays"]], "Parsing Phenotype Microarray data": [[16, "parsing-phenotype-microarray-data"]], "Manipulating Phenotype Microarray data": [[16, "manipulating-phenotype-microarray-data"]], "Accessing raw data": [[16, "accessing-raw-data"]], "Accessing interpolated data": [[16, "accessing-interpolated-data"]], "Control well subtraction": [[16, "control-well-subtraction"]], "Parameters extraction": [[16, "parameters-extraction"]], "Writing Phenotype Microarray data": [[16, "writing-phenotype-microarray-data"]], "Phylogenetics with Bio.Phylo": [[17, "phylogenetics-with-bio-phylo"]], "Demo: What\u2019s in a Tree?": [[17, "demo-whats-in-a-tree"]], "Coloring branches within a tree": [[17, "coloring-branches-within-a-tree"]], "I/O functions": [[17, "i-o-functions"]], "View and export trees": [[17, "view-and-export-trees"]], "Using Tree and Clade objects": [[17, "using-tree-and-clade-objects"]], "Search and traversal methods": [[17, "search-and-traversal-methods"]], "Information methods": [[17, "information-methods"]], "Modification methods": [[17, "modification-methods"]], "Features of PhyloXML trees": [[17, "features-of-phyloxml-trees"]], "Running external applications": [[17, "running-external-applications"]], "PAML integration": [[17, "paml-integration"]], "Future plans": [[17, "future-plans"]], "Bio.PopGen: Population genetics": [[18, "bio-popgen-population-genetics"]], "GenePop": [[18, "genepop"]], "Quick Start \u2013 What can you do with Biopython?": [[19, "quick-start-what-can-you-do-with-biopython"]], "General overview of what Biopython provides": [[19, "general-overview-of-what-biopython-provides"]], "Working with sequences": [[19, "working-with-sequences"]], "A usage example": [[19, "a-usage-example"]], "Parsing sequence file formats": [[19, "parsing-sequence-file-formats"]], "Simple FASTA parsing example": [[19, "simple-fasta-parsing-example"]], "Simple GenBank parsing example": [[19, "simple-genbank-parsing-example"]], "I love parsing \u2013 please don\u2019t stop talking about it!": [[19, "i-love-parsing-please-dont-stop-talking-about-it"]], "Connecting with biological databases": [[19, "connecting-with-biological-databases"]], "What to do next": [[19, "what-to-do-next"]], "BLAST and other sequence search tools": [[20, "blast-and-other-sequence-search-tools"]], "The SearchIO object model": [[20, "the-searchio-object-model"]], "QueryResult": [[20, "queryresult"]], "Hit": [[20, "hit"]], "HSP": [[20, "hsp"]], "HSPFragment": [[20, "hspfragment"]], "A note about standards and conventions": [[20, "a-note-about-standards-and-conventions"]], "Reading search output files": [[20, "reading-search-output-files"]], "Dealing with large search output files with indexing": [[20, "dealing-with-large-search-output-files-with-indexing"]], "Writing and converting search output files": [[20, "writing-and-converting-search-output-files"]], "Sequence annotation objects": [[21, "sequence-annotation-objects"]], "The SeqRecord object": [[21, "the-seqrecord-object"]], "Creating a SeqRecord": [[21, "creating-a-seqrecord"]], "SeqRecord objects from scratch": [[21, "seqrecord-objects-from-scratch"]], "SeqRecord objects from FASTA files": [[21, "seqrecord-objects-from-fasta-files"]], "SeqRecord objects from GenBank files": [[21, "seqrecord-objects-from-genbank-files"]], "Feature, location and position objects": [[21, "feature-location-and-position-objects"]], "SeqFeature objects": [[21, "seqfeature-objects"]], "Positions and locations": [[21, "positions-and-locations"]], "SimpleLocation object": [[21, "simplelocation-object"]], "CompoundLocation object": [[21, "compoundlocation-object"]], "Fuzzy Positions": [[21, "fuzzy-positions"]], "Location testing": [[21, "location-testing"]], "Sequence described by a feature or location": [[21, "sequence-described-by-a-feature-or-location"]], "Comparison": [[21, "comparison"]], "References": [[21, "references"]], "The format method": [[21, "the-format-method"]], "Slicing a SeqRecord": [[21, "slicing-a-seqrecord"]], "Adding SeqRecord objects": [[21, "adding-seqrecord-objects"]], "Reverse-complementing SeqRecord objects": [[21, "reverse-complementing-seqrecord-objects"]], "Sequence objects": [[22, "sequence-objects"]], "Sequences act like strings": [[22, "sequences-act-like-strings"]], "Slicing a sequence": [[22, "slicing-a-sequence"]], "Turning Seq objects into strings": [[22, "turning-seq-objects-into-strings"]], "Concatenating or adding sequences": [[22, "concatenating-or-adding-sequences"]], "Changing case": [[22, "changing-case"]], "Nucleotide sequences and (reverse) complements": [[22, "nucleotide-sequences-and-reverse-complements"]], "Transcription": [[22, "transcription"]], "Translation": [[22, "translation"]], "Translation Tables": [[22, "translation-tables"]], "Comparing Seq objects": [[22, "comparing-seq-objects"]], "Sequences with unknown sequence contents": [[22, "sequences-with-unknown-sequence-contents"]], "Sequences with partially defined sequence contents": [[22, "sequences-with-partially-defined-sequence-contents"]], "MutableSeq objects": [[22, "mutableseq-objects"]], "Finding subsequences": [[22, "finding-subsequences"]], "Working with strings directly": [[22, "working-with-strings-directly"]], "Sequence Input/Output": [[23, "sequence-input-output"]], "Parsing or Reading Sequences": [[23, "parsing-or-reading-sequences"]], "Reading Sequence Files": [[23, "reading-sequence-files"]], "Iterating over the records in a sequence file": [[23, "iterating-over-the-records-in-a-sequence-file"]], "Getting a list of the records in a sequence file": [[23, "getting-a-list-of-the-records-in-a-sequence-file"]], "Extracting data": [[23, "extracting-data"]], "Modifying data": [[23, "modifying-data"]], "Parsing sequences from compressed files": [[23, "parsing-sequences-from-compressed-files"]], "Parsing sequences from the net": [[23, "parsing-sequences-from-the-net"]], "Parsing GenBank records from the net": [[23, "parsing-genbank-records-from-the-net"]], "Parsing SwissProt sequences from the net": [[23, "parsing-swissprot-sequences-from-the-net"]], "Sequence files as Dictionaries": [[23, "sequence-files-as-dictionaries"]], "Sequence files as Dictionaries \u2013 In memory": [[23, "sequence-files-as-dictionaries-in-memory"]], "Specifying the dictionary keys": [[23, "specifying-the-dictionary-keys"], [23, "sec-seqio-index-functionkey"]], "Indexing a dictionary using the SEGUID checksum": [[23, "indexing-a-dictionary-using-the-seguid-checksum"]], "Sequence files as Dictionaries \u2013 Indexed files": [[23, "sequence-files-as-dictionaries-indexed-files"]], "Getting the raw data for a record": [[23, "getting-the-raw-data-for-a-record"], [23, "id2"]], "Sequence files as Dictionaries \u2013 Database indexed files": [[23, "sequence-files-as-dictionaries-database-indexed-files"]], "Indexing compressed files": [[23, "indexing-compressed-files"]], "Discussion": [[23, "discussion"]], "Writing Sequence Files": [[23, "writing-sequence-files"]], "Round trips": [[23, "round-trips"]], "Converting between sequence file formats": [[23, "converting-between-sequence-file-formats"]], "Converting a file of sequences to their reverse complements": [[23, "converting-a-file-of-sequences-to-their-reverse-complements"]], "Getting your SeqRecord objects as formatted strings": [[23, "getting-your-seqrecord-objects-as-formatted-strings"]], "Low level FASTA and FASTQ parsers": [[23, "low-level-fasta-and-fastq-parsers"]], "The Biopython testing framework": [[24, "the-biopython-testing-framework"]], "Running the tests": [[24, "running-the-tests"]], "Running the tests using Tox": [[24, "running-the-tests-using-tox"]], "Writing tests": [[24, "writing-tests"]], "Writing a test using unittest": [[24, "writing-a-test-using-unittest"]], "Writing doctests": [[24, "writing-doctests"]], "Writing doctests in the Tutorial": [[24, "writing-doctests-in-the-tutorial"]], "Swiss-Prot and ExPASy": [[25, "swiss-prot-and-expasy"]], "Parsing Swiss-Prot files": [[25, "parsing-swiss-prot-files"]], "Parsing Swiss-Prot records": [[25, "parsing-swiss-prot-records"]], "Parsing the Swiss-Prot keyword and category list": [[25, "parsing-the-swiss-prot-keyword-and-category-list"]], "Parsing Prosite records": [[25, "parsing-prosite-records"]], "Parsing Prosite documentation records": [[25, "parsing-prosite-documentation-records"]], "Parsing Enzyme records": [[25, "parsing-enzyme-records"]], "Accessing the ExPASy server": [[25, "accessing-the-expasy-server"]], "Retrieving a Swiss-Prot record": [[25, "retrieving-a-swiss-prot-record"]], "Searching with UniProt": [[25, "searching-with-uniprot"]], "Retrieving Prosite and Prosite documentation records": [[25, "retrieving-prosite-and-prosite-documentation-records"]], "Scanning the Prosite database": [[25, "scanning-the-prosite-database"]], "Biopython Tutorial & Cookbook": [[26, "biopython-tutorial-cookbook"]], "Table of contents:": [[26, null]], "Bio package": [[27, "bio-package"]], "Subpackages": [[27, "subpackages"], [30, "subpackages"], [98, "subpackages"], [111, "subpackages"], [133, "subpackages"], [176, "subpackages"], [180, "subpackages"], [199, "subpackages"], [216, "subpackages"], [267, "subpackages"], [282, "subpackages"]], "Submodules": [[27, "submodules"], [28, "submodules"], [30, "submodules"], [56, "submodules"], [68, "submodules"], [75, "submodules"], [79, "submodules"], [83, "submodules"], [85, "submodules"], [92, "submodules"], [96, "submodules"], [98, "submodules"], [106, "submodules"], [111, "submodules"], [115, "submodules"], [124, "submodules"], [128, "submodules"], [133, "submodules"], [170, "submodules"], [177, "submodules"], [180, "submodules"], [191, "submodules"], [200, "submodules"], [205, "submodules"], [208, "submodules"], [216, "submodules"], [217, "submodules"], [221, "submodules"], [226, "submodules"], [228, "submodules"], [233, "submodules"], [237, "submodules"], [260, "submodules"], [267, "submodules"], [271, "submodules"], [275, "submodules"], [278, "submodules"], [282, "submodules"], [286, "submodules"], [297, "submodules"], [300, "submodules"]], "Module contents": [[27, "module-Bio"], [28, "module-Bio.Affy"], [30, "module-Bio.Align"], [32, "module-Bio.Align.Applications"], [54, "module-Bio.Align.substitution_matrices"], [56, "module-Bio.AlignIO"], [67, "module-Bio.Application"], [68, "module-Bio.Blast"], [72, "module-Bio.CAPS"], [73, "module-Bio.Cluster"], [74, "module-Bio.Compass"], [75, "module-Bio.Data"], [79, "module-Bio.Emboss"], [83, "module-Bio.Entrez"], [85, "module-Bio.ExPASy"], [92, "module-Bio.GenBank"], [96, "module-Bio.Geo"], [98, "module-Bio.Graphics"], [104, "module-Bio.Graphics.GenomeDiagram"], [106, "module-Bio.HMM"], [111, "module-Bio.KEGG"], [112, "module-Bio.KEGG.Compound"], [113, "module-Bio.KEGG.Enzyme"], [114, "module-Bio.KEGG.Gene"], [115, "module-Bio.KEGG.KGML"], [118, "module-Bio.KEGG.Map"], [123, "module-Bio.Medline"], [124, "module-Bio.NMR"], [128, "module-Bio.Nexus"], [133, "module-Bio.PDB"], [170, "module-Bio.PDB.mmtf"], [176, "module-Bio.Pathway"], [177, "module-Bio.Pathway.Rep"], [180, "module-Bio.Phylo"], [181, "module-Bio.Phylo.Applications"], [191, "module-Bio.Phylo.PAML"], [199, "module-Bio.PopGen"], [200, "module-Bio.PopGen.GenePop"], [205, "module-Bio.Restriction"], [208, "module-Bio.SCOP"], [215, "module-Bio.SVDSuperimposer"], [216, "module-Bio.SearchIO"], [217, "module-Bio.SearchIO.BlastIO"], [221, "module-Bio.SearchIO.ExonerateIO"], [226, "module-Bio.SearchIO.HHsuiteIO"], [228, "module-Bio.SearchIO.HmmerIO"], [233, "module-Bio.SearchIO.InterproscanIO"], [237, "module-Bio.SeqIO"], [260, "module-Bio.SeqUtils"], [267, "module-Bio.Sequencing"], [269, "module-Bio.Sequencing.Applications"], [271, "module-Bio.SwissProt"], [273, "module-Bio.TogoWS"], [274, "module-Bio.UniGene"], [275, "module-Bio.UniProt"], [278, "module-Bio.codonalign"], [282, "module-Bio.motifs"], [284, "module-Bio.motifs.applications"], [286, "module-Bio.motifs.jaspar"], [297, "module-Bio.phenotype"], [300, "module-BioSQL"]], "Bio.Affy package": [[28, "bio-affy-package"]], "Bio.Affy.CelFile module": [[29, "module-Bio.Affy.CelFile"]], "Bio.Align package": [[30, "bio-align-package"]], "Bio.Align.AlignInfo module": [[31, "module-Bio.Align.AlignInfo"]], "Bio.Align.Applications package": [[32, "bio-align-applications-package"]], "Bio.Align.a2m module": [[33, "module-Bio.Align.a2m"]], "Bio.Align.analysis module": [[34, "module-Bio.Align.analysis"]], "Bio.Align.bed module": [[35, "module-Bio.Align.bed"]], "Bio.Align.bigbed module": [[36, "module-Bio.Align.bigbed"]], "Bio.Align.bigmaf module": [[37, "module-Bio.Align.bigmaf"]], "Bio.Align.bigpsl module": [[38, "module-Bio.Align.bigpsl"]], "Bio.Align.chain module": [[39, "module-Bio.Align.chain"]], "Bio.Align.clustal module": [[40, "module-Bio.Align.clustal"]], "Bio.Align.emboss module": [[41, "module-Bio.Align.emboss"]], "Bio.Align.exonerate module": [[42, "module-Bio.Align.exonerate"]], "Bio.Align.fasta module": [[43, "module-Bio.Align.fasta"]], "Bio.Align.hhr module": [[44, "module-Bio.Align.hhr"]], "Bio.Align.interfaces module": [[45, "module-Bio.Align.interfaces"]], "Bio.Align.maf module": [[46, "module-Bio.Align.maf"]], "Bio.Align.mauve module": [[47, "module-Bio.Align.mauve"]], "Bio.Align.msf module": [[48, "module-Bio.Align.msf"]], "Bio.Align.nexus module": [[49, "module-Bio.Align.nexus"]], "Bio.Align.phylip module": [[50, "module-Bio.Align.phylip"]], "Bio.Align.psl module": [[51, "module-Bio.Align.psl"]], "Bio.Align.sam module": [[52, "module-Bio.Align.sam"]], "Bio.Align.stockholm module": [[53, "module-Bio.Align.stockholm"]], "Bio.Align.substitution_matrices package": [[54, "bio-align-substitution-matrices-package"]], "Bio.Align.tabular module": [[55, "module-Bio.Align.tabular"]], "Bio.AlignIO package": [[56, "bio-alignio-package"]], "Input": [[56, "input"], [216, "input"], [237, "input"], [297, "input"]], "Output": [[56, "output"], [216, "output"], [237, "output"], [297, "output"]], "Conversion": [[56, "conversion"], [216, "conversion"], [237, "conversion"]], "File Formats": [[56, "file-formats"], [237, "file-formats"], [297, "file-formats"]], "Bio.AlignIO.ClustalIO module": [[57, "module-Bio.AlignIO.ClustalIO"]], "Bio.AlignIO.EmbossIO module": [[58, "module-Bio.AlignIO.EmbossIO"]], "Bio.AlignIO.FastaIO module": [[59, "module-Bio.AlignIO.FastaIO"]], "Bio.AlignIO.Interfaces module": [[60, "module-Bio.AlignIO.Interfaces"]], "Bio.AlignIO.MafIO module": [[61, "module-Bio.AlignIO.MafIO"]], "Bio.AlignIO.MauveIO module": [[62, "module-Bio.AlignIO.MauveIO"]], "Bio.AlignIO.MsfIO module": [[63, "module-Bio.AlignIO.MsfIO"]], "Bio.AlignIO.NexusIO module": [[64, "module-Bio.AlignIO.NexusIO"]], "Bio.AlignIO.PhylipIO module": [[65, "module-Bio.AlignIO.PhylipIO"]], "Note": [[65, "note"]], "Bio.AlignIO.StockholmIO module": [[66, "module-Bio.AlignIO.StockholmIO"]], "Bio.Application package": [[67, "bio-application-package"]], "Bio.Blast package": [[68, "bio-blast-package"]], "Bio.Blast.Applications module": [[69, "module-Bio.Blast.Applications"]], "Bio.Blast.NCBIWWW module": [[70, "module-Bio.Blast.NCBIWWW"]], "Bio.Blast.NCBIXML module": [[71, "module-Bio.Blast.NCBIXML"]], "Bio.CAPS package": [[72, "bio-caps-package"]], "Bio.Cluster package": [[73, "bio-cluster-package"]], "Bio.Compass package": [[74, "bio-compass-package"]], "Bio.Data package": [[75, "bio-data-package"]], "Bio.Data.CodonTable module": [[76, "module-Bio.Data.CodonTable"]], "Bio.Data.IUPACData module": [[77, "module-Bio.Data.IUPACData"]], "Bio.Data.PDBData module": [[78, "module-Bio.Data.PDBData"]], "Bio.Emboss package": [[79, "bio-emboss-package"]], "Bio.Emboss.Applications module": [[80, "module-Bio.Emboss.Applications"]], "Bio.Emboss.Primer3 module": [[81, "module-Bio.Emboss.Primer3"]], "Bio.Emboss.PrimerSearch module": [[82, "module-Bio.Emboss.PrimerSearch"]], "Bio.Entrez package": [[83, "bio-entrez-package"]], "Bio.Entrez.Parser module": [[84, "module-Bio.Entrez.Parser"]], "Bio.ExPASy package": [[85, "bio-expasy-package"]], "Bio.ExPASy.Enzyme module": [[86, "module-Bio.ExPASy.Enzyme"]], "Bio.ExPASy.Prodoc module": [[87, "module-Bio.ExPASy.Prodoc"]], "Bio.ExPASy.Prosite module": [[88, "module-Bio.ExPASy.Prosite"]], "Bio.ExPASy.ScanProsite module": [[89, "module-Bio.ExPASy.ScanProsite"]], "Bio.ExPASy.cellosaurus module": [[90, "module-Bio.ExPASy.cellosaurus"]], "Bio.File module": [[91, "module-Bio.File"]], "Bio.GenBank package": [[92, "bio-genbank-package"]], "Bio.GenBank.Record module": [[93, "module-Bio.GenBank.Record"]], "Bio.GenBank.Scanner module": [[94, "module-Bio.GenBank.Scanner"]], "Bio.GenBank.utils module": [[95, "module-Bio.GenBank.utils"]], "Bio.Geo package": [[96, "bio-geo-package"]], "Bio.Geo.Record module": [[97, "module-Bio.Geo.Record"]], "Bio.Graphics package": [[98, "bio-graphics-package"]], "Bio.Graphics.BasicChromosome module": [[99, "module-Bio.Graphics.BasicChromosome"]], "Bio.Graphics.ColorSpiral module": [[100, "module-Bio.Graphics.ColorSpiral"]], "Bio.Graphics.Comparative module": [[101, "module-Bio.Graphics.Comparative"]], "Bio.Graphics.DisplayRepresentation module": [[102, "module-Bio.Graphics.DisplayRepresentation"]], "Bio.Graphics.Distribution module": [[103, "module-Bio.Graphics.Distribution"]], "Bio.Graphics.GenomeDiagram package": [[104, "bio-graphics-genomediagram-package"]], "Bio.Graphics.KGML_vis module": [[105, "module-Bio.Graphics.KGML_vis"]], "Bio.HMM package": [[106, "bio-hmm-package"]], "Bio.HMM.DynamicProgramming module": [[107, "module-Bio.HMM.DynamicProgramming"]], "Bio.HMM.MarkovModel module": [[108, "module-Bio.HMM.MarkovModel"]], "Bio.HMM.Trainer module": [[109, "module-Bio.HMM.Trainer"]], "Bio.HMM.Utilities module": [[110, "module-Bio.HMM.Utilities"]], "Bio.KEGG package": [[111, "bio-kegg-package"]], "Bio.KEGG.Compound package": [[112, "bio-kegg-compound-package"]], "Bio.KEGG.Enzyme package": [[113, "bio-kegg-enzyme-package"]], "Bio.KEGG.Gene package": [[114, "bio-kegg-gene-package"]], "Bio.KEGG.KGML package": [[115, "bio-kegg-kgml-package"]], "Bio.KEGG.KGML.KGML_parser module": [[116, "module-Bio.KEGG.KGML.KGML_parser"]], "Bio.KEGG.KGML.KGML_pathway module": [[117, "module-Bio.KEGG.KGML.KGML_pathway"]], "Bio.KEGG.Map package": [[118, "bio-kegg-map-package"]], "Bio.KEGG.REST module": [[119, "module-Bio.KEGG.REST"]], "Bio.LogisticRegression module": [[120, "module-Bio.LogisticRegression"]], "Bio.MarkovModel module": [[121, "module-Bio.MarkovModel"]], "Bio.MaxEntropy module": [[122, "module-Bio.MaxEntropy"]], "Bio.Medline package": [[123, "bio-medline-package"]], "Bio.NMR package": [[124, "bio-nmr-package"]], "Bio.NMR.NOEtools module": [[125, "module-Bio.NMR.NOEtools"]], "Bio.NMR.xpktools module": [[126, "module-Bio.NMR.xpktools"]], "Bio.NaiveBayes module": [[127, "module-Bio.NaiveBayes"]], "Bio.Nexus package": [[128, "bio-nexus-package"]], "Bio.Nexus.Nexus module": [[129, "module-Bio.Nexus.Nexus"]], "Bio.Nexus.Nodes module": [[130, "module-Bio.Nexus.Nodes"]], "Bio.Nexus.StandardData module": [[131, "module-Bio.Nexus.StandardData"]], "Bio.Nexus.Trees module": [[132, "module-Bio.Nexus.Trees"]], "Bio.PDB package": [[133, "bio-pdb-package"]], "Bio.PDB.AbstractPropertyMap module": [[134, "module-Bio.PDB.AbstractPropertyMap"]], "Bio.PDB.Atom module": [[135, "module-Bio.PDB.Atom"]], "Bio.PDB.Chain module": [[136, "module-Bio.PDB.Chain"]], "Bio.PDB.DSSP module": [[137, "module-Bio.PDB.DSSP"]], "Usage": [[137, "usage"]], "Bio.PDB.Dice module": [[138, "module-Bio.PDB.Dice"]], "Bio.PDB.Entity module": [[139, "module-Bio.PDB.Entity"]], "Bio.PDB.FragmentMapper module": [[140, "module-Bio.PDB.FragmentMapper"]], "Bio.PDB.HSExposure module": [[141, "module-Bio.PDB.HSExposure"]], "Bio.PDB.MMCIF2Dict module": [[142, "module-Bio.PDB.MMCIF2Dict"]], "Bio.PDB.MMCIFParser module": [[143, "module-Bio.PDB.MMCIFParser"]], "Bio.PDB.Model module": [[144, "module-Bio.PDB.Model"]], "Bio.PDB.NACCESS module": [[145, "module-Bio.PDB.NACCESS"]], "Bio.PDB.NeighborSearch module": [[146, "module-Bio.PDB.NeighborSearch"]], "Bio.PDB.PDBExceptions module": [[147, "module-Bio.PDB.PDBExceptions"]], "Bio.PDB.PDBIO module": [[148, "module-Bio.PDB.PDBIO"]], "Bio.PDB.PDBList module": [[149, "module-Bio.PDB.PDBList"]], "Bio.PDB.PDBMLParser module": [[150, "module-Bio.PDB.PDBMLParser"]], "Bio.PDB.PDBParser module": [[151, "module-Bio.PDB.PDBParser"]], "Bio.PDB.PICIO module": [[152, "module-Bio.PDB.PICIO"]], "Bio.PDB.PSEA module": [[153, "module-Bio.PDB.PSEA"]], "Bio.PDB.Polypeptide module": [[154, "module-Bio.PDB.Polypeptide"]], "Bio.PDB.Residue module": [[155, "module-Bio.PDB.Residue"]], "Bio.PDB.ResidueDepth module": [[156, "module-Bio.PDB.ResidueDepth"]], "Bio.PDB.SASA module": [[157, "module-Bio.PDB.SASA"]], "Bio.PDB.SCADIO module": [[158, "module-Bio.PDB.SCADIO"]], "Bio.PDB.Selection module": [[159, "module-Bio.PDB.Selection"]], "Bio.PDB.Structure module": [[160, "module-Bio.PDB.Structure"]], "Bio.PDB.StructureAlignment module": [[161, "module-Bio.PDB.StructureAlignment"]], "Bio.PDB.StructureBuilder module": [[162, "module-Bio.PDB.StructureBuilder"]], "Bio.PDB.Superimposer module": [[163, "module-Bio.PDB.Superimposer"]], "Bio.PDB.alphafold_db module": [[164, "module-Bio.PDB.alphafold_db"]], "Bio.PDB.cealign module": [[165, "module-Bio.PDB.cealign"]], "Reference": [[165, "reference"]], "Bio.PDB.ic_data module": [[166, "module-Bio.PDB.ic_data"]], "Bio.PDB.ic_rebuild module": [[167, "module-Bio.PDB.ic_rebuild"]], "Bio.PDB.internal_coords module": [[168, "module-Bio.PDB.internal_coords"]], "Todo": [[168, "id1"]], "Bio.PDB.mmcifio module": [[169, "module-Bio.PDB.mmcifio"]], "Bio.PDB.mmtf package": [[170, "bio-pdb-mmtf-package"]], "Bio.PDB.mmtf.DefaultParser module": [[171, "module-Bio.PDB.mmtf.DefaultParser"]], "Bio.PDB.mmtf.mmtfio module": [[172, "module-Bio.PDB.mmtf.mmtfio"]], "Bio.PDB.parse_pdb_header module": [[173, "module-Bio.PDB.parse_pdb_header"]], "Bio.PDB.qcprot module": [[174, "module-Bio.PDB.qcprot"]], "Bio.PDB.vectors module": [[175, "module-Bio.PDB.vectors"]], "Bio.Pathway package": [[176, "bio-pathway-package"]], "Bio.Pathway.Rep package": [[177, "bio-pathway-rep-package"]], "Bio.Pathway.Rep.Graph module": [[178, "module-Bio.Pathway.Rep.Graph"]], "Bio.Pathway.Rep.MultiGraph module": [[179, "module-Bio.Pathway.Rep.MultiGraph"]], "Bio.Phylo package": [[180, "bio-phylo-package"]], "Bio.Phylo.Applications package": [[181, "bio-phylo-applications-package"]], "Bio.Phylo.BaseTree module": [[182, "module-Bio.Phylo.BaseTree"]], "Bio.Phylo.CDAO module": [[183, "module-Bio.Phylo.CDAO"]], "Bio.Phylo.CDAOIO module": [[184, "module-Bio.Phylo.CDAOIO"]], "Bio.Phylo.Consensus module": [[185, "module-Bio.Phylo.Consensus"]], "Bio.Phylo.NeXML module": [[186, "module-Bio.Phylo.NeXML"]], "Bio.Phylo.NeXMLIO module": [[187, "module-Bio.Phylo.NeXMLIO"]], "Bio.Phylo.Newick module": [[188, "module-Bio.Phylo.Newick"]], "Bio.Phylo.NewickIO module": [[189, "module-Bio.Phylo.NewickIO"]], "Bio.Phylo.NexusIO module": [[190, "module-Bio.Phylo.NexusIO"]], "Bio.Phylo.PAML package": [[191, "bio-phylo-paml-package"]], "Bio.Phylo.PAML.baseml module": [[192, "module-Bio.Phylo.PAML.baseml"]], "Bio.Phylo.PAML.chi2 module": [[193, "module-Bio.Phylo.PAML.chi2"]], "Bio.Phylo.PAML.codeml module": [[194, "module-Bio.Phylo.PAML.codeml"]], "Bio.Phylo.PAML.yn00 module": [[195, "module-Bio.Phylo.PAML.yn00"]], "Bio.Phylo.PhyloXML module": [[196, "module-Bio.Phylo.PhyloXML"]], "See Also": [[196, "see-also"]], "Bio.Phylo.PhyloXMLIO module": [[197, "module-Bio.Phylo.PhyloXMLIO"]], "Bio.Phylo.TreeConstruction module": [[198, "module-Bio.Phylo.TreeConstruction"]], "Bio.PopGen package": [[199, "bio-popgen-package"]], "Bio.PopGen.GenePop package": [[200, "bio-popgen-genepop-package"]], "Bio.PopGen.GenePop.Controller module": [[201, "module-Bio.PopGen.GenePop.Controller"]], "Bio.PopGen.GenePop.EasyController module": [[202, "module-Bio.PopGen.GenePop.EasyController"]], "Bio.PopGen.GenePop.FileParser module": [[203, "module-Bio.PopGen.GenePop.FileParser"]], "Bio.PopGen.GenePop.LargeFileParser module": [[204, "module-Bio.PopGen.GenePop.LargeFileParser"]], "Bio.Restriction package": [[205, "bio-restriction-package"]], "Bio.Restriction.PrintFormat module": [[206, "module-Bio.Restriction.PrintFormat"]], "Bio.Restriction.Restriction_Dictionary module": [[207, "module-Bio.Restriction.Restriction_Dictionary"]], "Bio.SCOP package": [[208, "bio-scop-package"]], "Bio.SCOP.Cla module": [[209, "module-Bio.SCOP.Cla"]], "Bio.SCOP.Des module": [[210, "module-Bio.SCOP.Des"]], "Bio.SCOP.Dom module": [[211, "module-Bio.SCOP.Dom"]], "Bio.SCOP.Hie module": [[212, "module-Bio.SCOP.Hie"]], "Bio.SCOP.Raf module": [[213, "module-Bio.SCOP.Raf"]], "Bio.SCOP.Residues module": [[214, "module-Bio.SCOP.Residues"]], "Bio.SVDSuperimposer package": [[215, "bio-svdsuperimposer-package"]], "Bio.SearchIO package": [[216, "bio-searchio-package"]], "Conventions": [[216, "conventions"]], "Python-style sequence coordinates": [[216, "python-style-sequence-coordinates"]], "Sequence coordinate order": [[216, "sequence-coordinate-order"]], "Frames and strand values": [[216, "frames-and-strand-values"]], "Supported Formats": [[216, "supported-formats"], [217, "supported-formats"], [220, "supported-formats"], [221, "supported-formats"], [225, "supported-formats"]], "Bio.SearchIO.BlastIO package": [[217, "bio-searchio-blastio-package"]], "blast-xml": [[217, "blast-xml"]], "blast-tab": [[217, "blast-tab"]], "Bio.SearchIO.BlastIO.blast_tab module": [[218, "module-Bio.SearchIO.BlastIO.blast_tab"]], "Bio.SearchIO.BlastIO.blast_xml module": [[219, "module-Bio.SearchIO.BlastIO.blast_xml"]], "Bio.SearchIO.BlatIO module": [[220, "module-Bio.SearchIO.BlatIO"]], "Bio.SearchIO.ExonerateIO package": [[221, "bio-searchio-exonerateio-package"]], "exonerate-text": [[221, "exonerate-text"]], "exonerate-vulgar": [[221, "exonerate-vulgar"]], "exonerate-cigar": [[221, "exonerate-cigar"]], "Bio.SearchIO.ExonerateIO.exonerate_cigar module": [[222, "module-Bio.SearchIO.ExonerateIO.exonerate_cigar"]], "Bio.SearchIO.ExonerateIO.exonerate_text module": [[223, "module-Bio.SearchIO.ExonerateIO.exonerate_text"]], "Bio.SearchIO.ExonerateIO.exonerate_vulgar module": [[224, "module-Bio.SearchIO.ExonerateIO.exonerate_vulgar"]], "Bio.SearchIO.FastaIO module": [[225, "module-Bio.SearchIO.FastaIO"]], "fasta-m10": [[225, "fasta-m10"]], "Bio.SearchIO.HHsuiteIO package": [[226, "bio-searchio-hhsuiteio-package"]], "Bio.SearchIO.HHsuiteIO.hhsuite2_text module": [[227, "module-Bio.SearchIO.HHsuiteIO.hhsuite2_text"]], "Bio.SearchIO.HmmerIO package": [[228, "bio-searchio-hmmerio-package"]], "Supported formats": [[228, "supported-formats"]], "hmmer2-text and hmmer3-text": [[228, "hmmer2-text-and-hmmer3-text"]], "hmmer3-tab": [[228, "hmmer3-tab"]], "hmmer3-domtab": [[228, "hmmer3-domtab"]], "Bio.SearchIO.HmmerIO.hmmer2_text module": [[229, "module-Bio.SearchIO.HmmerIO.hmmer2_text"]], "Bio.SearchIO.HmmerIO.hmmer3_domtab module": [[230, "module-Bio.SearchIO.HmmerIO.hmmer3_domtab"]], "Bio.SearchIO.HmmerIO.hmmer3_tab module": [[231, "module-Bio.SearchIO.HmmerIO.hmmer3_tab"]], "Bio.SearchIO.HmmerIO.hmmer3_text module": [[232, "module-Bio.SearchIO.HmmerIO.hmmer3_text"]], "Bio.SearchIO.InterproscanIO package": [[233, "bio-searchio-interproscanio-package"]], "Supported format": [[233, "supported-format"]], "interproscan-xml": [[233, "interproscan-xml"]], "Bio.SearchIO.InterproscanIO.interproscan_xml module": [[234, "module-Bio.SearchIO.InterproscanIO.interproscan_xml"]], "Bio.Seq module": [[235, "module-Bio.Seq"]], "Bio.SeqFeature module": [[236, "module-Bio.SeqFeature"]], "Base class to hold a Feature": [[236, "base-class-to-hold-a-feature"]], "Hold information about a Reference": [[236, "hold-information-about-a-reference"]], "Specify locations of a feature on a Sequence": [[236, "specify-locations-of-a-feature-on-a-sequence"]], "Bio.SeqIO package": [[237, "bio-seqio-package"]], "Input - Single Records": [[237, "input-single-records"], [297, "input-single-records"]], "Input - Multiple Records": [[237, "input-multiple-records"]], "Input - Alignments": [[237, "input-alignments"]], "Output - Advanced": [[237, "output-advanced"]], "Bio.SeqIO.AbiIO module": [[238, "module-Bio.SeqIO.AbiIO"]], "Bio.SeqIO.AceIO module": [[239, "module-Bio.SeqIO.AceIO"]], "Bio.SeqIO.FastaIO module": [[240, "module-Bio.SeqIO.FastaIO"]], "Bio.SeqIO.GckIO module": [[241, "module-Bio.SeqIO.GckIO"]], "Bio.SeqIO.GfaIO module": [[242, "module-Bio.SeqIO.GfaIO"]], "Bio.SeqIO.IgIO module": [[243, "module-Bio.SeqIO.IgIO"]], "Bio.SeqIO.InsdcIO module": [[244, "module-Bio.SeqIO.InsdcIO"]], "Bio.SeqIO.Interfaces module": [[245, "module-Bio.SeqIO.Interfaces"]], "Bio.SeqIO.NibIO module": [[246, "module-Bio.SeqIO.NibIO"]], "Bio.SeqIO.PdbIO module": [[247, "module-Bio.SeqIO.PdbIO"]], "Bio.SeqIO.PhdIO module": [[248, "module-Bio.SeqIO.PhdIO"]], "Bio.SeqIO.PirIO module": [[249, "module-Bio.SeqIO.PirIO"]], "Bio.SeqIO.QualityIO module": [[250, "module-Bio.SeqIO.QualityIO"]], "Bio.SeqIO.SeqXmlIO module": [[251, "module-Bio.SeqIO.SeqXmlIO"]], "Bio.SeqIO.SffIO module": [[252, "module-Bio.SeqIO.SffIO"]], "Bio.SeqIO.SnapGeneIO module": [[253, "module-Bio.SeqIO.SnapGeneIO"]], "Bio.SeqIO.SwissIO module": [[254, "module-Bio.SeqIO.SwissIO"]], "Bio.SeqIO.TabIO module": [[255, "module-Bio.SeqIO.TabIO"]], "Bio.SeqIO.TwoBitIO module": [[256, "module-Bio.SeqIO.TwoBitIO"]], "Bio.SeqIO.UniprotIO module": [[257, "module-Bio.SeqIO.UniprotIO"]], "Bio.SeqIO.XdnaIO module": [[258, "module-Bio.SeqIO.XdnaIO"]], "Bio.SeqRecord module": [[259, "module-Bio.SeqRecord"]], "Bio.SeqUtils package": [[260, "bio-sequtils-package"]], "Bio.SeqUtils.CheckSum module": [[261, "module-Bio.SeqUtils.CheckSum"]], "Bio.SeqUtils.IsoelectricPoint module": [[262, "module-Bio.SeqUtils.IsoelectricPoint"]], "Bio.SeqUtils.MeltingTemp module": [[263, "module-Bio.SeqUtils.MeltingTemp"]], "Bio.SeqUtils.ProtParam module": [[264, "module-Bio.SeqUtils.ProtParam"]], "Bio.SeqUtils.ProtParamData module": [[265, "module-Bio.SeqUtils.ProtParamData"]], "Bio.SeqUtils.lcc module": [[266, "module-Bio.SeqUtils.lcc"]], "Bio.Sequencing package": [[267, "bio-sequencing-package"]], "Bio.Sequencing.Ace module": [[268, "module-Bio.Sequencing.Ace"]], "Bio.Sequencing.Applications package": [[269, "bio-sequencing-applications-package"]], "Bio.Sequencing.Phd module": [[270, "module-Bio.Sequencing.Phd"]], "Bio.SwissProt package": [[271, "bio-swissprot-package"]], "Bio.SwissProt.KeyWList module": [[272, "module-Bio.SwissProt.KeyWList"]], "Bio.TogoWS package": [[273, "bio-togows-package"]], "Bio.UniGene package": [[274, "bio-unigene-package"]], "Bio.UniProt package": [[275, "bio-uniprot-package"]], "Bio.UniProt.GOA module": [[276, "module-Bio.UniProt.GOA"]], "Bio.bgzf module": [[277, "module-Bio.bgzf"]], "Aim of this module": [[277, "aim-of-this-module"]], "Technical Introduction to BGZF": [[277, "technical-introduction-to-bgzf"]], "Warning about namespaces": [[277, "warning-about-namespaces"]], "Text Mode": [[277, "text-mode"]], "Bio.codonalign package": [[278, "bio-codonalign-package"]], "Bio.codonalign.codonalignment module": [[279, "module-Bio.codonalign.codonalignment"]], "Bio.codonalign.codonseq module": [[280, "module-Bio.codonalign.codonseq"]], "Bio.kNN module": [[281, "module-Bio.kNN"]], "Bio.motifs package": [[282, "bio-motifs-package"]], "Bio.motifs.alignace module": [[283, "module-Bio.motifs.alignace"]], "Bio.motifs.applications package": [[284, "bio-motifs-applications-package"]], "Bio.motifs.clusterbuster module": [[285, "module-Bio.motifs.clusterbuster"]], "Bio.motifs.jaspar package": [[286, "bio-motifs-jaspar-package"]], "Bio.motifs.jaspar.db module": [[287, "module-Bio.motifs.jaspar.db"]], "Bio.motifs.mast module": [[288, "module-Bio.motifs.mast"]], "Bio.motifs.matrix module": [[289, "module-Bio.motifs.matrix"]], "Bio.motifs.meme module": [[290, "module-Bio.motifs.meme"]], "Bio.motifs.minimal module": [[291, "module-Bio.motifs.minimal"]], "Bio.motifs.pfm module": [[292, "module-Bio.motifs.pfm"]], "Bio.motifs.thresholds module": [[293, "module-Bio.motifs.thresholds"]], "Bio.motifs.transfac module": [[294, "module-Bio.motifs.transfac"]], "Bio.motifs.xms module": [[295, "module-Bio.motifs.xms"]], "Bio.pairwise2 module": [[296, "module-Bio.pairwise2"]], "Bio.phenotype package": [[297, "bio-phenotype-package"]], "Bio.phenotype.phen_micro module": [[298, "module-Bio.phenotype.phen_micro"]], "Bio.phenotype.pm_fitting module": [[299, "module-Bio.phenotype.pm_fitting"]], "BioSQL package": [[300, "biosql-package"]], "BioSQL.BioSeq module": [[301, "module-BioSQL.BioSeq"]], "BioSQL.BioSeqDatabase module": [[302, "module-BioSQL.BioSeqDatabase"]], "BioSQL.DBUtils module": [[303, "module-BioSQL.DBUtils"]], "BioSQL.Loader module": [[304, "module-BioSQL.Loader"]], "API documentation": [[305, "api-documentation"]], "API Contents:": [[305, null]], "Biopython Documentation": [[306, "biopython-documentation"]], "Table of contents": [[306, null]]}, "indexentries": {"bio": [[27, "module-Bio"]], "biopythondeprecationwarning": [[27, "Bio.BiopythonDeprecationWarning"]], "biopythonexperimentalwarning": [[27, "Bio.BiopythonExperimentalWarning"]], "biopythonparserwarning": [[27, "Bio.BiopythonParserWarning"]], "biopythonwarning": [[27, "Bio.BiopythonWarning"]], "missingexternaldependencyerror": [[27, "Bio.MissingExternalDependencyError"]], "missingpythondependencyerror": [[27, "Bio.MissingPythonDependencyError"]], "streammodeerror": [[27, "Bio.StreamModeError"]], "module": [[27, "module-Bio"], [28, "module-Bio.Affy"], [29, "module-Bio.Affy.CelFile"], [30, "module-Bio.Align"], [31, "module-Bio.Align.AlignInfo"], [32, "module-Bio.Align.Applications"], [33, "module-Bio.Align.a2m"], [34, "module-Bio.Align.analysis"], [35, "module-Bio.Align.bed"], [36, "module-Bio.Align.bigbed"], [37, "module-Bio.Align.bigmaf"], [38, "module-Bio.Align.bigpsl"], [39, "module-Bio.Align.chain"], [40, "module-Bio.Align.clustal"], [41, "module-Bio.Align.emboss"], [42, "module-Bio.Align.exonerate"], [43, "module-Bio.Align.fasta"], [44, "module-Bio.Align.hhr"], [45, "module-Bio.Align.interfaces"], [46, "module-Bio.Align.maf"], [47, "module-Bio.Align.mauve"], [48, "module-Bio.Align.msf"], [49, "module-Bio.Align.nexus"], [50, "module-Bio.Align.phylip"], [51, "module-Bio.Align.psl"], [52, "module-Bio.Align.sam"], [53, "module-Bio.Align.stockholm"], [54, "module-Bio.Align.substitution_matrices"], [55, "module-Bio.Align.tabular"], [56, "module-Bio.AlignIO"], [57, "module-Bio.AlignIO.ClustalIO"], [58, "module-Bio.AlignIO.EmbossIO"], [59, "module-Bio.AlignIO.FastaIO"], [60, "module-Bio.AlignIO.Interfaces"], [61, "module-Bio.AlignIO.MafIO"], [62, "module-Bio.AlignIO.MauveIO"], [63, "module-Bio.AlignIO.MsfIO"], [64, "module-Bio.AlignIO.NexusIO"], [65, "module-Bio.AlignIO.PhylipIO"], [66, "module-Bio.AlignIO.StockholmIO"], [67, "module-Bio.Application"], [68, "module-Bio.Blast"], [69, "module-Bio.Blast.Applications"], [70, "module-Bio.Blast.NCBIWWW"], [71, "module-Bio.Blast.NCBIXML"], [72, "module-Bio.CAPS"], [73, "module-Bio.Cluster"], [74, "module-Bio.Compass"], [75, "module-Bio.Data"], [76, "module-Bio.Data.CodonTable"], [77, "module-Bio.Data.IUPACData"], [78, "module-Bio.Data.PDBData"], [79, "module-Bio.Emboss"], [80, "module-Bio.Emboss.Applications"], [81, "module-Bio.Emboss.Primer3"], [82, "module-Bio.Emboss.PrimerSearch"], [83, "module-Bio.Entrez"], [84, "module-Bio.Entrez.Parser"], [85, "module-Bio.ExPASy"], [86, "module-Bio.ExPASy.Enzyme"], [87, "module-Bio.ExPASy.Prodoc"], [88, "module-Bio.ExPASy.Prosite"], [89, "module-Bio.ExPASy.ScanProsite"], [90, "module-Bio.ExPASy.cellosaurus"], [91, "module-Bio.File"], [92, "module-Bio.GenBank"], [93, "module-Bio.GenBank.Record"], [94, "module-Bio.GenBank.Scanner"], [95, "module-Bio.GenBank.utils"], [96, "module-Bio.Geo"], [97, "module-Bio.Geo.Record"], [98, "module-Bio.Graphics"], [99, "module-Bio.Graphics.BasicChromosome"], [100, "module-Bio.Graphics.ColorSpiral"], [101, "module-Bio.Graphics.Comparative"], [102, "module-Bio.Graphics.DisplayRepresentation"], [103, "module-Bio.Graphics.Distribution"], [104, "module-Bio.Graphics.GenomeDiagram"], [105, "module-Bio.Graphics.KGML_vis"], [106, "module-Bio.HMM"], [107, "module-Bio.HMM.DynamicProgramming"], [108, "module-Bio.HMM.MarkovModel"], [109, "module-Bio.HMM.Trainer"], [110, "module-Bio.HMM.Utilities"], [111, "module-Bio.KEGG"], [112, "module-Bio.KEGG.Compound"], [113, "module-Bio.KEGG.Enzyme"], [114, "module-Bio.KEGG.Gene"], [115, "module-Bio.KEGG.KGML"], [116, "module-Bio.KEGG.KGML.KGML_parser"], [117, "module-Bio.KEGG.KGML.KGML_pathway"], [118, "module-Bio.KEGG.Map"], [119, "module-Bio.KEGG.REST"], [120, "module-Bio.LogisticRegression"], [121, "module-Bio.MarkovModel"], [122, "module-Bio.MaxEntropy"], [123, "module-Bio.Medline"], [124, "module-Bio.NMR"], [125, "module-Bio.NMR.NOEtools"], [126, "module-Bio.NMR.xpktools"], [127, "module-Bio.NaiveBayes"], [128, "module-Bio.Nexus"], [129, "module-Bio.Nexus.Nexus"], [130, "module-Bio.Nexus.Nodes"], [131, "module-Bio.Nexus.StandardData"], [132, "module-Bio.Nexus.Trees"], [133, "module-Bio.PDB"], [134, "module-Bio.PDB.AbstractPropertyMap"], [135, "module-Bio.PDB.Atom"], [136, "module-Bio.PDB.Chain"], [137, "module-Bio.PDB.DSSP"], [138, "module-Bio.PDB.Dice"], [139, "module-Bio.PDB.Entity"], [140, "module-Bio.PDB.FragmentMapper"], [141, "module-Bio.PDB.HSExposure"], [142, "module-Bio.PDB.MMCIF2Dict"], [143, "module-Bio.PDB.MMCIFParser"], [144, "module-Bio.PDB.Model"], [145, "module-Bio.PDB.NACCESS"], [146, "module-Bio.PDB.NeighborSearch"], [147, "module-Bio.PDB.PDBExceptions"], [148, "module-Bio.PDB.PDBIO"], [149, "module-Bio.PDB.PDBList"], [150, "module-Bio.PDB.PDBMLParser"], [151, "module-Bio.PDB.PDBParser"], [152, "module-Bio.PDB.PICIO"], [153, "module-Bio.PDB.PSEA"], [154, "module-Bio.PDB.Polypeptide"], [155, "module-Bio.PDB.Residue"], [156, "module-Bio.PDB.ResidueDepth"], [157, "module-Bio.PDB.SASA"], [158, "module-Bio.PDB.SCADIO"], [159, "module-Bio.PDB.Selection"], [160, "module-Bio.PDB.Structure"], [161, "module-Bio.PDB.StructureAlignment"], [162, "module-Bio.PDB.StructureBuilder"], [163, "module-Bio.PDB.Superimposer"], [164, "module-Bio.PDB.alphafold_db"], [165, "module-Bio.PDB.cealign"], [166, "module-Bio.PDB.ic_data"], [167, "module-Bio.PDB.ic_rebuild"], [168, "module-Bio.PDB.internal_coords"], [169, "module-Bio.PDB.mmcifio"], [170, "module-Bio.PDB.mmtf"], [171, "module-Bio.PDB.mmtf.DefaultParser"], [172, "module-Bio.PDB.mmtf.mmtfio"], [173, "module-Bio.PDB.parse_pdb_header"], [174, "module-Bio.PDB.qcprot"], [175, "module-Bio.PDB.vectors"], [176, "module-Bio.Pathway"], [177, "module-Bio.Pathway.Rep"], [178, "module-Bio.Pathway.Rep.Graph"], [179, "module-Bio.Pathway.Rep.MultiGraph"], [180, "module-Bio.Phylo"], [181, "module-Bio.Phylo.Applications"], [182, "module-Bio.Phylo.BaseTree"], [183, "module-Bio.Phylo.CDAO"], [184, "module-Bio.Phylo.CDAOIO"], [185, "module-Bio.Phylo.Consensus"], [186, "module-Bio.Phylo.NeXML"], [187, "module-Bio.Phylo.NeXMLIO"], [188, "module-Bio.Phylo.Newick"], [189, "module-Bio.Phylo.NewickIO"], [190, "module-Bio.Phylo.NexusIO"], [191, "module-Bio.Phylo.PAML"], [192, "module-Bio.Phylo.PAML.baseml"], [193, "module-Bio.Phylo.PAML.chi2"], [194, "module-Bio.Phylo.PAML.codeml"], [195, "module-Bio.Phylo.PAML.yn00"], [196, "module-Bio.Phylo.PhyloXML"], [197, "module-Bio.Phylo.PhyloXMLIO"], [198, "module-Bio.Phylo.TreeConstruction"], [199, "module-Bio.PopGen"], [200, "module-Bio.PopGen.GenePop"], [201, "module-Bio.PopGen.GenePop.Controller"], [202, "module-Bio.PopGen.GenePop.EasyController"], [203, "module-Bio.PopGen.GenePop.FileParser"], [204, "module-Bio.PopGen.GenePop.LargeFileParser"], [205, "module-Bio.Restriction"], [206, "module-Bio.Restriction.PrintFormat"], [207, "module-Bio.Restriction.Restriction_Dictionary"], [208, "module-Bio.SCOP"], [209, "module-Bio.SCOP.Cla"], [210, "module-Bio.SCOP.Des"], [211, "module-Bio.SCOP.Dom"], [212, "module-Bio.SCOP.Hie"], [213, "module-Bio.SCOP.Raf"], [214, "module-Bio.SCOP.Residues"], [215, "module-Bio.SVDSuperimposer"], [216, "module-Bio.SearchIO"], [217, "module-Bio.SearchIO.BlastIO"], [218, "module-Bio.SearchIO.BlastIO.blast_tab"], [219, "module-Bio.SearchIO.BlastIO.blast_xml"], [220, "module-Bio.SearchIO.BlatIO"], [221, "module-Bio.SearchIO.ExonerateIO"], [222, "module-Bio.SearchIO.ExonerateIO.exonerate_cigar"], [223, "module-Bio.SearchIO.ExonerateIO.exonerate_text"], [224, "module-Bio.SearchIO.ExonerateIO.exonerate_vulgar"], [225, "module-Bio.SearchIO.FastaIO"], [226, "module-Bio.SearchIO.HHsuiteIO"], [227, "module-Bio.SearchIO.HHsuiteIO.hhsuite2_text"], [228, "module-Bio.SearchIO.HmmerIO"], [229, "module-Bio.SearchIO.HmmerIO.hmmer2_text"], [230, "module-Bio.SearchIO.HmmerIO.hmmer3_domtab"], [231, "module-Bio.SearchIO.HmmerIO.hmmer3_tab"], [232, "module-Bio.SearchIO.HmmerIO.hmmer3_text"], [233, "module-Bio.SearchIO.InterproscanIO"], [234, "module-Bio.SearchIO.InterproscanIO.interproscan_xml"], [235, "module-Bio.Seq"], [236, "module-Bio.SeqFeature"], [237, "module-Bio.SeqIO"], [238, "module-Bio.SeqIO.AbiIO"], [239, "module-Bio.SeqIO.AceIO"], [240, "module-Bio.SeqIO.FastaIO"], [241, "module-Bio.SeqIO.GckIO"], [242, "module-Bio.SeqIO.GfaIO"], [243, "module-Bio.SeqIO.IgIO"], [244, "module-Bio.SeqIO.InsdcIO"], [245, "module-Bio.SeqIO.Interfaces"], [246, "module-Bio.SeqIO.NibIO"], [247, "module-Bio.SeqIO.PdbIO"], [248, "module-Bio.SeqIO.PhdIO"], [249, "module-Bio.SeqIO.PirIO"], [250, "module-Bio.SeqIO.QualityIO"], [251, "module-Bio.SeqIO.SeqXmlIO"], [252, "module-Bio.SeqIO.SffIO"], [253, "module-Bio.SeqIO.SnapGeneIO"], [254, "module-Bio.SeqIO.SwissIO"], [255, "module-Bio.SeqIO.TabIO"], [256, "module-Bio.SeqIO.TwoBitIO"], [257, "module-Bio.SeqIO.UniprotIO"], [258, "module-Bio.SeqIO.XdnaIO"], [259, "module-Bio.SeqRecord"], [260, "module-Bio.SeqUtils"], [261, "module-Bio.SeqUtils.CheckSum"], [262, "module-Bio.SeqUtils.IsoelectricPoint"], [263, "module-Bio.SeqUtils.MeltingTemp"], [264, "module-Bio.SeqUtils.ProtParam"], [265, "module-Bio.SeqUtils.ProtParamData"], [266, "module-Bio.SeqUtils.lcc"], [267, "module-Bio.Sequencing"], [268, "module-Bio.Sequencing.Ace"], [269, "module-Bio.Sequencing.Applications"], [270, "module-Bio.Sequencing.Phd"], [271, "module-Bio.SwissProt"], [272, "module-Bio.SwissProt.KeyWList"], [273, "module-Bio.TogoWS"], [274, "module-Bio.UniGene"], [275, "module-Bio.UniProt"], [276, "module-Bio.UniProt.GOA"], [277, "module-Bio.bgzf"], [278, "module-Bio.codonalign"], [279, "module-Bio.codonalign.codonalignment"], [280, "module-Bio.codonalign.codonseq"], [281, "module-Bio.kNN"], [282, "module-Bio.motifs"], [283, "module-Bio.motifs.alignace"], [284, "module-Bio.motifs.applications"], [285, "module-Bio.motifs.clusterbuster"], [286, "module-Bio.motifs.jaspar"], [287, "module-Bio.motifs.jaspar.db"], [288, "module-Bio.motifs.mast"], [289, "module-Bio.motifs.matrix"], [290, "module-Bio.motifs.meme"], [291, "module-Bio.motifs.minimal"], [292, "module-Bio.motifs.pfm"], [293, "module-Bio.motifs.thresholds"], [294, "module-Bio.motifs.transfac"], [295, "module-Bio.motifs.xms"], [296, "module-Bio.pairwise2"], [297, "module-Bio.phenotype"], [298, "module-Bio.phenotype.phen_micro"], [299, "module-Bio.phenotype.pm_fitting"], [300, "module-BioSQL"], [301, "module-BioSQL.BioSeq"], [302, "module-BioSQL.BioSeqDatabase"], [303, "module-BioSQL.DBUtils"], [304, "module-BioSQL.Loader"]], "bio.affy": [[28, "module-Bio.Affy"]], "bio.affy.celfile": [[29, "module-Bio.Affy.CelFile"]], "parsererror": [[29, "Bio.Affy.CelFile.ParserError"]], "record (class in bio.affy.celfile)": [[29, "Bio.Affy.CelFile.Record"]], "__init__() (bio.affy.celfile.parsererror method)": [[29, "Bio.Affy.CelFile.ParserError.__init__"]], "__init__() (bio.affy.celfile.record method)": [[29, "Bio.Affy.CelFile.Record.__init__"]], "read() (in module bio.affy.celfile)": [[29, "Bio.Affy.CelFile.read"]], "alignment (class in bio.align)": [[30, "Bio.Align.Alignment"]], "alignmentcounts (class in bio.align)": [[30, "Bio.Align.AlignmentCounts"]], "alignments (class in bio.align)": [[30, "Bio.Align.Alignments"]], "alignmentsabstractbaseclass (class in bio.align)": [[30, "Bio.Align.AlignmentsAbstractBaseClass"]], "bio.align": [[30, "module-Bio.Align"]], "codonaligner (class in bio.align)": [[30, "Bio.Align.CodonAligner"]], "multipleseqalignment (class in bio.align)": [[30, "Bio.Align.MultipleSeqAlignment"]], "pairwisealigner (class in bio.align)": [[30, "Bio.Align.PairwiseAligner"]], "pairwisealignments (class in bio.align)": [[30, "Bio.Align.PairwiseAlignments"]], "__abstractmethods__ (bio.align.alignments attribute)": [[30, "Bio.Align.Alignments.__abstractmethods__"]], "__abstractmethods__ (bio.align.alignmentsabstractbaseclass attribute)": [[30, "Bio.Align.AlignmentsAbstractBaseClass.__abstractmethods__"]], "__abstractmethods__ (bio.align.pairwisealignments attribute)": [[30, "Bio.Align.PairwiseAlignments.__abstractmethods__"]], "__add__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__add__"]], "__add__() (bio.align.multipleseqalignment method)": [[30, "Bio.Align.MultipleSeqAlignment.__add__"]], "__array__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__array__"]], "__delitem__() (bio.align.multipleseqalignment method)": [[30, "Bio.Align.MultipleSeqAlignment.__delitem__"]], "__eq__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__eq__"]], "__format__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__format__"]], "__format__() (bio.align.multipleseqalignment method)": [[30, "Bio.Align.MultipleSeqAlignment.__format__"]], "__ge__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__ge__"]], "__getitem__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__getitem__"]], "__getitem__() (bio.align.multipleseqalignment method)": [[30, "Bio.Align.MultipleSeqAlignment.__getitem__"]], "__getitem__() (bio.align.pairwisealignments method)": [[30, "Bio.Align.PairwiseAlignments.__getitem__"]], "__getnewargs__() (bio.align.alignmentcounts method)": [[30, "Bio.Align.AlignmentCounts.__getnewargs__"]], "__getstate__() (bio.align.pairwisealigner method)": [[30, "Bio.Align.PairwiseAligner.__getstate__"]], "__gt__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__gt__"]], "__hash__ (bio.align.alignment attribute)": [[30, "Bio.Align.Alignment.__hash__"]], "__init__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__init__"]], "__init__() (bio.align.alignments method)": [[30, "Bio.Align.Alignments.__init__"]], "__init__() (bio.align.codonaligner method)": [[30, "Bio.Align.CodonAligner.__init__"]], "__init__() (bio.align.multipleseqalignment method)": [[30, "Bio.Align.MultipleSeqAlignment.__init__"]], "__init__() (bio.align.pairwisealigner method)": [[30, "Bio.Align.PairwiseAligner.__init__"]], "__init__() (bio.align.pairwisealignments method)": [[30, "Bio.Align.PairwiseAlignments.__init__"]], "__iter__() (bio.align.alignmentsabstractbaseclass method)": [[30, "Bio.Align.AlignmentsAbstractBaseClass.__iter__"]], "__iter__() (bio.align.multipleseqalignment method)": [[30, "Bio.Align.MultipleSeqAlignment.__iter__"]], "__le__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__le__"]], "__len__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__len__"]], "__len__() (bio.align.alignments method)": [[30, "Bio.Align.Alignments.__len__"]], "__len__() (bio.align.alignmentsabstractbaseclass method)": [[30, "Bio.Align.AlignmentsAbstractBaseClass.__len__"]], "__len__() (bio.align.multipleseqalignment method)": [[30, "Bio.Align.MultipleSeqAlignment.__len__"]], "__len__() (bio.align.pairwisealignments method)": [[30, "Bio.Align.PairwiseAlignments.__len__"]], "__lt__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__lt__"]], "__ne__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__ne__"]], "__new__() (bio.align.alignmentcounts static method)": [[30, "Bio.Align.AlignmentCounts.__new__"]], "__next__() (bio.align.alignments method)": [[30, "Bio.Align.Alignments.__next__"]], "__next__() (bio.align.alignmentsabstractbaseclass method)": [[30, "Bio.Align.AlignmentsAbstractBaseClass.__next__"]], "__next__() (bio.align.pairwisealignments method)": [[30, "Bio.Align.PairwiseAlignments.__next__"]], "__repr__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__repr__"]], "__repr__() (bio.align.alignmentcounts method)": [[30, "Bio.Align.AlignmentCounts.__repr__"]], "__repr__() (bio.align.multipleseqalignment method)": [[30, "Bio.Align.MultipleSeqAlignment.__repr__"]], "__setattr__() (bio.align.pairwisealigner method)": [[30, "Bio.Align.PairwiseAligner.__setattr__"]], "__setstate__() (bio.align.pairwisealigner method)": [[30, "Bio.Align.PairwiseAligner.__setstate__"]], "__slots__ (bio.align.alignmentcounts attribute)": [[30, "Bio.Align.AlignmentCounts.__slots__"]], "__str__() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.__str__"]], "__str__() (bio.align.multipleseqalignment method)": [[30, "Bio.Align.MultipleSeqAlignment.__str__"]], "align() (bio.align.codonaligner method)": [[30, "Bio.Align.CodonAligner.align"]], "align() (bio.align.pairwisealigner method)": [[30, "Bio.Align.PairwiseAligner.align"]], "aligned (bio.align.alignment property)": [[30, "Bio.Align.Alignment.aligned"]], "alignment (bio.align.multipleseqalignment property)": [[30, "Bio.Align.MultipleSeqAlignment.alignment"]], "append() (bio.align.multipleseqalignment method)": [[30, "Bio.Align.MultipleSeqAlignment.append"]], "column_annotations (bio.align.multipleseqalignment property)": [[30, "Bio.Align.MultipleSeqAlignment.column_annotations"]], "counts() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.counts"]], "extend() (bio.align.multipleseqalignment method)": [[30, "Bio.Align.MultipleSeqAlignment.extend"]], "format() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.format"]], "frequencies (bio.align.alignment property)": [[30, "Bio.Align.Alignment.frequencies"]], "gaps (bio.align.alignmentcounts attribute)": [[30, "Bio.Align.AlignmentCounts.gaps"]], "get_alignment_length() (bio.align.multipleseqalignment method)": [[30, "Bio.Align.MultipleSeqAlignment.get_alignment_length"]], "identities (bio.align.alignmentcounts attribute)": [[30, "Bio.Align.AlignmentCounts.identities"]], "indices (bio.align.alignment property)": [[30, "Bio.Align.Alignment.indices"]], "infer_coordinates() (bio.align.alignment class method)": [[30, "Bio.Align.Alignment.infer_coordinates"]], "inverse_indices (bio.align.alignment property)": [[30, "Bio.Align.Alignment.inverse_indices"]], "length (bio.align.alignment property)": [[30, "Bio.Align.Alignment.length"]], "map() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.map"]], "mapall() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.mapall"]], "mismatches (bio.align.alignmentcounts attribute)": [[30, "Bio.Align.AlignmentCounts.mismatches"]], "parse() (in module bio.align)": [[30, "Bio.Align.parse"]], "query (bio.align.alignment property)": [[30, "Bio.Align.Alignment.query"]], "read() (in module bio.align)": [[30, "Bio.Align.read"]], "reverse_complement() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.reverse_complement"]], "rewind() (bio.align.alignments method)": [[30, "Bio.Align.Alignments.rewind"]], "rewind() (bio.align.alignmentsabstractbaseclass method)": [[30, "Bio.Align.AlignmentsAbstractBaseClass.rewind"]], "rewind() (bio.align.pairwisealignments method)": [[30, "Bio.Align.PairwiseAlignments.rewind"]], "score() (bio.align.codonaligner method)": [[30, "Bio.Align.CodonAligner.score"]], "score() (bio.align.pairwisealigner method)": [[30, "Bio.Align.PairwiseAligner.score"]], "shape (bio.align.alignment property)": [[30, "Bio.Align.Alignment.shape"]], "sort() (bio.align.alignment method)": [[30, "Bio.Align.Alignment.sort"]], "sort() (bio.align.multipleseqalignment method)": [[30, "Bio.Align.MultipleSeqAlignment.sort"]], "substitutions (bio.align.alignment property)": [[30, "Bio.Align.Alignment.substitutions"]], "substitutions (bio.align.multipleseqalignment property)": [[30, "Bio.Align.MultipleSeqAlignment.substitutions"]], "target (bio.align.alignment property)": [[30, "Bio.Align.Alignment.target"]], "write() (in module bio.align)": [[30, "Bio.Align.write"]], "bio.align.aligninfo": [[31, "module-Bio.Align.AlignInfo"]], "pssm (class in bio.align.aligninfo)": [[31, "Bio.Align.AlignInfo.PSSM"]], "summaryinfo (class in bio.align.aligninfo)": [[31, "Bio.Align.AlignInfo.SummaryInfo"]], "__getitem__() (bio.align.aligninfo.pssm method)": [[31, "Bio.Align.AlignInfo.PSSM.__getitem__"]], "__init__() (bio.align.aligninfo.pssm method)": [[31, "Bio.Align.AlignInfo.PSSM.__init__"]], "__init__() (bio.align.aligninfo.summaryinfo method)": [[31, "Bio.Align.AlignInfo.SummaryInfo.__init__"]], "__str__() (bio.align.aligninfo.pssm method)": [[31, "Bio.Align.AlignInfo.PSSM.__str__"]], "dumb_consensus() (bio.align.aligninfo.summaryinfo method)": [[31, "Bio.Align.AlignInfo.SummaryInfo.dumb_consensus"]], "gap_consensus() (bio.align.aligninfo.summaryinfo method)": [[31, "Bio.Align.AlignInfo.SummaryInfo.gap_consensus"]], "get_column() (bio.align.aligninfo.summaryinfo method)": [[31, "Bio.Align.AlignInfo.SummaryInfo.get_column"]], "get_residue() (bio.align.aligninfo.pssm method)": [[31, "Bio.Align.AlignInfo.PSSM.get_residue"]], "information_content() (bio.align.aligninfo.summaryinfo method)": [[31, "Bio.Align.AlignInfo.SummaryInfo.information_content"]], "pos_specific_score_matrix() (bio.align.aligninfo.summaryinfo method)": [[31, "Bio.Align.AlignInfo.SummaryInfo.pos_specific_score_matrix"]], "print_info_content() (in module bio.align.aligninfo)": [[31, "Bio.Align.AlignInfo.print_info_content"]], "replacement_dictionary() (bio.align.aligninfo.summaryinfo method)": [[31, "Bio.Align.AlignInfo.SummaryInfo.replacement_dictionary"]], "bio.align.applications": [[32, "module-Bio.Align.Applications"]], "clustalomegacommandline (class in bio.align.applications)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline"]], "clustalwcommandline (class in bio.align.applications)": [[32, "Bio.Align.Applications.ClustalwCommandline"]], "dialigncommandline (class in bio.align.applications)": [[32, "Bio.Align.Applications.DialignCommandline"]], "f (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.F"], [32, "Bio.Align.Applications.PrankCommandline.f"]], "lexp (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.LEXP"], [32, "Bio.Align.Applications.MafftCommandline.lexp"]], "lop (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.LOP"], [32, "Bio.Align.Applications.MafftCommandline.lop"]], "msaprobscommandline (class in bio.align.applications)": [[32, "Bio.Align.Applications.MSAProbsCommandline"]], "mafftcommandline (class in bio.align.applications)": [[32, "Bio.Align.Applications.MafftCommandline"]], "musclecommandline (class in bio.align.applications)": [[32, "Bio.Align.Applications.MuscleCommandline"]], "prankcommandline (class in bio.align.applications)": [[32, "Bio.Align.Applications.PrankCommandline"]], "probconscommandline (class in bio.align.applications)": [[32, "Bio.Align.Applications.ProbconsCommandline"]], "seq_types (bio.align.applications.tcoffeecommandline attribute)": [[32, "Bio.Align.Applications.TCoffeeCommandline.SEQ_TYPES"]], "tcoffeecommandline (class in bio.align.applications)": [[32, "Bio.Align.Applications.TCoffeeCommandline"]], "__init__() (bio.align.applications.clustalomegacommandline method)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.__init__"]], "__init__() (bio.align.applications.clustalwcommandline method)": [[32, "Bio.Align.Applications.ClustalwCommandline.__init__"]], "__init__() (bio.align.applications.dialigncommandline method)": [[32, "Bio.Align.Applications.DialignCommandline.__init__"]], "__init__() (bio.align.applications.msaprobscommandline method)": [[32, "Bio.Align.Applications.MSAProbsCommandline.__init__"]], "__init__() (bio.align.applications.mafftcommandline method)": [[32, "Bio.Align.Applications.MafftCommandline.__init__"]], "__init__() (bio.align.applications.musclecommandline method)": [[32, "Bio.Align.Applications.MuscleCommandline.__init__"]], "__init__() (bio.align.applications.prankcommandline method)": [[32, "Bio.Align.Applications.PrankCommandline.__init__"]], "__init__() (bio.align.applications.probconscommandline method)": [[32, "Bio.Align.Applications.ProbconsCommandline.__init__"]], "__init__() (bio.align.applications.tcoffeecommandline method)": [[32, "Bio.Align.Applications.TCoffeeCommandline.__init__"]], "a (bio.align.applications.probconscommandline property)": [[32, "Bio.Align.Applications.ProbconsCommandline.a"]], "aamatrix (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.aamatrix"]], "adjustdirection (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.adjustdirection"]], "adjustdirectionaccurately (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.adjustdirectionaccurately"]], "afc (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.afc"]], "afc_v (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.afc_v"]], "align (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.align"]], "alignment_order (bio.align.applications.msaprobscommandline property)": [[32, "Bio.Align.Applications.MSAProbsCommandline.alignment_order"]], "amino (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.amino"]], "anc (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.anc"]], "anchors (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.anchors"]], "anchorspacing (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.anchorspacing"]], "annot (bio.align.applications.msaprobscommandline property)": [[32, "Bio.Align.Applications.MSAProbsCommandline.annot"]], "annot (bio.align.applications.probconscommandline property)": [[32, "Bio.Align.Applications.ProbconsCommandline.annot"]], "auto (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.auto"]], "auto (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.auto"]], "bl (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.bl"]], "bootlabels (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.bootlabels"]], "bootstrap (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.bootstrap"]], "brenner (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.brenner"]], "case (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.case"]], "center (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.center"]], "check (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.check"]], "clustalout (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.clustalout"]], "clustalw (bio.align.applications.msaprobscommandline property)": [[32, "Bio.Align.Applications.MSAProbsCommandline.clustalw"]], "clustalw (bio.align.applications.probconscommandline property)": [[32, "Bio.Align.Applications.ProbconsCommandline.clustalw"]], "cluster (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.cluster"]], "cluster1 (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.cluster1"]], "cluster2 (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.cluster2"]], "clustering (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.clustering"]], "clusteringout (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.clusteringout"]], "clustersize (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.clustersize"]], "clw (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.clw"]], "clwout (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.clwout"]], "clwstrict (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.clwstrict"]], "clwstrictout (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.clwstrictout"]], "codon (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.codon"]], "consistency (bio.align.applications.msaprobscommandline property)": [[32, "Bio.Align.Applications.MSAProbsCommandline.consistency"]], "consistency (bio.align.applications.probconscommandline property)": [[32, "Bio.Align.Applications.ProbconsCommandline.consistency"]], "convert (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.convert"]], "convert (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.convert"]], "convert (bio.align.applications.tcoffeecommandline property)": [[32, "Bio.Align.Applications.TCoffeeCommandline.convert"]], "core (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.core"]], "cs (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.cs"]], "cw (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.cw"]], "d (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.d"]], "dealign (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.dealign"]], "diagbreak (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.diagbreak"]], "diaglength (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.diaglength"]], "diagmargin (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.diagmargin"]], "diags (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.diags"]], "dimer (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.dimer"]], "distance1 (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.distance1"]], "distance2 (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.distance2"]], "distmat_full (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.distmat_full"]], "distmat_full_iter (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.distmat_full_iter"]], "distmat_in (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.distmat_in"]], "distmat_out (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.distmat_out"]], "dnafreqs (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.dnafreqs"]], "dnamatrix (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.dnamatrix"]], "dots (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.dots"]], "dpparttree (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.dpparttree"]], "ds (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.ds"]], "emissions (bio.align.applications.probconscommandline property)": [[32, "Bio.Align.Applications.ProbconsCommandline.emissions"]], "endgaps (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.endgaps"]], "ep (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.ep"]], "fa (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.fa"]], "fasta (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.fasta"]], "fastaout (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.fastaout"]], "fastapair (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.fastapair"]], "fastaparttree (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.fastaparttree"]], "ff (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.ff"]], "fft (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.fft"]], "fixedbranches (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.fixedbranches"]], "fmodel (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.fmodel"]], "fn (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.fn"]], "fop (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.fop"]], "force (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.force"]], "fsm (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.fsm"]], "fullhelp (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.fullhelp"]], "gapdist (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.gapdist"]], "gapext (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.gapext"]], "gapext (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.gapext"]], "gapext (bio.align.applications.tcoffeecommandline property)": [[32, "Bio.Align.Applications.TCoffeeCommandline.gapext"]], "gapextend (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.gapextend"]], "gapopen (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.gapopen"]], "gapopen (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.gapopen"]], "gapopen (bio.align.applications.tcoffeecommandline property)": [[32, "Bio.Align.Applications.TCoffeeCommandline.gapopen"]], "gaprate (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.gaprate"]], "genafpair (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.genafpair"]], "globalpair (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.globalpair"]], "group (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.group"]], "groupsize (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.groupsize"]], "guidetree_in (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.guidetree_in"]], "guidetree_out (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.guidetree_out"]], "helixendin (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.helixendin"]], "helixendout (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.helixendout"]], "helixgap (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.helixgap"]], "help (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.help"]], "help (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.help"]], "hgapresidues (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.hgapresidues"]], "hmm_input (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.hmm_input"]], "html (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.html"]], "htmlout (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.htmlout"]], "hydro (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.hydro"]], "hydrofactor (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.hydrofactor"]], "in1 (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.in1"]], "in2 (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.in2"]], "infile (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.infile"]], "infile (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.infile"]], "infile (bio.align.applications.msaprobscommandline property)": [[32, "Bio.Align.Applications.MSAProbsCommandline.infile"]], "infile (bio.align.applications.tcoffeecommandline property)": [[32, "Bio.Align.Applications.TCoffeeCommandline.infile"]], "infmt (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.infmt"]], "input (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.input"]], "input (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.input"]], "input (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.input"]], "input (bio.align.applications.probconscommandline property)": [[32, "Bio.Align.Applications.ProbconsCommandline.input"]], "input1 (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.input1"]], "inputorder (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.inputorder"]], "ir (bio.align.applications.probconscommandline property)": [[32, "Bio.Align.Applications.ProbconsCommandline.ir"]], "isprofile (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.isprofile"]], "iteration (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.iteration"]], "iterations (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.iterations"]], "iterative_refinement (bio.align.applications.msaprobscommandline property)": [[32, "Bio.Align.Applications.MSAProbsCommandline.iterative_refinement"]], "iw (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.iw"]], "jtt (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.jtt"]], "kappa (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.kappa"]], "kimura (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.kimura"]], "ktuple (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.ktuple"]], "le (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.le"]], "lep (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.lep"]], "lgs (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.lgs"]], "lgs_t (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.lgs_t"]], "lmax (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.lmax"]], "lo (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.lo"]], "localpair (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.localpair"]], "log (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.log"]], "log (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.log"]], "loga (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.loga"]], "long_version (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.long_version"]], "longseq (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.longseq"]], "loopgap (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.loopgap"]], "m (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.m"]], "ma (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.ma"]], "mask (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.mask"]], "mat (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.mat"]], "mat_thr (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.mat_thr"]], "matinitsize (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.matinitsize"]], "matresize (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.matresize"]], "matrix (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.matrix"]], "matrix (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.matrix"]], "matrix (bio.align.applications.tcoffeecommandline property)": [[32, "Bio.Align.Applications.TCoffeeCommandline.matrix"]], "max_guidetree_iterations (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.max_guidetree_iterations"]], "max_hmm_iterations (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.max_hmm_iterations"]], "max_link (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.max_link"]], "maxbranches (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.maxbranches"]], "maxdiagbreak (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.maxdiagbreak"]], "maxdiv (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.maxdiv"]], "maxhours (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.maxhours"]], "maxiterate (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.maxiterate"]], "maxiters (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.maxiters"]], "maxnumseq (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.maxnumseq"]], "maxseqlen (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.maxseqlen"]], "maxseqlen (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.maxseqlen"]], "maxtrees (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.maxtrees"]], "memsave (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.memsave"]], "min_link (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.min_link"]], "minbestcolscore (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.minbestcolscore"]], "minsmoothscore (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.minsmoothscore"]], "mode (bio.align.applications.tcoffeecommandline property)": [[32, "Bio.Align.Applications.TCoffeeCommandline.mode"]], "mot (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.mot"]], "msf (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.msf"]], "msf (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.msf"]], "msfout (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.msfout"]], "mttranslate (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.mttranslate"]], "n (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.n"]], "namelength (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.namelength"]], "negative (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.negative"]], "newtree (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.newtree"]], "newtree1 (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.newtree1"]], "newtree2 (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.newtree2"]], "noanchors (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.noanchors"]], "nocore (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.nocore"]], "nofft (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.nofft"]], "nohgap (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.nohgap"]], "nopgap (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.nopgap"]], "nopost (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.nopost"]], "noscore (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.noscore"]], "nosecstr1 (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.nosecstr1"]], "nosecstr2 (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.nosecstr2"]], "notree (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.notree"]], "noweights (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.noweights"]], "noxml (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.noxml"]], "nt (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.nt"]], "nta (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.nta"]], "nuc (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.nuc"]], "numiter (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.numiter"]], "numthreads (bio.align.applications.msaprobscommandline property)": [[32, "Bio.Align.Applications.MSAProbsCommandline.numthreads"]], "o (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.o"]], "o (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.o"]], "objscore (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.objscore"]], "once (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.once"]], "op (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.op"]], "options (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.options"]], "out (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.out"]], "outfile (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.outfile"]], "outfile (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.outfile"]], "outfile (bio.align.applications.msaprobscommandline property)": [[32, "Bio.Align.Applications.MSAProbsCommandline.outfile"]], "outfile (bio.align.applications.tcoffeecommandline property)": [[32, "Bio.Align.Applications.TCoffeeCommandline.outfile"]], "outfmt (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.outfmt"]], "outorder (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.outorder"]], "outorder (bio.align.applications.tcoffeecommandline property)": [[32, "Bio.Align.Applications.TCoffeeCommandline.outorder"]], "output (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.output"]], "output (bio.align.applications.tcoffeecommandline property)": [[32, "Bio.Align.Applications.TCoffeeCommandline.output"]], "outputorder (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.outputorder"]], "outputtree (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.outputtree"]], "ow (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.ow"]], "pairgap (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.pairgap"]], "pairs (bio.align.applications.probconscommandline property)": [[32, "Bio.Align.Applications.ProbconsCommandline.pairs"]], "paramfile (bio.align.applications.probconscommandline property)": [[32, "Bio.Align.Applications.ProbconsCommandline.paramfile"]], "partsize (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.partsize"]], "parttree (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.parttree"]], "percentid (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.percentid"]], "phyi (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.phyi"]], "phyiout (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.phyiout"]], "phylipout (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.phylipout"]], "phys (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.phys"]], "physout (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.physout"]], "pim (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.pim"]], "pre (bio.align.applications.probconscommandline property)": [[32, "Bio.Align.Applications.ProbconsCommandline.pre"]], "printnodes (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.printnodes"]], "profile (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.profile"]], "profile (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.profile"]], "profile1 (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.profile1"]], "profile1 (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.profile1"]], "profile2 (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.profile2"]], "profile2 (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.profile2"]], "pst (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.pst"]], "pwdist (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.pwdist"]], "pwdnamatrix (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.pwdnamatrix"]], "pwgapext (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.pwgapext"]], "pwgapopen (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.pwgapopen"]], "pwgenomic (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.pwgenomic"]], "pwgenomicdist (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.pwgenomicdist"]], "pwmatrix (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.pwmatrix"]], "quicktree (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.quicktree"]], "quiet (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.quiet"]], "quiet (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.quiet"]], "quiet (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.quiet"]], "quiet (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.quiet"]], "quiet (bio.align.applications.tcoffeecommandline property)": [[32, "Bio.Align.Applications.TCoffeeCommandline.quiet"]], "range (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.range"]], "realbranches (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.realbranches"]], "refine (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.refine"]], "refinew (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.refinew"]], "refinewindow (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.refinewindow"]], "reorder (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.reorder"]], "residuenumber (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.residuenumber"]], "retree (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.retree"]], "rho (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.rho"]], "root1 (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.root1"]], "root2 (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.root2"]], "scalebranches (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.scalebranches"]], "score (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.score"]], "scorefile (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.scorefile"]], "secstrout (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.secstrout"]], "seed (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.seed"]], "seed (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.seed"]], "seqno_range (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.seqno_range"]], "seqnos (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.seqnos"]], "seqtype (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.seqtype"]], "seqtype (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.seqtype"]], "sequences (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.sequences"]], "shortnames (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.shortnames"]], "showtree (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.showtree"]], "showxml (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.showxml"]], "sixmerpair (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.sixmerpair"]], "skipins (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.skipins"]], "smin (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.smin"]], "smoothscoreceil (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.smoothscoreceil"]], "smoothwindow (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.smoothwindow"]], "sp (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.sp"]], "spn (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.spn"]], "spscore (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.spscore"]], "stable (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.stable"]], "stars (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.stars"]], "stats (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.stats"]], "stdo (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.stdo"]], "strandendin (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.strandendin"]], "strandendout (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.strandendout"]], "strandgap (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.strandgap"]], "sueff (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.sueff"]], "sv (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.sv"]], "t (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.t"]], "ta (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.ta"]], "termgap (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.termgap"]], "terminalgap (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.terminalgap"]], "thr (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.thr"]], "thread (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.thread"]], "threads (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.threads"]], "tm (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.tm"]], "topdiags (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.topdiags"]], "tossgaps (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.tossgaps"]], "train (bio.align.applications.probconscommandline property)": [[32, "Bio.Align.Applications.ProbconsCommandline.train"]], "translate (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.translate"]], "transweight (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.transweight"]], "tree (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.tree"]], "tree (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.tree"]], "tree1 (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.tree1"]], "tree2 (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.tree2"]], "treeout (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.treeout"]], "twice (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.twice"]], "type (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.type"]], "type (bio.align.applications.tcoffeecommandline property)": [[32, "Bio.Align.Applications.TCoffeeCommandline.type"]], "usekimura (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.usekimura"]], "uselogs (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.uselogs"]], "usetree (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.usetree"]], "usetree (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.usetree"]], "usetree1 (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.usetree1"]], "usetree2 (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.usetree2"]], "verbose (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.verbose"]], "verbose (bio.align.applications.msaprobscommandline property)": [[32, "Bio.Align.Applications.MSAProbsCommandline.verbose"]], "verbose (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.verbose"]], "verbose (bio.align.applications.probconscommandline property)": [[32, "Bio.Align.Applications.ProbconsCommandline.verbose"]], "version (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.version"]], "version (bio.align.applications.msaprobscommandline property)": [[32, "Bio.Align.Applications.MSAProbsCommandline.version"]], "version (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.version"]], "viterbi (bio.align.applications.probconscommandline property)": [[32, "Bio.Align.Applications.ProbconsCommandline.viterbi"]], "weight1 (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.weight1"]], "weight2 (bio.align.applications.musclecommandline property)": [[32, "Bio.Align.Applications.MuscleCommandline.weight2"]], "weighti (bio.align.applications.mafftcommandline property)": [[32, "Bio.Align.Applications.MafftCommandline.weighti"]], "window (bio.align.applications.clustalwcommandline property)": [[32, "Bio.Align.Applications.ClustalwCommandline.window"]], "wrap (bio.align.applications.clustalomegacommandline property)": [[32, "Bio.Align.Applications.ClustalOmegaCommandline.wrap"]], "writeanc (bio.align.applications.prankcommandline property)": [[32, "Bio.Align.Applications.PrankCommandline.writeanc"]], "xfr (bio.align.applications.dialigncommandline property)": [[32, "Bio.Align.Applications.DialignCommandline.xfr"]], "alignmentiterator (class in bio.align.a2m)": [[33, "Bio.Align.a2m.AlignmentIterator"]], "alignmentwriter (class in bio.align.a2m)": [[33, "Bio.Align.a2m.AlignmentWriter"]], "bio.align.a2m": [[33, "module-Bio.Align.a2m"]], "__abstractmethods__ (bio.align.a2m.alignmentiterator attribute)": [[33, "Bio.Align.a2m.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.a2m.alignmentwriter attribute)": [[33, "Bio.Align.a2m.AlignmentWriter.__abstractmethods__"]], "fmt (bio.align.a2m.alignmentiterator attribute)": [[33, "Bio.Align.a2m.AlignmentIterator.fmt"]], "fmt (bio.align.a2m.alignmentwriter attribute)": [[33, "Bio.Align.a2m.AlignmentWriter.fmt"]], "format_alignment() (bio.align.a2m.alignmentwriter method)": [[33, "Bio.Align.a2m.AlignmentWriter.format_alignment"]], "write_alignments() (bio.align.a2m.alignmentwriter method)": [[33, "Bio.Align.a2m.AlignmentWriter.write_alignments"]], "bio.align.analysis": [[34, "module-Bio.Align.analysis"]], "calculate_dn_ds() (in module bio.align.analysis)": [[34, "Bio.Align.analysis.calculate_dn_ds"]], "calculate_dn_ds_matrix() (in module bio.align.analysis)": [[34, "Bio.Align.analysis.calculate_dn_ds_matrix"]], "mktest() (in module bio.align.analysis)": [[34, "Bio.Align.analysis.mktest"]], "alignmentiterator (class in bio.align.bed)": [[35, "Bio.Align.bed.AlignmentIterator"]], "alignmentwriter (class in bio.align.bed)": [[35, "Bio.Align.bed.AlignmentWriter"]], "bio.align.bed": [[35, "module-Bio.Align.bed"]], "__abstractmethods__ (bio.align.bed.alignmentiterator attribute)": [[35, "Bio.Align.bed.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.bed.alignmentwriter attribute)": [[35, "Bio.Align.bed.AlignmentWriter.__abstractmethods__"]], "__init__() (bio.align.bed.alignmentwriter method)": [[35, "Bio.Align.bed.AlignmentWriter.__init__"]], "fmt (bio.align.bed.alignmentiterator attribute)": [[35, "Bio.Align.bed.AlignmentIterator.fmt"]], "format_alignment() (bio.align.bed.alignmentwriter method)": [[35, "Bio.Align.bed.AlignmentWriter.format_alignment"]], "alignmentiterator (class in bio.align.bigbed)": [[36, "Bio.Align.bigbed.AlignmentIterator"]], "alignmentwriter (class in bio.align.bigbed)": [[36, "Bio.Align.bigbed.AlignmentWriter"]], "autosqltable (class in bio.align.bigbed)": [[36, "Bio.Align.bigbed.AutoSQLTable"]], "bio.align.bigbed": [[36, "module-Bio.Align.bigbed"]], "field (class in bio.align.bigbed)": [[36, "Bio.Align.bigbed.Field"]], "__abstractmethods__ (bio.align.bigbed.alignmentiterator attribute)": [[36, "Bio.Align.bigbed.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.bigbed.alignmentwriter attribute)": [[36, "Bio.Align.bigbed.AlignmentWriter.__abstractmethods__"]], "__annotations__ (bio.align.bigbed.autosqltable attribute)": [[36, "Bio.Align.bigbed.AutoSQLTable.__annotations__"]], "__bytes__() (bio.align.bigbed.autosqltable method)": [[36, "Bio.Align.bigbed.AutoSQLTable.__bytes__"]], "__getitem__() (bio.align.bigbed.autosqltable method)": [[36, "Bio.Align.bigbed.AutoSQLTable.__getitem__"]], "__getnewargs__() (bio.align.bigbed.field method)": [[36, "Bio.Align.bigbed.Field.__getnewargs__"]], "__init__() (bio.align.bigbed.alignmentwriter method)": [[36, "Bio.Align.bigbed.AlignmentWriter.__init__"]], "__init__() (bio.align.bigbed.autosqltable method)": [[36, "Bio.Align.bigbed.AutoSQLTable.__init__"]], "__len__() (bio.align.bigbed.alignmentiterator method)": [[36, "Bio.Align.bigbed.AlignmentIterator.__len__"]], "__new__() (bio.align.bigbed.field static method)": [[36, "Bio.Align.bigbed.Field.__new__"]], "__repr__() (bio.align.bigbed.field method)": [[36, "Bio.Align.bigbed.Field.__repr__"]], "__slots__ (bio.align.bigbed.field attribute)": [[36, "Bio.Align.bigbed.Field.__slots__"]], "__str__() (bio.align.bigbed.autosqltable method)": [[36, "Bio.Align.bigbed.AutoSQLTable.__str__"]], "as_type (bio.align.bigbed.field attribute)": [[36, "Bio.Align.bigbed.Field.as_type"]], "comment (bio.align.bigbed.field attribute)": [[36, "Bio.Align.bigbed.Field.comment"]], "default (bio.align.bigbed.autosqltable attribute)": [[36, "Bio.Align.bigbed.AutoSQLTable.default"]], "fmt (bio.align.bigbed.alignmentiterator attribute)": [[36, "Bio.Align.bigbed.AlignmentIterator.fmt"]], "fmt (bio.align.bigbed.alignmentwriter attribute)": [[36, "Bio.Align.bigbed.AlignmentWriter.fmt"]], "from_bytes() (bio.align.bigbed.autosqltable class method)": [[36, "Bio.Align.bigbed.AutoSQLTable.from_bytes"]], "from_string() (bio.align.bigbed.autosqltable class method)": [[36, "Bio.Align.bigbed.AutoSQLTable.from_string"]], "mode (bio.align.bigbed.alignmentiterator attribute)": [[36, "Bio.Align.bigbed.AlignmentIterator.mode"]], "mode (bio.align.bigbed.alignmentwriter attribute)": [[36, "Bio.Align.bigbed.AlignmentWriter.mode"]], "name (bio.align.bigbed.field attribute)": [[36, "Bio.Align.bigbed.Field.name"]], "search() (bio.align.bigbed.alignmentiterator method)": [[36, "Bio.Align.bigbed.AlignmentIterator.search"]], "write_alignments() (bio.align.bigbed.alignmentwriter method)": [[36, "Bio.Align.bigbed.AlignmentWriter.write_alignments"]], "write_file() (bio.align.bigbed.alignmentwriter method)": [[36, "Bio.Align.bigbed.AlignmentWriter.write_file"]], "alignmentiterator (class in bio.align.bigmaf)": [[37, "Bio.Align.bigmaf.AlignmentIterator"]], "alignmentwriter (class in bio.align.bigmaf)": [[37, "Bio.Align.bigmaf.AlignmentWriter"]], "bio.align.bigmaf": [[37, "module-Bio.Align.bigmaf"]], "__abstractmethods__ (bio.align.bigmaf.alignmentiterator attribute)": [[37, "Bio.Align.bigmaf.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.bigmaf.alignmentwriter attribute)": [[37, "Bio.Align.bigmaf.AlignmentWriter.__abstractmethods__"]], "__init__() (bio.align.bigmaf.alignmentiterator method)": [[37, "Bio.Align.bigmaf.AlignmentIterator.__init__"]], "__init__() (bio.align.bigmaf.alignmentwriter method)": [[37, "Bio.Align.bigmaf.AlignmentWriter.__init__"]], "fmt (bio.align.bigmaf.alignmentiterator attribute)": [[37, "Bio.Align.bigmaf.AlignmentIterator.fmt"]], "fmt (bio.align.bigmaf.alignmentwriter attribute)": [[37, "Bio.Align.bigmaf.AlignmentWriter.fmt"]], "mode (bio.align.bigmaf.alignmentiterator attribute)": [[37, "Bio.Align.bigmaf.AlignmentIterator.mode"]], "write_file() (bio.align.bigmaf.alignmentwriter method)": [[37, "Bio.Align.bigmaf.AlignmentWriter.write_file"]], "alignmentiterator (class in bio.align.bigpsl)": [[38, "Bio.Align.bigpsl.AlignmentIterator"]], "alignmentwriter (class in bio.align.bigpsl)": [[38, "Bio.Align.bigpsl.AlignmentWriter"]], "bio.align.bigpsl": [[38, "module-Bio.Align.bigpsl"]], "__abstractmethods__ (bio.align.bigpsl.alignmentiterator attribute)": [[38, "Bio.Align.bigpsl.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.bigpsl.alignmentwriter attribute)": [[38, "Bio.Align.bigpsl.AlignmentWriter.__abstractmethods__"]], "__init__() (bio.align.bigpsl.alignmentwriter method)": [[38, "Bio.Align.bigpsl.AlignmentWriter.__init__"]], "fmt (bio.align.bigpsl.alignmentiterator attribute)": [[38, "Bio.Align.bigpsl.AlignmentIterator.fmt"]], "fmt (bio.align.bigpsl.alignmentwriter attribute)": [[38, "Bio.Align.bigpsl.AlignmentWriter.fmt"]], "write_file() (bio.align.bigpsl.alignmentwriter method)": [[38, "Bio.Align.bigpsl.AlignmentWriter.write_file"]], "alignmentiterator (class in bio.align.chain)": [[39, "Bio.Align.chain.AlignmentIterator"]], "alignmentwriter (class in bio.align.chain)": [[39, "Bio.Align.chain.AlignmentWriter"]], "bio.align.chain": [[39, "module-Bio.Align.chain"]], "__abstractmethods__ (bio.align.chain.alignmentiterator attribute)": [[39, "Bio.Align.chain.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.chain.alignmentwriter attribute)": [[39, "Bio.Align.chain.AlignmentWriter.__abstractmethods__"]], "fmt (bio.align.chain.alignmentiterator attribute)": [[39, "Bio.Align.chain.AlignmentIterator.fmt"]], "fmt (bio.align.chain.alignmentwriter attribute)": [[39, "Bio.Align.chain.AlignmentWriter.fmt"]], "format_alignment() (bio.align.chain.alignmentwriter method)": [[39, "Bio.Align.chain.AlignmentWriter.format_alignment"]], "alignmentiterator (class in bio.align.clustal)": [[40, "Bio.Align.clustal.AlignmentIterator"]], "alignmentwriter (class in bio.align.clustal)": [[40, "Bio.Align.clustal.AlignmentWriter"]], "bio.align.clustal": [[40, "module-Bio.Align.clustal"]], "__abstractmethods__ (bio.align.clustal.alignmentiterator attribute)": [[40, "Bio.Align.clustal.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.clustal.alignmentwriter attribute)": [[40, "Bio.Align.clustal.AlignmentWriter.__abstractmethods__"]], "fmt (bio.align.clustal.alignmentiterator attribute)": [[40, "Bio.Align.clustal.AlignmentIterator.fmt"]], "fmt (bio.align.clustal.alignmentwriter attribute)": [[40, "Bio.Align.clustal.AlignmentWriter.fmt"]], "format_alignment() (bio.align.clustal.alignmentwriter method)": [[40, "Bio.Align.clustal.AlignmentWriter.format_alignment"]], "write_header() (bio.align.clustal.alignmentwriter method)": [[40, "Bio.Align.clustal.AlignmentWriter.write_header"]], "alignmentiterator (class in bio.align.emboss)": [[41, "Bio.Align.emboss.AlignmentIterator"]], "bio.align.emboss": [[41, "module-Bio.Align.emboss"]], "__abstractmethods__ (bio.align.emboss.alignmentiterator attribute)": [[41, "Bio.Align.emboss.AlignmentIterator.__abstractmethods__"]], "fmt (bio.align.emboss.alignmentiterator attribute)": [[41, "Bio.Align.emboss.AlignmentIterator.fmt"]], "alignmentiterator (class in bio.align.exonerate)": [[42, "Bio.Align.exonerate.AlignmentIterator"]], "alignmentwriter (class in bio.align.exonerate)": [[42, "Bio.Align.exonerate.AlignmentWriter"]], "bio.align.exonerate": [[42, "module-Bio.Align.exonerate"]], "__abstractmethods__ (bio.align.exonerate.alignmentiterator attribute)": [[42, "Bio.Align.exonerate.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.exonerate.alignmentwriter attribute)": [[42, "Bio.Align.exonerate.AlignmentWriter.__abstractmethods__"]], "__init__() (bio.align.exonerate.alignmentwriter method)": [[42, "Bio.Align.exonerate.AlignmentWriter.__init__"]], "fmt (bio.align.exonerate.alignmentiterator attribute)": [[42, "Bio.Align.exonerate.AlignmentIterator.fmt"]], "fmt (bio.align.exonerate.alignmentwriter attribute)": [[42, "Bio.Align.exonerate.AlignmentWriter.fmt"]], "write_footer() (bio.align.exonerate.alignmentwriter method)": [[42, "Bio.Align.exonerate.AlignmentWriter.write_footer"]], "write_header() (bio.align.exonerate.alignmentwriter method)": [[42, "Bio.Align.exonerate.AlignmentWriter.write_header"]], "alignmentiterator (class in bio.align.fasta)": [[43, "Bio.Align.fasta.AlignmentIterator"]], "alignmentwriter (class in bio.align.fasta)": [[43, "Bio.Align.fasta.AlignmentWriter"]], "bio.align.fasta": [[43, "module-Bio.Align.fasta"]], "__abstractmethods__ (bio.align.fasta.alignmentiterator attribute)": [[43, "Bio.Align.fasta.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.fasta.alignmentwriter attribute)": [[43, "Bio.Align.fasta.AlignmentWriter.__abstractmethods__"]], "fmt (bio.align.fasta.alignmentiterator attribute)": [[43, "Bio.Align.fasta.AlignmentIterator.fmt"]], "fmt (bio.align.fasta.alignmentwriter attribute)": [[43, "Bio.Align.fasta.AlignmentWriter.fmt"]], "format_alignment() (bio.align.fasta.alignmentwriter method)": [[43, "Bio.Align.fasta.AlignmentWriter.format_alignment"]], "alignmentiterator (class in bio.align.hhr)": [[44, "Bio.Align.hhr.AlignmentIterator"]], "bio.align.hhr": [[44, "module-Bio.Align.hhr"]], "__abstractmethods__ (bio.align.hhr.alignmentiterator attribute)": [[44, "Bio.Align.hhr.AlignmentIterator.__abstractmethods__"]], "__len__() (bio.align.hhr.alignmentiterator method)": [[44, "Bio.Align.hhr.AlignmentIterator.__len__"]], "fmt (bio.align.hhr.alignmentiterator attribute)": [[44, "Bio.Align.hhr.AlignmentIterator.fmt"]], "alignmentiterator (class in bio.align.interfaces)": [[45, "Bio.Align.interfaces.AlignmentIterator"]], "alignmentwriter (class in bio.align.interfaces)": [[45, "Bio.Align.interfaces.AlignmentWriter"]], "bio.align.interfaces": [[45, "module-Bio.Align.interfaces"]], "__abstractmethods__ (bio.align.interfaces.alignmentiterator attribute)": [[45, "Bio.Align.interfaces.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.interfaces.alignmentwriter attribute)": [[45, "Bio.Align.interfaces.AlignmentWriter.__abstractmethods__"]], "__annotations__ (bio.align.interfaces.alignmentiterator attribute)": [[45, "Bio.Align.interfaces.AlignmentIterator.__annotations__"]], "__annotations__ (bio.align.interfaces.alignmentwriter attribute)": [[45, "Bio.Align.interfaces.AlignmentWriter.__annotations__"]], "__enter__() (bio.align.interfaces.alignmentiterator method)": [[45, "Bio.Align.interfaces.AlignmentIterator.__enter__"]], "__exit__() (bio.align.interfaces.alignmentiterator method)": [[45, "Bio.Align.interfaces.AlignmentIterator.__exit__"]], "__getitem__() (bio.align.interfaces.alignmentiterator method)": [[45, "Bio.Align.interfaces.AlignmentIterator.__getitem__"]], "__init__() (bio.align.interfaces.alignmentiterator method)": [[45, "Bio.Align.interfaces.AlignmentIterator.__init__"]], "__init__() (bio.align.interfaces.alignmentwriter method)": [[45, "Bio.Align.interfaces.AlignmentWriter.__init__"]], "__len__() (bio.align.interfaces.alignmentiterator method)": [[45, "Bio.Align.interfaces.AlignmentIterator.__len__"]], "__next__() (bio.align.interfaces.alignmentiterator method)": [[45, "Bio.Align.interfaces.AlignmentIterator.__next__"]], "fmt (bio.align.interfaces.alignmentiterator attribute)": [[45, "Bio.Align.interfaces.AlignmentIterator.fmt"]], "fmt (bio.align.interfaces.alignmentwriter attribute)": [[45, "Bio.Align.interfaces.AlignmentWriter.fmt"]], "format_alignment() (bio.align.interfaces.alignmentwriter method)": [[45, "Bio.Align.interfaces.AlignmentWriter.format_alignment"]], "mode (bio.align.interfaces.alignmentiterator attribute)": [[45, "Bio.Align.interfaces.AlignmentIterator.mode"]], "mode (bio.align.interfaces.alignmentwriter attribute)": [[45, "Bio.Align.interfaces.AlignmentWriter.mode"]], "rewind() (bio.align.interfaces.alignmentiterator method)": [[45, "Bio.Align.interfaces.AlignmentIterator.rewind"]], "write() (bio.align.interfaces.alignmentwriter method)": [[45, "Bio.Align.interfaces.AlignmentWriter.write"]], "write_alignments() (bio.align.interfaces.alignmentwriter method)": [[45, "Bio.Align.interfaces.AlignmentWriter.write_alignments"]], "write_file() (bio.align.interfaces.alignmentwriter method)": [[45, "Bio.Align.interfaces.AlignmentWriter.write_file"]], "write_footer() (bio.align.interfaces.alignmentwriter method)": [[45, "Bio.Align.interfaces.AlignmentWriter.write_footer"]], "write_header() (bio.align.interfaces.alignmentwriter method)": [[45, "Bio.Align.interfaces.AlignmentWriter.write_header"]], "write_multiple_alignments() (bio.align.interfaces.alignmentwriter method)": [[45, "Bio.Align.interfaces.AlignmentWriter.write_multiple_alignments"]], "write_single_alignment() (bio.align.interfaces.alignmentwriter method)": [[45, "Bio.Align.interfaces.AlignmentWriter.write_single_alignment"]], "alignmentiterator (class in bio.align.maf)": [[46, "Bio.Align.maf.AlignmentIterator"]], "alignmentwriter (class in bio.align.maf)": [[46, "Bio.Align.maf.AlignmentWriter"]], "bio.align.maf": [[46, "module-Bio.Align.maf"]], "__abstractmethods__ (bio.align.maf.alignmentiterator attribute)": [[46, "Bio.Align.maf.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.maf.alignmentwriter attribute)": [[46, "Bio.Align.maf.AlignmentWriter.__abstractmethods__"]], "empty_status_characters (bio.align.maf.alignmentiterator attribute)": [[46, "Bio.Align.maf.AlignmentIterator.empty_status_characters"]], "fmt (bio.align.maf.alignmentiterator attribute)": [[46, "Bio.Align.maf.AlignmentIterator.fmt"]], "fmt (bio.align.maf.alignmentwriter attribute)": [[46, "Bio.Align.maf.AlignmentWriter.fmt"]], "format_alignment() (bio.align.maf.alignmentwriter method)": [[46, "Bio.Align.maf.AlignmentWriter.format_alignment"]], "status_characters (bio.align.maf.alignmentiterator attribute)": [[46, "Bio.Align.maf.AlignmentIterator.status_characters"]], "write_header() (bio.align.maf.alignmentwriter method)": [[46, "Bio.Align.maf.AlignmentWriter.write_header"]], "alignmentiterator (class in bio.align.mauve)": [[47, "Bio.Align.mauve.AlignmentIterator"]], "alignmentwriter (class in bio.align.mauve)": [[47, "Bio.Align.mauve.AlignmentWriter"]], "bio.align.mauve": [[47, "module-Bio.Align.mauve"]], "__abstractmethods__ (bio.align.mauve.alignmentiterator attribute)": [[47, "Bio.Align.mauve.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.mauve.alignmentwriter attribute)": [[47, "Bio.Align.mauve.AlignmentWriter.__abstractmethods__"]], "__init__() (bio.align.mauve.alignmentwriter method)": [[47, "Bio.Align.mauve.AlignmentWriter.__init__"]], "fmt (bio.align.mauve.alignmentiterator attribute)": [[47, "Bio.Align.mauve.AlignmentIterator.fmt"]], "fmt (bio.align.mauve.alignmentwriter attribute)": [[47, "Bio.Align.mauve.AlignmentWriter.fmt"]], "format_alignment() (bio.align.mauve.alignmentwriter method)": [[47, "Bio.Align.mauve.AlignmentWriter.format_alignment"]], "write_file() (bio.align.mauve.alignmentwriter method)": [[47, "Bio.Align.mauve.AlignmentWriter.write_file"]], "write_header() (bio.align.mauve.alignmentwriter method)": [[47, "Bio.Align.mauve.AlignmentWriter.write_header"]], "alignmentiterator (class in bio.align.msf)": [[48, "Bio.Align.msf.AlignmentIterator"]], "bio.align.msf": [[48, "module-Bio.Align.msf"]], "__abstractmethods__ (bio.align.msf.alignmentiterator attribute)": [[48, "Bio.Align.msf.AlignmentIterator.__abstractmethods__"]], "fmt (bio.align.msf.alignmentiterator attribute)": [[48, "Bio.Align.msf.AlignmentIterator.fmt"]], "alignmentiterator (class in bio.align.nexus)": [[49, "Bio.Align.nexus.AlignmentIterator"]], "alignmentwriter (class in bio.align.nexus)": [[49, "Bio.Align.nexus.AlignmentWriter"]], "bio.align.nexus": [[49, "module-Bio.Align.nexus"]], "__abstractmethods__ (bio.align.nexus.alignmentiterator attribute)": [[49, "Bio.Align.nexus.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.nexus.alignmentwriter attribute)": [[49, "Bio.Align.nexus.AlignmentWriter.__abstractmethods__"]], "__init__() (bio.align.nexus.alignmentwriter method)": [[49, "Bio.Align.nexus.AlignmentWriter.__init__"]], "fmt (bio.align.nexus.alignmentiterator attribute)": [[49, "Bio.Align.nexus.AlignmentIterator.fmt"]], "fmt (bio.align.nexus.alignmentwriter attribute)": [[49, "Bio.Align.nexus.AlignmentWriter.fmt"]], "format_alignment() (bio.align.nexus.alignmentwriter method)": [[49, "Bio.Align.nexus.AlignmentWriter.format_alignment"]], "write_alignment() (bio.align.nexus.alignmentwriter method)": [[49, "Bio.Align.nexus.AlignmentWriter.write_alignment"]], "write_alignments() (bio.align.nexus.alignmentwriter method)": [[49, "Bio.Align.nexus.AlignmentWriter.write_alignments"]], "write_file() (bio.align.nexus.alignmentwriter method)": [[49, "Bio.Align.nexus.AlignmentWriter.write_file"]], "alignmentiterator (class in bio.align.phylip)": [[50, "Bio.Align.phylip.AlignmentIterator"]], "alignmentwriter (class in bio.align.phylip)": [[50, "Bio.Align.phylip.AlignmentWriter"]], "bio.align.phylip": [[50, "module-Bio.Align.phylip"]], "__abstractmethods__ (bio.align.phylip.alignmentiterator attribute)": [[50, "Bio.Align.phylip.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.phylip.alignmentwriter attribute)": [[50, "Bio.Align.phylip.AlignmentWriter.__abstractmethods__"]], "fmt (bio.align.phylip.alignmentiterator attribute)": [[50, "Bio.Align.phylip.AlignmentIterator.fmt"]], "fmt (bio.align.phylip.alignmentwriter attribute)": [[50, "Bio.Align.phylip.AlignmentWriter.fmt"]], "format_alignment() (bio.align.phylip.alignmentwriter method)": [[50, "Bio.Align.phylip.AlignmentWriter.format_alignment"]], "alignmentiterator (class in bio.align.psl)": [[51, "Bio.Align.psl.AlignmentIterator"]], "alignmentwriter (class in bio.align.psl)": [[51, "Bio.Align.psl.AlignmentWriter"]], "bio.align.psl": [[51, "module-Bio.Align.psl"]], "__abstractmethods__ (bio.align.psl.alignmentiterator attribute)": [[51, "Bio.Align.psl.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.psl.alignmentwriter attribute)": [[51, "Bio.Align.psl.AlignmentWriter.__abstractmethods__"]], "__init__() (bio.align.psl.alignmentwriter method)": [[51, "Bio.Align.psl.AlignmentWriter.__init__"]], "fmt (bio.align.psl.alignmentiterator attribute)": [[51, "Bio.Align.psl.AlignmentIterator.fmt"]], "fmt (bio.align.psl.alignmentwriter attribute)": [[51, "Bio.Align.psl.AlignmentWriter.fmt"]], "format_alignment() (bio.align.psl.alignmentwriter method)": [[51, "Bio.Align.psl.AlignmentWriter.format_alignment"]], "write_header() (bio.align.psl.alignmentwriter method)": [[51, "Bio.Align.psl.AlignmentWriter.write_header"]], "alignmentiterator (class in bio.align.sam)": [[52, "Bio.Align.sam.AlignmentIterator"]], "alignmentwriter (class in bio.align.sam)": [[52, "Bio.Align.sam.AlignmentWriter"]], "bio.align.sam": [[52, "module-Bio.Align.sam"]], "__abstractmethods__ (bio.align.sam.alignmentiterator attribute)": [[52, "Bio.Align.sam.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.sam.alignmentwriter attribute)": [[52, "Bio.Align.sam.AlignmentWriter.__abstractmethods__"]], "__init__() (bio.align.sam.alignmentwriter method)": [[52, "Bio.Align.sam.AlignmentWriter.__init__"]], "fmt (bio.align.sam.alignmentiterator attribute)": [[52, "Bio.Align.sam.AlignmentIterator.fmt"]], "fmt (bio.align.sam.alignmentwriter attribute)": [[52, "Bio.Align.sam.AlignmentWriter.fmt"]], "format_alignment() (bio.align.sam.alignmentwriter method)": [[52, "Bio.Align.sam.AlignmentWriter.format_alignment"]], "write_header() (bio.align.sam.alignmentwriter method)": [[52, "Bio.Align.sam.AlignmentWriter.write_header"]], "alignmentiterator (class in bio.align.stockholm)": [[53, "Bio.Align.stockholm.AlignmentIterator"]], "alignmentwriter (class in bio.align.stockholm)": [[53, "Bio.Align.stockholm.AlignmentWriter"]], "bio.align.stockholm": [[53, "module-Bio.Align.stockholm"]], "__abstractmethods__ (bio.align.stockholm.alignmentiterator attribute)": [[53, "Bio.Align.stockholm.AlignmentIterator.__abstractmethods__"]], "__abstractmethods__ (bio.align.stockholm.alignmentwriter attribute)": [[53, "Bio.Align.stockholm.AlignmentWriter.__abstractmethods__"]], "fmt (bio.align.stockholm.alignmentiterator attribute)": [[53, "Bio.Align.stockholm.AlignmentIterator.fmt"]], "fmt (bio.align.stockholm.alignmentwriter attribute)": [[53, "Bio.Align.stockholm.AlignmentWriter.fmt"]], "format_alignment() (bio.align.stockholm.alignmentwriter method)": [[53, "Bio.Align.stockholm.AlignmentWriter.format_alignment"]], "gc_mapping (bio.align.stockholm.alignmentiterator attribute)": [[53, "Bio.Align.stockholm.AlignmentIterator.gc_mapping"]], "gc_mapping (bio.align.stockholm.alignmentwriter attribute)": [[53, "Bio.Align.stockholm.AlignmentWriter.gc_mapping"]], "gf_mapping (bio.align.stockholm.alignmentiterator attribute)": [[53, "Bio.Align.stockholm.AlignmentIterator.gf_mapping"]], "gf_mapping (bio.align.stockholm.alignmentwriter attribute)": [[53, "Bio.Align.stockholm.AlignmentWriter.gf_mapping"]], "gr_mapping (bio.align.stockholm.alignmentiterator attribute)": [[53, "Bio.Align.stockholm.AlignmentIterator.gr_mapping"]], "gr_mapping (bio.align.stockholm.alignmentwriter attribute)": [[53, "Bio.Align.stockholm.AlignmentWriter.gr_mapping"]], "gs_mapping (bio.align.stockholm.alignmentiterator attribute)": [[53, "Bio.Align.stockholm.AlignmentIterator.gs_mapping"]], "gs_mapping (bio.align.stockholm.alignmentwriter attribute)": [[53, "Bio.Align.stockholm.AlignmentWriter.gs_mapping"]], "key (bio.align.stockholm.alignmentiterator attribute)": [[53, "Bio.Align.stockholm.AlignmentIterator.key"]], "keyword (bio.align.stockholm.alignmentiterator attribute)": [[53, "Bio.Align.stockholm.AlignmentIterator.keyword"]], "value (bio.align.stockholm.alignmentiterator attribute)": [[53, "Bio.Align.stockholm.AlignmentIterator.value"]], "array (class in bio.align.substitution_matrices)": [[54, "Bio.Align.substitution_matrices.Array"]], "bio.align.substitution_matrices": [[54, "module-Bio.Align.substitution_matrices"]], "__array_finalize__() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.__array_finalize__"]], "__array_prepare__() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.__array_prepare__"]], "__array_ufunc__() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.__array_ufunc__"]], "__array_wrap__() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.__array_wrap__"]], "__contains__() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.__contains__"]], "__format__() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.__format__"]], "__getitem__() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.__getitem__"]], "__new__() (bio.align.substitution_matrices.array static method)": [[54, "Bio.Align.substitution_matrices.Array.__new__"]], "__reduce__() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.__reduce__"]], "__repr__() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.__repr__"]], "__setitem__() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.__setitem__"]], "__setstate__() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.__setstate__"]], "__str__() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.__str__"]], "alphabet (bio.align.substitution_matrices.array property)": [[54, "Bio.Align.substitution_matrices.Array.alphabet"]], "copy() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.copy"]], "format() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.format"]], "get() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.get"]], "items() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.items"]], "keys() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.keys"]], "load() (in module bio.align.substitution_matrices)": [[54, "Bio.Align.substitution_matrices.load"]], "read() (in module bio.align.substitution_matrices)": [[54, "Bio.Align.substitution_matrices.read"]], "select() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.select"]], "transpose() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.transpose"]], "update() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.update"]], "values() (bio.align.substitution_matrices.array method)": [[54, "Bio.Align.substitution_matrices.Array.values"]], "alignmentiterator (class in bio.align.tabular)": [[55, "Bio.Align.tabular.AlignmentIterator"]], "bio.align.tabular": [[55, "module-Bio.Align.tabular"]], "match (bio.align.tabular.state attribute)": [[55, "Bio.Align.tabular.State.MATCH"]], "none (bio.align.tabular.state attribute)": [[55, "Bio.Align.tabular.State.NONE"]], "query_gap (bio.align.tabular.state attribute)": [[55, "Bio.Align.tabular.State.QUERY_GAP"]], "state (class in bio.align.tabular)": [[55, "Bio.Align.tabular.State"]], "target_gap (bio.align.tabular.state attribute)": [[55, "Bio.Align.tabular.State.TARGET_GAP"]], "__abstractmethods__ (bio.align.tabular.alignmentiterator attribute)": [[55, "Bio.Align.tabular.AlignmentIterator.__abstractmethods__"]], "fmt (bio.align.tabular.alignmentiterator attribute)": [[55, "Bio.Align.tabular.AlignmentIterator.fmt"]], "parse_btop() (bio.align.tabular.alignmentiterator method)": [[55, "Bio.Align.tabular.AlignmentIterator.parse_btop"]], "parse_cigar() (bio.align.tabular.alignmentiterator method)": [[55, "Bio.Align.tabular.AlignmentIterator.parse_cigar"]], "bio.alignio": [[56, "module-Bio.AlignIO"]], "convert() (in module bio.alignio)": [[56, "Bio.AlignIO.convert"]], "parse() (in module bio.alignio)": [[56, "Bio.AlignIO.parse"]], "read() (in module bio.alignio)": [[56, "Bio.AlignIO.read"]], "write() (in module bio.alignio)": [[56, "Bio.AlignIO.write"]], "bio.alignio.clustalio": [[57, "module-Bio.AlignIO.ClustalIO"]], "clustaliterator (class in bio.alignio.clustalio)": [[57, "Bio.AlignIO.ClustalIO.ClustalIterator"]], "clustalwriter (class in bio.alignio.clustalio)": [[57, "Bio.AlignIO.ClustalIO.ClustalWriter"]], "__next__() (bio.alignio.clustalio.clustaliterator method)": [[57, "Bio.AlignIO.ClustalIO.ClustalIterator.__next__"]], "write_alignment() (bio.alignio.clustalio.clustalwriter method)": [[57, "Bio.AlignIO.ClustalIO.ClustalWriter.write_alignment"]], "bio.alignio.embossio": [[58, "module-Bio.AlignIO.EmbossIO"]], "embossiterator (class in bio.alignio.embossio)": [[58, "Bio.AlignIO.EmbossIO.EmbossIterator"]], "__next__() (bio.alignio.embossio.embossiterator method)": [[58, "Bio.AlignIO.EmbossIO.EmbossIterator.__next__"]], "bio.alignio.fastaio": [[59, "module-Bio.AlignIO.FastaIO"]], "fastam10iterator() (in module bio.alignio.fastaio)": [[59, "Bio.AlignIO.FastaIO.FastaM10Iterator"]], "alignmentiterator (class in bio.alignio.interfaces)": [[60, "Bio.AlignIO.Interfaces.AlignmentIterator"]], "alignmentwriter (class in bio.alignio.interfaces)": [[60, "Bio.AlignIO.Interfaces.AlignmentWriter"]], "bio.alignio.interfaces": [[60, "module-Bio.AlignIO.Interfaces"]], "sequentialalignmentwriter (class in bio.alignio.interfaces)": [[60, "Bio.AlignIO.Interfaces.SequentialAlignmentWriter"]], "__init__() (bio.alignio.interfaces.alignmentiterator method)": [[60, "Bio.AlignIO.Interfaces.AlignmentIterator.__init__"]], "__init__() (bio.alignio.interfaces.alignmentwriter method)": [[60, "Bio.AlignIO.Interfaces.AlignmentWriter.__init__"]], "__init__() (bio.alignio.interfaces.sequentialalignmentwriter method)": [[60, "Bio.AlignIO.Interfaces.SequentialAlignmentWriter.__init__"]], "__iter__() (bio.alignio.interfaces.alignmentiterator method)": [[60, "Bio.AlignIO.Interfaces.AlignmentIterator.__iter__"]], "__next__() (bio.alignio.interfaces.alignmentiterator method)": [[60, "Bio.AlignIO.Interfaces.AlignmentIterator.__next__"]], "clean() (bio.alignio.interfaces.alignmentwriter method)": [[60, "Bio.AlignIO.Interfaces.AlignmentWriter.clean"]], "write_alignment() (bio.alignio.interfaces.sequentialalignmentwriter method)": [[60, "Bio.AlignIO.Interfaces.SequentialAlignmentWriter.write_alignment"]], "write_file() (bio.alignio.interfaces.alignmentwriter method)": [[60, "Bio.AlignIO.Interfaces.AlignmentWriter.write_file"]], "write_file() (bio.alignio.interfaces.sequentialalignmentwriter method)": [[60, "Bio.AlignIO.Interfaces.SequentialAlignmentWriter.write_file"]], "write_footer() (bio.alignio.interfaces.sequentialalignmentwriter method)": [[60, "Bio.AlignIO.Interfaces.SequentialAlignmentWriter.write_footer"]], "write_header() (bio.alignio.interfaces.sequentialalignmentwriter method)": [[60, "Bio.AlignIO.Interfaces.SequentialAlignmentWriter.write_header"]], "bio.alignio.mafio": [[61, "module-Bio.AlignIO.MafIO"]], "mafindex (class in bio.alignio.mafio)": [[61, "Bio.AlignIO.MafIO.MafIndex"]], "mafiterator() (in module bio.alignio.mafio)": [[61, "Bio.AlignIO.MafIO.MafIterator"]], "mafwriter (class in bio.alignio.mafio)": [[61, "Bio.AlignIO.MafIO.MafWriter"]], "__init__() (bio.alignio.mafio.mafindex method)": [[61, "Bio.AlignIO.MafIO.MafIndex.__init__"]], "__len__() (bio.alignio.mafio.mafindex method)": [[61, "Bio.AlignIO.MafIO.MafIndex.__len__"]], "__repr__() (bio.alignio.mafio.mafindex method)": [[61, "Bio.AlignIO.MafIO.MafIndex.__repr__"]], "close() (bio.alignio.mafio.mafindex method)": [[61, "Bio.AlignIO.MafIO.MafIndex.close"]], "get_spliced() (bio.alignio.mafio.mafindex method)": [[61, "Bio.AlignIO.MafIO.MafIndex.get_spliced"]], "search() (bio.alignio.mafio.mafindex method)": [[61, "Bio.AlignIO.MafIO.MafIndex.search"]], "write_alignment() (bio.alignio.mafio.mafwriter method)": [[61, "Bio.AlignIO.MafIO.MafWriter.write_alignment"]], "write_header() (bio.alignio.mafio.mafwriter method)": [[61, "Bio.AlignIO.MafIO.MafWriter.write_header"]], "bio.alignio.mauveio": [[62, "module-Bio.AlignIO.MauveIO"]], "mauveiterator (class in bio.alignio.mauveio)": [[62, "Bio.AlignIO.MauveIO.MauveIterator"]], "mauvewriter (class in bio.alignio.mauveio)": [[62, "Bio.AlignIO.MauveIO.MauveWriter"]], "__annotations__ (bio.alignio.mauveio.mauveiterator attribute)": [[62, "Bio.AlignIO.MauveIO.MauveIterator.__annotations__"]], "__init__() (bio.alignio.mauveio.mauvewriter method)": [[62, "Bio.AlignIO.MauveIO.MauveWriter.__init__"]], "__next__() (bio.alignio.mauveio.mauveiterator method)": [[62, "Bio.AlignIO.MauveIO.MauveIterator.__next__"]], "write_alignment() (bio.alignio.mauveio.mauvewriter method)": [[62, "Bio.AlignIO.MauveIO.MauveWriter.write_alignment"]], "bio.alignio.msfio": [[63, "module-Bio.AlignIO.MsfIO"]], "msfiterator (class in bio.alignio.msfio)": [[63, "Bio.AlignIO.MsfIO.MsfIterator"]], "__next__() (bio.alignio.msfio.msfiterator method)": [[63, "Bio.AlignIO.MsfIO.MsfIterator.__next__"]], "bio.alignio.nexusio": [[64, "module-Bio.AlignIO.NexusIO"]], "nexusiterator() (in module bio.alignio.nexusio)": [[64, "Bio.AlignIO.NexusIO.NexusIterator"]], "nexuswriter (class in bio.alignio.nexusio)": [[64, "Bio.AlignIO.NexusIO.NexusWriter"]], "write_alignment() (bio.alignio.nexusio.nexuswriter method)": [[64, "Bio.AlignIO.NexusIO.NexusWriter.write_alignment"]], "write_file() (bio.alignio.nexusio.nexuswriter method)": [[64, "Bio.AlignIO.NexusIO.NexusWriter.write_file"]], "bio.alignio.phylipio": [[65, "module-Bio.AlignIO.PhylipIO"]], "phylipiterator (class in bio.alignio.phylipio)": [[65, "Bio.AlignIO.PhylipIO.PhylipIterator"]], "phylipwriter (class in bio.alignio.phylipio)": [[65, "Bio.AlignIO.PhylipIO.PhylipWriter"]], "relaxedphylipiterator (class in bio.alignio.phylipio)": [[65, "Bio.AlignIO.PhylipIO.RelaxedPhylipIterator"]], "relaxedphylipwriter (class in bio.alignio.phylipio)": [[65, "Bio.AlignIO.PhylipIO.RelaxedPhylipWriter"]], "sequentialphylipiterator (class in bio.alignio.phylipio)": [[65, "Bio.AlignIO.PhylipIO.SequentialPhylipIterator"]], "sequentialphylipwriter (class in bio.alignio.phylipio)": [[65, "Bio.AlignIO.PhylipIO.SequentialPhylipWriter"]], "__next__() (bio.alignio.phylipio.phylipiterator method)": [[65, "Bio.AlignIO.PhylipIO.PhylipIterator.__next__"]], "__next__() (bio.alignio.phylipio.sequentialphylipiterator method)": [[65, "Bio.AlignIO.PhylipIO.SequentialPhylipIterator.__next__"]], "id_width (bio.alignio.phylipio.phylipiterator attribute)": [[65, "Bio.AlignIO.PhylipIO.PhylipIterator.id_width"]], "sanitize_name() (in module bio.alignio.phylipio)": [[65, "Bio.AlignIO.PhylipIO.sanitize_name"]], "write_alignment() (bio.alignio.phylipio.phylipwriter method)": [[65, "Bio.AlignIO.PhylipIO.PhylipWriter.write_alignment"]], "write_alignment() (bio.alignio.phylipio.relaxedphylipwriter method)": [[65, "Bio.AlignIO.PhylipIO.RelaxedPhylipWriter.write_alignment"]], "write_alignment() (bio.alignio.phylipio.sequentialphylipwriter method)": [[65, "Bio.AlignIO.PhylipIO.SequentialPhylipWriter.write_alignment"]], "bio.alignio.stockholmio": [[66, "module-Bio.AlignIO.StockholmIO"]], "stockholmiterator (class in bio.alignio.stockholmio)": [[66, "Bio.AlignIO.StockholmIO.StockholmIterator"]], "stockholmwriter (class in bio.alignio.stockholmio)": [[66, "Bio.AlignIO.StockholmIO.StockholmWriter"]], "__next__() (bio.alignio.stockholmio.stockholmiterator method)": [[66, "Bio.AlignIO.StockholmIO.StockholmIterator.__next__"]], "pfam_gc_mapping (bio.alignio.stockholmio.stockholmiterator attribute)": [[66, "Bio.AlignIO.StockholmIO.StockholmIterator.pfam_gc_mapping"]], "pfam_gc_mapping (bio.alignio.stockholmio.stockholmwriter attribute)": [[66, "Bio.AlignIO.StockholmIO.StockholmWriter.pfam_gc_mapping"]], "pfam_gr_mapping (bio.alignio.stockholmio.stockholmiterator attribute)": [[66, "Bio.AlignIO.StockholmIO.StockholmIterator.pfam_gr_mapping"]], "pfam_gr_mapping (bio.alignio.stockholmio.stockholmwriter attribute)": [[66, "Bio.AlignIO.StockholmIO.StockholmWriter.pfam_gr_mapping"]], "pfam_gs_mapping (bio.alignio.stockholmio.stockholmiterator attribute)": [[66, "Bio.AlignIO.StockholmIO.StockholmIterator.pfam_gs_mapping"]], "pfam_gs_mapping (bio.alignio.stockholmio.stockholmwriter attribute)": [[66, "Bio.AlignIO.StockholmIO.StockholmWriter.pfam_gs_mapping"]], "write_alignment() (bio.alignio.stockholmio.stockholmwriter method)": [[66, "Bio.AlignIO.StockholmIO.StockholmWriter.write_alignment"]], "abstractcommandline (class in bio.application)": [[67, "Bio.Application.AbstractCommandline"]], "applicationerror": [[67, "Bio.Application.ApplicationError"]], "bio.application": [[67, "module-Bio.Application"]], "__call__() (bio.application.abstractcommandline method)": [[67, "Bio.Application.AbstractCommandline.__call__"]], "__init__() (bio.application.abstractcommandline method)": [[67, "Bio.Application.AbstractCommandline.__init__"]], "__init__() (bio.application.applicationerror method)": [[67, "Bio.Application.ApplicationError.__init__"]], "__repr__() (bio.application.abstractcommandline method)": [[67, "Bio.Application.AbstractCommandline.__repr__"]], "__repr__() (bio.application.applicationerror method)": [[67, "Bio.Application.ApplicationError.__repr__"]], "__setattr__() (bio.application.abstractcommandline method)": [[67, "Bio.Application.AbstractCommandline.__setattr__"]], "__str__() (bio.application.abstractcommandline method)": [[67, "Bio.Application.AbstractCommandline.__str__"]], "__str__() (bio.application.applicationerror method)": [[67, "Bio.Application.ApplicationError.__str__"]], "parameters (bio.application.abstractcommandline attribute)": [[67, "Bio.Application.AbstractCommandline.parameters"]], "set_parameter() (bio.application.abstractcommandline method)": [[67, "Bio.Application.AbstractCommandline.set_parameter"]], "bio.blast": [[68, "module-Bio.Blast"]], "corruptedxmlerror": [[68, "Bio.Blast.CorruptedXMLError"], [84, "Bio.Entrez.Parser.CorruptedXMLError"]], "hsp (class in bio.blast)": [[68, "Bio.Blast.HSP"]], "hit (class in bio.blast)": [[68, "Bio.Blast.Hit"]], "notxmlerror": [[68, "Bio.Blast.NotXMLError"], [84, "Bio.Entrez.Parser.NotXMLError"]], "record (class in bio.blast)": [[68, "Bio.Blast.Record"]], "records (class in bio.blast)": [[68, "Bio.Blast.Records"]], "__abstractmethods__ (bio.blast.hit attribute)": [[68, "Bio.Blast.Hit.__abstractmethods__"]], "__abstractmethods__ (bio.blast.records attribute)": [[68, "Bio.Blast.Records.__abstractmethods__"]], "__contains__() (bio.blast.record method)": [[68, "Bio.Blast.Record.__contains__"]], "__enter__() (bio.blast.records method)": [[68, "Bio.Blast.Records.__enter__"]], "__exit__() (bio.blast.records method)": [[68, "Bio.Blast.Records.__exit__"]], "__getitem__() (bio.blast.hit method)": [[68, "Bio.Blast.Hit.__getitem__"]], "__getitem__() (bio.blast.record method)": [[68, "Bio.Blast.Record.__getitem__"]], "__getitem__() (bio.blast.records method)": [[68, "Bio.Blast.Records.__getitem__"]], "__init__() (bio.blast.corruptedxmlerror method)": [[68, "Bio.Blast.CorruptedXMLError.__init__"]], "__init__() (bio.blast.notxmlerror method)": [[68, "Bio.Blast.NotXMLError.__init__"]], "__init__() (bio.blast.record method)": [[68, "Bio.Blast.Record.__init__"]], "__init__() (bio.blast.records method)": [[68, "Bio.Blast.Records.__init__"]], "__iter__() (bio.blast.records method)": [[68, "Bio.Blast.Records.__iter__"]], "__next__() (bio.blast.records method)": [[68, "Bio.Blast.Records.__next__"]], "__repr__() (bio.blast.hsp method)": [[68, "Bio.Blast.HSP.__repr__"]], "__repr__() (bio.blast.hit method)": [[68, "Bio.Blast.Hit.__repr__"]], "__repr__() (bio.blast.record method)": [[68, "Bio.Blast.Record.__repr__"]], "__repr__() (bio.blast.records method)": [[68, "Bio.Blast.Records.__repr__"]], "__str__() (bio.blast.corruptedxmlerror method)": [[68, "Bio.Blast.CorruptedXMLError.__str__"]], "__str__() (bio.blast.hsp method)": [[68, "Bio.Blast.HSP.__str__"]], "__str__() (bio.blast.hit method)": [[68, "Bio.Blast.Hit.__str__"]], "__str__() (bio.blast.notxmlerror method)": [[68, "Bio.Blast.NotXMLError.__str__"]], "__str__() (bio.blast.record method)": [[68, "Bio.Blast.Record.__str__"]], "__str__() (bio.blast.records method)": [[68, "Bio.Blast.Records.__str__"]], "data (bio.blast.records property)": [[68, "Bio.Blast.Records.data"]], "index() (bio.blast.record method)": [[68, "Bio.Blast.Record.index"]], "keys() (bio.blast.record method)": [[68, "Bio.Blast.Record.keys"]], "parse() (in module bio.blast)": [[68, "Bio.Blast.parse"]], "qblast() (in module bio.blast)": [[68, "Bio.Blast.qblast"]], "read() (in module bio.blast)": [[68, "Bio.Blast.read"]], "write() (in module bio.blast)": [[68, "Bio.Blast.write"]], "bio.blast.applications": [[69, "module-Bio.Blast.Applications"]], "ncbiblastformattercommandline (class in bio.blast.applications)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline"]], "ncbiblastncommandline (class in bio.blast.applications)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline"]], "ncbiblastpcommandline (class in bio.blast.applications)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline"]], "ncbiblastxcommandline (class in bio.blast.applications)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline"]], "ncbideltablastcommandline (class in bio.blast.applications)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline"]], "ncbimakeblastdbcommandline (class in bio.blast.applications)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline"]], "ncbipsiblastcommandline (class in bio.blast.applications)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline"]], "ncbirpsblastcommandline (class in bio.blast.applications)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline"]], "ncbirpstblastncommandline (class in bio.blast.applications)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline"]], "ncbitblastncommandline (class in bio.blast.applications)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline"]], "ncbitblastxcommandline (class in bio.blast.applications)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline"]], "__init__() (bio.blast.applications.ncbiblastformattercommandline method)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.__init__"]], "__init__() (bio.blast.applications.ncbiblastncommandline method)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.__init__"]], "__init__() (bio.blast.applications.ncbiblastpcommandline method)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.__init__"]], "__init__() (bio.blast.applications.ncbiblastxcommandline method)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.__init__"]], "__init__() (bio.blast.applications.ncbideltablastcommandline method)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.__init__"]], "__init__() (bio.blast.applications.ncbimakeblastdbcommandline method)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.__init__"]], "__init__() (bio.blast.applications.ncbipsiblastcommandline method)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.__init__"]], "__init__() (bio.blast.applications.ncbirpsblastcommandline method)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.__init__"]], "__init__() (bio.blast.applications.ncbirpstblastncommandline method)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.__init__"]], "__init__() (bio.blast.applications.ncbitblastncommandline method)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.__init__"]], "__init__() (bio.blast.applications.ncbitblastxcommandline method)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.__init__"]], "archive (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.archive"]], "best_hit_overhang (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.best_hit_overhang"]], "best_hit_overhang (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.best_hit_overhang"]], "best_hit_overhang (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.best_hit_overhang"]], "best_hit_overhang (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.best_hit_overhang"]], "best_hit_overhang (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.best_hit_overhang"]], "best_hit_overhang (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.best_hit_overhang"]], "best_hit_overhang (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.best_hit_overhang"]], "best_hit_overhang (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.best_hit_overhang"]], "best_hit_score_edge (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.best_hit_score_edge"]], "best_hit_score_edge (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.best_hit_score_edge"]], "best_hit_score_edge (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.best_hit_score_edge"]], "best_hit_score_edge (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.best_hit_score_edge"]], "best_hit_score_edge (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.best_hit_score_edge"]], "best_hit_score_edge (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.best_hit_score_edge"]], "best_hit_score_edge (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.best_hit_score_edge"]], "best_hit_score_edge (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.best_hit_score_edge"]], "blastdb_version (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.blastdb_version"]], "comp_based_stats (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.comp_based_stats"]], "comp_based_stats (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.comp_based_stats"]], "comp_based_stats (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.comp_based_stats"]], "comp_based_stats (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.comp_based_stats"]], "comp_based_stats (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.comp_based_stats"]], "comp_based_stats (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.comp_based_stats"]], "comp_based_stats (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.comp_based_stats"]], "culling_limit (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.culling_limit"]], "culling_limit (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.culling_limit"]], "culling_limit (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.culling_limit"]], "culling_limit (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.culling_limit"]], "culling_limit (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.culling_limit"]], "culling_limit (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.culling_limit"]], "culling_limit (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.culling_limit"]], "culling_limit (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.culling_limit"]], "db (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.db"]], "db (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.db"]], "db (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.db"]], "db (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.db"]], "db (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.db"]], "db (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.db"]], "db (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.db"]], "db (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.db"]], "db (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.db"]], "db_gencode (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.db_gencode"]], "db_gencode (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.db_gencode"]], "db_hard_mask (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.db_hard_mask"]], "db_hard_mask (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.db_hard_mask"]], "db_hard_mask (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.db_hard_mask"]], "db_hard_mask (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.db_hard_mask"]], "db_hard_mask (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.db_hard_mask"]], "db_soft_mask (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.db_soft_mask"]], "db_soft_mask (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.db_soft_mask"]], "db_soft_mask (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.db_soft_mask"]], "db_soft_mask (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.db_soft_mask"]], "db_soft_mask (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.db_soft_mask"]], "dbsize (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.dbsize"]], "dbsize (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.dbsize"]], "dbsize (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.dbsize"]], "dbsize (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.dbsize"]], "dbsize (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.dbsize"]], "dbsize (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.dbsize"]], "dbsize (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.dbsize"]], "dbsize (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.dbsize"]], "dbsize (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.dbsize"]], "dbtype (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.dbtype"]], "domain_inclusion_ethresh (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.domain_inclusion_ethresh"]], "dust (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.dust"]], "entrez_query (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.entrez_query"]], "entrez_query (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.entrez_query"]], "entrez_query (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.entrez_query"]], "entrez_query (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.entrez_query"]], "entrez_query (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.entrez_query"]], "entrez_query (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.entrez_query"]], "entrez_query (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.entrez_query"]], "entrez_query (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.entrez_query"]], "entrez_query (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.entrez_query"]], "evalue (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.evalue"]], "evalue (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.evalue"]], "evalue (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.evalue"]], "evalue (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.evalue"]], "evalue (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.evalue"]], "evalue (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.evalue"]], "evalue (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.evalue"]], "evalue (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.evalue"]], "evalue (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.evalue"]], "export_search_strategy (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.export_search_strategy"]], "export_search_strategy (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.export_search_strategy"]], "export_search_strategy (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.export_search_strategy"]], "export_search_strategy (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.export_search_strategy"]], "export_search_strategy (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.export_search_strategy"]], "export_search_strategy (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.export_search_strategy"]], "export_search_strategy (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.export_search_strategy"]], "export_search_strategy (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.export_search_strategy"]], "export_search_strategy (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.export_search_strategy"]], "filtering_db (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.filtering_db"]], "frame_shift_penalty (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.frame_shift_penalty"]], "frame_shift_penalty (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.frame_shift_penalty"]], "gap_trigger (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.gap_trigger"]], "gap_trigger (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.gap_trigger"]], "gapextend (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.gapextend"]], "gapextend (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.gapextend"]], "gapextend (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.gapextend"]], "gapextend (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.gapextend"]], "gapextend (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.gapextend"]], "gapextend (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.gapextend"]], "gapextend (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.gapextend"]], "gapopen (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.gapopen"]], "gapopen (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.gapopen"]], "gapopen (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.gapopen"]], "gapopen (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.gapopen"]], "gapopen (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.gapopen"]], "gapopen (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.gapopen"]], "gapopen (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.gapopen"]], "gi_mask (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.gi_mask"]], "gi_mask_name (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.gi_mask_name"]], "gilist (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.gilist"]], "gilist (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.gilist"]], "gilist (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.gilist"]], "gilist (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.gilist"]], "gilist (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.gilist"]], "gilist (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.gilist"]], "gilist (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.gilist"]], "gilist (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.gilist"]], "gilist (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.gilist"]], "h (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.h"]], "h (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.h"]], "h (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.h"]], "h (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.h"]], "h (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.h"]], "h (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.h"]], "h (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.h"]], "h (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.h"]], "h (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.h"]], "h (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.h"]], "h (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.h"]], "hash_index (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.hash_index"]], "help (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.help"]], "help (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.help"]], "help (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.help"]], "help (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.help"]], "help (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.help"]], "help (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.help"]], "help (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.help"]], "help (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.help"]], "help (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.help"]], "help (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.help"]], "help (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.help"]], "html (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.html"]], "html (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.html"]], "html (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.html"]], "html (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.html"]], "html (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.html"]], "html (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.html"]], "html (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.html"]], "html (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.html"]], "html (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.html"]], "html (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.html"]], "ignore_msa_master (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.ignore_msa_master"]], "import_search_strategy (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.import_search_strategy"]], "import_search_strategy (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.import_search_strategy"]], "import_search_strategy (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.import_search_strategy"]], "import_search_strategy (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.import_search_strategy"]], "import_search_strategy (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.import_search_strategy"]], "import_search_strategy (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.import_search_strategy"]], "import_search_strategy (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.import_search_strategy"]], "import_search_strategy (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.import_search_strategy"]], "import_search_strategy (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.import_search_strategy"]], "in_msa (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.in_msa"]], "in_pssm (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.in_pssm"]], "in_pssm (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.in_pssm"]], "inclusion_ethresh (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.inclusion_ethresh"]], "inclusion_ethresh (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.inclusion_ethresh"]], "index_name (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.index_name"]], "input_file (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.input_file"]], "input_type (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.input_type"]], "lcase_masking (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.lcase_masking"]], "lcase_masking (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.lcase_masking"]], "lcase_masking (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.lcase_masking"]], "lcase_masking (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.lcase_masking"]], "lcase_masking (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.lcase_masking"]], "lcase_masking (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.lcase_masking"]], "lcase_masking (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.lcase_masking"]], "lcase_masking (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.lcase_masking"]], "lcase_masking (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.lcase_masking"]], "line_length (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.line_length"]], "line_length (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.line_length"]], "line_length (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.line_length"]], "line_length (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.line_length"]], "line_length (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.line_length"]], "line_length (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.line_length"]], "line_length (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.line_length"]], "line_length (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.line_length"]], "line_length (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.line_length"]], "line_length (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.line_length"]], "logfile (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.logfile"]], "mask_data (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.mask_data"]], "mask_desc (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.mask_desc"]], "mask_id (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.mask_id"]], "matrix (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.matrix"]], "matrix (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.matrix"]], "matrix (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.matrix"]], "matrix (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.matrix"]], "matrix (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.matrix"]], "matrix (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.matrix"]], "max_file_sz (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.max_file_sz"]], "max_hsps (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.max_hsps"]], "max_hsps (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.max_hsps"]], "max_hsps (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.max_hsps"]], "max_hsps (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.max_hsps"]], "max_hsps (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.max_hsps"]], "max_hsps (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.max_hsps"]], "max_hsps (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.max_hsps"]], "max_hsps (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.max_hsps"]], "max_hsps (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.max_hsps"]], "max_hsps_per_subject (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.max_hsps_per_subject"]], "max_hsps_per_subject (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.max_hsps_per_subject"]], "max_hsps_per_subject (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.max_hsps_per_subject"]], "max_hsps_per_subject (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.max_hsps_per_subject"]], "max_hsps_per_subject (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.max_hsps_per_subject"]], "max_hsps_per_subject (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.max_hsps_per_subject"]], "max_hsps_per_subject (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.max_hsps_per_subject"]], "max_hsps_per_subject (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.max_hsps_per_subject"]], "max_hsps_per_subject (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.max_hsps_per_subject"]], "max_intron_length (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.max_intron_length"]], "max_intron_length (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.max_intron_length"]], "max_intron_length (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.max_intron_length"]], "max_target_seqs (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.max_target_seqs"]], "max_target_seqs (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.max_target_seqs"]], "max_target_seqs (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.max_target_seqs"]], "max_target_seqs (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.max_target_seqs"]], "max_target_seqs (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.max_target_seqs"]], "max_target_seqs (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.max_target_seqs"]], "max_target_seqs (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.max_target_seqs"]], "max_target_seqs (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.max_target_seqs"]], "max_target_seqs (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.max_target_seqs"]], "max_target_seqs (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.max_target_seqs"]], "min_raw_gapped_score (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.min_raw_gapped_score"]], "msa_master_idx (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.msa_master_idx"]], "negative_gilist (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.negative_gilist"]], "negative_gilist (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.negative_gilist"]], "negative_gilist (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.negative_gilist"]], "negative_gilist (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.negative_gilist"]], "negative_gilist (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.negative_gilist"]], "negative_gilist (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.negative_gilist"]], "negative_gilist (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.negative_gilist"]], "negative_gilist (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.negative_gilist"]], "negative_gilist (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.negative_gilist"]], "negative_seqidlist (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.negative_seqidlist"]], "negative_seqidlist (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.negative_seqidlist"]], "negative_seqidlist (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.negative_seqidlist"]], "negative_seqidlist (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.negative_seqidlist"]], "negative_seqidlist (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.negative_seqidlist"]], "negative_seqidlist (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.negative_seqidlist"]], "negative_seqidlist (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.negative_seqidlist"]], "negative_seqidlist (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.negative_seqidlist"]], "negative_seqidlist (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.negative_seqidlist"]], "no_greedy (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.no_greedy"]], "num_alignments (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.num_alignments"]], "num_alignments (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.num_alignments"]], "num_alignments (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.num_alignments"]], "num_alignments (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.num_alignments"]], "num_alignments (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.num_alignments"]], "num_alignments (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.num_alignments"]], "num_alignments (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.num_alignments"]], "num_alignments (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.num_alignments"]], "num_alignments (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.num_alignments"]], "num_alignments (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.num_alignments"]], "num_descriptions (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.num_descriptions"]], "num_descriptions (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.num_descriptions"]], "num_descriptions (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.num_descriptions"]], "num_descriptions (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.num_descriptions"]], "num_descriptions (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.num_descriptions"]], "num_descriptions (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.num_descriptions"]], "num_descriptions (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.num_descriptions"]], "num_descriptions (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.num_descriptions"]], "num_descriptions (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.num_descriptions"]], "num_descriptions (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.num_descriptions"]], "num_iterations (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.num_iterations"]], "num_iterations (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.num_iterations"]], "num_threads (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.num_threads"]], "num_threads (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.num_threads"]], "num_threads (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.num_threads"]], "num_threads (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.num_threads"]], "num_threads (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.num_threads"]], "num_threads (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.num_threads"]], "num_threads (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.num_threads"]], "num_threads (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.num_threads"]], "num_threads (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.num_threads"]], "off_diagonal_range (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.off_diagonal_range"]], "out (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.out"]], "out (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.out"]], "out (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.out"]], "out (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.out"]], "out (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.out"]], "out (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.out"]], "out (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.out"]], "out (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.out"]], "out (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.out"]], "out (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.out"]], "out (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.out"]], "out_ascii_pssm (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.out_ascii_pssm"]], "out_ascii_pssm (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.out_ascii_pssm"]], "out_pssm (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.out_pssm"]], "out_pssm (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.out_pssm"]], "outfmt (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.outfmt"]], "outfmt (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.outfmt"]], "outfmt (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.outfmt"]], "outfmt (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.outfmt"]], "outfmt (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.outfmt"]], "outfmt (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.outfmt"]], "outfmt (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.outfmt"]], "outfmt (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.outfmt"]], "outfmt (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.outfmt"]], "outfmt (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.outfmt"]], "parse_deflines (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.parse_deflines"]], "parse_deflines (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.parse_deflines"]], "parse_deflines (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.parse_deflines"]], "parse_deflines (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.parse_deflines"]], "parse_deflines (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.parse_deflines"]], "parse_deflines (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.parse_deflines"]], "parse_deflines (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.parse_deflines"]], "parse_deflines (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.parse_deflines"]], "parse_deflines (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.parse_deflines"]], "parse_deflines (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.parse_deflines"]], "parse_seqids (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.parse_seqids"]], "penalty (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.penalty"]], "perc_identity (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.perc_identity"]], "phi_pattern (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.phi_pattern"]], "pseudocount (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.pseudocount"]], "pseudocount (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.pseudocount"]], "qcov_hsp_perc (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.qcov_hsp_perc"]], "qcov_hsp_perc (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.qcov_hsp_perc"]], "qcov_hsp_perc (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.qcov_hsp_perc"]], "qcov_hsp_perc (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.qcov_hsp_perc"]], "qcov_hsp_perc (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.qcov_hsp_perc"]], "qcov_hsp_perc (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.qcov_hsp_perc"]], "qcov_hsp_perc (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.qcov_hsp_perc"]], "qcov_hsp_perc (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.qcov_hsp_perc"]], "qcov_hsp_perc (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.qcov_hsp_perc"]], "query (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.query"]], "query (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.query"]], "query (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.query"]], "query (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.query"]], "query (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.query"]], "query (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.query"]], "query (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.query"]], "query (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.query"]], "query (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.query"]], "query_gencode (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.query_gencode"]], "query_gencode (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.query_gencode"]], "query_gencode (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.query_gencode"]], "query_loc (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.query_loc"]], "query_loc (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.query_loc"]], "query_loc (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.query_loc"]], "query_loc (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.query_loc"]], "query_loc (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.query_loc"]], "query_loc (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.query_loc"]], "query_loc (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.query_loc"]], "query_loc (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.query_loc"]], "query_loc (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.query_loc"]], "remote (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.remote"]], "remote (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.remote"]], "remote (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.remote"]], "remote (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.remote"]], "remote (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.remote"]], "remote (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.remote"]], "remote (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.remote"]], "remote (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.remote"]], "remote (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.remote"]], "reward (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.reward"]], "rid (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.rid"]], "rpsdb (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.rpsdb"]], "save_each_pssm (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.save_each_pssm"]], "save_each_pssm (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.save_each_pssm"]], "save_pssm_after_last_round (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.save_pssm_after_last_round"]], "save_pssm_after_last_round (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.save_pssm_after_last_round"]], "searchsp (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.searchsp"]], "searchsp (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.searchsp"]], "searchsp (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.searchsp"]], "searchsp (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.searchsp"]], "searchsp (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.searchsp"]], "searchsp (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.searchsp"]], "searchsp (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.searchsp"]], "searchsp (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.searchsp"]], "searchsp (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.searchsp"]], "seg (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.seg"]], "seg (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.seg"]], "seg (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.seg"]], "seg (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.seg"]], "seg (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.seg"]], "seg (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.seg"]], "seg (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.seg"]], "seg (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.seg"]], "seqidlist (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.seqidlist"]], "seqidlist (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.seqidlist"]], "seqidlist (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.seqidlist"]], "seqidlist (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.seqidlist"]], "seqidlist (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.seqidlist"]], "seqidlist (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.seqidlist"]], "seqidlist (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.seqidlist"]], "seqidlist (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.seqidlist"]], "seqidlist (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.seqidlist"]], "show_domain_hits (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.show_domain_hits"]], "show_gis (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.show_gis"]], "show_gis (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.show_gis"]], "show_gis (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.show_gis"]], "show_gis (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.show_gis"]], "show_gis (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.show_gis"]], "show_gis (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.show_gis"]], "show_gis (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.show_gis"]], "show_gis (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.show_gis"]], "show_gis (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.show_gis"]], "show_gis (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.show_gis"]], "soft_masking (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.soft_masking"]], "soft_masking (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.soft_masking"]], "soft_masking (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.soft_masking"]], "soft_masking (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.soft_masking"]], "soft_masking (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.soft_masking"]], "soft_masking (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.soft_masking"]], "soft_masking (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.soft_masking"]], "soft_masking (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.soft_masking"]], "soft_masking (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.soft_masking"]], "strand (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.strand"]], "strand (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.strand"]], "strand (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.strand"]], "strand (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.strand"]], "subject (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.subject"]], "subject (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.subject"]], "subject (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.subject"]], "subject (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.subject"]], "subject (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.subject"]], "subject (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.subject"]], "subject (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.subject"]], "subject_loc (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.subject_loc"]], "subject_loc (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.subject_loc"]], "subject_loc (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.subject_loc"]], "subject_loc (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.subject_loc"]], "subject_loc (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.subject_loc"]], "subject_loc (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.subject_loc"]], "subject_loc (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.subject_loc"]], "sum_statistics (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.sum_statistics"]], "sum_statistics (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.sum_statistics"]], "sum_statistics (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.sum_statistics"]], "sum_statistics (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.sum_statistics"]], "sum_statistics (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.sum_statistics"]], "sum_statistics (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.sum_statistics"]], "sum_statistics (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.sum_statistics"]], "sum_statistics (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.sum_statistics"]], "sum_statistics (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.sum_statistics"]], "sum_stats (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.sum_stats"]], "sum_stats (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.sum_stats"]], "sum_stats (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.sum_stats"]], "sum_stats (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.sum_stats"]], "sum_stats (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.sum_stats"]], "sum_stats (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.sum_stats"]], "sum_stats (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.sum_stats"]], "sum_stats (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.sum_stats"]], "sum_stats (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.sum_stats"]], "task (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.task"]], "task (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.task"]], "task (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.task"]], "task (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.task"]], "taxid (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.taxid"]], "taxid_map (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.taxid_map"]], "template_length (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.template_length"]], "template_type (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.template_type"]], "threshold (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.threshold"]], "threshold (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.threshold"]], "threshold (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.threshold"]], "threshold (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.threshold"]], "threshold (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.threshold"]], "threshold (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.threshold"]], "title (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.title"]], "ungapped (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.ungapped"]], "ungapped (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.ungapped"]], "ungapped (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.ungapped"]], "ungapped (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.ungapped"]], "ungapped (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.ungapped"]], "use_index (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.use_index"]], "use_sw_tback (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.use_sw_tback"]], "use_sw_tback (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.use_sw_tback"]], "use_sw_tback (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.use_sw_tback"]], "use_sw_tback (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.use_sw_tback"]], "use_sw_tback (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.use_sw_tback"]], "use_sw_tback (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.use_sw_tback"]], "use_sw_tback (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.use_sw_tback"]], "version (bio.blast.applications.ncbiblastformattercommandline property)": [[69, "Bio.Blast.Applications.NcbiblastformatterCommandline.version"]], "version (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.version"]], "version (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.version"]], "version (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.version"]], "version (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.version"]], "version (bio.blast.applications.ncbimakeblastdbcommandline property)": [[69, "Bio.Blast.Applications.NcbimakeblastdbCommandline.version"]], "version (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.version"]], "version (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.version"]], "version (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.version"]], "version (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.version"]], "version (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.version"]], "window_masker_db (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.window_masker_db"]], "window_masker_taxid (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.window_masker_taxid"]], "window_size (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.window_size"]], "window_size (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.window_size"]], "window_size (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.window_size"]], "window_size (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.window_size"]], "window_size (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.window_size"]], "window_size (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.window_size"]], "window_size (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.window_size"]], "window_size (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.window_size"]], "window_size (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.window_size"]], "word_size (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.word_size"]], "word_size (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.word_size"]], "word_size (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.word_size"]], "word_size (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.word_size"]], "word_size (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.word_size"]], "word_size (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.word_size"]], "word_size (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.word_size"]], "word_size (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.word_size"]], "word_size (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.word_size"]], "xdrop_gap (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.xdrop_gap"]], "xdrop_gap (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.xdrop_gap"]], "xdrop_gap (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.xdrop_gap"]], "xdrop_gap (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.xdrop_gap"]], "xdrop_gap (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.xdrop_gap"]], "xdrop_gap (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.xdrop_gap"]], "xdrop_gap (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.xdrop_gap"]], "xdrop_gap (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.xdrop_gap"]], "xdrop_gap (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.xdrop_gap"]], "xdrop_gap_final (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.xdrop_gap_final"]], "xdrop_gap_final (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.xdrop_gap_final"]], "xdrop_gap_final (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.xdrop_gap_final"]], "xdrop_gap_final (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.xdrop_gap_final"]], "xdrop_gap_final (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.xdrop_gap_final"]], "xdrop_gap_final (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.xdrop_gap_final"]], "xdrop_gap_final (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.xdrop_gap_final"]], "xdrop_gap_final (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.xdrop_gap_final"]], "xdrop_gap_final (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.xdrop_gap_final"]], "xdrop_ungap (bio.blast.applications.ncbiblastncommandline property)": [[69, "Bio.Blast.Applications.NcbiblastnCommandline.xdrop_ungap"]], "xdrop_ungap (bio.blast.applications.ncbiblastpcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastpCommandline.xdrop_ungap"]], "xdrop_ungap (bio.blast.applications.ncbiblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbiblastxCommandline.xdrop_ungap"]], "xdrop_ungap (bio.blast.applications.ncbideltablastcommandline property)": [[69, "Bio.Blast.Applications.NcbideltablastCommandline.xdrop_ungap"]], "xdrop_ungap (bio.blast.applications.ncbipsiblastcommandline property)": [[69, "Bio.Blast.Applications.NcbipsiblastCommandline.xdrop_ungap"]], "xdrop_ungap (bio.blast.applications.ncbirpsblastcommandline property)": [[69, "Bio.Blast.Applications.NcbirpsblastCommandline.xdrop_ungap"]], "xdrop_ungap (bio.blast.applications.ncbirpstblastncommandline property)": [[69, "Bio.Blast.Applications.NcbirpstblastnCommandline.xdrop_ungap"]], "xdrop_ungap (bio.blast.applications.ncbitblastncommandline property)": [[69, "Bio.Blast.Applications.NcbitblastnCommandline.xdrop_ungap"]], "xdrop_ungap (bio.blast.applications.ncbitblastxcommandline property)": [[69, "Bio.Blast.Applications.NcbitblastxCommandline.xdrop_ungap"]], "bio.blast.ncbiwww": [[70, "module-Bio.Blast.NCBIWWW"]], "qblast() (in module bio.blast.ncbiwww)": [[70, "Bio.Blast.NCBIWWW.qblast"]], "alignment (class in bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.Alignment"]], "bio.blast.ncbixml": [[71, "module-Bio.Blast.NCBIXML"]], "blast (class in bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.Blast"]], "blastparser (class in bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.BlastParser"]], "databasereport (class in bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.DatabaseReport"]], "description (class in bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.Description"]], "descriptionext (class in bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.DescriptionExt"]], "descriptionextitem (class in bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.DescriptionExtItem"]], "hsp (class in bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.HSP"]], "header (class in bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.Header"]], "multiplealignment (class in bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.MultipleAlignment"]], "psiblast (class in bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.PSIBlast"]], "parameters (class in bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.Parameters"]], "round (class in bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.Round"]], "__init__() (bio.blast.ncbixml.alignment method)": [[71, "Bio.Blast.NCBIXML.Alignment.__init__"]], "__init__() (bio.blast.ncbixml.blast method)": [[71, "Bio.Blast.NCBIXML.Blast.__init__"]], "__init__() (bio.blast.ncbixml.blastparser method)": [[71, "Bio.Blast.NCBIXML.BlastParser.__init__"]], "__init__() (bio.blast.ncbixml.databasereport method)": [[71, "Bio.Blast.NCBIXML.DatabaseReport.__init__"]], "__init__() (bio.blast.ncbixml.description method)": [[71, "Bio.Blast.NCBIXML.Description.__init__"]], "__init__() (bio.blast.ncbixml.descriptionext method)": [[71, "Bio.Blast.NCBIXML.DescriptionExt.__init__"]], "__init__() (bio.blast.ncbixml.descriptionextitem method)": [[71, "Bio.Blast.NCBIXML.DescriptionExtItem.__init__"]], "__init__() (bio.blast.ncbixml.hsp method)": [[71, "Bio.Blast.NCBIXML.HSP.__init__"]], "__init__() (bio.blast.ncbixml.header method)": [[71, "Bio.Blast.NCBIXML.Header.__init__"]], "__init__() (bio.blast.ncbixml.multiplealignment method)": [[71, "Bio.Blast.NCBIXML.MultipleAlignment.__init__"]], "__init__() (bio.blast.ncbixml.psiblast method)": [[71, "Bio.Blast.NCBIXML.PSIBlast.__init__"]], "__init__() (bio.blast.ncbixml.parameters method)": [[71, "Bio.Blast.NCBIXML.Parameters.__init__"]], "__init__() (bio.blast.ncbixml.round method)": [[71, "Bio.Blast.NCBIXML.Round.__init__"]], "__str__() (bio.blast.ncbixml.alignment method)": [[71, "Bio.Blast.NCBIXML.Alignment.__str__"]], "__str__() (bio.blast.ncbixml.description method)": [[71, "Bio.Blast.NCBIXML.Description.__str__"]], "__str__() (bio.blast.ncbixml.descriptionextitem method)": [[71, "Bio.Blast.NCBIXML.DescriptionExtItem.__str__"]], "__str__() (bio.blast.ncbixml.hsp method)": [[71, "Bio.Blast.NCBIXML.HSP.__str__"]], "append_item() (bio.blast.ncbixml.descriptionext method)": [[71, "Bio.Blast.NCBIXML.DescriptionExt.append_item"]], "fmt_() (in module bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.fmt_"]], "parse() (in module bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.parse"]], "read() (in module bio.blast.ncbixml)": [[71, "Bio.Blast.NCBIXML.read"]], "reset() (bio.blast.ncbixml.blastparser method)": [[71, "Bio.Blast.NCBIXML.BlastParser.reset"]], "set_hit_accession() (bio.blast.ncbixml.blastparser method)": [[71, "Bio.Blast.NCBIXML.BlastParser.set_hit_accession"]], "set_hit_def() (bio.blast.ncbixml.blastparser method)": [[71, "Bio.Blast.NCBIXML.BlastParser.set_hit_def"]], "set_hit_id() (bio.blast.ncbixml.blastparser method)": [[71, "Bio.Blast.NCBIXML.BlastParser.set_hit_id"]], "set_hit_len() (bio.blast.ncbixml.blastparser method)": [[71, "Bio.Blast.NCBIXML.BlastParser.set_hit_len"]], "to_generic() (bio.blast.ncbixml.multiplealignment method)": [[71, "Bio.Blast.NCBIXML.MultipleAlignment.to_generic"]], "alignmenthasdifferentlengthserror": [[72, "Bio.CAPS.AlignmentHasDifferentLengthsError"]], "bio.caps": [[72, "module-Bio.CAPS"]], "capsmap (class in bio.caps)": [[72, "Bio.CAPS.CAPSMap"]], "differentialcutsite (class in bio.caps)": [[72, "Bio.CAPS.DifferentialCutsite"]], "__init__() (bio.caps.capsmap method)": [[72, "Bio.CAPS.CAPSMap.__init__"]], "__init__() (bio.caps.differentialcutsite method)": [[72, "Bio.CAPS.DifferentialCutsite.__init__"]], "bio.cluster": [[73, "module-Bio.Cluster"]], "node (class in bio.cluster)": [[73, "Bio.Cluster.Node"]], "record (class in bio.cluster)": [[73, "Bio.Cluster.Record"]], "tree (class in bio.cluster)": [[73, "Bio.Cluster.Tree"]], "__init__() (bio.cluster.record method)": [[73, "Bio.Cluster.Record.__init__"]], "clustercentroids() (bio.cluster.record method)": [[73, "Bio.Cluster.Record.clustercentroids"]], "clustercentroids() (in module bio.cluster)": [[73, "Bio.Cluster.clustercentroids"]], "clusterdistance() (bio.cluster.record method)": [[73, "Bio.Cluster.Record.clusterdistance"]], "clusterdistance() (in module bio.cluster)": [[73, "Bio.Cluster.clusterdistance"]], "cut() (bio.cluster.tree method)": [[73, "Bio.Cluster.Tree.cut"]], "distancematrix() (bio.cluster.record method)": [[73, "Bio.Cluster.Record.distancematrix"]], "distancematrix() (in module bio.cluster)": [[73, "Bio.Cluster.distancematrix"]], "kcluster() (bio.cluster.record method)": [[73, "Bio.Cluster.Record.kcluster"]], "kcluster() (in module bio.cluster)": [[73, "Bio.Cluster.kcluster"]], "kmedoids() (in module bio.cluster)": [[73, "Bio.Cluster.kmedoids"]], "pca() (in module bio.cluster)": [[73, "Bio.Cluster.pca"]], "read() (in module bio.cluster)": [[73, "Bio.Cluster.read"]], "save() (bio.cluster.record method)": [[73, "Bio.Cluster.Record.save"]], "somcluster() (bio.cluster.record method)": [[73, "Bio.Cluster.Record.somcluster"]], "somcluster() (in module bio.cluster)": [[73, "Bio.Cluster.somcluster"]], "sort() (bio.cluster.tree method)": [[73, "Bio.Cluster.Tree.sort"]], "treecluster() (bio.cluster.record method)": [[73, "Bio.Cluster.Record.treecluster"]], "treecluster() (in module bio.cluster)": [[73, "Bio.Cluster.treecluster"]], "bio.compass": [[74, "module-Bio.Compass"]], "record (class in bio.compass)": [[74, "Bio.Compass.Record"]], "__init__() (bio.compass.record method)": [[74, "Bio.Compass.Record.__init__"]], "hit_coverage() (bio.compass.record method)": [[74, "Bio.Compass.Record.hit_coverage"]], "parse() (in module bio.compass)": [[74, "Bio.Compass.parse"]], "query_coverage() (bio.compass.record method)": [[74, "Bio.Compass.Record.query_coverage"]], "read() (in module bio.compass)": [[74, "Bio.Compass.read"]], "bio.data": [[75, "module-Bio.Data"]], "ambiguouscodontable (class in bio.data.codontable)": [[76, "Bio.Data.CodonTable.AmbiguousCodonTable"]], "ambiguousforwardtable (class in bio.data.codontable)": [[76, "Bio.Data.CodonTable.AmbiguousForwardTable"]], "bio.data.codontable": [[76, "module-Bio.Data.CodonTable"]], "codontable (class in bio.data.codontable)": [[76, "Bio.Data.CodonTable.CodonTable"]], "ncbicodontable (class in bio.data.codontable)": [[76, "Bio.Data.CodonTable.NCBICodonTable"]], "ncbicodontabledna (class in bio.data.codontable)": [[76, "Bio.Data.CodonTable.NCBICodonTableDNA"]], "ncbicodontablerna (class in bio.data.codontable)": [[76, "Bio.Data.CodonTable.NCBICodonTableRNA"]], "translationerror": [[76, "Bio.Data.CodonTable.TranslationError"]], "__annotations__ (bio.data.codontable.codontable attribute)": [[76, "Bio.Data.CodonTable.CodonTable.__annotations__"]], "__annotations__ (bio.data.codontable.ncbicodontable attribute)": [[76, "Bio.Data.CodonTable.NCBICodonTable.__annotations__"]], "__contains__() (bio.data.codontable.ambiguousforwardtable method)": [[76, "Bio.Data.CodonTable.AmbiguousForwardTable.__contains__"]], "__getattr__() (bio.data.codontable.ambiguouscodontable method)": [[76, "Bio.Data.CodonTable.AmbiguousCodonTable.__getattr__"]], "__getitem__() (bio.data.codontable.ambiguousforwardtable method)": [[76, "Bio.Data.CodonTable.AmbiguousForwardTable.__getitem__"]], "__init__() (bio.data.codontable.ambiguouscodontable method)": [[76, "Bio.Data.CodonTable.AmbiguousCodonTable.__init__"]], "__init__() (bio.data.codontable.ambiguousforwardtable method)": [[76, "Bio.Data.CodonTable.AmbiguousForwardTable.__init__"]], "__init__() (bio.data.codontable.codontable method)": [[76, "Bio.Data.CodonTable.CodonTable.__init__"]], "__init__() (bio.data.codontable.ncbicodontable method)": [[76, "Bio.Data.CodonTable.NCBICodonTable.__init__"]], "__repr__() (bio.data.codontable.ncbicodontable method)": [[76, "Bio.Data.CodonTable.NCBICodonTable.__repr__"]], "__str__() (bio.data.codontable.codontable method)": [[76, "Bio.Data.CodonTable.CodonTable.__str__"]], "back_table (bio.data.codontable.codontable attribute)": [[76, "Bio.Data.CodonTable.CodonTable.back_table"]], "forward_table (bio.data.codontable.codontable attribute)": [[76, "Bio.Data.CodonTable.CodonTable.forward_table"]], "get() (bio.data.codontable.ambiguousforwardtable method)": [[76, "Bio.Data.CodonTable.AmbiguousForwardTable.get"]], "list_ambiguous_codons() (in module bio.data.codontable)": [[76, "Bio.Data.CodonTable.list_ambiguous_codons"]], "list_possible_proteins() (in module bio.data.codontable)": [[76, "Bio.Data.CodonTable.list_possible_proteins"]], "make_back_table() (in module bio.data.codontable)": [[76, "Bio.Data.CodonTable.make_back_table"]], "nucleotide_alphabet (bio.data.codontable.ncbicodontable attribute)": [[76, "Bio.Data.CodonTable.NCBICodonTable.nucleotide_alphabet"]], "nucleotide_alphabet (bio.data.codontable.ncbicodontabledna attribute)": [[76, "Bio.Data.CodonTable.NCBICodonTableDNA.nucleotide_alphabet"]], "nucleotide_alphabet (bio.data.codontable.ncbicodontablerna attribute)": [[76, "Bio.Data.CodonTable.NCBICodonTableRNA.nucleotide_alphabet"]], "protein_alphabet (bio.data.codontable.ncbicodontable attribute)": [[76, "Bio.Data.CodonTable.NCBICodonTable.protein_alphabet"]], "register_ncbi_table() (in module bio.data.codontable)": [[76, "Bio.Data.CodonTable.register_ncbi_table"]], "start_codons (bio.data.codontable.codontable attribute)": [[76, "Bio.Data.CodonTable.CodonTable.start_codons"]], "stop_codons (bio.data.codontable.codontable attribute)": [[76, "Bio.Data.CodonTable.CodonTable.stop_codons"]], "bio.data.iupacdata": [[77, "module-Bio.Data.IUPACData"]], "bio.data.pdbdata": [[78, "module-Bio.Data.PDBData"]], "bio.emboss": [[79, "module-Bio.Emboss"]], "bio.emboss.applications": [[80, "module-Bio.Emboss.Applications"]], "diffseqcommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.DiffseqCommandline"]], "einvertedcommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.EInvertedCommandline"]], "etandemcommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.ETandemCommandline"]], "est2genomecommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline"]], "fconsensecommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.FConsenseCommandline"]], "fdnadistcommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.FDNADistCommandline"]], "fdnaparscommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline"]], "fneighborcommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.FNeighborCommandline"]], "fprotdistcommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.FProtDistCommandline"]], "fprotparscommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.FProtParsCommandline"]], "fseqbootcommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline"]], "ftreedistcommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline"]], "fuzznuccommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.FuzznucCommandline"]], "fuzzprocommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.FuzzproCommandline"]], "iepcommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.IepCommandline"]], "needlecommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.NeedleCommandline"]], "needleallcommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.NeedleallCommandline"]], "palindromecommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.PalindromeCommandline"]], "primer3commandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.Primer3Commandline"]], "primersearchcommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline"]], "seqmatchallcommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline"]], "seqretcommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.SeqretCommandline"]], "stretchercommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.StretcherCommandline"]], "tranaligncommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.TranalignCommandline"]], "watercommandline (class in bio.emboss.applications)": [[80, "Bio.Emboss.Applications.WaterCommandline"]], "__init__() (bio.emboss.applications.diffseqcommandline method)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.__init__"]], "__init__() (bio.emboss.applications.einvertedcommandline method)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.__init__"]], "__init__() (bio.emboss.applications.etandemcommandline method)": [[80, "Bio.Emboss.Applications.ETandemCommandline.__init__"]], "__init__() (bio.emboss.applications.est2genomecommandline method)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.__init__"]], "__init__() (bio.emboss.applications.fconsensecommandline method)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.__init__"]], "__init__() (bio.emboss.applications.fdnadistcommandline method)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.__init__"]], "__init__() (bio.emboss.applications.fdnaparscommandline method)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.__init__"]], "__init__() (bio.emboss.applications.fneighborcommandline method)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.__init__"]], "__init__() (bio.emboss.applications.fprotdistcommandline method)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.__init__"]], "__init__() (bio.emboss.applications.fprotparscommandline method)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.__init__"]], "__init__() (bio.emboss.applications.fseqbootcommandline method)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.__init__"]], "__init__() (bio.emboss.applications.ftreedistcommandline method)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.__init__"]], "__init__() (bio.emboss.applications.fuzznuccommandline method)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.__init__"]], "__init__() (bio.emboss.applications.fuzzprocommandline method)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.__init__"]], "__init__() (bio.emboss.applications.iepcommandline method)": [[80, "Bio.Emboss.Applications.IepCommandline.__init__"]], "__init__() (bio.emboss.applications.needlecommandline method)": [[80, "Bio.Emboss.Applications.NeedleCommandline.__init__"]], "__init__() (bio.emboss.applications.needleallcommandline method)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.__init__"]], "__init__() (bio.emboss.applications.palindromecommandline method)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.__init__"]], "__init__() (bio.emboss.applications.primer3commandline method)": [[80, "Bio.Emboss.Applications.Primer3Commandline.__init__"]], "__init__() (bio.emboss.applications.primersearchcommandline method)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.__init__"]], "__init__() (bio.emboss.applications.seqmatchallcommandline method)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.__init__"]], "__init__() (bio.emboss.applications.seqretcommandline method)": [[80, "Bio.Emboss.Applications.SeqretCommandline.__init__"]], "__init__() (bio.emboss.applications.stretchercommandline method)": [[80, "Bio.Emboss.Applications.StretcherCommandline.__init__"]], "__init__() (bio.emboss.applications.tranaligncommandline method)": [[80, "Bio.Emboss.Applications.TranalignCommandline.__init__"]], "__init__() (bio.emboss.applications.watercommandline method)": [[80, "Bio.Emboss.Applications.WaterCommandline.__init__"]], "aacateg (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.aacateg"]], "aformat (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.aformat"]], "aformat (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.aformat"]], "aformat (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.aformat"]], "aformat (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.aformat"]], "aformat (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.aformat"]], "align (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.align"]], "amino (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.amino"]], "aoutfeat (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.aoutfeat"]], "asequence (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.asequence"]], "asequence (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.asequence"]], "asequence (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.asequence"]], "asequence (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.asequence"]], "asequence (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.asequence"]], "asequence (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.asequence"]], "auto (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.auto"]], "auto (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.auto"]], "auto (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.auto"]], "auto (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.auto"]], "auto (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.auto"]], "auto (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.auto"]], "auto (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.auto"]], "auto (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.auto"]], "auto (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.auto"]], "auto (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.auto"]], "auto (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.auto"]], "auto (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.auto"]], "auto (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.auto"]], "auto (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.auto"]], "auto (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.auto"]], "auto (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.auto"]], "auto (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.auto"]], "auto (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.auto"]], "auto (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.auto"]], "auto (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.auto"]], "auto (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.auto"]], "auto (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.auto"]], "auto (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.auto"]], "auto (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.auto"]], "auto (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.auto"]], "basefreq (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.basefreq"]], "basefreq (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.basefreq"]], "best (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.best"]], "blocksize (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.blocksize"]], "boutfeat (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.boutfeat"]], "brief (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.brief"]], "brief (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.brief"]], "brief (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.brief"]], "bsequence (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.bsequence"]], "bsequence (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.bsequence"]], "bsequence (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.bsequence"]], "bsequence (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.bsequence"]], "bsequence (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.bsequence"]], "bsequence (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.bsequence"]], "carboxyl (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.carboxyl"]], "categories (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.categories"]], "catergories (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.catergories"]], "catergories (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.catergories"]], "complement (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.complement"]], "datafile (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.datafile"]], "datafile (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.datafile"]], "datafile (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.datafile"]], "datafile (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.datafile"]], "datafile (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.datafile"]], "debug (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.debug"]], "debug (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.debug"]], "debug (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.debug"]], "debug (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.debug"]], "debug (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.debug"]], "debug (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.debug"]], "debug (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.debug"]], "debug (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.debug"]], "debug (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.debug"]], "debug (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.debug"]], "debug (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.debug"]], "debug (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.debug"]], "debug (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.debug"]], "debug (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.debug"]], "debug (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.debug"]], "debug (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.debug"]], "debug (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.debug"]], "debug (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.debug"]], "debug (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.debug"]], "debug (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.debug"]], "debug (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.debug"]], "debug (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.debug"]], "debug (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.debug"]], "debug (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.debug"]], "debug (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.debug"]], "die (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.die"]], "die (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.die"]], "die (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.die"]], "die (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.die"]], "die (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.die"]], "die (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.die"]], "die (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.die"]], "die (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.die"]], "die (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.die"]], "die (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.die"]], "die (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.die"]], "die (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.die"]], "die (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.die"]], "die (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.die"]], "die (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.die"]], "die (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.die"]], "die (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.die"]], "die (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.die"]], "die (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.die"]], "die (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.die"]], "die (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.die"]], "die (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.die"]], "die (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.die"]], "die (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.die"]], "die (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.die"]], "disulphides (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.disulphides"]], "dnaconc (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.dnaconc"]], "dotdiff (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.dotdiff"]], "dotdiff (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.dotdiff"]], "dotdiff (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.dotdiff"]], "dtype (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.dtype"]], "ease (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.ease"]], "endextend (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.endextend"]], "endextend (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.endextend"]], "endopen (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.endopen"]], "endopen (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.endopen"]], "endweight (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.endweight"]], "endweight (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.endweight"]], "error (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.error"]], "error (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.error"]], "error (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.error"]], "error (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.error"]], "error (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.error"]], "error (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.error"]], "error (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.error"]], "error (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.error"]], "error (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.error"]], "error (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.error"]], "error (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.error"]], "error (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.error"]], "error (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.error"]], "error (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.error"]], "error (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.error"]], "error (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.error"]], "error (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.error"]], "error (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.error"]], "error (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.error"]], "error (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.error"]], "error (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.error"]], "error (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.error"]], "error (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.error"]], "error (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.error"]], "error (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.error"]], "errorfile (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.errorfile"]], "est (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.est"]], "excludedregion (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.excludedregion"]], "explainflag (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.explainflag"]], "filter (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.filter"]], "filter (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.filter"]], "filter (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.filter"]], "filter (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.filter"]], "filter (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.filter"]], "filter (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.filter"]], "filter (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.filter"]], "filter (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.filter"]], "filter (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.filter"]], "filter (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.filter"]], "filter (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.filter"]], "filter (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.filter"]], "filter (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.filter"]], "filter (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.filter"]], "filter (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.filter"]], "filter (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.filter"]], "filter (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.filter"]], "filter (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.filter"]], "filter (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.filter"]], "filter (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.filter"]], "filter (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.filter"]], "filter (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.filter"]], "filter (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.filter"]], "filter (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.filter"]], "filter (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.filter"]], "forwardinput (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.forwardinput"]], "fracsample (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.fracsample"]], "freqsfrom (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.freqsfrom"]], "gamma (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.gamma"]], "gamma (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.gamma"]], "gammacoefficient (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.gammacoefficient"]], "gammacoefficient (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.gammacoefficient"]], "gap (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.gap"]], "gapextend (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.gapextend"]], "gapextend (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.gapextend"]], "gapextend (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.gapextend"]], "gapextend (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.gapextend"]], "gaplimit (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.gaplimit"]], "gapopen (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.gapopen"]], "gapopen (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.gapopen"]], "gapopen (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.gapopen"]], "gapopen (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.gapopen"]], "gappenalty (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.gappenalty"]], "gcclamp (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.gcclamp"]], "genome (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.genome"]], "help (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.help"]], "help (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.help"]], "help (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.help"]], "help (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.help"]], "help (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.help"]], "help (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.help"]], "help (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.help"]], "help (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.help"]], "help (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.help"]], "help (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.help"]], "help (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.help"]], "help (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.help"]], "help (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.help"]], "help (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.help"]], "help (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.help"]], "help (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.help"]], "help (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.help"]], "help (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.help"]], "help (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.help"]], "help (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.help"]], "help (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.help"]], "help (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.help"]], "help (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.help"]], "help (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.help"]], "help (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.help"]], "hybridprobe (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.hybridprobe"]], "includedregion (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.includedregion"]], "infile (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.infile"]], "intreefile (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.intreefile"]], "intreefile (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.intreefile"]], "intreefile (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.intreefile"]], "intreefile (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.intreefile"]], "intronpenalty (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.intronpenalty"]], "invarcoefficient (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.invarcoefficient"]], "invarfrac (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.invarfrac"]], "jumble (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.jumble"]], "jusweights (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.jusweights"]], "lower (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.lower"]], "lysinemodified (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.lysinemodified"]], "match (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.match"]], "match (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.match"]], "matrixtype (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.matrixtype"]], "maxdifftm (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.maxdifftm"]], "maxgc (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.maxgc"]], "maxmispriming (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.maxmispriming"]], "maxpallen (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.maxpallen"]], "maxpolyx (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.maxpolyx"]], "maxrepeat (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.maxrepeat"]], "maxrepeat (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.maxrepeat"]], "maxsize (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.maxsize"]], "maxtm (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.maxtm"]], "maxtrees (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.maxtrees"]], "method (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.method"]], "method (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.method"]], "method (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.method"]], "mingc (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.mingc"]], "minpallen (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.minpallen"]], "minrepeat (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.minrepeat"]], "minscore (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.minscore"]], "minscore (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.minscore"]], "minsize (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.minsize"]], "mintm (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.mintm"]], "mishyblibraryfile (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.mishyblibraryfile"]], "mismatch (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.mismatch"]], "mismatch (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.mismatch"]], "mismatch (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.mismatch"]], "mismatchpercent (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.mismatchpercent"]], "mispriminglibraryfile (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.mispriminglibraryfile"]], "mlfrac (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.mlfrac"]], "mode (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.mode"]], "ncategories (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.ncategories"]], "ncategories (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.ncategories"]], "njumble (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.njumble"]], "njumble (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.njumble"]], "nobrief (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.nobrief"]], "nobrief (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.nobrief"]], "nobrief (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.nobrief"]], "noroot (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.noroot"]], "notermini (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.notermini"]], "nummismatches (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.nummismatches"]], "numreturn (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.numreturn"]], "oanyself (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.oanyself"]], "odnaconc (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.odnaconc"]], "oendself (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.oendself"]], "oexcludedregion (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.oexcludedregion"]], "ogcmax (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.ogcmax"]], "ogcmin (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.ogcmin"]], "ogcopt (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.ogcopt"]], "ogcpercent (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.ogcpercent"]], "oligoinput (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.oligoinput"]], "omaxsize (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.omaxsize"]], "ominsize (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.ominsize"]], "omishybmax (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.omishybmax"]], "opolyxmax (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.opolyxmax"]], "options (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.options"]], "options (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.options"]], "options (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.options"]], "options (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.options"]], "options (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.options"]], "options (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.options"]], "options (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.options"]], "options (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.options"]], "options (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.options"]], "options (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.options"]], "options (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.options"]], "options (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.options"]], "options (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.options"]], "options (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.options"]], "options (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.options"]], "options (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.options"]], "options (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.options"]], "options (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.options"]], "options (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.options"]], "options (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.options"]], "options (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.options"]], "options (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.options"]], "options (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.options"]], "options (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.options"]], "options (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.options"]], "opttm (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.opttm"]], "osaltconc (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.osaltconc"]], "osformat (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.osformat"]], "osize (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.osize"]], "osizeopt (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.osizeopt"]], "otm (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.otm"]], "otmmax (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.otmmax"]], "otmmin (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.otmmin"]], "otmopt (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.otmopt"]], "outfile (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.outfile"]], "outfile (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.outfile"]], "outfile (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.outfile"]], "outfile (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.outfile"]], "outfile (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.outfile"]], "outfile (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.outfile"]], "outfile (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.outfile"]], "outfile (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.outfile"]], "outfile (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.outfile"]], "outfile (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.outfile"]], "outfile (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.outfile"]], "outfile (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.outfile"]], "outfile (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.outfile"]], "outfile (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.outfile"]], "outfile (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.outfile"]], "outfile (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.outfile"]], "outfile (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.outfile"]], "outfile (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.outfile"]], "outfile (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.outfile"]], "outfile (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.outfile"]], "outfile (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.outfile"]], "outfile (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.outfile"]], "outfile (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.outfile"]], "outfile (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.outfile"]], "outgrno (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.outgrno"]], "outgrno (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.outgrno"]], "outgrno (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.outgrno"]], "outgrno (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.outgrno"]], "outgrno (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.outgrno"]], "outseq (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.outseq"]], "outseq (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.outseq"]], "outtreefile (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.outtreefile"]], "outtreefile (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.outtreefile"]], "outtreefile (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.outtreefile"]], "outtreefile (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.outtreefile"]], "overlap (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.overlap"]], "pairing (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.pairing"]], "pattern (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.pattern"]], "pattern (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.pattern"]], "pmismatch (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.pmismatch"]], "pmismatch (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.pmismatch"]], "prange (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.prange"]], "progress (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.progress"]], "psizeopt (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.psizeopt"]], "ptmmax (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.ptmmax"]], "ptmmin (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.ptmmin"]], "ptmopt (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.ptmopt"]], "rate (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.rate"]], "rate (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.rate"]], "rearrange (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.rearrange"]], "regular (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.regular"]], "reps (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.reps"]], "reverse (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.reverse"]], "reverseinput (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.reverseinput"]], "rewriteformat (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.rewriteformat"]], "rformat (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.rformat"]], "rformat (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.rformat"]], "rformat (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.rformat"]], "rformat (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.rformat"]], "root (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.root"]], "saltconc (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.saltconc"]], "seed (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.seed"]], "seed (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.seed"]], "seed (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.seed"]], "seed (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.seed"]], "seed (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.seed"]], "seqall (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.seqall"]], "seqtype (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.seqtype"]], "sequence (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.sequence"]], "sequence (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.sequence"]], "sequence (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.sequence"]], "sequence (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.sequence"]], "sequence (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.sequence"]], "sequence (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.sequence"]], "sequence (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.sequence"]], "sequence (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.sequence"]], "sequence (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.sequence"]], "sequence (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.sequence"]], "sequence (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.sequence"]], "sequence (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.sequence"]], "sequence (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.sequence"]], "sequence (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.sequence"]], "sformat (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.sformat"]], "shuffle (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.shuffle"]], "similarity (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.similarity"]], "similarity (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.similarity"]], "similarity (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.similarity"]], "snucleotide (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.snucleotide"]], "snucleotide (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.snucleotide"]], "snucleotide (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.snucleotide"]], "snucleotide (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.snucleotide"]], "snucleotide (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.snucleotide"]], "space (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.space"]], "splice (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.splice"]], "splicepenalty (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.splicepenalty"]], "sprotein (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.sprotein"]], "sprotein (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.sprotein"]], "sprotein (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.sprotein"]], "sprotein (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.sprotein"]], "sprotein (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.sprotein"]], "stdout (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.stdout"]], "stdout (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.stdout"]], "stdout (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.stdout"]], "stdout (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.stdout"]], "stdout (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.stdout"]], "stdout (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.stdout"]], "stdout (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.stdout"]], "stdout (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.stdout"]], "stdout (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.stdout"]], "stdout (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.stdout"]], "stdout (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.stdout"]], "stdout (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.stdout"]], "stdout (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.stdout"]], "stdout (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.stdout"]], "stdout (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.stdout"]], "stdout (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.stdout"]], "stdout (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.stdout"]], "stdout (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.stdout"]], "stdout (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.stdout"]], "stdout (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.stdout"]], "stdout (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.stdout"]], "stdout (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.stdout"]], "stdout (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.stdout"]], "stdout (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.stdout"]], "stdout (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.stdout"]], "style (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.style"]], "table (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.table"]], "target (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.target"]], "task (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.task"]], "test (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.test"]], "thorough (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.thorough"]], "thresh (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.thresh"]], "thresh (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.thresh"]], "threshold (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.threshold"]], "threshold (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.threshold"]], "threshold (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.threshold"]], "threshold (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.threshold"]], "transversion (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.transversion"]], "treeprint (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.treeprint"]], "treetype (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.treetype"]], "trout (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.trout"]], "trout (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.trout"]], "trout (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.trout"]], "trout (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.trout"]], "ttratio (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.ttratio"]], "ttratio (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.ttratio"]], "uniform (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.uniform"]], "verbose (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.verbose"]], "verbose (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.verbose"]], "verbose (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.verbose"]], "verbose (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.verbose"]], "verbose (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.verbose"]], "verbose (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.verbose"]], "verbose (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.verbose"]], "verbose (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.verbose"]], "verbose (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.verbose"]], "verbose (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.verbose"]], "verbose (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.verbose"]], "verbose (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.verbose"]], "verbose (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.verbose"]], "verbose (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.verbose"]], "verbose (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.verbose"]], "verbose (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.verbose"]], "verbose (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.verbose"]], "verbose (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.verbose"]], "verbose (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.verbose"]], "verbose (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.verbose"]], "verbose (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.verbose"]], "verbose (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.verbose"]], "verbose (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.verbose"]], "verbose (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.verbose"]], "verbose (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.verbose"]], "warning (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.warning"]], "warning (bio.emboss.applications.einvertedcommandline property)": [[80, "Bio.Emboss.Applications.EInvertedCommandline.warning"]], "warning (bio.emboss.applications.etandemcommandline property)": [[80, "Bio.Emboss.Applications.ETandemCommandline.warning"]], "warning (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.warning"]], "warning (bio.emboss.applications.fconsensecommandline property)": [[80, "Bio.Emboss.Applications.FConsenseCommandline.warning"]], "warning (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.warning"]], "warning (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.warning"]], "warning (bio.emboss.applications.fneighborcommandline property)": [[80, "Bio.Emboss.Applications.FNeighborCommandline.warning"]], "warning (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.warning"]], "warning (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.warning"]], "warning (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.warning"]], "warning (bio.emboss.applications.ftreedistcommandline property)": [[80, "Bio.Emboss.Applications.FTreeDistCommandline.warning"]], "warning (bio.emboss.applications.fuzznuccommandline property)": [[80, "Bio.Emboss.Applications.FuzznucCommandline.warning"]], "warning (bio.emboss.applications.fuzzprocommandline property)": [[80, "Bio.Emboss.Applications.FuzzproCommandline.warning"]], "warning (bio.emboss.applications.iepcommandline property)": [[80, "Bio.Emboss.Applications.IepCommandline.warning"]], "warning (bio.emboss.applications.needlecommandline property)": [[80, "Bio.Emboss.Applications.NeedleCommandline.warning"]], "warning (bio.emboss.applications.needleallcommandline property)": [[80, "Bio.Emboss.Applications.NeedleallCommandline.warning"]], "warning (bio.emboss.applications.palindromecommandline property)": [[80, "Bio.Emboss.Applications.PalindromeCommandline.warning"]], "warning (bio.emboss.applications.primer3commandline property)": [[80, "Bio.Emboss.Applications.Primer3Commandline.warning"]], "warning (bio.emboss.applications.primersearchcommandline property)": [[80, "Bio.Emboss.Applications.PrimerSearchCommandline.warning"]], "warning (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.warning"]], "warning (bio.emboss.applications.seqretcommandline property)": [[80, "Bio.Emboss.Applications.SeqretCommandline.warning"]], "warning (bio.emboss.applications.stretchercommandline property)": [[80, "Bio.Emboss.Applications.StretcherCommandline.warning"]], "warning (bio.emboss.applications.tranaligncommandline property)": [[80, "Bio.Emboss.Applications.TranalignCommandline.warning"]], "warning (bio.emboss.applications.watercommandline property)": [[80, "Bio.Emboss.Applications.WaterCommandline.warning"]], "weights (bio.emboss.applications.fdnadistcommandline property)": [[80, "Bio.Emboss.Applications.FDNADistCommandline.weights"]], "weights (bio.emboss.applications.fdnaparscommandline property)": [[80, "Bio.Emboss.Applications.FDNAParsCommandline.weights"]], "weights (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.weights"]], "weights (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.weights"]], "weights (bio.emboss.applications.fseqbootcommandline property)": [[80, "Bio.Emboss.Applications.FSeqBootCommandline.weights"]], "whichcode (bio.emboss.applications.fprotdistcommandline property)": [[80, "Bio.Emboss.Applications.FProtDistCommandline.whichcode"]], "whichcode (bio.emboss.applications.fprotparscommandline property)": [[80, "Bio.Emboss.Applications.FProtParsCommandline.whichcode"]], "width (bio.emboss.applications.est2genomecommandline property)": [[80, "Bio.Emboss.Applications.Est2GenomeCommandline.width"]], "wordsize (bio.emboss.applications.diffseqcommandline property)": [[80, "Bio.Emboss.Applications.DiffseqCommandline.wordsize"]], "wordsize (bio.emboss.applications.seqmatchallcommandline property)": [[80, "Bio.Emboss.Applications.SeqmatchallCommandline.wordsize"]], "bio.emboss.primer3": [[81, "module-Bio.Emboss.Primer3"]], "primers (class in bio.emboss.primer3)": [[81, "Bio.Emboss.Primer3.Primers"]], "record (class in bio.emboss.primer3)": [[81, "Bio.Emboss.Primer3.Record"]], "__init__() (bio.emboss.primer3.primers method)": [[81, "Bio.Emboss.Primer3.Primers.__init__"]], "__init__() (bio.emboss.primer3.record method)": [[81, "Bio.Emboss.Primer3.Record.__init__"]], "__len__() (bio.emboss.primer3.primers method)": [[81, "Bio.Emboss.Primer3.Primers.__len__"]], "parse() (in module bio.emboss.primer3)": [[81, "Bio.Emboss.Primer3.parse"]], "read() (in module bio.emboss.primer3)": [[81, "Bio.Emboss.Primer3.read"]], "amplifier (class in bio.emboss.primersearch)": [[82, "Bio.Emboss.PrimerSearch.Amplifier"]], "bio.emboss.primersearch": [[82, "module-Bio.Emboss.PrimerSearch"]], "inputrecord (class in bio.emboss.primersearch)": [[82, "Bio.Emboss.PrimerSearch.InputRecord"]], "outputrecord (class in bio.emboss.primersearch)": [[82, "Bio.Emboss.PrimerSearch.OutputRecord"]], "__init__() (bio.emboss.primersearch.amplifier method)": [[82, "Bio.Emboss.PrimerSearch.Amplifier.__init__"]], "__init__() (bio.emboss.primersearch.inputrecord method)": [[82, "Bio.Emboss.PrimerSearch.InputRecord.__init__"]], "__init__() (bio.emboss.primersearch.outputrecord method)": [[82, "Bio.Emboss.PrimerSearch.OutputRecord.__init__"]], "__str__() (bio.emboss.primersearch.inputrecord method)": [[82, "Bio.Emboss.PrimerSearch.InputRecord.__str__"]], "add_primer_set() (bio.emboss.primersearch.inputrecord method)": [[82, "Bio.Emboss.PrimerSearch.InputRecord.add_primer_set"]], "read() (in module bio.emboss.primersearch)": [[82, "Bio.Emboss.PrimerSearch.read"]], "bio.entrez": [[83, "module-Bio.Entrez"]], "ecitmatch() (in module bio.entrez)": [[83, "Bio.Entrez.ecitmatch"]], "efetch() (in module bio.entrez)": [[83, "Bio.Entrez.efetch"]], "egquery() (in module bio.entrez)": [[83, "Bio.Entrez.egquery"]], "einfo() (in module bio.entrez)": [[83, "Bio.Entrez.einfo"]], "elink() (in module bio.entrez)": [[83, "Bio.Entrez.elink"]], "epost() (in module bio.entrez)": [[83, "Bio.Entrez.epost"]], "esearch() (in module bio.entrez)": [[83, "Bio.Entrez.esearch"]], "espell() (in module bio.entrez)": [[83, "Bio.Entrez.espell"]], "esummary() (in module bio.entrez)": [[83, "Bio.Entrez.esummary"]], "parse() (in module bio.entrez)": [[83, "Bio.Entrez.parse"]], "read() (in module bio.entrez)": [[83, "Bio.Entrez.read"]], "bio.entrez.parser": [[84, "module-Bio.Entrez.Parser"]], "datahandler (class in bio.entrez.parser)": [[84, "Bio.Entrez.Parser.DataHandler"]], "datahandlermeta (class in bio.entrez.parser)": [[84, "Bio.Entrez.Parser.DataHandlerMeta"]], "dictionaryelement (class in bio.entrez.parser)": [[84, "Bio.Entrez.Parser.DictionaryElement"]], "errorelement (class in bio.entrez.parser)": [[84, "Bio.Entrez.Parser.ErrorElement"]], "integerelement (class in bio.entrez.parser)": [[84, "Bio.Entrez.Parser.IntegerElement"]], "listelement (class in bio.entrez.parser)": [[84, "Bio.Entrez.Parser.ListElement"]], "noneelement (class in bio.entrez.parser)": [[84, "Bio.Entrez.Parser.NoneElement"]], "orderedlistelement (class in bio.entrez.parser)": [[84, "Bio.Entrez.Parser.OrderedListElement"]], "stringelement (class in bio.entrez.parser)": [[84, "Bio.Entrez.Parser.StringElement"]], "validationerror": [[84, "Bio.Entrez.Parser.ValidationError"]], "__eq__() (bio.entrez.parser.noneelement method)": [[84, "Bio.Entrez.Parser.NoneElement.__eq__"]], "__hash__ (bio.entrez.parser.noneelement attribute)": [[84, "Bio.Entrez.Parser.NoneElement.__hash__"]], "__init__() (bio.entrez.parser.corruptedxmlerror method)": [[84, "Bio.Entrez.Parser.CorruptedXMLError.__init__"]], "__init__() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.__init__"]], "__init__() (bio.entrez.parser.datahandlermeta method)": [[84, "Bio.Entrez.Parser.DataHandlerMeta.__init__"]], "__init__() (bio.entrez.parser.dictionaryelement method)": [[84, "Bio.Entrez.Parser.DictionaryElement.__init__"]], "__init__() (bio.entrez.parser.errorelement method)": [[84, "Bio.Entrez.Parser.ErrorElement.__init__"]], "__init__() (bio.entrez.parser.integerelement method)": [[84, "Bio.Entrez.Parser.IntegerElement.__init__"]], "__init__() (bio.entrez.parser.listelement method)": [[84, "Bio.Entrez.Parser.ListElement.__init__"]], "__init__() (bio.entrez.parser.noneelement method)": [[84, "Bio.Entrez.Parser.NoneElement.__init__"]], "__init__() (bio.entrez.parser.notxmlerror method)": [[84, "Bio.Entrez.Parser.NotXMLError.__init__"]], "__init__() (bio.entrez.parser.orderedlistelement method)": [[84, "Bio.Entrez.Parser.OrderedListElement.__init__"]], "__init__() (bio.entrez.parser.stringelement method)": [[84, "Bio.Entrez.Parser.StringElement.__init__"]], "__init__() (bio.entrez.parser.validationerror method)": [[84, "Bio.Entrez.Parser.ValidationError.__init__"]], "__ne__() (bio.entrez.parser.noneelement method)": [[84, "Bio.Entrez.Parser.NoneElement.__ne__"]], "__new__() (bio.entrez.parser.errorelement static method)": [[84, "Bio.Entrez.Parser.ErrorElement.__new__"]], "__new__() (bio.entrez.parser.integerelement static method)": [[84, "Bio.Entrez.Parser.IntegerElement.__new__"]], "__new__() (bio.entrez.parser.stringelement static method)": [[84, "Bio.Entrez.Parser.StringElement.__new__"]], "__repr__() (bio.entrez.parser.dictionaryelement method)": [[84, "Bio.Entrez.Parser.DictionaryElement.__repr__"]], "__repr__() (bio.entrez.parser.errorelement method)": [[84, "Bio.Entrez.Parser.ErrorElement.__repr__"]], "__repr__() (bio.entrez.parser.integerelement method)": [[84, "Bio.Entrez.Parser.IntegerElement.__repr__"]], "__repr__() (bio.entrez.parser.listelement method)": [[84, "Bio.Entrez.Parser.ListElement.__repr__"]], "__repr__() (bio.entrez.parser.noneelement method)": [[84, "Bio.Entrez.Parser.NoneElement.__repr__"]], "__repr__() (bio.entrez.parser.orderedlistelement method)": [[84, "Bio.Entrez.Parser.OrderedListElement.__repr__"]], "__repr__() (bio.entrez.parser.stringelement method)": [[84, "Bio.Entrez.Parser.StringElement.__repr__"]], "__str__() (bio.entrez.parser.corruptedxmlerror method)": [[84, "Bio.Entrez.Parser.CorruptedXMLError.__str__"]], "__str__() (bio.entrez.parser.notxmlerror method)": [[84, "Bio.Entrez.Parser.NotXMLError.__str__"]], "__str__() (bio.entrez.parser.validationerror method)": [[84, "Bio.Entrez.Parser.ValidationError.__str__"]], "characterdatahandlerescape() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.characterDataHandlerEscape"]], "characterdatahandlerraw() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.characterDataHandlerRaw"]], "directory (bio.entrez.parser.datahandlermeta property)": [[84, "Bio.Entrez.Parser.DataHandlerMeta.directory"]], "elementdecl() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.elementDecl"]], "endelementhandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.endElementHandler"]], "enderrorelementhandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.endErrorElementHandler"]], "endintegerelementhandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.endIntegerElementHandler"]], "endnamespacedeclhandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.endNamespaceDeclHandler"]], "endrawelementhandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.endRawElementHandler"]], "endskipelementhandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.endSkipElementHandler"]], "endstringelementhandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.endStringElementHandler"]], "externalentityrefhandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.externalEntityRefHandler"]], "global_dtd_dir (bio.entrez.parser.datahandler attribute)": [[84, "Bio.Entrez.Parser.DataHandler.global_dtd_dir"]], "global_xsd_dir (bio.entrez.parser.datahandler attribute)": [[84, "Bio.Entrez.Parser.DataHandler.global_xsd_dir"]], "handlemissingdocumentdefinition() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.handleMissingDocumentDefinition"]], "local_dtd_dir (bio.entrez.parser.datahandler attribute)": [[84, "Bio.Entrez.Parser.DataHandler.local_dtd_dir"]], "local_xsd_dir (bio.entrez.parser.datahandler attribute)": [[84, "Bio.Entrez.Parser.DataHandler.local_xsd_dir"]], "open_dtd_file() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.open_dtd_file"]], "open_xsd_file() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.open_xsd_file"]], "parse() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.parse"]], "parse_xsd() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.parse_xsd"]], "read() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.read"]], "save_dtd_file() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.save_dtd_file"]], "save_xsd_file() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.save_xsd_file"]], "schemahandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.schemaHandler"]], "skipcharacterdatahandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.skipCharacterDataHandler"]], "startelementhandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.startElementHandler"]], "startnamespacedeclhandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.startNamespaceDeclHandler"]], "startrawelementhandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.startRawElementHandler"]], "startskipelementhandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.startSkipElementHandler"]], "store() (bio.entrez.parser.dictionaryelement method)": [[84, "Bio.Entrez.Parser.DictionaryElement.store"]], "store() (bio.entrez.parser.listelement method)": [[84, "Bio.Entrez.Parser.ListElement.store"]], "store() (bio.entrez.parser.orderedlistelement method)": [[84, "Bio.Entrez.Parser.OrderedListElement.store"]], "xmldeclhandler() (bio.entrez.parser.datahandler method)": [[84, "Bio.Entrez.Parser.DataHandler.xmlDeclHandler"]], "bio.expasy": [[85, "module-Bio.ExPASy"]], "get_prodoc_entry() (in module bio.expasy)": [[85, "Bio.ExPASy.get_prodoc_entry"]], "get_prosite_entry() (in module bio.expasy)": [[85, "Bio.ExPASy.get_prosite_entry"]], "get_prosite_raw() (in module bio.expasy)": [[85, "Bio.ExPASy.get_prosite_raw"]], "get_sprot_raw() (in module bio.expasy)": [[85, "Bio.ExPASy.get_sprot_raw"]], "bio.expasy.enzyme": [[86, "module-Bio.ExPASy.Enzyme"]], "record (class in bio.expasy.enzyme)": [[86, "Bio.ExPASy.Enzyme.Record"]], "__init__() (bio.expasy.enzyme.record method)": [[86, "Bio.ExPASy.Enzyme.Record.__init__"]], "__repr__() (bio.expasy.enzyme.record method)": [[86, "Bio.ExPASy.Enzyme.Record.__repr__"]], "__str__() (bio.expasy.enzyme.record method)": [[86, "Bio.ExPASy.Enzyme.Record.__str__"]], "parse() (in module bio.expasy.enzyme)": [[86, "Bio.ExPASy.Enzyme.parse"]], "read() (in module bio.expasy.enzyme)": [[86, "Bio.ExPASy.Enzyme.read"]], "bio.expasy.prodoc": [[87, "module-Bio.ExPASy.Prodoc"]], "record (class in bio.expasy.prodoc)": [[87, "Bio.ExPASy.Prodoc.Record"]], "reference (class in bio.expasy.prodoc)": [[87, "Bio.ExPASy.Prodoc.Reference"]], "__init__() (bio.expasy.prodoc.record method)": [[87, "Bio.ExPASy.Prodoc.Record.__init__"]], "__init__() (bio.expasy.prodoc.reference method)": [[87, "Bio.ExPASy.Prodoc.Reference.__init__"]], "parse() (in module bio.expasy.prodoc)": [[87, "Bio.ExPASy.Prodoc.parse"]], "read() (in module bio.expasy.prodoc)": [[87, "Bio.ExPASy.Prodoc.read"]], "bio.expasy.prosite": [[88, "module-Bio.ExPASy.Prosite"]], "record (class in bio.expasy.prosite)": [[88, "Bio.ExPASy.Prosite.Record"]], "__init__() (bio.expasy.prosite.record method)": [[88, "Bio.ExPASy.Prosite.Record.__init__"]], "parse() (in module bio.expasy.prosite)": [[88, "Bio.ExPASy.Prosite.parse"]], "read() (in module bio.expasy.prosite)": [[88, "Bio.ExPASy.Prosite.read"]], "bio.expasy.scanprosite": [[89, "module-Bio.ExPASy.ScanProsite"]], "contenthandler (class in bio.expasy.scanprosite)": [[89, "Bio.ExPASy.ScanProsite.ContentHandler"]], "parser (class in bio.expasy.scanprosite)": [[89, "Bio.ExPASy.ScanProsite.Parser"]], "record (class in bio.expasy.scanprosite)": [[89, "Bio.ExPASy.ScanProsite.Record"]], "__init__() (bio.expasy.scanprosite.contenthandler method)": [[89, "Bio.ExPASy.ScanProsite.ContentHandler.__init__"]], "__init__() (bio.expasy.scanprosite.parser method)": [[89, "Bio.ExPASy.ScanProsite.Parser.__init__"]], "__init__() (bio.expasy.scanprosite.record method)": [[89, "Bio.ExPASy.ScanProsite.Record.__init__"]], "characters() (bio.expasy.scanprosite.contenthandler method)": [[89, "Bio.ExPASy.ScanProsite.ContentHandler.characters"]], "endelement() (bio.expasy.scanprosite.contenthandler method)": [[89, "Bio.ExPASy.ScanProsite.ContentHandler.endElement"]], "feed() (bio.expasy.scanprosite.parser method)": [[89, "Bio.ExPASy.ScanProsite.Parser.feed"]], "integers (bio.expasy.scanprosite.contenthandler attribute)": [[89, "Bio.ExPASy.ScanProsite.ContentHandler.integers"]], "read() (in module bio.expasy.scanprosite)": [[89, "Bio.ExPASy.ScanProsite.read"]], "scan() (in module bio.expasy.scanprosite)": [[89, "Bio.ExPASy.ScanProsite.scan"]], "startelement() (bio.expasy.scanprosite.contenthandler method)": [[89, "Bio.ExPASy.ScanProsite.ContentHandler.startElement"]], "strings (bio.expasy.scanprosite.contenthandler attribute)": [[89, "Bio.ExPASy.ScanProsite.ContentHandler.strings"]], "bio.expasy.cellosaurus": [[90, "module-Bio.ExPASy.cellosaurus"]], "record (class in bio.expasy.cellosaurus)": [[90, "Bio.ExPASy.cellosaurus.Record"]], "__init__() (bio.expasy.cellosaurus.record method)": [[90, "Bio.ExPASy.cellosaurus.Record.__init__"]], "__repr__() (bio.expasy.cellosaurus.record method)": [[90, "Bio.ExPASy.cellosaurus.Record.__repr__"]], "__str__() (bio.expasy.cellosaurus.record method)": [[90, "Bio.ExPASy.cellosaurus.Record.__str__"]], "parse() (in module bio.expasy.cellosaurus)": [[90, "Bio.ExPASy.cellosaurus.parse"]], "read() (in module bio.expasy.cellosaurus)": [[90, "Bio.ExPASy.cellosaurus.read"]], "bio.file": [[91, "module-Bio.File"]], "as_handle() (in module bio.file)": [[91, "Bio.File.as_handle"]], "bio.genbank": [[92, "module-Bio.GenBank"]], "featureparser (class in bio.genbank)": [[92, "Bio.GenBank.FeatureParser"]], "iterator (class in bio.genbank)": [[92, "Bio.GenBank.Iterator"]], "parserfailureerror": [[92, "Bio.GenBank.ParserFailureError"]], "recordparser (class in bio.genbank)": [[92, "Bio.GenBank.RecordParser"]], "__init__() (bio.genbank.featureparser method)": [[92, "Bio.GenBank.FeatureParser.__init__"]], "__init__() (bio.genbank.iterator method)": [[92, "Bio.GenBank.Iterator.__init__"]], "__init__() (bio.genbank.recordparser method)": [[92, "Bio.GenBank.RecordParser.__init__"]], "__iter__() (bio.genbank.iterator method)": [[92, "Bio.GenBank.Iterator.__iter__"]], "__next__() (bio.genbank.iterator method)": [[92, "Bio.GenBank.Iterator.__next__"]], "parse() (bio.genbank.featureparser method)": [[92, "Bio.GenBank.FeatureParser.parse"]], "parse() (bio.genbank.recordparser method)": [[92, "Bio.GenBank.RecordParser.parse"]], "parse() (in module bio.genbank)": [[92, "Bio.GenBank.parse"]], "read() (in module bio.genbank)": [[92, "Bio.GenBank.read"]], "base_feature_format (bio.genbank.record.record attribute)": [[93, "Bio.GenBank.Record.Record.BASE_FEATURE_FORMAT"]], "base_format (bio.genbank.record.record attribute)": [[93, "Bio.GenBank.Record.Record.BASE_FORMAT"]], "bio.genbank.record": [[93, "module-Bio.GenBank.Record"]], "feature (class in bio.genbank.record)": [[93, "Bio.GenBank.Record.Feature"]], "gb_base_indent (bio.genbank.record.record attribute)": [[93, "Bio.GenBank.Record.Record.GB_BASE_INDENT"]], "gb_feature_indent (bio.genbank.record.record attribute)": [[93, "Bio.GenBank.Record.Record.GB_FEATURE_INDENT"]], "gb_feature_internal_indent (bio.genbank.record.record attribute)": [[93, "Bio.GenBank.Record.Record.GB_FEATURE_INTERNAL_INDENT"]], "gb_internal_indent (bio.genbank.record.record attribute)": [[93, "Bio.GenBank.Record.Record.GB_INTERNAL_INDENT"]], "gb_line_length (bio.genbank.record.record attribute)": [[93, "Bio.GenBank.Record.Record.GB_LINE_LENGTH"]], "gb_other_internal_indent (bio.genbank.record.record attribute)": [[93, "Bio.GenBank.Record.Record.GB_OTHER_INTERNAL_INDENT"]], "gb_sequence_indent (bio.genbank.record.record attribute)": [[93, "Bio.GenBank.Record.Record.GB_SEQUENCE_INDENT"]], "internal_feature_format (bio.genbank.record.record attribute)": [[93, "Bio.GenBank.Record.Record.INTERNAL_FEATURE_FORMAT"]], "internal_format (bio.genbank.record.record attribute)": [[93, "Bio.GenBank.Record.Record.INTERNAL_FORMAT"]], "other_internal_format (bio.genbank.record.record attribute)": [[93, "Bio.GenBank.Record.Record.OTHER_INTERNAL_FORMAT"]], "qualifier (class in bio.genbank.record)": [[93, "Bio.GenBank.Record.Qualifier"]], "record (class in bio.genbank.record)": [[93, "Bio.GenBank.Record.Record"]], "reference (class in bio.genbank.record)": [[93, "Bio.GenBank.Record.Reference"]], "sequence_format (bio.genbank.record.record attribute)": [[93, "Bio.GenBank.Record.Record.SEQUENCE_FORMAT"]], "__init__() (bio.genbank.record.feature method)": [[93, "Bio.GenBank.Record.Feature.__init__"]], "__init__() (bio.genbank.record.qualifier method)": [[93, "Bio.GenBank.Record.Qualifier.__init__"]], "__init__() (bio.genbank.record.record method)": [[93, "Bio.GenBank.Record.Record.__init__"]], "__init__() (bio.genbank.record.reference method)": [[93, "Bio.GenBank.Record.Reference.__init__"]], "__repr__() (bio.genbank.record.feature method)": [[93, "Bio.GenBank.Record.Feature.__repr__"]], "__repr__() (bio.genbank.record.qualifier method)": [[93, "Bio.GenBank.Record.Qualifier.__repr__"]], "__str__() (bio.genbank.record.feature method)": [[93, "Bio.GenBank.Record.Feature.__str__"]], "__str__() (bio.genbank.record.qualifier method)": [[93, "Bio.GenBank.Record.Qualifier.__str__"]], "__str__() (bio.genbank.record.record method)": [[93, "Bio.GenBank.Record.Record.__str__"]], "__str__() (bio.genbank.record.reference method)": [[93, "Bio.GenBank.Record.Reference.__str__"]], "bio.genbank.scanner": [[94, "module-Bio.GenBank.Scanner"]], "embl_indent (bio.genbank.scanner.emblscanner attribute)": [[94, "Bio.GenBank.Scanner.EmblScanner.EMBL_INDENT"]], "embl_spacer (bio.genbank.scanner.emblscanner attribute)": [[94, "Bio.GenBank.Scanner.EmblScanner.EMBL_SPACER"]], "emblscanner (class in bio.genbank.scanner)": [[94, "Bio.GenBank.Scanner.EmblScanner"]], "feature_end_markers (bio.genbank.scanner.emblscanner attribute)": [[94, "Bio.GenBank.Scanner.EmblScanner.FEATURE_END_MARKERS"]], "feature_end_markers (bio.genbank.scanner.genbankscanner attribute)": [[94, "Bio.GenBank.Scanner.GenBankScanner.FEATURE_END_MARKERS"]], "feature_end_markers (bio.genbank.scanner.insdcscanner attribute)": [[94, "Bio.GenBank.Scanner.InsdcScanner.FEATURE_END_MARKERS"]], "feature_qualifier_indent (bio.genbank.scanner.emblscanner attribute)": [[94, "Bio.GenBank.Scanner.EmblScanner.FEATURE_QUALIFIER_INDENT"]], "feature_qualifier_indent (bio.genbank.scanner.genbankscanner attribute)": [[94, "Bio.GenBank.Scanner.GenBankScanner.FEATURE_QUALIFIER_INDENT"]], "feature_qualifier_indent (bio.genbank.scanner.insdcscanner attribute)": [[94, "Bio.GenBank.Scanner.InsdcScanner.FEATURE_QUALIFIER_INDENT"]], "feature_qualifier_spacer (bio.genbank.scanner.emblscanner attribute)": [[94, "Bio.GenBank.Scanner.EmblScanner.FEATURE_QUALIFIER_SPACER"]], "feature_qualifier_spacer (bio.genbank.scanner.genbankscanner attribute)": [[94, "Bio.GenBank.Scanner.GenBankScanner.FEATURE_QUALIFIER_SPACER"]], "feature_qualifier_spacer (bio.genbank.scanner.insdcscanner attribute)": [[94, "Bio.GenBank.Scanner.InsdcScanner.FEATURE_QUALIFIER_SPACER"]], "feature_start_markers (bio.genbank.scanner.emblscanner attribute)": [[94, "Bio.GenBank.Scanner.EmblScanner.FEATURE_START_MARKERS"]], "feature_start_markers (bio.genbank.scanner.genbankscanner attribute)": [[94, "Bio.GenBank.Scanner.GenBankScanner.FEATURE_START_MARKERS"]], "feature_start_markers (bio.genbank.scanner.insdcscanner attribute)": [[94, "Bio.GenBank.Scanner.InsdcScanner.FEATURE_START_MARKERS"]], "genbank_indent (bio.genbank.scanner.genbankscanner attribute)": [[94, "Bio.GenBank.Scanner.GenBankScanner.GENBANK_INDENT"]], "genbank_spacer (bio.genbank.scanner.genbankscanner attribute)": [[94, "Bio.GenBank.Scanner.GenBankScanner.GENBANK_SPACER"]], "genbankscanner (class in bio.genbank.scanner)": [[94, "Bio.GenBank.Scanner.GenBankScanner"]], "header_width (bio.genbank.scanner.emblscanner attribute)": [[94, "Bio.GenBank.Scanner.EmblScanner.HEADER_WIDTH"]], "header_width (bio.genbank.scanner.genbankscanner attribute)": [[94, "Bio.GenBank.Scanner.GenBankScanner.HEADER_WIDTH"]], "header_width (bio.genbank.scanner.insdcscanner attribute)": [[94, "Bio.GenBank.Scanner.InsdcScanner.HEADER_WIDTH"]], "insdcscanner (class in bio.genbank.scanner)": [[94, "Bio.GenBank.Scanner.InsdcScanner"]], "record_start (bio.genbank.scanner.emblscanner attribute)": [[94, "Bio.GenBank.Scanner.EmblScanner.RECORD_START"]], "record_start (bio.genbank.scanner.genbankscanner attribute)": [[94, "Bio.GenBank.Scanner.GenBankScanner.RECORD_START"]], "record_start (bio.genbank.scanner.insdcscanner attribute)": [[94, "Bio.GenBank.Scanner.InsdcScanner.RECORD_START"]], "sequence_headers (bio.genbank.scanner.emblscanner attribute)": [[94, "Bio.GenBank.Scanner.EmblScanner.SEQUENCE_HEADERS"]], "sequence_headers (bio.genbank.scanner.genbankscanner attribute)": [[94, "Bio.GenBank.Scanner.GenBankScanner.SEQUENCE_HEADERS"]], "sequence_headers (bio.genbank.scanner.insdcscanner attribute)": [[94, "Bio.GenBank.Scanner.InsdcScanner.SEQUENCE_HEADERS"]], "structured_comment_delim (bio.genbank.scanner.genbankscanner attribute)": [[94, "Bio.GenBank.Scanner.GenBankScanner.STRUCTURED_COMMENT_DELIM"]], "structured_comment_end (bio.genbank.scanner.genbankscanner attribute)": [[94, "Bio.GenBank.Scanner.GenBankScanner.STRUCTURED_COMMENT_END"]], "structured_comment_start (bio.genbank.scanner.genbankscanner attribute)": [[94, "Bio.GenBank.Scanner.GenBankScanner.STRUCTURED_COMMENT_START"]], "__annotations__ (bio.genbank.scanner.genbankscanner attribute)": [[94, "Bio.GenBank.Scanner.GenBankScanner.__annotations__"]], "__init__() (bio.genbank.scanner.insdcscanner method)": [[94, "Bio.GenBank.Scanner.InsdcScanner.__init__"]], "feed() (bio.genbank.scanner.insdcscanner method)": [[94, "Bio.GenBank.Scanner.InsdcScanner.feed"]], "find_start() (bio.genbank.scanner.insdcscanner method)": [[94, "Bio.GenBank.Scanner.InsdcScanner.find_start"]], "parse() (bio.genbank.scanner.insdcscanner method)": [[94, "Bio.GenBank.Scanner.InsdcScanner.parse"]], "parse_cds_features() (bio.genbank.scanner.insdcscanner method)": [[94, "Bio.GenBank.Scanner.InsdcScanner.parse_cds_features"]], "parse_feature() (bio.genbank.scanner.insdcscanner method)": [[94, "Bio.GenBank.Scanner.InsdcScanner.parse_feature"]], "parse_features() (bio.genbank.scanner.insdcscanner method)": [[94, "Bio.GenBank.Scanner.InsdcScanner.parse_features"]], "parse_footer() (bio.genbank.scanner.emblscanner method)": [[94, "Bio.GenBank.Scanner.EmblScanner.parse_footer"]], "parse_footer() (bio.genbank.scanner.genbankscanner method)": [[94, "Bio.GenBank.Scanner.GenBankScanner.parse_footer"]], "parse_footer() (bio.genbank.scanner.insdcscanner method)": [[94, "Bio.GenBank.Scanner.InsdcScanner.parse_footer"]], "parse_header() (bio.genbank.scanner.insdcscanner method)": [[94, "Bio.GenBank.Scanner.InsdcScanner.parse_header"]], "parse_records() (bio.genbank.scanner.insdcscanner method)": [[94, "Bio.GenBank.Scanner.InsdcScanner.parse_records"]], "set_handle() (bio.genbank.scanner.insdcscanner method)": [[94, "Bio.GenBank.Scanner.InsdcScanner.set_handle"]], "bio.genbank.utils": [[95, "module-Bio.GenBank.utils"]], "featurevaluecleaner (class in bio.genbank.utils)": [[95, "Bio.GenBank.utils.FeatureValueCleaner"]], "__init__() (bio.genbank.utils.featurevaluecleaner method)": [[95, "Bio.GenBank.utils.FeatureValueCleaner.__init__"]], "__repr__() (bio.genbank.utils.featurevaluecleaner method)": [[95, "Bio.GenBank.utils.FeatureValueCleaner.__repr__"]], "clean_value() (bio.genbank.utils.featurevaluecleaner method)": [[95, "Bio.GenBank.utils.FeatureValueCleaner.clean_value"]], "keys_to_process (bio.genbank.utils.featurevaluecleaner attribute)": [[95, "Bio.GenBank.utils.FeatureValueCleaner.keys_to_process"]], "bio.geo": [[96, "module-Bio.Geo"]], "parse() (in module bio.geo)": [[96, "Bio.Geo.parse"]], "bio.geo.record": [[97, "module-Bio.Geo.Record"]], "record (class in bio.geo.record)": [[97, "Bio.Geo.Record.Record"]], "__init__() (bio.geo.record.record method)": [[97, "Bio.Geo.Record.Record.__init__"]], "__str__() (bio.geo.record.record method)": [[97, "Bio.Geo.Record.Record.__str__"]], "out_block() (in module bio.geo.record)": [[97, "Bio.Geo.Record.out_block"]], "bio.graphics": [[98, "module-Bio.Graphics"]], "annotatedchromosomesegment (class in bio.graphics.basicchromosome)": [[99, "Bio.Graphics.BasicChromosome.AnnotatedChromosomeSegment"]], "bio.graphics.basicchromosome": [[99, "module-Bio.Graphics.BasicChromosome"]], "chromosome (class in bio.graphics.basicchromosome)": [[99, "Bio.Graphics.BasicChromosome.Chromosome"]], "chromosomesegment (class in bio.graphics.basicchromosome)": [[99, "Bio.Graphics.BasicChromosome.ChromosomeSegment"]], "organism (class in bio.graphics.basicchromosome)": [[99, "Bio.Graphics.BasicChromosome.Organism"]], "spacersegment (class in bio.graphics.basicchromosome)": [[99, "Bio.Graphics.BasicChromosome.SpacerSegment"]], "telomeresegment (class in bio.graphics.basicchromosome)": [[99, "Bio.Graphics.BasicChromosome.TelomereSegment"]], "__init__() (bio.graphics.basicchromosome.annotatedchromosomesegment method)": [[99, "Bio.Graphics.BasicChromosome.AnnotatedChromosomeSegment.__init__"]], "__init__() (bio.graphics.basicchromosome.chromosome method)": [[99, "Bio.Graphics.BasicChromosome.Chromosome.__init__"]], "__init__() (bio.graphics.basicchromosome.chromosomesegment method)": [[99, "Bio.Graphics.BasicChromosome.ChromosomeSegment.__init__"]], "__init__() (bio.graphics.basicchromosome.organism method)": [[99, "Bio.Graphics.BasicChromosome.Organism.__init__"]], "__init__() (bio.graphics.basicchromosome.telomeresegment method)": [[99, "Bio.Graphics.BasicChromosome.TelomereSegment.__init__"]], "draw() (bio.graphics.basicchromosome.chromosome method)": [[99, "Bio.Graphics.BasicChromosome.Chromosome.draw"]], "draw() (bio.graphics.basicchromosome.chromosomesegment method)": [[99, "Bio.Graphics.BasicChromosome.ChromosomeSegment.draw"]], "draw() (bio.graphics.basicchromosome.organism method)": [[99, "Bio.Graphics.BasicChromosome.Organism.draw"]], "draw() (bio.graphics.basicchromosome.spacersegment method)": [[99, "Bio.Graphics.BasicChromosome.SpacerSegment.draw"]], "subcomponent_size() (bio.graphics.basicchromosome.chromosome method)": [[99, "Bio.Graphics.BasicChromosome.Chromosome.subcomponent_size"]], "bio.graphics.colorspiral": [[100, "module-Bio.Graphics.ColorSpiral"]], "colorspiral (class in bio.graphics.colorspiral)": [[100, "Bio.Graphics.ColorSpiral.ColorSpiral"]], "__init__() (bio.graphics.colorspiral.colorspiral method)": [[100, "Bio.Graphics.ColorSpiral.ColorSpiral.__init__"]], "a (bio.graphics.colorspiral.colorspiral property)": [[100, "Bio.Graphics.ColorSpiral.ColorSpiral.a"]], "b (bio.graphics.colorspiral.colorspiral property)": [[100, "Bio.Graphics.ColorSpiral.ColorSpiral.b"]], "get_color_dict() (in module bio.graphics.colorspiral)": [[100, "Bio.Graphics.ColorSpiral.get_color_dict"]], "get_colors() (bio.graphics.colorspiral.colorspiral method)": [[100, "Bio.Graphics.ColorSpiral.ColorSpiral.get_colors"]], "get_colors() (in module bio.graphics.colorspiral)": [[100, "Bio.Graphics.ColorSpiral.get_colors"]], "jitter (bio.graphics.colorspiral.colorspiral property)": [[100, "Bio.Graphics.ColorSpiral.ColorSpiral.jitter"]], "v_final (bio.graphics.colorspiral.colorspiral property)": [[100, "Bio.Graphics.ColorSpiral.ColorSpiral.v_final"]], "v_init (bio.graphics.colorspiral.colorspiral property)": [[100, "Bio.Graphics.ColorSpiral.ColorSpiral.v_init"]], "bio.graphics.comparative": [[101, "module-Bio.Graphics.Comparative"]], "comparativescatterplot (class in bio.graphics.comparative)": [[101, "Bio.Graphics.Comparative.ComparativeScatterPlot"]], "__init__() (bio.graphics.comparative.comparativescatterplot method)": [[101, "Bio.Graphics.Comparative.ComparativeScatterPlot.__init__"]], "draw_to_file() (bio.graphics.comparative.comparativescatterplot method)": [[101, "Bio.Graphics.Comparative.ComparativeScatterPlot.draw_to_file"]], "bio.graphics.displayrepresentation": [[102, "module-Bio.Graphics.DisplayRepresentation"]], "chromosomecounts (class in bio.graphics.displayrepresentation)": [[102, "Bio.Graphics.DisplayRepresentation.ChromosomeCounts"]], "__init__() (bio.graphics.displayrepresentation.chromosomecounts method)": [[102, "Bio.Graphics.DisplayRepresentation.ChromosomeCounts.__init__"]], "add_count() (bio.graphics.displayrepresentation.chromosomecounts method)": [[102, "Bio.Graphics.DisplayRepresentation.ChromosomeCounts.add_count"]], "add_label() (bio.graphics.displayrepresentation.chromosomecounts method)": [[102, "Bio.Graphics.DisplayRepresentation.ChromosomeCounts.add_label"]], "fill_chromosome() (bio.graphics.displayrepresentation.chromosomecounts method)": [[102, "Bio.Graphics.DisplayRepresentation.ChromosomeCounts.fill_chromosome"]], "get_segment_info() (bio.graphics.displayrepresentation.chromosomecounts method)": [[102, "Bio.Graphics.DisplayRepresentation.ChromosomeCounts.get_segment_info"]], "scale_segment_value() (bio.graphics.displayrepresentation.chromosomecounts method)": [[102, "Bio.Graphics.DisplayRepresentation.ChromosomeCounts.scale_segment_value"]], "set_scale() (bio.graphics.displayrepresentation.chromosomecounts method)": [[102, "Bio.Graphics.DisplayRepresentation.ChromosomeCounts.set_scale"]], "barchartdistribution (class in bio.graphics.distribution)": [[103, "Bio.Graphics.Distribution.BarChartDistribution"]], "bio.graphics.distribution": [[103, "module-Bio.Graphics.Distribution"]], "distributionpage (class in bio.graphics.distribution)": [[103, "Bio.Graphics.Distribution.DistributionPage"]], "linedistribution (class in bio.graphics.distribution)": [[103, "Bio.Graphics.Distribution.LineDistribution"]], "__init__() (bio.graphics.distribution.barchartdistribution method)": [[103, "Bio.Graphics.Distribution.BarChartDistribution.__init__"]], "__init__() (bio.graphics.distribution.distributionpage method)": [[103, "Bio.Graphics.Distribution.DistributionPage.__init__"]], "__init__() (bio.graphics.distribution.linedistribution method)": [[103, "Bio.Graphics.Distribution.LineDistribution.__init__"]], "draw() (bio.graphics.distribution.barchartdistribution method)": [[103, "Bio.Graphics.Distribution.BarChartDistribution.draw"]], "draw() (bio.graphics.distribution.distributionpage method)": [[103, "Bio.Graphics.Distribution.DistributionPage.draw"]], "draw() (bio.graphics.distribution.linedistribution method)": [[103, "Bio.Graphics.Distribution.LineDistribution.draw"]], "bio.graphics.genomediagram": [[104, "module-Bio.Graphics.GenomeDiagram"]], "colortranslator (class in bio.graphics.genomediagram)": [[104, "Bio.Graphics.GenomeDiagram.ColorTranslator"]], "crosslink (class in bio.graphics.genomediagram)": [[104, "Bio.Graphics.GenomeDiagram.CrossLink"]], "diagram (class in bio.graphics.genomediagram)": [[104, "Bio.Graphics.GenomeDiagram.Diagram"]], "feature (class in bio.graphics.genomediagram)": [[104, "Bio.Graphics.GenomeDiagram.Feature"]], "featureset (class in bio.graphics.genomediagram)": [[104, "Bio.Graphics.GenomeDiagram.FeatureSet"]], "graphdata (class in bio.graphics.genomediagram)": [[104, "Bio.Graphics.GenomeDiagram.GraphData"]], "graphset (class in bio.graphics.genomediagram)": [[104, "Bio.Graphics.GenomeDiagram.GraphSet"]], "track (class in bio.graphics.genomediagram)": [[104, "Bio.Graphics.GenomeDiagram.Track"]], "__getattr__() (bio.graphics.genomediagram.feature method)": [[104, "Bio.Graphics.GenomeDiagram.Feature.__getattr__"]], "__getitem__() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.__getitem__"]], "__getitem__() (bio.graphics.genomediagram.featureset method)": [[104, "Bio.Graphics.GenomeDiagram.FeatureSet.__getitem__"]], "__getitem__() (bio.graphics.genomediagram.graphdata method)": [[104, "Bio.Graphics.GenomeDiagram.GraphData.__getitem__"]], "__getitem__() (bio.graphics.genomediagram.graphset method)": [[104, "Bio.Graphics.GenomeDiagram.GraphSet.__getitem__"]], "__getitem__() (bio.graphics.genomediagram.track method)": [[104, "Bio.Graphics.GenomeDiagram.Track.__getitem__"]], "__init__() (bio.graphics.genomediagram.colortranslator method)": [[104, "Bio.Graphics.GenomeDiagram.ColorTranslator.__init__"]], "__init__() (bio.graphics.genomediagram.crosslink method)": [[104, "Bio.Graphics.GenomeDiagram.CrossLink.__init__"]], "__init__() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.__init__"]], "__init__() (bio.graphics.genomediagram.feature method)": [[104, "Bio.Graphics.GenomeDiagram.Feature.__init__"]], "__init__() (bio.graphics.genomediagram.featureset method)": [[104, "Bio.Graphics.GenomeDiagram.FeatureSet.__init__"]], "__init__() (bio.graphics.genomediagram.graphdata method)": [[104, "Bio.Graphics.GenomeDiagram.GraphData.__init__"]], "__init__() (bio.graphics.genomediagram.graphset method)": [[104, "Bio.Graphics.GenomeDiagram.GraphSet.__init__"]], "__init__() (bio.graphics.genomediagram.track method)": [[104, "Bio.Graphics.GenomeDiagram.Track.__init__"]], "__len__() (bio.graphics.genomediagram.featureset method)": [[104, "Bio.Graphics.GenomeDiagram.FeatureSet.__len__"]], "__len__() (bio.graphics.genomediagram.graphdata method)": [[104, "Bio.Graphics.GenomeDiagram.GraphData.__len__"]], "__len__() (bio.graphics.genomediagram.graphset method)": [[104, "Bio.Graphics.GenomeDiagram.GraphSet.__len__"]], "__str__() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.__str__"]], "__str__() (bio.graphics.genomediagram.featureset method)": [[104, "Bio.Graphics.GenomeDiagram.FeatureSet.__str__"]], "__str__() (bio.graphics.genomediagram.graphdata method)": [[104, "Bio.Graphics.GenomeDiagram.GraphData.__str__"]], "__str__() (bio.graphics.genomediagram.graphset method)": [[104, "Bio.Graphics.GenomeDiagram.GraphSet.__str__"]], "__str__() (bio.graphics.genomediagram.track method)": [[104, "Bio.Graphics.GenomeDiagram.Track.__str__"]], "add_feature() (bio.graphics.genomediagram.featureset method)": [[104, "Bio.Graphics.GenomeDiagram.FeatureSet.add_feature"]], "add_point() (bio.graphics.genomediagram.graphdata method)": [[104, "Bio.Graphics.GenomeDiagram.GraphData.add_point"]], "add_set() (bio.graphics.genomediagram.track method)": [[104, "Bio.Graphics.GenomeDiagram.Track.add_set"]], "add_track() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.add_track"]], "artemis_color() (bio.graphics.genomediagram.colortranslator method)": [[104, "Bio.Graphics.GenomeDiagram.ColorTranslator.artemis_color"]], "data_quartiles() (bio.graphics.genomediagram.graphset method)": [[104, "Bio.Graphics.GenomeDiagram.GraphSet.data_quartiles"]], "del_feature() (bio.graphics.genomediagram.featureset method)": [[104, "Bio.Graphics.GenomeDiagram.FeatureSet.del_feature"]], "del_graph() (bio.graphics.genomediagram.graphset method)": [[104, "Bio.Graphics.GenomeDiagram.GraphSet.del_graph"]], "del_set() (bio.graphics.genomediagram.track method)": [[104, "Bio.Graphics.GenomeDiagram.Track.del_set"]], "del_track() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.del_track"]], "draw() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.draw"]], "enda (bio.graphics.genomediagram.crosslink property)": [[104, "Bio.Graphics.GenomeDiagram.CrossLink.endA"]], "endb (bio.graphics.genomediagram.crosslink property)": [[104, "Bio.Graphics.GenomeDiagram.CrossLink.endB"]], "float1_color() (bio.graphics.genomediagram.colortranslator method)": [[104, "Bio.Graphics.GenomeDiagram.ColorTranslator.float1_color"]], "get_artemis_colorscheme() (bio.graphics.genomediagram.colortranslator method)": [[104, "Bio.Graphics.GenomeDiagram.ColorTranslator.get_artemis_colorscheme"]], "get_colorscheme() (bio.graphics.genomediagram.colortranslator method)": [[104, "Bio.Graphics.GenomeDiagram.ColorTranslator.get_colorscheme"]], "get_data() (bio.graphics.genomediagram.graphdata method)": [[104, "Bio.Graphics.GenomeDiagram.GraphData.get_data"]], "get_drawn_levels() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.get_drawn_levels"]], "get_feature() (bio.graphics.genomediagram.feature method)": [[104, "Bio.Graphics.GenomeDiagram.Feature.get_feature"]], "get_features() (bio.graphics.genomediagram.featureset method)": [[104, "Bio.Graphics.GenomeDiagram.FeatureSet.get_features"]], "get_graphs() (bio.graphics.genomediagram.graphset method)": [[104, "Bio.Graphics.GenomeDiagram.GraphSet.get_graphs"]], "get_ids() (bio.graphics.genomediagram.featureset method)": [[104, "Bio.Graphics.GenomeDiagram.FeatureSet.get_ids"]], "get_ids() (bio.graphics.genomediagram.graphset method)": [[104, "Bio.Graphics.GenomeDiagram.GraphSet.get_ids"]], "get_ids() (bio.graphics.genomediagram.track method)": [[104, "Bio.Graphics.GenomeDiagram.Track.get_ids"]], "get_levels() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.get_levels"]], "get_sets() (bio.graphics.genomediagram.track method)": [[104, "Bio.Graphics.GenomeDiagram.Track.get_sets"]], "get_tracks() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.get_tracks"]], "int255_color() (bio.graphics.genomediagram.colortranslator method)": [[104, "Bio.Graphics.GenomeDiagram.ColorTranslator.int255_color"]], "mean() (bio.graphics.genomediagram.graphdata method)": [[104, "Bio.Graphics.GenomeDiagram.GraphData.mean"]], "move_track() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.move_track"]], "new_graph() (bio.graphics.genomediagram.graphset method)": [[104, "Bio.Graphics.GenomeDiagram.GraphSet.new_graph"]], "new_set() (bio.graphics.genomediagram.track method)": [[104, "Bio.Graphics.GenomeDiagram.Track.new_set"]], "new_track() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.new_track"]], "quartiles() (bio.graphics.genomediagram.graphdata method)": [[104, "Bio.Graphics.GenomeDiagram.GraphData.quartiles"]], "range() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.range"]], "range() (bio.graphics.genomediagram.featureset method)": [[104, "Bio.Graphics.GenomeDiagram.FeatureSet.range"]], "range() (bio.graphics.genomediagram.graphdata method)": [[104, "Bio.Graphics.GenomeDiagram.GraphData.range"]], "range() (bio.graphics.genomediagram.graphset method)": [[104, "Bio.Graphics.GenomeDiagram.GraphSet.range"]], "range() (bio.graphics.genomediagram.track method)": [[104, "Bio.Graphics.GenomeDiagram.Track.range"]], "read_colorscheme() (bio.graphics.genomediagram.colortranslator method)": [[104, "Bio.Graphics.GenomeDiagram.ColorTranslator.read_colorscheme"]], "renumber_tracks() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.renumber_tracks"]], "scheme_color() (bio.graphics.genomediagram.colortranslator method)": [[104, "Bio.Graphics.GenomeDiagram.ColorTranslator.scheme_color"]], "set_all_features() (bio.graphics.genomediagram.featureset method)": [[104, "Bio.Graphics.GenomeDiagram.FeatureSet.set_all_features"]], "set_all_tracks() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.set_all_tracks"]], "set_color() (bio.graphics.genomediagram.feature method)": [[104, "Bio.Graphics.GenomeDiagram.Feature.set_color"]], "set_colour() (bio.graphics.genomediagram.feature method)": [[104, "Bio.Graphics.GenomeDiagram.Feature.set_colour"]], "set_data() (bio.graphics.genomediagram.graphdata method)": [[104, "Bio.Graphics.GenomeDiagram.GraphData.set_data"]], "set_feature() (bio.graphics.genomediagram.feature method)": [[104, "Bio.Graphics.GenomeDiagram.Feature.set_feature"]], "starta (bio.graphics.genomediagram.crosslink property)": [[104, "Bio.Graphics.GenomeDiagram.CrossLink.startA"]], "startb (bio.graphics.genomediagram.crosslink property)": [[104, "Bio.Graphics.GenomeDiagram.CrossLink.startB"]], "stdev() (bio.graphics.genomediagram.graphdata method)": [[104, "Bio.Graphics.GenomeDiagram.GraphData.stdev"]], "to_string() (bio.graphics.genomediagram.featureset method)": [[104, "Bio.Graphics.GenomeDiagram.FeatureSet.to_string"]], "to_string() (bio.graphics.genomediagram.graphset method)": [[104, "Bio.Graphics.GenomeDiagram.GraphSet.to_string"]], "to_string() (bio.graphics.genomediagram.track method)": [[104, "Bio.Graphics.GenomeDiagram.Track.to_string"]], "translate() (bio.graphics.genomediagram.colortranslator method)": [[104, "Bio.Graphics.GenomeDiagram.ColorTranslator.translate"]], "write() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.write"]], "write_to_string() (bio.graphics.genomediagram.diagram method)": [[104, "Bio.Graphics.GenomeDiagram.Diagram.write_to_string"]], "bio.graphics.kgml_vis": [[105, "module-Bio.Graphics.KGML_vis"]], "kgmlcanvas (class in bio.graphics.kgml_vis)": [[105, "Bio.Graphics.KGML_vis.KGMLCanvas"]], "__init__() (bio.graphics.kgml_vis.kgmlcanvas method)": [[105, "Bio.Graphics.KGML_vis.KGMLCanvas.__init__"]], "color_to_reportlab() (in module bio.graphics.kgml_vis)": [[105, "Bio.Graphics.KGML_vis.color_to_reportlab"]], "darken() (in module bio.graphics.kgml_vis)": [[105, "Bio.Graphics.KGML_vis.darken"]], "draw() (bio.graphics.kgml_vis.kgmlcanvas method)": [[105, "Bio.Graphics.KGML_vis.KGMLCanvas.draw"]], "get_temp_imagefilename() (in module bio.graphics.kgml_vis)": [[105, "Bio.Graphics.KGML_vis.get_temp_imagefilename"]], "bio.hmm": [[106, "module-Bio.HMM"]], "abstractdpalgorithms (class in bio.hmm.dynamicprogramming)": [[107, "Bio.HMM.DynamicProgramming.AbstractDPAlgorithms"]], "bio.hmm.dynamicprogramming": [[107, "module-Bio.HMM.DynamicProgramming"]], "logdpalgorithms (class in bio.hmm.dynamicprogramming)": [[107, "Bio.HMM.DynamicProgramming.LogDPAlgorithms"]], "scaleddpalgorithms (class in bio.hmm.dynamicprogramming)": [[107, "Bio.HMM.DynamicProgramming.ScaledDPAlgorithms"]], "__init__() (bio.hmm.dynamicprogramming.abstractdpalgorithms method)": [[107, "Bio.HMM.DynamicProgramming.AbstractDPAlgorithms.__init__"]], "__init__() (bio.hmm.dynamicprogramming.logdpalgorithms method)": [[107, "Bio.HMM.DynamicProgramming.LogDPAlgorithms.__init__"]], "__init__() (bio.hmm.dynamicprogramming.scaleddpalgorithms method)": [[107, "Bio.HMM.DynamicProgramming.ScaledDPAlgorithms.__init__"]], "backward_algorithm() (bio.hmm.dynamicprogramming.abstractdpalgorithms method)": [[107, "Bio.HMM.DynamicProgramming.AbstractDPAlgorithms.backward_algorithm"]], "forward_algorithm() (bio.hmm.dynamicprogramming.abstractdpalgorithms method)": [[107, "Bio.HMM.DynamicProgramming.AbstractDPAlgorithms.forward_algorithm"]], "bio.hmm.markovmodel": [[108, "module-Bio.HMM.MarkovModel"]], "default_pseudo (bio.hmm.markovmodel.markovmodelbuilder attribute)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.DEFAULT_PSEUDO"]], "hiddenmarkovmodel (class in bio.hmm.markovmodel)": [[108, "Bio.HMM.MarkovModel.HiddenMarkovModel"]], "markovmodelbuilder (class in bio.hmm.markovmodel)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder"]], "__init__() (bio.hmm.markovmodel.hiddenmarkovmodel method)": [[108, "Bio.HMM.MarkovModel.HiddenMarkovModel.__init__"]], "__init__() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.__init__"]], "allow_all_transitions() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.allow_all_transitions"]], "allow_transition() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.allow_transition"]], "destroy_transition() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.destroy_transition"]], "get_blank_emissions() (bio.hmm.markovmodel.hiddenmarkovmodel method)": [[108, "Bio.HMM.MarkovModel.HiddenMarkovModel.get_blank_emissions"]], "get_blank_transitions() (bio.hmm.markovmodel.hiddenmarkovmodel method)": [[108, "Bio.HMM.MarkovModel.HiddenMarkovModel.get_blank_transitions"]], "get_markov_model() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.get_markov_model"]], "set_emission_pseudocount() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.set_emission_pseudocount"]], "set_emission_score() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.set_emission_score"]], "set_equal_probabilities() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.set_equal_probabilities"]], "set_initial_probabilities() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.set_initial_probabilities"]], "set_random_emission_probabilities() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.set_random_emission_probabilities"]], "set_random_initial_probabilities() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.set_random_initial_probabilities"]], "set_random_probabilities() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.set_random_probabilities"]], "set_random_transition_probabilities() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.set_random_transition_probabilities"]], "set_transition_pseudocount() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.set_transition_pseudocount"]], "set_transition_score() (bio.hmm.markovmodel.markovmodelbuilder method)": [[108, "Bio.HMM.MarkovModel.MarkovModelBuilder.set_transition_score"]], "transitions_from() (bio.hmm.markovmodel.hiddenmarkovmodel method)": [[108, "Bio.HMM.MarkovModel.HiddenMarkovModel.transitions_from"]], "transitions_to() (bio.hmm.markovmodel.hiddenmarkovmodel method)": [[108, "Bio.HMM.MarkovModel.HiddenMarkovModel.transitions_to"]], "viterbi() (bio.hmm.markovmodel.hiddenmarkovmodel method)": [[108, "Bio.HMM.MarkovModel.HiddenMarkovModel.viterbi"]], "abstracttrainer (class in bio.hmm.trainer)": [[109, "Bio.HMM.Trainer.AbstractTrainer"]], "baumwelchtrainer (class in bio.hmm.trainer)": [[109, "Bio.HMM.Trainer.BaumWelchTrainer"]], "bio.hmm.trainer": [[109, "module-Bio.HMM.Trainer"]], "knownstatetrainer (class in bio.hmm.trainer)": [[109, "Bio.HMM.Trainer.KnownStateTrainer"]], "trainingsequence (class in bio.hmm.trainer)": [[109, "Bio.HMM.Trainer.TrainingSequence"]], "__init__() (bio.hmm.trainer.abstracttrainer method)": [[109, "Bio.HMM.Trainer.AbstractTrainer.__init__"]], "__init__() (bio.hmm.trainer.baumwelchtrainer method)": [[109, "Bio.HMM.Trainer.BaumWelchTrainer.__init__"]], "__init__() (bio.hmm.trainer.knownstatetrainer method)": [[109, "Bio.HMM.Trainer.KnownStateTrainer.__init__"]], "__init__() (bio.hmm.trainer.trainingsequence method)": [[109, "Bio.HMM.Trainer.TrainingSequence.__init__"]], "estimate_params() (bio.hmm.trainer.abstracttrainer method)": [[109, "Bio.HMM.Trainer.AbstractTrainer.estimate_params"]], "log_likelihood() (bio.hmm.trainer.abstracttrainer method)": [[109, "Bio.HMM.Trainer.AbstractTrainer.log_likelihood"]], "ml_estimator() (bio.hmm.trainer.abstracttrainer method)": [[109, "Bio.HMM.Trainer.AbstractTrainer.ml_estimator"]], "train() (bio.hmm.trainer.baumwelchtrainer method)": [[109, "Bio.HMM.Trainer.BaumWelchTrainer.train"]], "train() (bio.hmm.trainer.knownstatetrainer method)": [[109, "Bio.HMM.Trainer.KnownStateTrainer.train"]], "update_emissions() (bio.hmm.trainer.baumwelchtrainer method)": [[109, "Bio.HMM.Trainer.BaumWelchTrainer.update_emissions"]], "update_transitions() (bio.hmm.trainer.baumwelchtrainer method)": [[109, "Bio.HMM.Trainer.BaumWelchTrainer.update_transitions"]], "bio.hmm.utilities": [[110, "module-Bio.HMM.Utilities"]], "pretty_print_prediction() (in module bio.hmm.utilities)": [[110, "Bio.HMM.Utilities.pretty_print_prediction"]], "bio.kegg": [[111, "module-Bio.KEGG"]], "bio.kegg.compound": [[112, "module-Bio.KEGG.Compound"]], "record (class in bio.kegg.compound)": [[112, "Bio.KEGG.Compound.Record"]], "__init__() (bio.kegg.compound.record method)": [[112, "Bio.KEGG.Compound.Record.__init__"]], "__str__() (bio.kegg.compound.record method)": [[112, "Bio.KEGG.Compound.Record.__str__"]], "parse() (in module bio.kegg.compound)": [[112, "Bio.KEGG.Compound.parse"]], "bio.kegg.enzyme": [[113, "module-Bio.KEGG.Enzyme"]], "record (class in bio.kegg.enzyme)": [[113, "Bio.KEGG.Enzyme.Record"]], "__init__() (bio.kegg.enzyme.record method)": [[113, "Bio.KEGG.Enzyme.Record.__init__"]], "__str__() (bio.kegg.enzyme.record method)": [[113, "Bio.KEGG.Enzyme.Record.__str__"]], "parse() (in module bio.kegg.enzyme)": [[113, "Bio.KEGG.Enzyme.parse"]], "read() (in module bio.kegg.enzyme)": [[113, "Bio.KEGG.Enzyme.read"]], "bio.kegg.gene": [[114, "module-Bio.KEGG.Gene"]], "record (class in bio.kegg.gene)": [[114, "Bio.KEGG.Gene.Record"]], "__init__() (bio.kegg.gene.record method)": [[114, "Bio.KEGG.Gene.Record.__init__"]], "__str__() (bio.kegg.gene.record method)": [[114, "Bio.KEGG.Gene.Record.__str__"]], "parse() (in module bio.kegg.gene)": [[114, "Bio.KEGG.Gene.parse"]], "bio.kegg.kgml": [[115, "module-Bio.KEGG.KGML"]], "bio.kegg.kgml.kgml_parser": [[116, "module-Bio.KEGG.KGML.KGML_parser"]], "kgmlparser (class in bio.kegg.kgml.kgml_parser)": [[116, "Bio.KEGG.KGML.KGML_parser.KGMLParser"]], "__init__() (bio.kegg.kgml.kgml_parser.kgmlparser method)": [[116, "Bio.KEGG.KGML.KGML_parser.KGMLParser.__init__"]], "parse() (bio.kegg.kgml.kgml_parser.kgmlparser method)": [[116, "Bio.KEGG.KGML.KGML_parser.KGMLParser.parse"]], "parse() (in module bio.kegg.kgml.kgml_parser)": [[116, "Bio.KEGG.KGML.KGML_parser.parse"]], "read() (in module bio.kegg.kgml.kgml_parser)": [[116, "Bio.KEGG.KGML.KGML_parser.read"]], "bio.kegg.kgml.kgml_pathway": [[117, "module-Bio.KEGG.KGML.KGML_pathway"]], "component (class in bio.kegg.kgml.kgml_pathway)": [[117, "Bio.KEGG.KGML.KGML_pathway.Component"]], "entry (class in bio.kegg.kgml.kgml_pathway)": [[117, "Bio.KEGG.KGML.KGML_pathway.Entry"]], "graphics (class in bio.kegg.kgml.kgml_pathway)": [[117, "Bio.KEGG.KGML.KGML_pathway.Graphics"]], "pathway (class in bio.kegg.kgml.kgml_pathway)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway"]], "reaction (class in bio.kegg.kgml.kgml_pathway)": [[117, "Bio.KEGG.KGML.KGML_pathway.Reaction"]], "relation (class in bio.kegg.kgml.kgml_pathway)": [[117, "Bio.KEGG.KGML.KGML_pathway.Relation"]], "__init__() (bio.kegg.kgml.kgml_pathway.component method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Component.__init__"]], "__init__() (bio.kegg.kgml.kgml_pathway.entry method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Entry.__init__"]], "__init__() (bio.kegg.kgml.kgml_pathway.graphics method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Graphics.__init__"]], "__init__() (bio.kegg.kgml.kgml_pathway.pathway method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.__init__"]], "__init__() (bio.kegg.kgml.kgml_pathway.reaction method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Reaction.__init__"]], "__init__() (bio.kegg.kgml.kgml_pathway.relation method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Relation.__init__"]], "__str__() (bio.kegg.kgml.kgml_pathway.entry method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Entry.__str__"]], "__str__() (bio.kegg.kgml.kgml_pathway.pathway method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.__str__"]], "__str__() (bio.kegg.kgml.kgml_pathway.reaction method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Reaction.__str__"]], "__str__() (bio.kegg.kgml.kgml_pathway.relation method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Relation.__str__"]], "add_component() (bio.kegg.kgml.kgml_pathway.entry method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Entry.add_component"]], "add_entry() (bio.kegg.kgml.kgml_pathway.pathway method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.add_entry"]], "add_graphics() (bio.kegg.kgml.kgml_pathway.entry method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Entry.add_graphics"]], "add_product() (bio.kegg.kgml.kgml_pathway.reaction method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Reaction.add_product"]], "add_reaction() (bio.kegg.kgml.kgml_pathway.pathway method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.add_reaction"]], "add_relation() (bio.kegg.kgml.kgml_pathway.pathway method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.add_relation"]], "add_substrate() (bio.kegg.kgml.kgml_pathway.reaction method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Reaction.add_substrate"]], "bgcolor (bio.kegg.kgml.kgml_pathway.graphics property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Graphics.bgcolor"]], "bounds (bio.kegg.kgml.kgml_pathway.entry property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Entry.bounds"]], "bounds (bio.kegg.kgml.kgml_pathway.graphics property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Graphics.bounds"]], "bounds (bio.kegg.kgml.kgml_pathway.pathway property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.bounds"]], "centre (bio.kegg.kgml.kgml_pathway.graphics property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Graphics.centre"]], "compounds (bio.kegg.kgml.kgml_pathway.pathway property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.compounds"]], "coords (bio.kegg.kgml.kgml_pathway.graphics property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Graphics.coords"]], "element (bio.kegg.kgml.kgml_pathway.component property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Component.element"]], "element (bio.kegg.kgml.kgml_pathway.entry property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Entry.element"]], "element (bio.kegg.kgml.kgml_pathway.graphics property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Graphics.element"]], "element (bio.kegg.kgml.kgml_pathway.pathway property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.element"]], "element (bio.kegg.kgml.kgml_pathway.reaction property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Reaction.element"]], "element (bio.kegg.kgml.kgml_pathway.relation property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Relation.element"]], "entry (bio.kegg.kgml.kgml_pathway.reaction property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Reaction.entry"]], "entry1 (bio.kegg.kgml.kgml_pathway.relation property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Relation.entry1"]], "entry2 (bio.kegg.kgml.kgml_pathway.relation property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Relation.entry2"]], "fgcolor (bio.kegg.kgml.kgml_pathway.graphics property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Graphics.fgcolor"]], "genes (bio.kegg.kgml.kgml_pathway.pathway property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.genes"]], "get_kgml() (bio.kegg.kgml.kgml_pathway.pathway method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.get_KGML"]], "height (bio.kegg.kgml.kgml_pathway.graphics property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Graphics.height"]], "id (bio.kegg.kgml.kgml_pathway.component property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Component.id"]], "id (bio.kegg.kgml.kgml_pathway.entry property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Entry.id"]], "id (bio.kegg.kgml.kgml_pathway.reaction property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Reaction.id"]], "is_reactant (bio.kegg.kgml.kgml_pathway.entry property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Entry.is_reactant"]], "maps (bio.kegg.kgml.kgml_pathway.pathway property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.maps"]], "name (bio.kegg.kgml.kgml_pathway.entry property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Entry.name"]], "name (bio.kegg.kgml.kgml_pathway.pathway property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.name"]], "name (bio.kegg.kgml.kgml_pathway.reaction property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Reaction.name"]], "number (bio.kegg.kgml.kgml_pathway.pathway property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.number"]], "orthologs (bio.kegg.kgml.kgml_pathway.pathway property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.orthologs"]], "products (bio.kegg.kgml.kgml_pathway.reaction property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Reaction.products"]], "reactant_ids (bio.kegg.kgml.kgml_pathway.reaction property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Reaction.reactant_ids"]], "reaction (bio.kegg.kgml.kgml_pathway.entry property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Entry.reaction"]], "reaction_entries (bio.kegg.kgml.kgml_pathway.pathway property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.reaction_entries"]], "reactions (bio.kegg.kgml.kgml_pathway.pathway property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.reactions"]], "relations (bio.kegg.kgml.kgml_pathway.pathway property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.relations"]], "remove_component() (bio.kegg.kgml.kgml_pathway.entry method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Entry.remove_component"]], "remove_entry() (bio.kegg.kgml.kgml_pathway.pathway method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.remove_entry"]], "remove_graphics() (bio.kegg.kgml.kgml_pathway.entry method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Entry.remove_graphics"]], "remove_reaction() (bio.kegg.kgml.kgml_pathway.pathway method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.remove_reaction"]], "remove_relation() (bio.kegg.kgml.kgml_pathway.pathway method)": [[117, "Bio.KEGG.KGML.KGML_pathway.Pathway.remove_relation"]], "substrates (bio.kegg.kgml.kgml_pathway.reaction property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Reaction.substrates"]], "width (bio.kegg.kgml.kgml_pathway.graphics property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Graphics.width"]], "x (bio.kegg.kgml.kgml_pathway.graphics property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Graphics.x"]], "y (bio.kegg.kgml.kgml_pathway.graphics property)": [[117, "Bio.KEGG.KGML.KGML_pathway.Graphics.y"]], "bio.kegg.map": [[118, "module-Bio.KEGG.Map"]], "parse() (in module bio.kegg.map)": [[118, "Bio.KEGG.Map.parse"]], "bio.kegg.rest": [[119, "module-Bio.KEGG.REST"]], "kegg_conv() (in module bio.kegg.rest)": [[119, "Bio.KEGG.REST.kegg_conv"]], "kegg_find() (in module bio.kegg.rest)": [[119, "Bio.KEGG.REST.kegg_find"]], "kegg_get() (in module bio.kegg.rest)": [[119, "Bio.KEGG.REST.kegg_get"]], "kegg_info() (in module bio.kegg.rest)": [[119, "Bio.KEGG.REST.kegg_info"]], "kegg_link() (in module bio.kegg.rest)": [[119, "Bio.KEGG.REST.kegg_link"]], "kegg_list() (in module bio.kegg.rest)": [[119, "Bio.KEGG.REST.kegg_list"]], "bio.logisticregression": [[120, "module-Bio.LogisticRegression"]], "logisticregression (class in bio.logisticregression)": [[120, "Bio.LogisticRegression.LogisticRegression"]], "__init__() (bio.logisticregression.logisticregression method)": [[120, "Bio.LogisticRegression.LogisticRegression.__init__"]], "calculate() (in module bio.logisticregression)": [[120, "Bio.LogisticRegression.calculate"]], "classify() (in module bio.logisticregression)": [[120, "Bio.LogisticRegression.classify"]], "train() (in module bio.logisticregression)": [[120, "Bio.LogisticRegression.train"]], "bio.markovmodel": [[121, "module-Bio.MarkovModel"]], "markovmodel (class in bio.markovmodel)": [[121, "Bio.MarkovModel.MarkovModel"]], "__init__() (bio.markovmodel.markovmodel method)": [[121, "Bio.MarkovModel.MarkovModel.__init__"]], "__str__() (bio.markovmodel.markovmodel method)": [[121, "Bio.MarkovModel.MarkovModel.__str__"]], "find_states() (in module bio.markovmodel)": [[121, "Bio.MarkovModel.find_states"]], "itemindex() (in module bio.markovmodel)": [[121, "Bio.MarkovModel.itemindex"]], "load() (in module bio.markovmodel)": [[121, "Bio.MarkovModel.load"]], "save() (in module bio.markovmodel)": [[121, "Bio.MarkovModel.save"]], "train_bw() (in module bio.markovmodel)": [[121, "Bio.MarkovModel.train_bw"]], "train_visible() (in module bio.markovmodel)": [[121, "Bio.MarkovModel.train_visible"]], "bio.maxentropy": [[122, "module-Bio.MaxEntropy"]], "maxentropy (class in bio.maxentropy)": [[122, "Bio.MaxEntropy.MaxEntropy"]], "__init__() (bio.maxentropy.maxentropy method)": [[122, "Bio.MaxEntropy.MaxEntropy.__init__"]], "calculate() (in module bio.maxentropy)": [[122, "Bio.MaxEntropy.calculate"]], "classify() (in module bio.maxentropy)": [[122, "Bio.MaxEntropy.classify"]], "train() (in module bio.maxentropy)": [[122, "Bio.MaxEntropy.train"]], "bio.medline": [[123, "module-Bio.Medline"]], "record (class in bio.medline)": [[123, "Bio.Medline.Record"]], "parse() (in module bio.medline)": [[123, "Bio.Medline.parse"]], "read() (in module bio.medline)": [[123, "Bio.Medline.read"]], "bio.nmr": [[124, "module-Bio.NMR"]], "bio.nmr.noetools": [[125, "module-Bio.NMR.NOEtools"]], "predictnoe() (in module bio.nmr.noetools)": [[125, "Bio.NMR.NOEtools.predictNOE"]], "bio.nmr.xpktools": [[126, "module-Bio.NMR.xpktools"]], "peaklist (class in bio.nmr.xpktools)": [[126, "Bio.NMR.xpktools.Peaklist"]], "xpkentry (class in bio.nmr.xpktools)": [[126, "Bio.NMR.xpktools.XpkEntry"]], "__init__() (bio.nmr.xpktools.peaklist method)": [[126, "Bio.NMR.xpktools.Peaklist.__init__"]], "__init__() (bio.nmr.xpktools.xpkentry method)": [[126, "Bio.NMR.xpktools.XpkEntry.__init__"]], "data_table() (in module bio.nmr.xpktools)": [[126, "Bio.NMR.xpktools.data_table"]], "replace_entry() (in module bio.nmr.xpktools)": [[126, "Bio.NMR.xpktools.replace_entry"]], "residue_dict() (bio.nmr.xpktools.peaklist method)": [[126, "Bio.NMR.xpktools.Peaklist.residue_dict"]], "write_header() (bio.nmr.xpktools.peaklist method)": [[126, "Bio.NMR.xpktools.Peaklist.write_header"]], "bio.naivebayes": [[127, "module-Bio.NaiveBayes"]], "naivebayes (class in bio.naivebayes)": [[127, "Bio.NaiveBayes.NaiveBayes"]], "__init__() (bio.naivebayes.naivebayes method)": [[127, "Bio.NaiveBayes.NaiveBayes.__init__"]], "calculate() (in module bio.naivebayes)": [[127, "Bio.NaiveBayes.calculate"]], "classify() (in module bio.naivebayes)": [[127, "Bio.NaiveBayes.classify"]], "train() (in module bio.naivebayes)": [[127, "Bio.NaiveBayes.train"]], "bio.nexus": [[128, "module-Bio.Nexus"]], "bio.nexus.nexus": [[129, "module-Bio.Nexus.Nexus"]], "block (class in bio.nexus.nexus)": [[129, "Bio.Nexus.Nexus.Block"]], "charbuffer (class in bio.nexus.nexus)": [[129, "Bio.Nexus.Nexus.CharBuffer"]], "commandline (class in bio.nexus.nexus)": [[129, "Bio.Nexus.Nexus.Commandline"]], "nexus (class in bio.nexus.nexus)": [[129, "Bio.Nexus.Nexus.Nexus"]], "nexuserror": [[129, "Bio.Nexus.Nexus.NexusError"], [131, "Bio.Nexus.StandardData.NexusError"]], "stepmatrix (class in bio.nexus.nexus)": [[129, "Bio.Nexus.Nexus.StepMatrix"]], "__init__() (bio.nexus.nexus.block method)": [[129, "Bio.Nexus.Nexus.Block.__init__"]], "__init__() (bio.nexus.nexus.charbuffer method)": [[129, "Bio.Nexus.Nexus.CharBuffer.__init__"]], "__init__() (bio.nexus.nexus.commandline method)": [[129, "Bio.Nexus.Nexus.Commandline.__init__"]], "__init__() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.__init__"]], "__init__() (bio.nexus.nexus.stepmatrix method)": [[129, "Bio.Nexus.Nexus.StepMatrix.__init__"]], "__next__() (bio.nexus.nexus.charbuffer method)": [[129, "Bio.Nexus.Nexus.CharBuffer.__next__"]], "add() (bio.nexus.nexus.stepmatrix method)": [[129, "Bio.Nexus.Nexus.StepMatrix.add"]], "add_sequence() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.add_sequence"]], "append_sets() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.append_sets"]], "bootstrap() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.bootstrap"]], "combine() (in module bio.nexus.nexus)": [[129, "Bio.Nexus.Nexus.combine"]], "constant() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.constant"]], "crop_matrix() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.crop_matrix"]], "cstatus() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.cstatus"]], "export_fasta() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.export_fasta"]], "export_phylip() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.export_phylip"]], "gaponly() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.gaponly"]], "get_original_taxon_order() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.get_original_taxon_order"]], "get_start_end() (in module bio.nexus.nexus)": [[129, "Bio.Nexus.Nexus.get_start_end"]], "insert_gap() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.insert_gap"]], "invert() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.invert"]], "next_nonwhitespace() (bio.nexus.nexus.charbuffer method)": [[129, "Bio.Nexus.Nexus.CharBuffer.next_nonwhitespace"]], "next_until() (bio.nexus.nexus.charbuffer method)": [[129, "Bio.Nexus.Nexus.CharBuffer.next_until"]], "next_word() (bio.nexus.nexus.charbuffer method)": [[129, "Bio.Nexus.Nexus.CharBuffer.next_word"]], "original_taxon_order (bio.nexus.nexus.nexus property)": [[129, "Bio.Nexus.Nexus.Nexus.original_taxon_order"]], "peek() (bio.nexus.nexus.charbuffer method)": [[129, "Bio.Nexus.Nexus.CharBuffer.peek"]], "peek_nonwhitespace() (bio.nexus.nexus.charbuffer method)": [[129, "Bio.Nexus.Nexus.CharBuffer.peek_nonwhitespace"]], "peek_word() (bio.nexus.nexus.charbuffer method)": [[129, "Bio.Nexus.Nexus.CharBuffer.peek_word"]], "quotestrip() (in module bio.nexus.nexus)": [[129, "Bio.Nexus.Nexus.quotestrip"]], "read() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.read"]], "rest() (bio.nexus.nexus.charbuffer method)": [[129, "Bio.Nexus.Nexus.CharBuffer.rest"]], "safename() (in module bio.nexus.nexus)": [[129, "Bio.Nexus.Nexus.safename"]], "set() (bio.nexus.nexus.stepmatrix method)": [[129, "Bio.Nexus.Nexus.StepMatrix.set"]], "set_original_taxon_order() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.set_original_taxon_order"]], "skip_whitespace() (bio.nexus.nexus.charbuffer method)": [[129, "Bio.Nexus.Nexus.CharBuffer.skip_whitespace"]], "smprint() (bio.nexus.nexus.stepmatrix method)": [[129, "Bio.Nexus.Nexus.StepMatrix.smprint"]], "sum() (bio.nexus.nexus.stepmatrix method)": [[129, "Bio.Nexus.Nexus.StepMatrix.sum"]], "terminal_gap_to_missing() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.terminal_gap_to_missing"]], "transformation() (bio.nexus.nexus.stepmatrix method)": [[129, "Bio.Nexus.Nexus.StepMatrix.transformation"]], "weighted_stepmatrix() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.weighted_stepmatrix"]], "weighting() (bio.nexus.nexus.stepmatrix method)": [[129, "Bio.Nexus.Nexus.StepMatrix.weighting"]], "write_nexus_data() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.write_nexus_data"]], "write_nexus_data_partitions() (bio.nexus.nexus.nexus method)": [[129, "Bio.Nexus.Nexus.Nexus.write_nexus_data_partitions"]], "bio.nexus.nodes": [[130, "module-Bio.Nexus.Nodes"]], "chain (class in bio.nexus.nodes)": [[130, "Bio.Nexus.Nodes.Chain"]], "chainexception": [[130, "Bio.Nexus.Nodes.ChainException"]], "node (class in bio.nexus.nodes)": [[130, "Bio.Nexus.Nodes.Node"]], "nodeexception": [[130, "Bio.Nexus.Nodes.NodeException"]], "__init__() (bio.nexus.nodes.chain method)": [[130, "Bio.Nexus.Nodes.Chain.__init__"]], "__init__() (bio.nexus.nodes.node method)": [[130, "Bio.Nexus.Nodes.Node.__init__"]], "add() (bio.nexus.nodes.chain method)": [[130, "Bio.Nexus.Nodes.Chain.add"]], "add_succ() (bio.nexus.nodes.node method)": [[130, "Bio.Nexus.Nodes.Node.add_succ"]], "all_ids() (bio.nexus.nodes.chain method)": [[130, "Bio.Nexus.Nodes.Chain.all_ids"]], "collapse() (bio.nexus.nodes.chain method)": [[130, "Bio.Nexus.Nodes.Chain.collapse"]], "get_data() (bio.nexus.nodes.node method)": [[130, "Bio.Nexus.Nodes.Node.get_data"]], "get_id() (bio.nexus.nodes.node method)": [[130, "Bio.Nexus.Nodes.Node.get_id"]], "get_prev() (bio.nexus.nodes.node method)": [[130, "Bio.Nexus.Nodes.Node.get_prev"]], "get_succ() (bio.nexus.nodes.node method)": [[130, "Bio.Nexus.Nodes.Node.get_succ"]], "is_parent_of() (bio.nexus.nodes.chain method)": [[130, "Bio.Nexus.Nodes.Chain.is_parent_of"]], "kill() (bio.nexus.nodes.chain method)": [[130, "Bio.Nexus.Nodes.Chain.kill"]], "link() (bio.nexus.nodes.chain method)": [[130, "Bio.Nexus.Nodes.Chain.link"]], "remove_succ() (bio.nexus.nodes.node method)": [[130, "Bio.Nexus.Nodes.Node.remove_succ"]], "set_data() (bio.nexus.nodes.node method)": [[130, "Bio.Nexus.Nodes.Node.set_data"]], "set_id() (bio.nexus.nodes.node method)": [[130, "Bio.Nexus.Nodes.Node.set_id"]], "set_prev() (bio.nexus.nodes.node method)": [[130, "Bio.Nexus.Nodes.Node.set_prev"]], "set_succ() (bio.nexus.nodes.node method)": [[130, "Bio.Nexus.Nodes.Node.set_succ"]], "trace() (bio.nexus.nodes.chain method)": [[130, "Bio.Nexus.Nodes.Chain.trace"]], "unlink() (bio.nexus.nodes.chain method)": [[130, "Bio.Nexus.Nodes.Chain.unlink"]], "bio.nexus.standarddata": [[131, "module-Bio.Nexus.StandardData"]], "standarddata (class in bio.nexus.standarddata)": [[131, "Bio.Nexus.StandardData.StandardData"]], "__getitem__() (bio.nexus.standarddata.standarddata method)": [[131, "Bio.Nexus.StandardData.StandardData.__getitem__"]], "__init__() (bio.nexus.standarddata.standarddata method)": [[131, "Bio.Nexus.StandardData.StandardData.__init__"]], "__iter__() (bio.nexus.standarddata.standarddata method)": [[131, "Bio.Nexus.StandardData.StandardData.__iter__"]], "__len__() (bio.nexus.standarddata.standarddata method)": [[131, "Bio.Nexus.StandardData.StandardData.__len__"]], "__next__() (bio.nexus.standarddata.standarddata method)": [[131, "Bio.Nexus.StandardData.StandardData.__next__"]], "__str__() (bio.nexus.standarddata.standarddata method)": [[131, "Bio.Nexus.StandardData.StandardData.__str__"]], "raw() (bio.nexus.standarddata.standarddata method)": [[131, "Bio.Nexus.StandardData.StandardData.raw"]], "bio.nexus.trees": [[132, "module-Bio.Nexus.Trees"]], "nodedata (class in bio.nexus.trees)": [[132, "Bio.Nexus.Trees.NodeData"]], "tree (class in bio.nexus.trees)": [[132, "Bio.Nexus.Trees.Tree"]], "treeerror": [[132, "Bio.Nexus.Trees.TreeError"]], "__init__() (bio.nexus.trees.nodedata method)": [[132, "Bio.Nexus.Trees.NodeData.__init__"]], "__init__() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.__init__"]], "__str__() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.__str__"]], "branchlength2support() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.branchlength2support"]], "collapse_genera() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.collapse_genera"]], "common_ancestor() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.common_ancestor"]], "consensus() (in module bio.nexus.trees)": [[132, "Bio.Nexus.Trees.consensus"]], "convert_absolute_support() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.convert_absolute_support"]], "count_terminals() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.count_terminals"]], "display() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.display"]], "distance() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.distance"]], "get_taxa() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.get_taxa"]], "get_terminals() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.get_terminals"]], "has_support() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.has_support"]], "is_bifurcating() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.is_bifurcating"]], "is_compatible() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.is_compatible"]], "is_identical() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.is_identical"]], "is_internal() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.is_internal"]], "is_monophyletic() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.is_monophyletic"]], "is_preterminal() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.is_preterminal"]], "is_terminal() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.is_terminal"]], "merge_with_support() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.merge_with_support"]], "node() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.node"]], "prune() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.prune"]], "randomize() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.randomize"]], "root_with_outgroup() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.root_with_outgroup"]], "search_taxon() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.search_taxon"]], "set_subtree() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.set_subtree"]], "split() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.split"]], "sum_branchlength() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.sum_branchlength"]], "to_string() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.to_string"]], "unroot() (bio.nexus.trees.tree method)": [[132, "Bio.Nexus.Trees.Tree.unroot"]], "bio.pdb": [[133, "module-Bio.PDB"]], "abstractatompropertymap (class in bio.pdb.abstractpropertymap)": [[134, "Bio.PDB.AbstractPropertyMap.AbstractAtomPropertyMap"]], "abstractpropertymap (class in bio.pdb.abstractpropertymap)": [[134, "Bio.PDB.AbstractPropertyMap.AbstractPropertyMap"]], "abstractresiduepropertymap (class in bio.pdb.abstractpropertymap)": [[134, "Bio.PDB.AbstractPropertyMap.AbstractResiduePropertyMap"]], "bio.pdb.abstractpropertymap": [[134, "module-Bio.PDB.AbstractPropertyMap"]], "__contains__() (bio.pdb.abstractpropertymap.abstractpropertymap method)": [[134, "Bio.PDB.AbstractPropertyMap.AbstractPropertyMap.__contains__"]], "__getitem__() (bio.pdb.abstractpropertymap.abstractpropertymap method)": [[134, "Bio.PDB.AbstractPropertyMap.AbstractPropertyMap.__getitem__"]], "__init__() (bio.pdb.abstractpropertymap.abstractatompropertymap method)": [[134, "Bio.PDB.AbstractPropertyMap.AbstractAtomPropertyMap.__init__"]], "__init__() (bio.pdb.abstractpropertymap.abstractpropertymap method)": [[134, "Bio.PDB.AbstractPropertyMap.AbstractPropertyMap.__init__"]], "__init__() (bio.pdb.abstractpropertymap.abstractresiduepropertymap method)": [[134, "Bio.PDB.AbstractPropertyMap.AbstractResiduePropertyMap.__init__"]], "__iter__() (bio.pdb.abstractpropertymap.abstractpropertymap method)": [[134, "Bio.PDB.AbstractPropertyMap.AbstractPropertyMap.__iter__"]], "__len__() (bio.pdb.abstractpropertymap.abstractpropertymap method)": [[134, "Bio.PDB.AbstractPropertyMap.AbstractPropertyMap.__len__"]], "keys() (bio.pdb.abstractpropertymap.abstractpropertymap method)": [[134, "Bio.PDB.AbstractPropertyMap.AbstractPropertyMap.keys"]], "atom (class in bio.pdb.atom)": [[135, "Bio.PDB.Atom.Atom"]], "bio.pdb.atom": [[135, "module-Bio.PDB.Atom"]], "disorderedatom (class in bio.pdb.atom)": [[135, "Bio.PDB.Atom.DisorderedAtom"]], "__eq__() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.__eq__"]], "__ge__() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.__ge__"]], "__gt__() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.__gt__"]], "__hash__() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.__hash__"]], "__init__() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.__init__"]], "__init__() (bio.pdb.atom.disorderedatom method)": [[135, "Bio.PDB.Atom.DisorderedAtom.__init__"]], "__iter__() (bio.pdb.atom.disorderedatom method)": [[135, "Bio.PDB.Atom.DisorderedAtom.__iter__"]], "__le__() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.__le__"]], "__lt__() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.__lt__"]], "__ne__() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.__ne__"]], "__repr__() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.__repr__"]], "__repr__() (bio.pdb.atom.disorderedatom method)": [[135, "Bio.PDB.Atom.DisorderedAtom.__repr__"]], "__sub__() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.__sub__"]], "center_of_mass() (bio.pdb.atom.disorderedatom method)": [[135, "Bio.PDB.Atom.DisorderedAtom.center_of_mass"]], "copy() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.copy"]], "detach_parent() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.detach_parent"]], "disordered_add() (bio.pdb.atom.disorderedatom method)": [[135, "Bio.PDB.Atom.DisorderedAtom.disordered_add"]], "disordered_get_list() (bio.pdb.atom.disorderedatom method)": [[135, "Bio.PDB.Atom.DisorderedAtom.disordered_get_list"]], "disordered_remove() (bio.pdb.atom.disorderedatom method)": [[135, "Bio.PDB.Atom.DisorderedAtom.disordered_remove"]], "flag_disorder() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.flag_disorder"]], "get_altloc() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_altloc"]], "get_anisou() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_anisou"]], "get_bfactor() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_bfactor"]], "get_charge() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_charge"]], "get_coord() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_coord"]], "get_full_id() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_full_id"]], "get_fullname() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_fullname"]], "get_id() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_id"]], "get_level() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_level"]], "get_name() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_name"]], "get_occupancy() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_occupancy"]], "get_parent() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_parent"]], "get_radius() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_radius"]], "get_serial_number() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_serial_number"]], "get_sigatm() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_sigatm"]], "get_siguij() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_siguij"]], "get_vector() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.get_vector"]], "is_disordered() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.is_disordered"]], "set_altloc() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.set_altloc"]], "set_anisou() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.set_anisou"]], "set_bfactor() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.set_bfactor"]], "set_charge() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.set_charge"]], "set_coord() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.set_coord"]], "set_occupancy() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.set_occupancy"]], "set_parent() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.set_parent"]], "set_radius() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.set_radius"]], "set_serial_number() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.set_serial_number"]], "set_sigatm() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.set_sigatm"]], "set_siguij() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.set_siguij"]], "strictly_equals() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.strictly_equals"]], "transform() (bio.pdb.atom.atom method)": [[135, "Bio.PDB.Atom.Atom.transform"]], "transform() (bio.pdb.atom.disorderedatom method)": [[135, "Bio.PDB.Atom.DisorderedAtom.transform"]], "bio.pdb.chain": [[136, "module-Bio.PDB.Chain"]], "chain (class in bio.pdb.chain)": [[136, "Bio.PDB.Chain.Chain"]], "__contains__() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.__contains__"]], "__delitem__() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.__delitem__"]], "__ge__() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.__ge__"]], "__getitem__() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.__getitem__"]], "__gt__() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.__gt__"]], "__init__() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.__init__"]], "__le__() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.__le__"]], "__lt__() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.__lt__"]], "__orig_bases__ (bio.pdb.chain.chain attribute)": [[136, "Bio.PDB.Chain.Chain.__orig_bases__"]], "__parameters__ (bio.pdb.chain.chain attribute)": [[136, "Bio.PDB.Chain.Chain.__parameters__"]], "__repr__() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.__repr__"]], "atom_to_internal_coordinates() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.atom_to_internal_coordinates"]], "child_dict (bio.pdb.chain.chain attribute)": [[136, "Bio.PDB.Chain.Chain.child_dict"]], "child_list (bio.pdb.chain.chain attribute)": [[136, "Bio.PDB.Chain.Chain.child_list"]], "get_atoms() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.get_atoms"]], "get_residues() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.get_residues"]], "get_unpacked_list() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.get_unpacked_list"]], "has_id() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.has_id"]], "internal_to_atom_coordinates() (bio.pdb.chain.chain method)": [[136, "Bio.PDB.Chain.Chain.internal_to_atom_coordinates"]], "level (bio.pdb.chain.chain attribute)": [[136, "Bio.PDB.Chain.Chain.level"]], "parent (bio.pdb.chain.chain attribute)": [[136, "Bio.PDB.Chain.Chain.parent"]], "bio.pdb.dssp": [[137, "module-Bio.PDB.DSSP"]], "dssp (class in bio.pdb.dssp)": [[137, "Bio.PDB.DSSP.DSSP"]], "__init__() (bio.pdb.dssp.dssp method)": [[137, "Bio.PDB.DSSP.DSSP.__init__"]], "dssp_dict_from_pdb_file() (in module bio.pdb.dssp)": [[137, "Bio.PDB.DSSP.dssp_dict_from_pdb_file"]], "make_dssp_dict() (in module bio.pdb.dssp)": [[137, "Bio.PDB.DSSP.make_dssp_dict"]], "ss_to_index() (in module bio.pdb.dssp)": [[137, "Bio.PDB.DSSP.ss_to_index"]], "version() (in module bio.pdb.dssp)": [[137, "Bio.PDB.DSSP.version"]], "bio.pdb.dice": [[138, "module-Bio.PDB.Dice"]], "chainselector (class in bio.pdb.dice)": [[138, "Bio.PDB.Dice.ChainSelector"]], "__init__() (bio.pdb.dice.chainselector method)": [[138, "Bio.PDB.Dice.ChainSelector.__init__"]], "accept_atom() (bio.pdb.dice.chainselector method)": [[138, "Bio.PDB.Dice.ChainSelector.accept_atom"]], "accept_chain() (bio.pdb.dice.chainselector method)": [[138, "Bio.PDB.Dice.ChainSelector.accept_chain"]], "accept_model() (bio.pdb.dice.chainselector method)": [[138, "Bio.PDB.Dice.ChainSelector.accept_model"]], "accept_residue() (bio.pdb.dice.chainselector method)": [[138, "Bio.PDB.Dice.ChainSelector.accept_residue"]], "extract() (in module bio.pdb.dice)": [[138, "Bio.PDB.Dice.extract"]], "bio.pdb.entity": [[139, "module-Bio.PDB.Entity"]], "disorderedentitywrapper (class in bio.pdb.entity)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper"]], "entity (class in bio.pdb.entity)": [[139, "Bio.PDB.Entity.Entity"]], "__annotations__ (bio.pdb.entity.entity attribute)": [[139, "Bio.PDB.Entity.Entity.__annotations__"]], "__contains__() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.__contains__"]], "__contains__() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.__contains__"]], "__delitem__() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.__delitem__"]], "__eq__() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.__eq__"]], "__ge__() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.__ge__"]], "__ge__() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.__ge__"]], "__getattr__() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.__getattr__"]], "__getitem__() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.__getitem__"]], "__getitem__() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.__getitem__"]], "__gt__() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.__gt__"]], "__gt__() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.__gt__"]], "__hash__() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.__hash__"]], "__init__() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.__init__"]], "__init__() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.__init__"]], "__iter__() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.__iter__"]], "__iter__() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.__iter__"]], "__le__() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.__le__"]], "__le__() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.__le__"]], "__len__() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.__len__"]], "__len__() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.__len__"]], "__lt__() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.__lt__"]], "__lt__() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.__lt__"]], "__ne__() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.__ne__"]], "__orig_bases__ (bio.pdb.entity.entity attribute)": [[139, "Bio.PDB.Entity.Entity.__orig_bases__"]], "__parameters__ (bio.pdb.entity.entity attribute)": [[139, "Bio.PDB.Entity.Entity.__parameters__"]], "__setitem__() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.__setitem__"]], "__sub__() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.__sub__"]], "add() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.add"]], "center_of_mass() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.center_of_mass"]], "child_dict (bio.pdb.entity.entity attribute)": [[139, "Bio.PDB.Entity.Entity.child_dict"]], "child_list (bio.pdb.entity.entity attribute)": [[139, "Bio.PDB.Entity.Entity.child_list"]], "copy() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.copy"]], "copy() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.copy"]], "detach_child() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.detach_child"]], "detach_parent() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.detach_parent"]], "detach_parent() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.detach_parent"]], "disordered_add() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.disordered_add"]], "disordered_get() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.disordered_get"]], "disordered_get_id_list() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.disordered_get_id_list"]], "disordered_get_list() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.disordered_get_list"]], "disordered_has_id() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.disordered_has_id"]], "disordered_remove() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.disordered_remove"]], "disordered_select() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.disordered_select"]], "get_full_id() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.get_full_id"]], "get_id() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.get_id"]], "get_id() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.get_id"]], "get_iterator() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.get_iterator"]], "get_level() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.get_level"]], "get_list() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.get_list"]], "get_parent() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.get_parent"]], "get_parent() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.get_parent"]], "has_id() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.has_id"]], "id (bio.pdb.entity.entity property)": [[139, "Bio.PDB.Entity.Entity.id"]], "insert() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.insert"]], "is_disordered() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.is_disordered"]], "level (bio.pdb.entity.entity attribute)": [[139, "Bio.PDB.Entity.Entity.level"]], "parent (bio.pdb.entity.entity attribute)": [[139, "Bio.PDB.Entity.Entity.parent"]], "set_parent() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.set_parent"]], "set_parent() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.set_parent"]], "strictly_equals() (bio.pdb.entity.disorderedentitywrapper method)": [[139, "Bio.PDB.Entity.DisorderedEntityWrapper.strictly_equals"]], "strictly_equals() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.strictly_equals"]], "transform() (bio.pdb.entity.entity method)": [[139, "Bio.PDB.Entity.Entity.transform"]], "bio.pdb.fragmentmapper": [[140, "module-Bio.PDB.FragmentMapper"]], "fragment (class in bio.pdb.fragmentmapper)": [[140, "Bio.PDB.FragmentMapper.Fragment"]], "fragmentmapper (class in bio.pdb.fragmentmapper)": [[140, "Bio.PDB.FragmentMapper.FragmentMapper"]], "__contains__() (bio.pdb.fragmentmapper.fragmentmapper method)": [[140, "Bio.PDB.FragmentMapper.FragmentMapper.__contains__"]], "__getitem__() (bio.pdb.fragmentmapper.fragmentmapper method)": [[140, "Bio.PDB.FragmentMapper.FragmentMapper.__getitem__"]], "__init__() (bio.pdb.fragmentmapper.fragment method)": [[140, "Bio.PDB.FragmentMapper.Fragment.__init__"]], "__init__() (bio.pdb.fragmentmapper.fragmentmapper method)": [[140, "Bio.PDB.FragmentMapper.FragmentMapper.__init__"]], "__len__() (bio.pdb.fragmentmapper.fragment method)": [[140, "Bio.PDB.FragmentMapper.Fragment.__len__"]], "__repr__() (bio.pdb.fragmentmapper.fragment method)": [[140, "Bio.PDB.FragmentMapper.Fragment.__repr__"]], "__sub__() (bio.pdb.fragmentmapper.fragment method)": [[140, "Bio.PDB.FragmentMapper.Fragment.__sub__"]], "add_residue() (bio.pdb.fragmentmapper.fragment method)": [[140, "Bio.PDB.FragmentMapper.Fragment.add_residue"]], "get_coords() (bio.pdb.fragmentmapper.fragment method)": [[140, "Bio.PDB.FragmentMapper.Fragment.get_coords"]], "get_id() (bio.pdb.fragmentmapper.fragment method)": [[140, "Bio.PDB.FragmentMapper.Fragment.get_id"]], "get_resname_list() (bio.pdb.fragmentmapper.fragment method)": [[140, "Bio.PDB.FragmentMapper.Fragment.get_resname_list"]], "bio.pdb.hsexposure": [[141, "module-Bio.PDB.HSExposure"]], "exposurecn (class in bio.pdb.hsexposure)": [[141, "Bio.PDB.HSExposure.ExposureCN"]], "hsexposureca (class in bio.pdb.hsexposure)": [[141, "Bio.PDB.HSExposure.HSExposureCA"]], "hsexposurecb (class in bio.pdb.hsexposure)": [[141, "Bio.PDB.HSExposure.HSExposureCB"]], "__init__() (bio.pdb.hsexposure.exposurecn method)": [[141, "Bio.PDB.HSExposure.ExposureCN.__init__"]], "__init__() (bio.pdb.hsexposure.hsexposureca method)": [[141, "Bio.PDB.HSExposure.HSExposureCA.__init__"]], "__init__() (bio.pdb.hsexposure.hsexposurecb method)": [[141, "Bio.PDB.HSExposure.HSExposureCB.__init__"]], "pcb_vectors_pymol() (bio.pdb.hsexposure.hsexposureca method)": [[141, "Bio.PDB.HSExposure.HSExposureCA.pcb_vectors_pymol"]], "bio.pdb.mmcif2dict": [[142, "module-Bio.PDB.MMCIF2Dict"]], "mmcif2dict (class in bio.pdb.mmcif2dict)": [[142, "Bio.PDB.MMCIF2Dict.MMCIF2Dict"]], "__init__() (bio.pdb.mmcif2dict.mmcif2dict method)": [[142, "Bio.PDB.MMCIF2Dict.MMCIF2Dict.__init__"]], "bio.pdb.mmcifparser": [[143, "module-Bio.PDB.MMCIFParser"]], "fastmmcifparser (class in bio.pdb.mmcifparser)": [[143, "Bio.PDB.MMCIFParser.FastMMCIFParser"]], "mmcifparser (class in bio.pdb.mmcifparser)": [[143, "Bio.PDB.MMCIFParser.MMCIFParser"]], "__init__() (bio.pdb.mmcifparser.fastmmcifparser method)": [[143, "Bio.PDB.MMCIFParser.FastMMCIFParser.__init__"]], "__init__() (bio.pdb.mmcifparser.mmcifparser method)": [[143, "Bio.PDB.MMCIFParser.MMCIFParser.__init__"]], "get_structure() (bio.pdb.mmcifparser.fastmmcifparser method)": [[143, "Bio.PDB.MMCIFParser.FastMMCIFParser.get_structure"]], "get_structure() (bio.pdb.mmcifparser.mmcifparser method)": [[143, "Bio.PDB.MMCIFParser.MMCIFParser.get_structure"]], "bio.pdb.model": [[144, "module-Bio.PDB.Model"]], "model (class in bio.pdb.model)": [[144, "Bio.PDB.Model.Model"]], "__init__() (bio.pdb.model.model method)": [[144, "Bio.PDB.Model.Model.__init__"]], "__orig_bases__ (bio.pdb.model.model attribute)": [[144, "Bio.PDB.Model.Model.__orig_bases__"]], "__parameters__ (bio.pdb.model.model attribute)": [[144, "Bio.PDB.Model.Model.__parameters__"]], "__repr__() (bio.pdb.model.model method)": [[144, "Bio.PDB.Model.Model.__repr__"]], "atom_to_internal_coordinates() (bio.pdb.model.model method)": [[144, "Bio.PDB.Model.Model.atom_to_internal_coordinates"]], "child_dict (bio.pdb.model.model attribute)": [[144, "Bio.PDB.Model.Model.child_dict"]], "child_list (bio.pdb.model.model attribute)": [[144, "Bio.PDB.Model.Model.child_list"]], "get_atoms() (bio.pdb.model.model method)": [[144, "Bio.PDB.Model.Model.get_atoms"]], "get_chains() (bio.pdb.model.model method)": [[144, "Bio.PDB.Model.Model.get_chains"]], "get_residues() (bio.pdb.model.model method)": [[144, "Bio.PDB.Model.Model.get_residues"]], "internal_to_atom_coordinates() (bio.pdb.model.model method)": [[144, "Bio.PDB.Model.Model.internal_to_atom_coordinates"]], "level (bio.pdb.model.model attribute)": [[144, "Bio.PDB.Model.Model.level"]], "parent (bio.pdb.model.model attribute)": [[144, "Bio.PDB.Model.Model.parent"]], "bio.pdb.naccess": [[145, "module-Bio.PDB.NACCESS"]], "naccess (class in bio.pdb.naccess)": [[145, "Bio.PDB.NACCESS.NACCESS"]], "naccess_atomic (class in bio.pdb.naccess)": [[145, "Bio.PDB.NACCESS.NACCESS_atomic"]], "__init__() (bio.pdb.naccess.naccess method)": [[145, "Bio.PDB.NACCESS.NACCESS.__init__"]], "__init__() (bio.pdb.naccess.naccess_atomic method)": [[145, "Bio.PDB.NACCESS.NACCESS_atomic.__init__"]], "process_asa_data() (in module bio.pdb.naccess)": [[145, "Bio.PDB.NACCESS.process_asa_data"]], "process_rsa_data() (in module bio.pdb.naccess)": [[145, "Bio.PDB.NACCESS.process_rsa_data"]], "run_naccess() (in module bio.pdb.naccess)": [[145, "Bio.PDB.NACCESS.run_naccess"]], "bio.pdb.neighborsearch": [[146, "module-Bio.PDB.NeighborSearch"]], "neighborsearch (class in bio.pdb.neighborsearch)": [[146, "Bio.PDB.NeighborSearch.NeighborSearch"]], "__init__() (bio.pdb.neighborsearch.neighborsearch method)": [[146, "Bio.PDB.NeighborSearch.NeighborSearch.__init__"]], "search() (bio.pdb.neighborsearch.neighborsearch method)": [[146, "Bio.PDB.NeighborSearch.NeighborSearch.search"]], "search_all() (bio.pdb.neighborsearch.neighborsearch method)": [[146, "Bio.PDB.NeighborSearch.NeighborSearch.search_all"]], "bio.pdb.pdbexceptions": [[147, "module-Bio.PDB.PDBExceptions"]], "pdbconstructionexception": [[147, "Bio.PDB.PDBExceptions.PDBConstructionException"]], "pdbconstructionwarning": [[147, "Bio.PDB.PDBExceptions.PDBConstructionWarning"]], "pdbexception": [[147, "Bio.PDB.PDBExceptions.PDBException"]], "pdbioexception": [[147, "Bio.PDB.PDBExceptions.PDBIOException"]], "bio.pdb.pdbio": [[148, "module-Bio.PDB.PDBIO"]], "pdbio (class in bio.pdb.pdbio)": [[148, "Bio.PDB.PDBIO.PDBIO"]], "select (class in bio.pdb.pdbio)": [[148, "Bio.PDB.PDBIO.Select"]], "structureio (class in bio.pdb.pdbio)": [[148, "Bio.PDB.PDBIO.StructureIO"]], "__init__() (bio.pdb.pdbio.pdbio method)": [[148, "Bio.PDB.PDBIO.PDBIO.__init__"]], "__init__() (bio.pdb.pdbio.structureio method)": [[148, "Bio.PDB.PDBIO.StructureIO.__init__"]], "__repr__() (bio.pdb.pdbio.select method)": [[148, "Bio.PDB.PDBIO.Select.__repr__"]], "accept_atom() (bio.pdb.pdbio.select method)": [[148, "Bio.PDB.PDBIO.Select.accept_atom"]], "accept_chain() (bio.pdb.pdbio.select method)": [[148, "Bio.PDB.PDBIO.Select.accept_chain"]], "accept_model() (bio.pdb.pdbio.select method)": [[148, "Bio.PDB.PDBIO.Select.accept_model"]], "accept_residue() (bio.pdb.pdbio.select method)": [[148, "Bio.PDB.PDBIO.Select.accept_residue"]], "save() (bio.pdb.pdbio.pdbio method)": [[148, "Bio.PDB.PDBIO.PDBIO.save"]], "set_structure() (bio.pdb.pdbio.structureio method)": [[148, "Bio.PDB.PDBIO.StructureIO.set_structure"]], "bio.pdb.pdblist": [[149, "module-Bio.PDB.PDBList"]], "pdblist (class in bio.pdb.pdblist)": [[149, "Bio.PDB.PDBList.PDBList"]], "pdb_ref (bio.pdb.pdblist.pdblist attribute)": [[149, "Bio.PDB.PDBList.PDBList.PDB_REF"]], "__init__() (bio.pdb.pdblist.pdblist method)": [[149, "Bio.PDB.PDBList.PDBList.__init__"]], "download_all_assemblies() (bio.pdb.pdblist.pdblist method)": [[149, "Bio.PDB.PDBList.PDBList.download_all_assemblies"]], "download_entire_pdb() (bio.pdb.pdblist.pdblist method)": [[149, "Bio.PDB.PDBList.PDBList.download_entire_pdb"]], "download_obsolete_entries() (bio.pdb.pdblist.pdblist method)": [[149, "Bio.PDB.PDBList.PDBList.download_obsolete_entries"]], "download_pdb_files() (bio.pdb.pdblist.pdblist method)": [[149, "Bio.PDB.PDBList.PDBList.download_pdb_files"]], "get_all_assemblies() (bio.pdb.pdblist.pdblist method)": [[149, "Bio.PDB.PDBList.PDBList.get_all_assemblies"]], "get_all_entries() (bio.pdb.pdblist.pdblist method)": [[149, "Bio.PDB.PDBList.PDBList.get_all_entries"]], "get_all_obsolete() (bio.pdb.pdblist.pdblist method)": [[149, "Bio.PDB.PDBList.PDBList.get_all_obsolete"]], "get_recent_changes() (bio.pdb.pdblist.pdblist method)": [[149, "Bio.PDB.PDBList.PDBList.get_recent_changes"]], "get_seqres_file() (bio.pdb.pdblist.pdblist method)": [[149, "Bio.PDB.PDBList.PDBList.get_seqres_file"]], "get_status_list() (bio.pdb.pdblist.pdblist static method)": [[149, "Bio.PDB.PDBList.PDBList.get_status_list"]], "retrieve_assembly_file() (bio.pdb.pdblist.pdblist method)": [[149, "Bio.PDB.PDBList.PDBList.retrieve_assembly_file"]], "retrieve_pdb_file() (bio.pdb.pdblist.pdblist method)": [[149, "Bio.PDB.PDBList.PDBList.retrieve_pdb_file"]], "update_pdb() (bio.pdb.pdblist.pdblist method)": [[149, "Bio.PDB.PDBList.PDBList.update_pdb"]], "bio.pdb.pdbmlparser": [[150, "module-Bio.PDB.PDBMLParser"]], "pdbmlparser (class in bio.pdb.pdbmlparser)": [[150, "Bio.PDB.PDBMLParser.PDBMLParser"]], "__init__() (bio.pdb.pdbmlparser.pdbmlparser method)": [[150, "Bio.PDB.PDBMLParser.PDBMLParser.__init__"]], "get_structure() (bio.pdb.pdbmlparser.pdbmlparser method)": [[150, "Bio.PDB.PDBMLParser.PDBMLParser.get_structure"]], "bio.pdb.pdbparser": [[151, "module-Bio.PDB.PDBParser"]], "pdbparser (class in bio.pdb.pdbparser)": [[151, "Bio.PDB.PDBParser.PDBParser"]], "__init__() (bio.pdb.pdbparser.pdbparser method)": [[151, "Bio.PDB.PDBParser.PDBParser.__init__"]], "get_header() (bio.pdb.pdbparser.pdbparser method)": [[151, "Bio.PDB.PDBParser.PDBParser.get_header"]], "get_structure() (bio.pdb.pdbparser.pdbparser method)": [[151, "Bio.PDB.PDBParser.PDBParser.get_structure"]], "get_trailer() (bio.pdb.pdbparser.pdbparser method)": [[151, "Bio.PDB.PDBParser.PDBParser.get_trailer"]], "bio.pdb.picio": [[152, "module-Bio.PDB.PICIO"]], "enumerate_atoms() (in module bio.pdb.picio)": [[152, "Bio.PDB.PICIO.enumerate_atoms"]], "pdb_date() (in module bio.pdb.picio)": [[152, "Bio.PDB.PICIO.pdb_date"]], "read_pic() (in module bio.pdb.picio)": [[152, "Bio.PDB.PICIO.read_PIC"]], "read_pic_seq() (in module bio.pdb.picio)": [[152, "Bio.PDB.PICIO.read_PIC_seq"]], "write_pic() (in module bio.pdb.picio)": [[152, "Bio.PDB.PICIO.write_PIC"]], "bio.pdb.psea": [[153, "module-Bio.PDB.PSEA"]], "psea (class in bio.pdb.psea)": [[153, "Bio.PDB.PSEA.PSEA"]], "__init__() (bio.pdb.psea.psea method)": [[153, "Bio.PDB.PSEA.PSEA.__init__"]], "annotate() (in module bio.pdb.psea)": [[153, "Bio.PDB.PSEA.annotate"]], "get_seq() (bio.pdb.psea.psea method)": [[153, "Bio.PDB.PSEA.PSEA.get_seq"]], "psea() (in module bio.pdb.psea)": [[153, "Bio.PDB.PSEA.psea"]], "psea2hec() (in module bio.pdb.psea)": [[153, "Bio.PDB.PSEA.psea2HEC"]], "run_psea() (in module bio.pdb.psea)": [[153, "Bio.PDB.PSEA.run_psea"]], "bio.pdb.polypeptide": [[154, "module-Bio.PDB.Polypeptide"]], "cappbuilder (class in bio.pdb.polypeptide)": [[154, "Bio.PDB.Polypeptide.CaPPBuilder"]], "ppbuilder (class in bio.pdb.polypeptide)": [[154, "Bio.PDB.Polypeptide.PPBuilder"]], "polypeptide (class in bio.pdb.polypeptide)": [[154, "Bio.PDB.Polypeptide.Polypeptide"]], "__init__() (bio.pdb.polypeptide.cappbuilder method)": [[154, "Bio.PDB.Polypeptide.CaPPBuilder.__init__"]], "__init__() (bio.pdb.polypeptide.ppbuilder method)": [[154, "Bio.PDB.Polypeptide.PPBuilder.__init__"]], "__repr__() (bio.pdb.polypeptide.polypeptide method)": [[154, "Bio.PDB.Polypeptide.Polypeptide.__repr__"]], "get_ca_list() (bio.pdb.polypeptide.polypeptide method)": [[154, "Bio.PDB.Polypeptide.Polypeptide.get_ca_list"]], "get_phi_psi_list() (bio.pdb.polypeptide.polypeptide method)": [[154, "Bio.PDB.Polypeptide.Polypeptide.get_phi_psi_list"]], "get_sequence() (bio.pdb.polypeptide.polypeptide method)": [[154, "Bio.PDB.Polypeptide.Polypeptide.get_sequence"]], "get_tau_list() (bio.pdb.polypeptide.polypeptide method)": [[154, "Bio.PDB.Polypeptide.Polypeptide.get_tau_list"]], "get_theta_list() (bio.pdb.polypeptide.polypeptide method)": [[154, "Bio.PDB.Polypeptide.Polypeptide.get_theta_list"]], "index_to_one() (in module bio.pdb.polypeptide)": [[154, "Bio.PDB.Polypeptide.index_to_one"]], "index_to_three() (in module bio.pdb.polypeptide)": [[154, "Bio.PDB.Polypeptide.index_to_three"]], "is_aa() (in module bio.pdb.polypeptide)": [[154, "Bio.PDB.Polypeptide.is_aa"]], "is_nucleic() (in module bio.pdb.polypeptide)": [[154, "Bio.PDB.Polypeptide.is_nucleic"]], "one_to_index() (in module bio.pdb.polypeptide)": [[154, "Bio.PDB.Polypeptide.one_to_index"]], "three_to_index() (in module bio.pdb.polypeptide)": [[154, "Bio.PDB.Polypeptide.three_to_index"]], "bio.pdb.residue": [[155, "module-Bio.PDB.Residue"]], "disorderedresidue (class in bio.pdb.residue)": [[155, "Bio.PDB.Residue.DisorderedResidue"]], "residue (class in bio.pdb.residue)": [[155, "Bio.PDB.Residue.Residue"]], "__init__() (bio.pdb.residue.disorderedresidue method)": [[155, "Bio.PDB.Residue.DisorderedResidue.__init__"]], "__init__() (bio.pdb.residue.residue method)": [[155, "Bio.PDB.Residue.Residue.__init__"]], "__orig_bases__ (bio.pdb.residue.residue attribute)": [[155, "Bio.PDB.Residue.Residue.__orig_bases__"]], "__parameters__ (bio.pdb.residue.residue attribute)": [[155, "Bio.PDB.Residue.Residue.__parameters__"]], "__repr__() (bio.pdb.residue.disorderedresidue method)": [[155, "Bio.PDB.Residue.DisorderedResidue.__repr__"]], "__repr__() (bio.pdb.residue.residue method)": [[155, "Bio.PDB.Residue.Residue.__repr__"]], "add() (bio.pdb.residue.disorderedresidue method)": [[155, "Bio.PDB.Residue.DisorderedResidue.add"]], "add() (bio.pdb.residue.residue method)": [[155, "Bio.PDB.Residue.Residue.add"]], "child_dict (bio.pdb.residue.residue attribute)": [[155, "Bio.PDB.Residue.Residue.child_dict"]], "child_list (bio.pdb.residue.residue attribute)": [[155, "Bio.PDB.Residue.Residue.child_list"]], "disordered_add() (bio.pdb.residue.disorderedresidue method)": [[155, "Bio.PDB.Residue.DisorderedResidue.disordered_add"]], "disordered_remove() (bio.pdb.residue.disorderedresidue method)": [[155, "Bio.PDB.Residue.DisorderedResidue.disordered_remove"]], "flag_disordered() (bio.pdb.residue.residue method)": [[155, "Bio.PDB.Residue.Residue.flag_disordered"]], "get_atoms() (bio.pdb.residue.residue method)": [[155, "Bio.PDB.Residue.Residue.get_atoms"]], "get_resname() (bio.pdb.residue.residue method)": [[155, "Bio.PDB.Residue.Residue.get_resname"]], "get_segid() (bio.pdb.residue.residue method)": [[155, "Bio.PDB.Residue.Residue.get_segid"]], "get_unpacked_list() (bio.pdb.residue.residue method)": [[155, "Bio.PDB.Residue.Residue.get_unpacked_list"]], "is_disordered() (bio.pdb.residue.residue method)": [[155, "Bio.PDB.Residue.Residue.is_disordered"]], "level (bio.pdb.residue.residue attribute)": [[155, "Bio.PDB.Residue.Residue.level"]], "parent (bio.pdb.residue.residue attribute)": [[155, "Bio.PDB.Residue.Residue.parent"]], "sort() (bio.pdb.residue.disorderedresidue method)": [[155, "Bio.PDB.Residue.DisorderedResidue.sort"]], "strictly_equals() (bio.pdb.residue.residue method)": [[155, "Bio.PDB.Residue.Residue.strictly_equals"]], "bio.pdb.residuedepth": [[156, "module-Bio.PDB.ResidueDepth"]], "residuedepth (class in bio.pdb.residuedepth)": [[156, "Bio.PDB.ResidueDepth.ResidueDepth"]], "__init__() (bio.pdb.residuedepth.residuedepth method)": [[156, "Bio.PDB.ResidueDepth.ResidueDepth.__init__"]], "ca_depth() (in module bio.pdb.residuedepth)": [[156, "Bio.PDB.ResidueDepth.ca_depth"]], "get_surface() (in module bio.pdb.residuedepth)": [[156, "Bio.PDB.ResidueDepth.get_surface"]], "min_dist() (in module bio.pdb.residuedepth)": [[156, "Bio.PDB.ResidueDepth.min_dist"]], "residue_depth() (in module bio.pdb.residuedepth)": [[156, "Bio.PDB.ResidueDepth.residue_depth"]], "bio.pdb.sasa": [[157, "module-Bio.PDB.SASA"]], "shrakerupley (class in bio.pdb.sasa)": [[157, "Bio.PDB.SASA.ShrakeRupley"]], "__init__() (bio.pdb.sasa.shrakerupley method)": [[157, "Bio.PDB.SASA.ShrakeRupley.__init__"]], "compute() (bio.pdb.sasa.shrakerupley method)": [[157, "Bio.PDB.SASA.ShrakeRupley.compute"]], "bio.pdb.scadio": [[158, "module-Bio.PDB.SCADIO"]], "write_scad() (in module bio.pdb.scadio)": [[158, "Bio.PDB.SCADIO.write_SCAD"]], "bio.pdb.selection": [[159, "module-Bio.PDB.Selection"]], "get_unique_parents() (in module bio.pdb.selection)": [[159, "Bio.PDB.Selection.get_unique_parents"]], "unfold_entities() (in module bio.pdb.selection)": [[159, "Bio.PDB.Selection.unfold_entities"]], "uniqueify() (in module bio.pdb.selection)": [[159, "Bio.PDB.Selection.uniqueify"]], "bio.pdb.structure": [[160, "module-Bio.PDB.Structure"]], "structure (class in bio.pdb.structure)": [[160, "Bio.PDB.Structure.Structure"]], "__init__() (bio.pdb.structure.structure method)": [[160, "Bio.PDB.Structure.Structure.__init__"]], "__orig_bases__ (bio.pdb.structure.structure attribute)": [[160, "Bio.PDB.Structure.Structure.__orig_bases__"]], "__parameters__ (bio.pdb.structure.structure attribute)": [[160, "Bio.PDB.Structure.Structure.__parameters__"]], "__repr__() (bio.pdb.structure.structure method)": [[160, "Bio.PDB.Structure.Structure.__repr__"]], "atom_to_internal_coordinates() (bio.pdb.structure.structure method)": [[160, "Bio.PDB.Structure.Structure.atom_to_internal_coordinates"]], "child_dict (bio.pdb.structure.structure attribute)": [[160, "Bio.PDB.Structure.Structure.child_dict"]], "child_list (bio.pdb.structure.structure attribute)": [[160, "Bio.PDB.Structure.Structure.child_list"]], "get_atoms() (bio.pdb.structure.structure method)": [[160, "Bio.PDB.Structure.Structure.get_atoms"]], "get_chains() (bio.pdb.structure.structure method)": [[160, "Bio.PDB.Structure.Structure.get_chains"]], "get_models() (bio.pdb.structure.structure method)": [[160, "Bio.PDB.Structure.Structure.get_models"]], "get_residues() (bio.pdb.structure.structure method)": [[160, "Bio.PDB.Structure.Structure.get_residues"]], "internal_to_atom_coordinates() (bio.pdb.structure.structure method)": [[160, "Bio.PDB.Structure.Structure.internal_to_atom_coordinates"]], "level (bio.pdb.structure.structure attribute)": [[160, "Bio.PDB.Structure.Structure.level"]], "parent (bio.pdb.structure.structure attribute)": [[160, "Bio.PDB.Structure.Structure.parent"]], "bio.pdb.structurealignment": [[161, "module-Bio.PDB.StructureAlignment"]], "structurealignment (class in bio.pdb.structurealignment)": [[161, "Bio.PDB.StructureAlignment.StructureAlignment"]], "__init__() (bio.pdb.structurealignment.structurealignment method)": [[161, "Bio.PDB.StructureAlignment.StructureAlignment.__init__"]], "get_iterator() (bio.pdb.structurealignment.structurealignment method)": [[161, "Bio.PDB.StructureAlignment.StructureAlignment.get_iterator"]], "get_maps() (bio.pdb.structurealignment.structurealignment method)": [[161, "Bio.PDB.StructureAlignment.StructureAlignment.get_maps"]], "bio.pdb.structurebuilder": [[162, "module-Bio.PDB.StructureBuilder"]], "structurebuilder (class in bio.pdb.structurebuilder)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder"]], "__init__() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.__init__"]], "get_structure() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.get_structure"]], "init_atom() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.init_atom"]], "init_chain() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.init_chain"]], "init_model() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.init_model"]], "init_residue() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.init_residue"]], "init_seg() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.init_seg"]], "init_structure() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.init_structure"]], "set_anisou() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.set_anisou"]], "set_header() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.set_header"]], "set_line_counter() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.set_line_counter"]], "set_sigatm() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.set_sigatm"]], "set_siguij() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.set_siguij"]], "set_symmetry() (bio.pdb.structurebuilder.structurebuilder method)": [[162, "Bio.PDB.StructureBuilder.StructureBuilder.set_symmetry"]], "bio.pdb.superimposer": [[163, "module-Bio.PDB.Superimposer"]], "superimposer (class in bio.pdb.superimposer)": [[163, "Bio.PDB.Superimposer.Superimposer"]], "__init__() (bio.pdb.superimposer.superimposer method)": [[163, "Bio.PDB.Superimposer.Superimposer.__init__"]], "apply() (bio.pdb.superimposer.superimposer method)": [[163, "Bio.PDB.Superimposer.Superimposer.apply"]], "set_atoms() (bio.pdb.superimposer.superimposer method)": [[163, "Bio.PDB.Superimposer.Superimposer.set_atoms"]], "bio.pdb.alphafold_db": [[164, "module-Bio.PDB.alphafold_db"]], "download_cif_for() (in module bio.pdb.alphafold_db)": [[164, "Bio.PDB.alphafold_db.download_cif_for"]], "get_predictions() (in module bio.pdb.alphafold_db)": [[164, "Bio.PDB.alphafold_db.get_predictions"]], "get_structural_models_for() (in module bio.pdb.alphafold_db)": [[164, "Bio.PDB.alphafold_db.get_structural_models_for"]], "bio.pdb.cealign": [[165, "module-Bio.PDB.cealign"]], "cealigner (class in bio.pdb.cealign)": [[165, "Bio.PDB.cealign.CEAligner"]], "__init__() (bio.pdb.cealign.cealigner method)": [[165, "Bio.PDB.cealign.CEAligner.__init__"]], "align() (bio.pdb.cealign.cealigner method)": [[165, "Bio.PDB.cealign.CEAligner.align"]], "get_guide_coord_from_structure() (bio.pdb.cealign.cealigner method)": [[165, "Bio.PDB.cealign.CEAligner.get_guide_coord_from_structure"]], "set_reference() (bio.pdb.cealign.cealigner method)": [[165, "Bio.PDB.cealign.CEAligner.set_reference"]], "bio.pdb.ic_data": [[166, "module-Bio.PDB.ic_data"]], "bio.pdb.ic_rebuild": [[167, "module-Bio.PDB.ic_rebuild"]], "ic_duplicate() (in module bio.pdb.ic_rebuild)": [[167, "Bio.PDB.ic_rebuild.IC_duplicate"]], "compare_residues() (in module bio.pdb.ic_rebuild)": [[167, "Bio.PDB.ic_rebuild.compare_residues"]], "report_ic() (in module bio.pdb.ic_rebuild)": [[167, "Bio.PDB.ic_rebuild.report_IC"]], "structure_rebuild_test() (in module bio.pdb.ic_rebuild)": [[167, "Bio.PDB.ic_rebuild.structure_rebuild_test"]], "write_pdb() (in module bio.pdb.ic_rebuild)": [[167, "Bio.PDB.ic_rebuild.write_PDB"]], "aasiz (bio.pdb.internal_coords.ic_chain attribute)": [[168, "Bio.PDB.internal_coords.IC_Chain.AAsiz"]], "atomkey (class in bio.pdb.internal_coords)": [[168, "Bio.PDB.internal_coords.AtomKey"]], "bio.pdb.internal_coords": [[168, "module-Bio.PDB.internal_coords"]], "dihedron (class in bio.pdb.internal_coords)": [[168, "Bio.PDB.internal_coords.Dihedron"]], "edron (class in bio.pdb.internal_coords)": [[168, "Bio.PDB.internal_coords.Edron"]], "hedron (class in bio.pdb.internal_coords)": [[168, "Bio.PDB.internal_coords.Hedron"]], "hedronmatcherror": [[168, "Bio.PDB.internal_coords.HedronMatchError"]], "ic_chain (class in bio.pdb.internal_coords)": [[168, "Bio.PDB.internal_coords.IC_Chain"]], "ic_residue (class in bio.pdb.internal_coords)": [[168, "Bio.PDB.internal_coords.IC_Residue"]], "maxpeptidebond (bio.pdb.internal_coords.ic_chain attribute)": [[168, "Bio.PDB.internal_coords.IC_Chain.MaxPeptideBond"]], "missingatomerror": [[168, "Bio.PDB.internal_coords.MissingAtomError"]], "parallelassembleresidues (bio.pdb.internal_coords.ic_chain attribute)": [[168, "Bio.PDB.internal_coords.IC_Chain.ParallelAssembleResidues"]], "__annotations__ (bio.pdb.internal_coords.ic_chain attribute)": [[168, "Bio.PDB.internal_coords.IC_Chain.__annotations__"]], "__annotations__ (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.__annotations__"]], "__contains__() (bio.pdb.internal_coords.edron method)": [[168, "Bio.PDB.internal_coords.Edron.__contains__"]], "__contains__() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.__contains__"]], "__deepcopy__() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.__deepcopy__"]], "__deepcopy__() (bio.pdb.internal_coords.edron method)": [[168, "Bio.PDB.internal_coords.Edron.__deepcopy__"]], "__deepcopy__() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.__deepcopy__"]], "__deepcopy__() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.__deepcopy__"]], "__eq__() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.__eq__"]], "__eq__() (bio.pdb.internal_coords.edron method)": [[168, "Bio.PDB.internal_coords.Edron.__eq__"]], "__ge__() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.__ge__"]], "__ge__() (bio.pdb.internal_coords.edron method)": [[168, "Bio.PDB.internal_coords.Edron.__ge__"]], "__gt__() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.__gt__"]], "__gt__() (bio.pdb.internal_coords.edron method)": [[168, "Bio.PDB.internal_coords.Edron.__gt__"]], "__hash__() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.__hash__"]], "__hash__() (bio.pdb.internal_coords.edron method)": [[168, "Bio.PDB.internal_coords.Edron.__hash__"]], "__init__() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.__init__"]], "__init__() (bio.pdb.internal_coords.dihedron method)": [[168, "Bio.PDB.internal_coords.Dihedron.__init__"]], "__init__() (bio.pdb.internal_coords.edron method)": [[168, "Bio.PDB.internal_coords.Edron.__init__"]], "__init__() (bio.pdb.internal_coords.hedron method)": [[168, "Bio.PDB.internal_coords.Hedron.__init__"]], "__init__() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.__init__"]], "__init__() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.__init__"]], "__le__() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.__le__"]], "__le__() (bio.pdb.internal_coords.edron method)": [[168, "Bio.PDB.internal_coords.Edron.__le__"]], "__lt__() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.__lt__"]], "__lt__() (bio.pdb.internal_coords.edron method)": [[168, "Bio.PDB.internal_coords.Edron.__lt__"]], "__ne__() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.__ne__"]], "__ne__() (bio.pdb.internal_coords.edron method)": [[168, "Bio.PDB.internal_coords.Edron.__ne__"]], "__repr__() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.__repr__"]], "__repr__() (bio.pdb.internal_coords.dihedron method)": [[168, "Bio.PDB.internal_coords.Dihedron.__repr__"]], "__repr__() (bio.pdb.internal_coords.edron method)": [[168, "Bio.PDB.internal_coords.Edron.__repr__"]], "__repr__() (bio.pdb.internal_coords.hedron method)": [[168, "Bio.PDB.internal_coords.Hedron.__repr__"]], "__repr__() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.__repr__"]], "accept_atoms (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.accept_atoms"]], "accept_backbone (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.accept_backbone"]], "accept_deuteriums (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.accept_deuteriums"]], "accept_hydrogens (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.accept_hydrogens"]], "accept_mainchain (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.accept_mainchain"]], "accept_resnames (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.accept_resnames"]], "accept_sidechain (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.accept_sidechain"]], "altloc_match() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.altloc_match"]], "angle (bio.pdb.internal_coords.dihedron property)": [[168, "Bio.PDB.internal_coords.Dihedron.angle"]], "angle (bio.pdb.internal_coords.hedron property)": [[168, "Bio.PDB.internal_coords.Hedron.angle"]], "angle_avg() (bio.pdb.internal_coords.dihedron static method)": [[168, "Bio.PDB.internal_coords.Dihedron.angle_avg"]], "angle_dif() (bio.pdb.internal_coords.dihedron static method)": [[168, "Bio.PDB.internal_coords.Dihedron.angle_dif"]], "angle_pop_sd() (bio.pdb.internal_coords.dihedron static method)": [[168, "Bio.PDB.internal_coords.Dihedron.angle_pop_sd"]], "applymtx() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.applyMtx"]], "assemble() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.assemble"]], "assemble_residues() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.assemble_residues"]], "assemble_residues_ser() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.assemble_residues_ser"]], "atm() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.atm"]], "atomarray (bio.pdb.internal_coords.ic_chain attribute)": [[168, "Bio.PDB.internal_coords.IC_Chain.atomArray"]], "atom_chain (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.atom_chain"]], "atom_re (bio.pdb.internal_coords.atomkey attribute)": [[168, "Bio.PDB.internal_coords.AtomKey.atom_re"]], "atom_sernum (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.atom_sernum"]], "atom_to_internal_coordinates() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.atom_to_internal_coordinates"]], "bits() (bio.pdb.internal_coords.dihedron method)": [[168, "Bio.PDB.internal_coords.Dihedron.bits"]], "bond_rotate() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.bond_rotate"]], "bond_set() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.bond_set"]], "build_atomarray() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.build_atomArray"]], "build_edraarrays() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.build_edraArrays"]], "cic (bio.pdb.internal_coords.dihedron attribute)": [[168, "Bio.PDB.internal_coords.Dihedron.cic"]], "cic (bio.pdb.internal_coords.hedron attribute)": [[168, "Bio.PDB.internal_coords.Hedron.cic"]], "clear_ic() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.clear_ic"]], "clear_transforms() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.clear_transforms"]], "copy_initncacs() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.copy_initNCaCs"]], "cr_class() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.cr_class"]], "d2h (bio.pdb.internal_coords.atomkey attribute)": [[168, "Bio.PDB.internal_coords.AtomKey.d2h"]], "dcoordspace (bio.pdb.internal_coords.ic_chain attribute)": [[168, "Bio.PDB.internal_coords.IC_Chain.dCoordSpace"]], "dcsvalid (bio.pdb.internal_coords.ic_chain attribute)": [[168, "Bio.PDB.internal_coords.IC_Chain.dcsValid"]], "difference() (bio.pdb.internal_coords.dihedron method)": [[168, "Bio.PDB.internal_coords.Dihedron.difference"]], "dihedral_signs() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.dihedral_signs"]], "distance_plot() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.distance_plot"]], "distance_to_internal_coordinates() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.distance_to_internal_coordinates"]], "distplot_to_dh_arrays() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.distplot_to_dh_arrays"]], "edron_re (bio.pdb.internal_coords.edron attribute)": [[168, "Bio.PDB.internal_coords.Edron.edron_re"]], "fieldnames (bio.pdb.internal_coords.atomkey attribute)": [[168, "Bio.PDB.internal_coords.AtomKey.fieldNames"]], "fields (bio.pdb.internal_coords.atomkey attribute)": [[168, "Bio.PDB.internal_coords.AtomKey.fields"]], "gen_key() (bio.pdb.internal_coords.edron static method)": [[168, "Bio.PDB.internal_coords.Edron.gen_key"]], "gen_tuple() (bio.pdb.internal_coords.edron static method)": [[168, "Bio.PDB.internal_coords.Edron.gen_tuple"]], "get_angle() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.get_angle"]], "get_length() (bio.pdb.internal_coords.hedron method)": [[168, "Bio.PDB.internal_coords.Hedron.get_length"]], "get_length() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.get_length"]], "gly_cbeta (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.gly_Cbeta"]], "init_atom_coords() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.init_atom_coords"]], "init_edra() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.init_edra"]], "internal_to_atom_coordinates() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.internal_to_atom_coordinates"]], "is_backbone() (bio.pdb.internal_coords.atomkey method)": [[168, "Bio.PDB.internal_coords.AtomKey.is_backbone"]], "is_backbone() (bio.pdb.internal_coords.edron method)": [[168, "Bio.PDB.internal_coords.Edron.is_backbone"]], "len12 (bio.pdb.internal_coords.hedron property)": [[168, "Bio.PDB.internal_coords.Hedron.len12"]], "len23 (bio.pdb.internal_coords.hedron property)": [[168, "Bio.PDB.internal_coords.Hedron.len23"]], "make_extended() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.make_extended"]], "no_altloc (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.no_altloc"]], "pdb_residue_string() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.pdb_residue_string"]], "picflagsdefault (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.picFlagsDefault"]], "picflagsdict (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.picFlagsDict"]], "pic_accuracy (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.pic_accuracy"]], "pic_flags (bio.pdb.internal_coords.ic_residue attribute)": [[168, "Bio.PDB.internal_coords.IC_Residue.pic_flags"]], "pick_angle() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.pick_angle"]], "pick_length() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.pick_length"]], "pretty_str() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.pretty_str"]], "propagate_changes() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.propagate_changes"]], "rak() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.rak"]], "set_accuracy_95() (in module bio.pdb.internal_coords)": [[168, "Bio.PDB.internal_coords.set_accuracy_95"]], "set_angle() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.set_angle"]], "set_flexible() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.set_flexible"]], "set_hbond() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.set_hbond"]], "set_length() (bio.pdb.internal_coords.hedron method)": [[168, "Bio.PDB.internal_coords.Hedron.set_length"]], "set_length() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.set_length"]], "split_akl() (bio.pdb.internal_coords.ic_residue method)": [[168, "Bio.PDB.internal_coords.IC_Residue.split_akl"]], "update_dcoordspace() (bio.pdb.internal_coords.ic_chain method)": [[168, "Bio.PDB.internal_coords.IC_Chain.update_dCoordSpace"]], "bio.pdb.mmcifio": [[169, "module-Bio.PDB.mmcifio"]], "mmcifio (class in bio.pdb.mmcifio)": [[169, "Bio.PDB.mmcifio.MMCIFIO"]], "__init__() (bio.pdb.mmcifio.mmcifio method)": [[169, "Bio.PDB.mmcifio.MMCIFIO.__init__"]], "save() (bio.pdb.mmcifio.mmcifio method)": [[169, "Bio.PDB.mmcifio.MMCIFIO.save"]], "set_dict() (bio.pdb.mmcifio.mmcifio method)": [[169, "Bio.PDB.mmcifio.MMCIFIO.set_dict"]], "bio.pdb.mmtf": [[170, "module-Bio.PDB.mmtf"]], "mmtfparser (class in bio.pdb.mmtf)": [[170, "Bio.PDB.mmtf.MMTFParser"]], "get_from_decoded() (in module bio.pdb.mmtf)": [[170, "Bio.PDB.mmtf.get_from_decoded"]], "get_structure() (bio.pdb.mmtf.mmtfparser static method)": [[170, "Bio.PDB.mmtf.MMTFParser.get_structure"]], "get_structure_from_url() (bio.pdb.mmtf.mmtfparser static method)": [[170, "Bio.PDB.mmtf.MMTFParser.get_structure_from_url"]], "bio.pdb.mmtf.defaultparser": [[171, "module-Bio.PDB.mmtf.DefaultParser"]], "structuredecoder (class in bio.pdb.mmtf.defaultparser)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder"]], "__init__() (bio.pdb.mmtf.defaultparser.structuredecoder method)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder.__init__"]], "finalize_structure() (bio.pdb.mmtf.defaultparser.structuredecoder method)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder.finalize_structure"]], "init_structure() (bio.pdb.mmtf.defaultparser.structuredecoder method)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder.init_structure"]], "set_atom_info() (bio.pdb.mmtf.defaultparser.structuredecoder method)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder.set_atom_info"]], "set_bio_assembly_trans() (bio.pdb.mmtf.defaultparser.structuredecoder method)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder.set_bio_assembly_trans"]], "set_chain_info() (bio.pdb.mmtf.defaultparser.structuredecoder method)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder.set_chain_info"]], "set_entity_info() (bio.pdb.mmtf.defaultparser.structuredecoder method)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder.set_entity_info"]], "set_group_bond() (bio.pdb.mmtf.defaultparser.structuredecoder method)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder.set_group_bond"]], "set_group_info() (bio.pdb.mmtf.defaultparser.structuredecoder method)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder.set_group_info"]], "set_header_info() (bio.pdb.mmtf.defaultparser.structuredecoder method)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder.set_header_info"]], "set_inter_group_bond() (bio.pdb.mmtf.defaultparser.structuredecoder method)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder.set_inter_group_bond"]], "set_model_info() (bio.pdb.mmtf.defaultparser.structuredecoder method)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder.set_model_info"]], "set_xtal_info() (bio.pdb.mmtf.defaultparser.structuredecoder method)": [[171, "Bio.PDB.mmtf.DefaultParser.StructureDecoder.set_xtal_info"]], "bio.pdb.mmtf.mmtfio": [[172, "module-Bio.PDB.mmtf.mmtfio"]], "mmtfio (class in bio.pdb.mmtf.mmtfio)": [[172, "Bio.PDB.mmtf.mmtfio.MMTFIO"]], "__init__() (bio.pdb.mmtf.mmtfio.mmtfio method)": [[172, "Bio.PDB.mmtf.mmtfio.MMTFIO.__init__"]], "save() (bio.pdb.mmtf.mmtfio.mmtfio method)": [[172, "Bio.PDB.mmtf.mmtfio.MMTFIO.save"]], "bio.pdb.parse_pdb_header": [[173, "module-Bio.PDB.parse_pdb_header"]], "parse_pdb_header() (in module bio.pdb.parse_pdb_header)": [[173, "Bio.PDB.parse_pdb_header.parse_pdb_header"]], "bio.pdb.qcprot": [[174, "module-Bio.PDB.qcprot"]], "qcpsuperimposer (class in bio.pdb.qcprot)": [[174, "Bio.PDB.qcprot.QCPSuperimposer"]], "__init__() (bio.pdb.qcprot.qcpsuperimposer method)": [[174, "Bio.PDB.qcprot.QCPSuperimposer.__init__"]], "apply() (bio.pdb.qcprot.qcpsuperimposer method)": [[174, "Bio.PDB.qcprot.QCPSuperimposer.apply"]], "get_init_rms() (bio.pdb.qcprot.qcpsuperimposer method)": [[174, "Bio.PDB.qcprot.QCPSuperimposer.get_init_rms"]], "get_rms() (bio.pdb.qcprot.qcpsuperimposer method)": [[174, "Bio.PDB.qcprot.QCPSuperimposer.get_rms"]], "get_rotran() (bio.pdb.qcprot.qcpsuperimposer method)": [[174, "Bio.PDB.qcprot.QCPSuperimposer.get_rotran"]], "get_transformed() (bio.pdb.qcprot.qcpsuperimposer method)": [[174, "Bio.PDB.qcprot.QCPSuperimposer.get_transformed"]], "qcp() (in module bio.pdb.qcprot)": [[174, "Bio.PDB.qcprot.qcp"]], "run() (bio.pdb.qcprot.qcpsuperimposer method)": [[174, "Bio.PDB.qcprot.QCPSuperimposer.run"]], "set() (bio.pdb.qcprot.qcpsuperimposer method)": [[174, "Bio.PDB.qcprot.QCPSuperimposer.set"]], "set_atoms() (bio.pdb.qcprot.qcpsuperimposer method)": [[174, "Bio.PDB.qcprot.QCPSuperimposer.set_atoms"]], "bio.pdb.vectors": [[175, "module-Bio.PDB.vectors"]], "vector (class in bio.pdb.vectors)": [[175, "Bio.PDB.vectors.Vector"]], "__add__() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.__add__"]], "__contains__() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.__contains__"]], "__getitem__() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.__getitem__"]], "__init__() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.__init__"]], "__mul__() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.__mul__"]], "__neg__() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.__neg__"]], "__pow__() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.__pow__"]], "__repr__() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.__repr__"]], "__setitem__() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.__setitem__"]], "__sub__() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.__sub__"]], "__truediv__() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.__truediv__"]], "angle() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.angle"]], "calc_angle() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.calc_angle"]], "calc_dihedral() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.calc_dihedral"]], "coord_space() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.coord_space"]], "copy() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.copy"]], "get_array() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.get_array"]], "get_spherical_coordinates() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.get_spherical_coordinates"]], "homog_rot_mtx() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.homog_rot_mtx"]], "homog_scale_mtx() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.homog_scale_mtx"]], "homog_trans_mtx() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.homog_trans_mtx"]], "left_multiply() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.left_multiply"]], "m2rotaxis() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.m2rotaxis"]], "multi_coord_space() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.multi_coord_space"]], "multi_rot_y() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.multi_rot_Y"]], "multi_rot_z() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.multi_rot_Z"]], "norm() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.norm"]], "normalize() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.normalize"]], "normalized() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.normalized"]], "normsq() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.normsq"]], "refmat() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.refmat"]], "right_multiply() (bio.pdb.vectors.vector method)": [[175, "Bio.PDB.vectors.Vector.right_multiply"]], "rotaxis() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.rotaxis"]], "rotaxis2m() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.rotaxis2m"]], "rotmat() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.rotmat"]], "set_x_homog_rot_mtx() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.set_X_homog_rot_mtx"]], "set_y_homog_rot_mtx() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.set_Y_homog_rot_mtx"]], "set_z_homog_rot_mtx() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.set_Z_homog_rot_mtx"]], "set_homog_trans_mtx() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.set_homog_trans_mtx"]], "vector_to_axis() (in module bio.pdb.vectors)": [[175, "Bio.PDB.vectors.vector_to_axis"]], "bio.pathway": [[176, "module-Bio.Pathway"]], "interaction (class in bio.pathway)": [[176, "Bio.Pathway.Interaction"]], "network (class in bio.pathway)": [[176, "Bio.Pathway.Network"]], "reaction (class in bio.pathway)": [[176, "Bio.Pathway.Reaction"]], "system (class in bio.pathway)": [[176, "Bio.Pathway.System"]], "__eq__() (bio.pathway.reaction method)": [[176, "Bio.Pathway.Reaction.__eq__"]], "__hash__() (bio.pathway.interaction method)": [[176, "Bio.Pathway.Interaction.__hash__"]], "__hash__() (bio.pathway.reaction method)": [[176, "Bio.Pathway.Reaction.__hash__"]], "__init__() (bio.pathway.network method)": [[176, "Bio.Pathway.Network.__init__"]], "__init__() (bio.pathway.reaction method)": [[176, "Bio.Pathway.Reaction.__init__"]], "__init__() (bio.pathway.system method)": [[176, "Bio.Pathway.System.__init__"]], "__repr__() (bio.pathway.interaction method)": [[176, "Bio.Pathway.Interaction.__repr__"]], "__repr__() (bio.pathway.network method)": [[176, "Bio.Pathway.Network.__repr__"]], "__repr__() (bio.pathway.reaction method)": [[176, "Bio.Pathway.Reaction.__repr__"]], "__repr__() (bio.pathway.system method)": [[176, "Bio.Pathway.System.__repr__"]], "__str__() (bio.pathway.interaction method)": [[176, "Bio.Pathway.Interaction.__str__"]], "__str__() (bio.pathway.network method)": [[176, "Bio.Pathway.Network.__str__"]], "__str__() (bio.pathway.reaction method)": [[176, "Bio.Pathway.Reaction.__str__"]], "__str__() (bio.pathway.system method)": [[176, "Bio.Pathway.System.__str__"]], "add_interaction() (bio.pathway.network method)": [[176, "Bio.Pathway.Network.add_interaction"]], "add_reaction() (bio.pathway.system method)": [[176, "Bio.Pathway.System.add_reaction"]], "add_species() (bio.pathway.network method)": [[176, "Bio.Pathway.Network.add_species"]], "interactions() (bio.pathway.network method)": [[176, "Bio.Pathway.Network.interactions"]], "reactions() (bio.pathway.system method)": [[176, "Bio.Pathway.System.reactions"]], "remove_reaction() (bio.pathway.system method)": [[176, "Bio.Pathway.System.remove_reaction"]], "reverse() (bio.pathway.reaction method)": [[176, "Bio.Pathway.Reaction.reverse"]], "sink() (bio.pathway.network method)": [[176, "Bio.Pathway.Network.sink"]], "sink_interactions() (bio.pathway.network method)": [[176, "Bio.Pathway.Network.sink_interactions"]], "source() (bio.pathway.network method)": [[176, "Bio.Pathway.Network.source"]], "source_interactions() (bio.pathway.network method)": [[176, "Bio.Pathway.Network.source_interactions"]], "species() (bio.pathway.network method)": [[176, "Bio.Pathway.Network.species"]], "species() (bio.pathway.reaction method)": [[176, "Bio.Pathway.Reaction.species"]], "species() (bio.pathway.system method)": [[176, "Bio.Pathway.System.species"]], "stochiometry() (bio.pathway.system method)": [[176, "Bio.Pathway.System.stochiometry"]], "bio.pathway.rep": [[177, "module-Bio.Pathway.Rep"]], "bio.pathway.rep.graph": [[178, "module-Bio.Pathway.Rep.Graph"]], "graph (class in bio.pathway.rep.graph)": [[178, "Bio.Pathway.Rep.Graph.Graph"]], "__eq__() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.__eq__"]], "__hash__ (bio.pathway.rep.graph.graph attribute)": [[178, "Bio.Pathway.Rep.Graph.Graph.__hash__"]], "__init__() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.__init__"]], "__repr__() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.__repr__"]], "__str__() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.__str__"]], "add_edge() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.add_edge"]], "add_node() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.add_node"]], "child_edges() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.child_edges"]], "children() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.children"]], "edges() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.edges"]], "labels() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.labels"]], "nodes() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.nodes"]], "parent_edges() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.parent_edges"]], "parents() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.parents"]], "remove_edge() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.remove_edge"]], "remove_node() (bio.pathway.rep.graph.graph method)": [[178, "Bio.Pathway.Rep.Graph.Graph.remove_node"]], "bio.pathway.rep.multigraph": [[179, "module-Bio.Pathway.Rep.MultiGraph"]], "multigraph (class in bio.pathway.rep.multigraph)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph"]], "__eq__() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.__eq__"]], "__hash__ (bio.pathway.rep.multigraph.multigraph attribute)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.__hash__"]], "__init__() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.__init__"]], "__repr__() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.__repr__"]], "__str__() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.__str__"]], "add_edge() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.add_edge"]], "add_node() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.add_node"]], "bf_search() (in module bio.pathway.rep.multigraph)": [[179, "Bio.Pathway.Rep.MultiGraph.bf_search"]], "child_edges() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.child_edges"]], "children() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.children"]], "df_search() (in module bio.pathway.rep.multigraph)": [[179, "Bio.Pathway.Rep.MultiGraph.df_search"]], "edges() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.edges"]], "labels() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.labels"]], "nodes() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.nodes"]], "parent_edges() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.parent_edges"]], "parents() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.parents"]], "remove_edge() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.remove_edge"]], "remove_node() (bio.pathway.rep.multigraph.multigraph method)": [[179, "Bio.Pathway.Rep.MultiGraph.MultiGraph.remove_node"]], "bio.phylo": [[180, "module-Bio.Phylo"]], "bio.phylo.applications": [[181, "module-Bio.Phylo.Applications"]], "fasttreecommandline (class in bio.phylo.applications)": [[181, "Bio.Phylo.Applications.FastTreeCommandline"]], "phymlcommandline (class in bio.phylo.applications)": [[181, "Bio.Phylo.Applications.PhymlCommandline"]], "raxmlcommandline (class in bio.phylo.applications)": [[181, "Bio.Phylo.Applications.RaxmlCommandline"]], "__init__() (bio.phylo.applications.fasttreecommandline method)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.__init__"]], "__init__() (bio.phylo.applications.phymlcommandline method)": [[181, "Bio.Phylo.Applications.PhymlCommandline.__init__"]], "__init__() (bio.phylo.applications.raxmlcommandline method)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.__init__"]], "algorithm (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.algorithm"]], "alpha (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.alpha"]], "binary_constraint (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.binary_constraint"]], "bionj (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.bionj"]], "bipartition_filename (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.bipartition_filename"]], "boot (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.boot"]], "bootstrap (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.bootstrap"]], "bootstrap_branch_lengths (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.bootstrap_branch_lengths"]], "bootstrap_seed (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.bootstrap_seed"]], "cat (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.cat"]], "checkpoints (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.checkpoints"]], "close (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.close"]], "cluster_threshold (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.cluster_threshold"]], "cluster_threshold_fast (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.cluster_threshold_fast"]], "constraintweight (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.constraintWeight"]], "constraints (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.constraints"]], "datatype (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.datatype"]], "epsilon (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.epsilon"]], "exclude_filename (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.exclude_filename"]], "expert (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.expert"]], "fastest (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.fastest"]], "frequencies (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.frequencies"]], "gamma (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.gamma"]], "grouping_constraint (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.grouping_constraint"]], "gtr (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.gtr"]], "gtrfreq (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.gtrfreq"]], "gtrrates (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.gtrrates"]], "help (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.help"]], "input (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.input"]], "input (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.input"]], "input_tree (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.input_tree"]], "intree (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.intree"]], "intree1 (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.intree1"]], "log (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.log"]], "makematrix (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.makematrix"]], "matrix (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.matrix"]], "mlacc (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.mlacc"]], "mllen (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.mllen"]], "mlnni (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.mlnni"]], "model (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.model"]], "model (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.model"]], "multiple (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.multiple"]], "n (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.n"]], "n_rand_starts (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.n_rand_starts"]], "name (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.name"]], "nclasses (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.nclasses"]], "nj (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.nj"]], "nni (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.nni"]], "no2nd (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.no2nd"]], "nocat (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.nocat"]], "nomatrix (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.nomatrix"]], "nome (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.nome"]], "noml (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.noml"]], "nopr (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.nopr"]], "nosupport (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.nosupport"]], "notop (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.notop"]], "nt (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.nt"]], "num_bootstrap_searches (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.num_bootstrap_searches"]], "num_categories (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.num_categories"]], "num_replicates (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.num_replicates"]], "optimize (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.optimize"]], "out (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.out"]], "outgroup (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.outgroup"]], "pars (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.pars"]], "parsimony (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.parsimony"]], "parsimony_seed (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.parsimony_seed"]], "partition_branch_lengths (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.partition_branch_lengths"]], "partition_filename (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.partition_filename"]], "print_site_lnl (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.print_site_lnl"]], "print_trace (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.print_trace"]], "prop_invar (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.prop_invar"]], "protein_model (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.protein_model"]], "pseudo (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.pseudo"]], "quiet (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.quiet"]], "quiet (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.quiet"]], "quote (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.quote"]], "r_seed (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.r_seed"]], "rand_start (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.rand_start"]], "random_starting_tree (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.random_starting_tree"]], "rapid_bootstrap_seed (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.rapid_bootstrap_seed"]], "rawdist (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.rawdist"]], "rearrangements (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.rearrangements"]], "refresh (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.refresh"]], "run_id (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.run_id"]], "search (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.search"]], "second (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.second"]], "seed (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.seed"]], "sequences (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.sequences"]], "sequential (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.sequential"]], "slow (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.slow"]], "slownni (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.slownni"]], "spr (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.spr"]], "sprlength (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.sprlength"]], "starting_tree (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.starting_tree"]], "threads (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.threads"]], "top (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.top"]], "topm (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.topm"]], "ts_tv_ratio (bio.phylo.applications.phymlcommandline property)": [[181, "Bio.Phylo.Applications.PhymlCommandline.ts_tv_ratio"]], "version (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.version"]], "wag (bio.phylo.applications.fasttreecommandline property)": [[181, "Bio.Phylo.Applications.FastTreeCommandline.wag"]], "weight_filename (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.weight_filename"]], "working_dir (bio.phylo.applications.raxmlcommandline property)": [[181, "Bio.Phylo.Applications.RaxmlCommandline.working_dir"]], "bio.phylo.basetree": [[182, "module-Bio.Phylo.BaseTree"]], "branchcolor (class in bio.phylo.basetree)": [[182, "Bio.Phylo.BaseTree.BranchColor"]], "clade (class in bio.phylo.basetree)": [[182, "Bio.Phylo.BaseTree.Clade"]], "tree (class in bio.phylo.basetree)": [[182, "Bio.Phylo.BaseTree.Tree"]], "treeelement (class in bio.phylo.basetree)": [[182, "Bio.Phylo.BaseTree.TreeElement"]], "treemixin (class in bio.phylo.basetree)": [[182, "Bio.Phylo.BaseTree.TreeMixin"]], "__bool__() (bio.phylo.basetree.clade method)": [[182, "Bio.Phylo.BaseTree.Clade.__bool__"]], "__format__() (bio.phylo.basetree.tree method)": [[182, "Bio.Phylo.BaseTree.Tree.__format__"]], "__getitem__() (bio.phylo.basetree.clade method)": [[182, "Bio.Phylo.BaseTree.Clade.__getitem__"]], "__init__() (bio.phylo.basetree.branchcolor method)": [[182, "Bio.Phylo.BaseTree.BranchColor.__init__"]], "__init__() (bio.phylo.basetree.clade method)": [[182, "Bio.Phylo.BaseTree.Clade.__init__"]], "__init__() (bio.phylo.basetree.tree method)": [[182, "Bio.Phylo.BaseTree.Tree.__init__"]], "__iter__() (bio.phylo.basetree.clade method)": [[182, "Bio.Phylo.BaseTree.Clade.__iter__"]], "__len__() (bio.phylo.basetree.clade method)": [[182, "Bio.Phylo.BaseTree.Clade.__len__"]], "__repr__() (bio.phylo.basetree.branchcolor method)": [[182, "Bio.Phylo.BaseTree.BranchColor.__repr__"]], "__repr__() (bio.phylo.basetree.treeelement method)": [[182, "Bio.Phylo.BaseTree.TreeElement.__repr__"]], "__str__() (bio.phylo.basetree.branchcolor method)": [[182, "Bio.Phylo.BaseTree.BranchColor.__str__"]], "__str__() (bio.phylo.basetree.clade method)": [[182, "Bio.Phylo.BaseTree.Clade.__str__"]], "__str__() (bio.phylo.basetree.tree method)": [[182, "Bio.Phylo.BaseTree.Tree.__str__"]], "__str__() (bio.phylo.basetree.treeelement method)": [[182, "Bio.Phylo.BaseTree.TreeElement.__str__"]], "as_phyloxml() (bio.phylo.basetree.tree method)": [[182, "Bio.Phylo.BaseTree.Tree.as_phyloxml"]], "clade (bio.phylo.basetree.tree property)": [[182, "Bio.Phylo.BaseTree.Tree.clade"]], "collapse() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.collapse"]], "collapse_all() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.collapse_all"]], "color (bio.phylo.basetree.clade property)": [[182, "Bio.Phylo.BaseTree.Clade.color"]], "color_names (bio.phylo.basetree.branchcolor attribute)": [[182, "Bio.Phylo.BaseTree.BranchColor.color_names"]], "common_ancestor() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.common_ancestor"]], "count_terminals() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.count_terminals"]], "depths() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.depths"]], "distance() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.distance"]], "find_any() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.find_any"]], "find_clades() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.find_clades"]], "find_elements() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.find_elements"]], "format() (bio.phylo.basetree.tree method)": [[182, "Bio.Phylo.BaseTree.Tree.format"]], "from_clade() (bio.phylo.basetree.tree class method)": [[182, "Bio.Phylo.BaseTree.Tree.from_clade"]], "from_hex() (bio.phylo.basetree.branchcolor class method)": [[182, "Bio.Phylo.BaseTree.BranchColor.from_hex"]], "from_name() (bio.phylo.basetree.branchcolor class method)": [[182, "Bio.Phylo.BaseTree.BranchColor.from_name"]], "get_nonterminals() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.get_nonterminals"]], "get_path() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.get_path"]], "get_terminals() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.get_terminals"]], "is_bifurcating() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.is_bifurcating"]], "is_monophyletic() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.is_monophyletic"]], "is_parent_of() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.is_parent_of"]], "is_preterminal() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.is_preterminal"]], "is_terminal() (bio.phylo.basetree.clade method)": [[182, "Bio.Phylo.BaseTree.Clade.is_terminal"]], "is_terminal() (bio.phylo.basetree.tree method)": [[182, "Bio.Phylo.BaseTree.Tree.is_terminal"]], "ladderize() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.ladderize"]], "prune() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.prune"]], "randomized() (bio.phylo.basetree.tree class method)": [[182, "Bio.Phylo.BaseTree.Tree.randomized"]], "root (bio.phylo.basetree.clade property)": [[182, "Bio.Phylo.BaseTree.Clade.root"]], "root_at_midpoint() (bio.phylo.basetree.tree method)": [[182, "Bio.Phylo.BaseTree.Tree.root_at_midpoint"]], "root_with_outgroup() (bio.phylo.basetree.tree method)": [[182, "Bio.Phylo.BaseTree.Tree.root_with_outgroup"]], "split() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.split"]], "to_hex() (bio.phylo.basetree.branchcolor method)": [[182, "Bio.Phylo.BaseTree.BranchColor.to_hex"]], "to_rgb() (bio.phylo.basetree.branchcolor method)": [[182, "Bio.Phylo.BaseTree.BranchColor.to_rgb"]], "total_branch_length() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.total_branch_length"]], "trace() (bio.phylo.basetree.treemixin method)": [[182, "Bio.Phylo.BaseTree.TreeMixin.trace"]], "bio.phylo.cdao": [[183, "module-Bio.Phylo.CDAO"]], "clade (class in bio.phylo.cdao)": [[183, "Bio.Phylo.CDAO.Clade"]], "tree (class in bio.phylo.cdao)": [[183, "Bio.Phylo.CDAO.Tree"]], "__init__() (bio.phylo.cdao.clade method)": [[183, "Bio.Phylo.CDAO.Clade.__init__"]], "__init__() (bio.phylo.cdao.tree method)": [[183, "Bio.Phylo.CDAO.Tree.__init__"]], "bio.phylo.cdaoio": [[184, "module-Bio.Phylo.CDAOIO"]], "parser (class in bio.phylo.cdaoio)": [[184, "Bio.Phylo.CDAOIO.Parser"]], "writer (class in bio.phylo.cdaoio)": [[184, "Bio.Phylo.CDAOIO.Writer"]], "__init__() (bio.phylo.cdaoio.parser method)": [[184, "Bio.Phylo.CDAOIO.Parser.__init__"]], "__init__() (bio.phylo.cdaoio.writer method)": [[184, "Bio.Phylo.CDAOIO.Writer.__init__"]], "add_stmt_to_handle() (bio.phylo.cdaoio.writer method)": [[184, "Bio.Phylo.CDAOIO.Writer.add_stmt_to_handle"]], "format_label() (in module bio.phylo.cdaoio)": [[184, "Bio.Phylo.CDAOIO.format_label"]], "from_string() (bio.phylo.cdaoio.parser class method)": [[184, "Bio.Phylo.CDAOIO.Parser.from_string"]], "get_node_info() (bio.phylo.cdaoio.parser method)": [[184, "Bio.Phylo.CDAOIO.Parser.get_node_info"]], "new_clade() (bio.phylo.cdaoio.parser method)": [[184, "Bio.Phylo.CDAOIO.Parser.new_clade"]], "parse() (bio.phylo.cdaoio.parser method)": [[184, "Bio.Phylo.CDAOIO.Parser.parse"]], "parse() (in module bio.phylo.cdaoio)": [[184, "Bio.Phylo.CDAOIO.parse"]], "parse_children() (bio.phylo.cdaoio.parser method)": [[184, "Bio.Phylo.CDAOIO.Parser.parse_children"]], "parse_graph() (bio.phylo.cdaoio.parser method)": [[184, "Bio.Phylo.CDAOIO.Parser.parse_graph"]], "parse_handle_to_graph() (bio.phylo.cdaoio.parser method)": [[184, "Bio.Phylo.CDAOIO.Parser.parse_handle_to_graph"]], "prefixes (bio.phylo.cdaoio.writer attribute)": [[184, "Bio.Phylo.CDAOIO.Writer.prefixes"]], "process_clade() (bio.phylo.cdaoio.writer method)": [[184, "Bio.Phylo.CDAOIO.Writer.process_clade"]], "quri() (in module bio.phylo.cdaoio)": [[184, "Bio.Phylo.CDAOIO.qUri"]], "write() (bio.phylo.cdaoio.writer method)": [[184, "Bio.Phylo.CDAOIO.Writer.write"]], "write() (in module bio.phylo.cdaoio)": [[184, "Bio.Phylo.CDAOIO.write"]], "bio.phylo.consensus": [[185, "module-Bio.Phylo.Consensus"]], "adam_consensus() (in module bio.phylo.consensus)": [[185, "Bio.Phylo.Consensus.adam_consensus"]], "bootstrap() (in module bio.phylo.consensus)": [[185, "Bio.Phylo.Consensus.bootstrap"]], "bootstrap_consensus() (in module bio.phylo.consensus)": [[185, "Bio.Phylo.Consensus.bootstrap_consensus"]], "bootstrap_trees() (in module bio.phylo.consensus)": [[185, "Bio.Phylo.Consensus.bootstrap_trees"]], "get_support() (in module bio.phylo.consensus)": [[185, "Bio.Phylo.Consensus.get_support"]], "majority_consensus() (in module bio.phylo.consensus)": [[185, "Bio.Phylo.Consensus.majority_consensus"]], "strict_consensus() (in module bio.phylo.consensus)": [[185, "Bio.Phylo.Consensus.strict_consensus"]], "bio.phylo.nexml": [[186, "module-Bio.Phylo.NeXML"]], "clade (class in bio.phylo.nexml)": [[186, "Bio.Phylo.NeXML.Clade"]], "tree (class in bio.phylo.nexml)": [[186, "Bio.Phylo.NeXML.Tree"]], "__init__() (bio.phylo.nexml.clade method)": [[186, "Bio.Phylo.NeXML.Clade.__init__"]], "__init__() (bio.phylo.nexml.tree method)": [[186, "Bio.Phylo.NeXML.Tree.__init__"]], "bio.phylo.nexmlio": [[187, "module-Bio.Phylo.NeXMLIO"]], "nexmlerror": [[187, "Bio.Phylo.NeXMLIO.NeXMLError"]], "parser (class in bio.phylo.nexmlio)": [[187, "Bio.Phylo.NeXMLIO.Parser"]], "writer (class in bio.phylo.nexmlio)": [[187, "Bio.Phylo.NeXMLIO.Writer"]], "__init__() (bio.phylo.nexmlio.parser method)": [[187, "Bio.Phylo.NeXMLIO.Parser.__init__"]], "__init__() (bio.phylo.nexmlio.writer method)": [[187, "Bio.Phylo.NeXMLIO.Writer.__init__"]], "add_annotation() (bio.phylo.nexmlio.parser method)": [[187, "Bio.Phylo.NeXMLIO.Parser.add_annotation"]], "cdao_to_obo() (in module bio.phylo.nexmlio)": [[187, "Bio.Phylo.NeXMLIO.cdao_to_obo"]], "from_string() (bio.phylo.nexmlio.parser class method)": [[187, "Bio.Phylo.NeXMLIO.Parser.from_string"]], "matches() (in module bio.phylo.nexmlio)": [[187, "Bio.Phylo.NeXMLIO.matches"]], "new_label() (bio.phylo.nexmlio.writer method)": [[187, "Bio.Phylo.NeXMLIO.Writer.new_label"]], "parse() (bio.phylo.nexmlio.parser method)": [[187, "Bio.Phylo.NeXMLIO.Parser.parse"]], "parse() (in module bio.phylo.nexmlio)": [[187, "Bio.Phylo.NeXMLIO.parse"]], "quri() (in module bio.phylo.nexmlio)": [[187, "Bio.Phylo.NeXMLIO.qUri"]], "write() (bio.phylo.nexmlio.writer method)": [[187, "Bio.Phylo.NeXMLIO.Writer.write"]], "write() (in module bio.phylo.nexmlio)": [[187, "Bio.Phylo.NeXMLIO.write"]], "bio.phylo.newick": [[188, "module-Bio.Phylo.Newick"]], "clade (class in bio.phylo.newick)": [[188, "Bio.Phylo.Newick.Clade"]], "tree (class in bio.phylo.newick)": [[188, "Bio.Phylo.Newick.Tree"]], "__init__() (bio.phylo.newick.clade method)": [[188, "Bio.Phylo.Newick.Clade.__init__"]], "__init__() (bio.phylo.newick.tree method)": [[188, "Bio.Phylo.Newick.Tree.__init__"]], "bio.phylo.newickio": [[189, "module-Bio.Phylo.NewickIO"]], "newickerror": [[189, "Bio.Phylo.NewickIO.NewickError"]], "parser (class in bio.phylo.newickio)": [[189, "Bio.Phylo.NewickIO.Parser"]], "writer (class in bio.phylo.newickio)": [[189, "Bio.Phylo.NewickIO.Writer"]], "__init__() (bio.phylo.newickio.parser method)": [[189, "Bio.Phylo.NewickIO.Parser.__init__"]], "__init__() (bio.phylo.newickio.writer method)": [[189, "Bio.Phylo.NewickIO.Writer.__init__"]], "from_string() (bio.phylo.newickio.parser class method)": [[189, "Bio.Phylo.NewickIO.Parser.from_string"]], "new_clade() (bio.phylo.newickio.parser method)": [[189, "Bio.Phylo.NewickIO.Parser.new_clade"]], "parse() (bio.phylo.newickio.parser method)": [[189, "Bio.Phylo.NewickIO.Parser.parse"]], "parse() (in module bio.phylo.newickio)": [[189, "Bio.Phylo.NewickIO.parse"]], "process_clade() (bio.phylo.newickio.parser method)": [[189, "Bio.Phylo.NewickIO.Parser.process_clade"]], "to_strings() (bio.phylo.newickio.writer method)": [[189, "Bio.Phylo.NewickIO.Writer.to_strings"]], "write() (bio.phylo.newickio.writer method)": [[189, "Bio.Phylo.NewickIO.Writer.write"]], "write() (in module bio.phylo.newickio)": [[189, "Bio.Phylo.NewickIO.write"]], "bio.phylo.nexusio": [[190, "module-Bio.Phylo.NexusIO"]], "parse() (in module bio.phylo.nexusio)": [[190, "Bio.Phylo.NexusIO.parse"]], "write() (in module bio.phylo.nexusio)": [[190, "Bio.Phylo.NexusIO.write"]], "bio.phylo.paml": [[191, "module-Bio.Phylo.PAML"]], "baseml (class in bio.phylo.paml.baseml)": [[192, "Bio.Phylo.PAML.baseml.Baseml"]], "basemlerror": [[192, "Bio.Phylo.PAML.baseml.BasemlError"]], "bio.phylo.paml.baseml": [[192, "module-Bio.Phylo.PAML.baseml"]], "__init__() (bio.phylo.paml.baseml.baseml method)": [[192, "Bio.Phylo.PAML.baseml.Baseml.__init__"]], "read() (in module bio.phylo.paml.baseml)": [[192, "Bio.Phylo.PAML.baseml.read"]], "read_ctl_file() (bio.phylo.paml.baseml.baseml method)": [[192, "Bio.Phylo.PAML.baseml.Baseml.read_ctl_file"]], "run() (bio.phylo.paml.baseml.baseml method)": [[192, "Bio.Phylo.PAML.baseml.Baseml.run"]], "write_ctl_file() (bio.phylo.paml.baseml.baseml method)": [[192, "Bio.Phylo.PAML.baseml.Baseml.write_ctl_file"]], "bio.phylo.paml.chi2": [[193, "module-Bio.Phylo.PAML.chi2"]], "cdf_chi2() (in module bio.phylo.paml.chi2)": [[193, "Bio.Phylo.PAML.chi2.cdf_chi2"]], "bio.phylo.paml.codeml": [[194, "module-Bio.Phylo.PAML.codeml"]], "codeml (class in bio.phylo.paml.codeml)": [[194, "Bio.Phylo.PAML.codeml.Codeml"]], "codemlerror": [[194, "Bio.Phylo.PAML.codeml.CodemlError"]], "__init__() (bio.phylo.paml.codeml.codeml method)": [[194, "Bio.Phylo.PAML.codeml.Codeml.__init__"]], "print_options() (bio.phylo.paml.codeml.codeml method)": [[194, "Bio.Phylo.PAML.codeml.Codeml.print_options"]], "read() (in module bio.phylo.paml.codeml)": [[194, "Bio.Phylo.PAML.codeml.read"]], "read_ctl_file() (bio.phylo.paml.codeml.codeml method)": [[194, "Bio.Phylo.PAML.codeml.Codeml.read_ctl_file"]], "run() (bio.phylo.paml.codeml.codeml method)": [[194, "Bio.Phylo.PAML.codeml.Codeml.run"]], "write_ctl_file() (bio.phylo.paml.codeml.codeml method)": [[194, "Bio.Phylo.PAML.codeml.Codeml.write_ctl_file"]], "bio.phylo.paml.yn00": [[195, "module-Bio.Phylo.PAML.yn00"]], "yn00 (class in bio.phylo.paml.yn00)": [[195, "Bio.Phylo.PAML.yn00.Yn00"]], "yn00error": [[195, "Bio.Phylo.PAML.yn00.Yn00Error"]], "__init__() (bio.phylo.paml.yn00.yn00 method)": [[195, "Bio.Phylo.PAML.yn00.Yn00.__init__"]], "read() (in module bio.phylo.paml.yn00)": [[195, "Bio.Phylo.PAML.yn00.read"]], "read_ctl_file() (bio.phylo.paml.yn00.yn00 method)": [[195, "Bio.Phylo.PAML.yn00.Yn00.read_ctl_file"]], "run() (bio.phylo.paml.yn00.yn00 method)": [[195, "Bio.Phylo.PAML.yn00.Yn00.run"]], "write_ctl_file() (bio.phylo.paml.yn00.yn00 method)": [[195, "Bio.Phylo.PAML.yn00.Yn00.write_ctl_file"]], "accession (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Accession"]], "annotation (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Annotation"]], "binarycharacters (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.BinaryCharacters"]], "bio.phylo.phyloxml": [[196, "module-Bio.Phylo.PhyloXML"]], "branchcolor (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.BranchColor"]], "clade (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Clade"]], "claderelation (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.CladeRelation"]], "confidence (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Confidence"]], "date (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Date"]], "distribution (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Distribution"]], "domainarchitecture (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.DomainArchitecture"]], "events (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Events"]], "id (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Id"]], "molseq (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.MolSeq"]], "other (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Other"]], "phyloelement (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.PhyloElement"]], "phyloxmlwarning": [[196, "Bio.Phylo.PhyloXML.PhyloXMLWarning"]], "phylogeny (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Phylogeny"]], "phyloxml (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Phyloxml"]], "point (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Point"]], "polygon (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Polygon"]], "property (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Property"]], "proteindomain (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.ProteinDomain"]], "reference (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Reference"]], "sequence (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Sequence"]], "sequencerelation (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.SequenceRelation"]], "taxonomy (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Taxonomy"]], "uri (class in bio.phylo.phyloxml)": [[196, "Bio.Phylo.PhyloXML.Uri"]], "__contains__() (bio.phylo.phyloxml.events method)": [[196, "Bio.Phylo.PhyloXML.Events.__contains__"]], "__delitem__() (bio.phylo.phyloxml.events method)": [[196, "Bio.Phylo.PhyloXML.Events.__delitem__"]], "__getitem__() (bio.phylo.phyloxml.events method)": [[196, "Bio.Phylo.PhyloXML.Events.__getitem__"]], "__getitem__() (bio.phylo.phyloxml.phyloxml method)": [[196, "Bio.Phylo.PhyloXML.Phyloxml.__getitem__"]], "__init__() (bio.phylo.phyloxml.accession method)": [[196, "Bio.Phylo.PhyloXML.Accession.__init__"]], "__init__() (bio.phylo.phyloxml.annotation method)": [[196, "Bio.Phylo.PhyloXML.Annotation.__init__"]], "__init__() (bio.phylo.phyloxml.binarycharacters method)": [[196, "Bio.Phylo.PhyloXML.BinaryCharacters.__init__"]], "__init__() (bio.phylo.phyloxml.branchcolor method)": [[196, "Bio.Phylo.PhyloXML.BranchColor.__init__"]], "__init__() (bio.phylo.phyloxml.clade method)": [[196, "Bio.Phylo.PhyloXML.Clade.__init__"]], "__init__() (bio.phylo.phyloxml.claderelation method)": [[196, "Bio.Phylo.PhyloXML.CladeRelation.__init__"]], "__init__() (bio.phylo.phyloxml.date method)": [[196, "Bio.Phylo.PhyloXML.Date.__init__"]], "__init__() (bio.phylo.phyloxml.distribution method)": [[196, "Bio.Phylo.PhyloXML.Distribution.__init__"]], "__init__() (bio.phylo.phyloxml.domainarchitecture method)": [[196, "Bio.Phylo.PhyloXML.DomainArchitecture.__init__"]], "__init__() (bio.phylo.phyloxml.events method)": [[196, "Bio.Phylo.PhyloXML.Events.__init__"]], "__init__() (bio.phylo.phyloxml.id method)": [[196, "Bio.Phylo.PhyloXML.Id.__init__"]], "__init__() (bio.phylo.phyloxml.molseq method)": [[196, "Bio.Phylo.PhyloXML.MolSeq.__init__"]], "__init__() (bio.phylo.phyloxml.other method)": [[196, "Bio.Phylo.PhyloXML.Other.__init__"]], "__init__() (bio.phylo.phyloxml.phylogeny method)": [[196, "Bio.Phylo.PhyloXML.Phylogeny.__init__"]], "__init__() (bio.phylo.phyloxml.phyloxml method)": [[196, "Bio.Phylo.PhyloXML.Phyloxml.__init__"]], "__init__() (bio.phylo.phyloxml.point method)": [[196, "Bio.Phylo.PhyloXML.Point.__init__"]], "__init__() (bio.phylo.phyloxml.polygon method)": [[196, "Bio.Phylo.PhyloXML.Polygon.__init__"]], "__init__() (bio.phylo.phyloxml.property method)": [[196, "Bio.Phylo.PhyloXML.Property.__init__"]], "__init__() (bio.phylo.phyloxml.proteindomain method)": [[196, "Bio.Phylo.PhyloXML.ProteinDomain.__init__"]], "__init__() (bio.phylo.phyloxml.reference method)": [[196, "Bio.Phylo.PhyloXML.Reference.__init__"]], "__init__() (bio.phylo.phyloxml.sequence method)": [[196, "Bio.Phylo.PhyloXML.Sequence.__init__"]], "__init__() (bio.phylo.phyloxml.sequencerelation method)": [[196, "Bio.Phylo.PhyloXML.SequenceRelation.__init__"]], "__init__() (bio.phylo.phyloxml.taxonomy method)": [[196, "Bio.Phylo.PhyloXML.Taxonomy.__init__"]], "__init__() (bio.phylo.phyloxml.uri method)": [[196, "Bio.Phylo.PhyloXML.Uri.__init__"]], "__iter__() (bio.phylo.phyloxml.events method)": [[196, "Bio.Phylo.PhyloXML.Events.__iter__"]], "__iter__() (bio.phylo.phyloxml.other method)": [[196, "Bio.Phylo.PhyloXML.Other.__iter__"]], "__iter__() (bio.phylo.phyloxml.phyloxml method)": [[196, "Bio.Phylo.PhyloXML.Phyloxml.__iter__"]], "__len__() (bio.phylo.phyloxml.events method)": [[196, "Bio.Phylo.PhyloXML.Events.__len__"]], "__len__() (bio.phylo.phyloxml.phyloxml method)": [[196, "Bio.Phylo.PhyloXML.Phyloxml.__len__"]], "__new__() (bio.phylo.phyloxml.confidence static method)": [[196, "Bio.Phylo.PhyloXML.Confidence.__new__"]], "__setitem__() (bio.phylo.phyloxml.events method)": [[196, "Bio.Phylo.PhyloXML.Events.__setitem__"]], "__str__() (bio.phylo.phyloxml.accession method)": [[196, "Bio.Phylo.PhyloXML.Accession.__str__"]], "__str__() (bio.phylo.phyloxml.date method)": [[196, "Bio.Phylo.PhyloXML.Date.__str__"]], "__str__() (bio.phylo.phyloxml.id method)": [[196, "Bio.Phylo.PhyloXML.Id.__str__"]], "__str__() (bio.phylo.phyloxml.molseq method)": [[196, "Bio.Phylo.PhyloXML.MolSeq.__str__"]], "__str__() (bio.phylo.phyloxml.phyloxml method)": [[196, "Bio.Phylo.PhyloXML.Phyloxml.__str__"]], "__str__() (bio.phylo.phyloxml.polygon method)": [[196, "Bio.Phylo.PhyloXML.Polygon.__str__"]], "__str__() (bio.phylo.phyloxml.taxonomy method)": [[196, "Bio.Phylo.PhyloXML.Taxonomy.__str__"]], "__str__() (bio.phylo.phyloxml.uri method)": [[196, "Bio.Phylo.PhyloXML.Uri.__str__"]], "alignment (bio.phylo.phyloxml.phylogeny property)": [[196, "Bio.Phylo.PhyloXML.Phylogeny.alignment"]], "as_phyloxml() (bio.phylo.phyloxml.phylogeny method)": [[196, "Bio.Phylo.PhyloXML.Phylogeny.as_phyloxml"]], "confidence (bio.phylo.phyloxml.clade property)": [[196, "Bio.Phylo.PhyloXML.Clade.confidence"]], "confidence (bio.phylo.phyloxml.phylogeny property)": [[196, "Bio.Phylo.PhyloXML.Phylogeny.confidence"]], "from_clade() (bio.phylo.phyloxml.clade class method)": [[196, "Bio.Phylo.PhyloXML.Clade.from_clade"]], "from_clade() (bio.phylo.phyloxml.phylogeny class method)": [[196, "Bio.Phylo.PhyloXML.Phylogeny.from_clade"]], "from_seqfeature() (bio.phylo.phyloxml.proteindomain class method)": [[196, "Bio.Phylo.PhyloXML.ProteinDomain.from_seqfeature"]], "from_seqrecord() (bio.phylo.phyloxml.sequence class method)": [[196, "Bio.Phylo.PhyloXML.Sequence.from_seqrecord"]], "from_tree() (bio.phylo.phyloxml.phylogeny class method)": [[196, "Bio.Phylo.PhyloXML.Phylogeny.from_tree"]], "items() (bio.phylo.phyloxml.events method)": [[196, "Bio.Phylo.PhyloXML.Events.items"]], "keys() (bio.phylo.phyloxml.events method)": [[196, "Bio.Phylo.PhyloXML.Events.keys"]], "ok_applies_to (bio.phylo.phyloxml.property attribute)": [[196, "Bio.Phylo.PhyloXML.Property.ok_applies_to"]], "ok_datatype (bio.phylo.phyloxml.property attribute)": [[196, "Bio.Phylo.PhyloXML.Property.ok_datatype"]], "ok_rank (bio.phylo.phyloxml.taxonomy attribute)": [[196, "Bio.Phylo.PhyloXML.Taxonomy.ok_rank"]], "ok_type (bio.phylo.phyloxml.events attribute)": [[196, "Bio.Phylo.PhyloXML.Events.ok_type"]], "ok_type (bio.phylo.phyloxml.sequencerelation attribute)": [[196, "Bio.Phylo.PhyloXML.SequenceRelation.ok_type"]], "re_code (bio.phylo.phyloxml.taxonomy attribute)": [[196, "Bio.Phylo.PhyloXML.Taxonomy.re_code"]], "re_doi (bio.phylo.phyloxml.reference attribute)": [[196, "Bio.Phylo.PhyloXML.Reference.re_doi"]], "re_ref (bio.phylo.phyloxml.annotation attribute)": [[196, "Bio.Phylo.PhyloXML.Annotation.re_ref"]], "re_ref (bio.phylo.phyloxml.property attribute)": [[196, "Bio.Phylo.PhyloXML.Property.re_ref"]], "re_symbol (bio.phylo.phyloxml.sequence attribute)": [[196, "Bio.Phylo.PhyloXML.Sequence.re_symbol"]], "re_value (bio.phylo.phyloxml.molseq attribute)": [[196, "Bio.Phylo.PhyloXML.MolSeq.re_value"]], "taxonomy (bio.phylo.phyloxml.clade property)": [[196, "Bio.Phylo.PhyloXML.Clade.taxonomy"]], "to_alignment() (bio.phylo.phyloxml.phylogeny method)": [[196, "Bio.Phylo.PhyloXML.Phylogeny.to_alignment"]], "to_phylogeny() (bio.phylo.phyloxml.clade method)": [[196, "Bio.Phylo.PhyloXML.Clade.to_phylogeny"]], "to_phyloxml_container() (bio.phylo.phyloxml.phylogeny method)": [[196, "Bio.Phylo.PhyloXML.Phylogeny.to_phyloxml_container"]], "to_seqfeature() (bio.phylo.phyloxml.proteindomain method)": [[196, "Bio.Phylo.PhyloXML.ProteinDomain.to_seqfeature"]], "to_seqrecord() (bio.phylo.phyloxml.sequence method)": [[196, "Bio.Phylo.PhyloXML.Sequence.to_seqrecord"]], "types (bio.phylo.phyloxml.sequence attribute)": [[196, "Bio.Phylo.PhyloXML.Sequence.types"]], "value (bio.phylo.phyloxml.confidence property)": [[196, "Bio.Phylo.PhyloXML.Confidence.value"]], "values() (bio.phylo.phyloxml.events method)": [[196, "Bio.Phylo.PhyloXML.Events.values"]], "bio.phylo.phyloxmlio": [[197, "module-Bio.Phylo.PhyloXMLIO"]], "parser (class in bio.phylo.phyloxmlio)": [[197, "Bio.Phylo.PhyloXMLIO.Parser"]], "phyloxmlerror": [[197, "Bio.Phylo.PhyloXMLIO.PhyloXMLError"]], "writer (class in bio.phylo.phyloxmlio)": [[197, "Bio.Phylo.PhyloXMLIO.Writer"]], "__init__() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.__init__"]], "__init__() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.__init__"]], "accession() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.accession"]], "accession() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.accession"]], "alt() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.alt"]], "annotation() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.annotation"]], "annotation() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.annotation"]], "bc() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.bc"]], "binary_characters() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.binary_characters"]], "binary_characters() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.binary_characters"]], "blue() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.blue"]], "branch_length() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.branch_length"]], "clade() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.clade"]], "clade_relation() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.clade_relation"]], "clade_relation() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.clade_relation"]], "code() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.code"]], "color() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.color"]], "color() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.color"]], "common_name() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.common_name"]], "confidence() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.confidence"]], "confidence() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.confidence"]], "date() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.date"]], "date() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.date"]], "desc() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.desc"]], "description() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.description"]], "distribution() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.distribution"]], "distribution() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.distribution"]], "domain() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.domain"]], "domain() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.domain"]], "domain_architecture() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.domain_architecture"]], "domain_architecture() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.domain_architecture"]], "duplications() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.duplications"]], "events() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.events"]], "events() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.events"]], "green() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.green"]], "id() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.id"]], "id() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.id"]], "lat() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.lat"]], "location() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.location"]], "long() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.long"]], "losses() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.losses"]], "maximum() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.maximum"]], "minimum() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.minimum"]], "mol_seq() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.mol_seq"]], "mol_seq() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.mol_seq"]], "name() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.name"]], "node_id() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.node_id"]], "other() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.other"]], "other() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.other"]], "parse() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.parse"]], "parse() (in module bio.phylo.phyloxmlio)": [[197, "Bio.Phylo.PhyloXMLIO.parse"]], "phylogeny() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.phylogeny"]], "phyloxml() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.phyloxml"]], "point() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.point"]], "point() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.point"]], "polygon() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.polygon"]], "polygon() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.polygon"]], "property() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.property"]], "property() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.property"]], "rank() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.rank"]], "read() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.read"]], "read() (in module bio.phylo.phyloxmlio)": [[197, "Bio.Phylo.PhyloXMLIO.read"]], "red() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.red"]], "reference() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.reference"]], "reference() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.reference"]], "scientific_name() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.scientific_name"]], "sequence() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.sequence"]], "sequence_relation() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.sequence_relation"]], "sequence_relation() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.sequence_relation"]], "speciations() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.speciations"]], "symbol() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.symbol"]], "synonym() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.synonym"]], "taxonomy() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.taxonomy"]], "type() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.type"]], "uri() (bio.phylo.phyloxmlio.parser method)": [[197, "Bio.Phylo.PhyloXMLIO.Parser.uri"]], "uri() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.uri"]], "value() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.value"]], "width() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.width"]], "write() (bio.phylo.phyloxmlio.writer method)": [[197, "Bio.Phylo.PhyloXMLIO.Writer.write"]], "write() (in module bio.phylo.phyloxmlio)": [[197, "Bio.Phylo.PhyloXMLIO.write"]], "bio.phylo.treeconstruction": [[198, "module-Bio.Phylo.TreeConstruction"]], "distancecalculator (class in bio.phylo.treeconstruction)": [[198, "Bio.Phylo.TreeConstruction.DistanceCalculator"]], "distancematrix (class in bio.phylo.treeconstruction)": [[198, "Bio.Phylo.TreeConstruction.DistanceMatrix"]], "distancetreeconstructor (class in bio.phylo.treeconstruction)": [[198, "Bio.Phylo.TreeConstruction.DistanceTreeConstructor"]], "nnitreesearcher (class in bio.phylo.treeconstruction)": [[198, "Bio.Phylo.TreeConstruction.NNITreeSearcher"]], "parsimonyscorer (class in bio.phylo.treeconstruction)": [[198, "Bio.Phylo.TreeConstruction.ParsimonyScorer"]], "parsimonytreeconstructor (class in bio.phylo.treeconstruction)": [[198, "Bio.Phylo.TreeConstruction.ParsimonyTreeConstructor"]], "scorer (class in bio.phylo.treeconstruction)": [[198, "Bio.Phylo.TreeConstruction.Scorer"]], "treeconstructor (class in bio.phylo.treeconstruction)": [[198, "Bio.Phylo.TreeConstruction.TreeConstructor"]], "treesearcher (class in bio.phylo.treeconstruction)": [[198, "Bio.Phylo.TreeConstruction.TreeSearcher"]], "__init__() (bio.phylo.treeconstruction.distancecalculator method)": [[198, "Bio.Phylo.TreeConstruction.DistanceCalculator.__init__"]], "__init__() (bio.phylo.treeconstruction.distancematrix method)": [[198, "Bio.Phylo.TreeConstruction.DistanceMatrix.__init__"]], "__init__() (bio.phylo.treeconstruction.distancetreeconstructor method)": [[198, "Bio.Phylo.TreeConstruction.DistanceTreeConstructor.__init__"]], "__init__() (bio.phylo.treeconstruction.nnitreesearcher method)": [[198, "Bio.Phylo.TreeConstruction.NNITreeSearcher.__init__"]], "__init__() (bio.phylo.treeconstruction.parsimonyscorer method)": [[198, "Bio.Phylo.TreeConstruction.ParsimonyScorer.__init__"]], "__init__() (bio.phylo.treeconstruction.parsimonytreeconstructor method)": [[198, "Bio.Phylo.TreeConstruction.ParsimonyTreeConstructor.__init__"]], "__setitem__() (bio.phylo.treeconstruction.distancematrix method)": [[198, "Bio.Phylo.TreeConstruction.DistanceMatrix.__setitem__"]], "build_tree() (bio.phylo.treeconstruction.distancetreeconstructor method)": [[198, "Bio.Phylo.TreeConstruction.DistanceTreeConstructor.build_tree"]], "build_tree() (bio.phylo.treeconstruction.parsimonytreeconstructor method)": [[198, "Bio.Phylo.TreeConstruction.ParsimonyTreeConstructor.build_tree"]], "build_tree() (bio.phylo.treeconstruction.treeconstructor method)": [[198, "Bio.Phylo.TreeConstruction.TreeConstructor.build_tree"]], "dna_models (bio.phylo.treeconstruction.distancecalculator attribute)": [[198, "Bio.Phylo.TreeConstruction.DistanceCalculator.dna_models"]], "format_phylip() (bio.phylo.treeconstruction.distancematrix method)": [[198, "Bio.Phylo.TreeConstruction.DistanceMatrix.format_phylip"]], "get_distance() (bio.phylo.treeconstruction.distancecalculator method)": [[198, "Bio.Phylo.TreeConstruction.DistanceCalculator.get_distance"]], "get_score() (bio.phylo.treeconstruction.parsimonyscorer method)": [[198, "Bio.Phylo.TreeConstruction.ParsimonyScorer.get_score"]], "get_score() (bio.phylo.treeconstruction.scorer method)": [[198, "Bio.Phylo.TreeConstruction.Scorer.get_score"]], "methods (bio.phylo.treeconstruction.distancetreeconstructor attribute)": [[198, "Bio.Phylo.TreeConstruction.DistanceTreeConstructor.methods"]], "models (bio.phylo.treeconstruction.distancecalculator attribute)": [[198, "Bio.Phylo.TreeConstruction.DistanceCalculator.models"]], "nj() (bio.phylo.treeconstruction.distancetreeconstructor method)": [[198, "Bio.Phylo.TreeConstruction.DistanceTreeConstructor.nj"]], "protein_models (bio.phylo.treeconstruction.distancecalculator attribute)": [[198, "Bio.Phylo.TreeConstruction.DistanceCalculator.protein_models"]], "search() (bio.phylo.treeconstruction.nnitreesearcher method)": [[198, "Bio.Phylo.TreeConstruction.NNITreeSearcher.search"]], "search() (bio.phylo.treeconstruction.treesearcher method)": [[198, "Bio.Phylo.TreeConstruction.TreeSearcher.search"]], "upgma() (bio.phylo.treeconstruction.distancetreeconstructor method)": [[198, "Bio.Phylo.TreeConstruction.DistanceTreeConstructor.upgma"]], "bio.popgen": [[199, "module-Bio.PopGen"]], "bio.popgen.genepop": [[200, "module-Bio.PopGen.GenePop"]], "record (class in bio.popgen.genepop)": [[200, "Bio.PopGen.GenePop.Record"]], "__init__() (bio.popgen.genepop.record method)": [[200, "Bio.PopGen.GenePop.Record.__init__"]], "__str__() (bio.popgen.genepop.record method)": [[200, "Bio.PopGen.GenePop.Record.__str__"]], "get_indiv() (in module bio.popgen.genepop)": [[200, "Bio.PopGen.GenePop.get_indiv"]], "read() (in module bio.popgen.genepop)": [[200, "Bio.PopGen.GenePop.read"]], "remove_locus_by_name() (bio.popgen.genepop.record method)": [[200, "Bio.PopGen.GenePop.Record.remove_locus_by_name"]], "remove_locus_by_position() (bio.popgen.genepop.record method)": [[200, "Bio.PopGen.GenePop.Record.remove_locus_by_position"]], "remove_population() (bio.popgen.genepop.record method)": [[200, "Bio.PopGen.GenePop.Record.remove_population"]], "split_in_loci() (bio.popgen.genepop.record method)": [[200, "Bio.PopGen.GenePop.Record.split_in_loci"]], "split_in_pops() (bio.popgen.genepop.record method)": [[200, "Bio.PopGen.GenePop.Record.split_in_pops"]], "bio.popgen.genepop.controller": [[201, "module-Bio.PopGen.GenePop.Controller"]], "genepopcontroller (class in bio.popgen.genepop.controller)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController"]], "__init__() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.__init__"]], "calc_allele_genotype_freqs() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.calc_allele_genotype_freqs"]], "calc_diversities_fis_with_identity() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.calc_diversities_fis_with_identity"]], "calc_diversities_fis_with_size() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.calc_diversities_fis_with_size"]], "calc_fst_all() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.calc_fst_all"]], "calc_fst_pair() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.calc_fst_pair"]], "calc_ibd_diplo() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.calc_ibd_diplo"]], "calc_ibd_haplo() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.calc_ibd_haplo"]], "calc_rho_all() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.calc_rho_all"]], "calc_rho_pair() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.calc_rho_pair"]], "create_contingency_tables() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.create_contingency_tables"]], "estimate_nm() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.estimate_nm"]], "test_genic_diff_all() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.test_genic_diff_all"]], "test_genic_diff_pair() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.test_genic_diff_pair"]], "test_genotypic_diff_all() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.test_genotypic_diff_all"]], "test_genotypic_diff_pair() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.test_genotypic_diff_pair"]], "test_global_hz_deficiency() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.test_global_hz_deficiency"]], "test_global_hz_excess() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.test_global_hz_excess"]], "test_ld() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.test_ld"]], "test_pop_hz_deficiency() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.test_pop_hz_deficiency"]], "test_pop_hz_excess() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.test_pop_hz_excess"]], "test_pop_hz_prob() (bio.popgen.genepop.controller.genepopcontroller method)": [[201, "Bio.PopGen.GenePop.Controller.GenePopController.test_pop_hz_prob"]], "bio.popgen.genepop.easycontroller": [[202, "module-Bio.PopGen.GenePop.EasyController"]], "easycontroller (class in bio.popgen.genepop.easycontroller)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController"]], "__init__() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.__init__"]], "calc_ibd() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.calc_ibd"]], "estimate_nm() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.estimate_nm"]], "get_allele_frequency() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.get_allele_frequency"]], "get_alleles() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.get_alleles"]], "get_alleles_all_pops() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.get_alleles_all_pops"]], "get_avg_fis() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.get_avg_fis"]], "get_avg_fst_pair() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.get_avg_fst_pair"]], "get_avg_fst_pair_locus() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.get_avg_fst_pair_locus"]], "get_basic_info() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.get_basic_info"]], "get_f_stats() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.get_f_stats"]], "get_fis() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.get_fis"]], "get_genotype_count() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.get_genotype_count"]], "get_heterozygosity_info() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.get_heterozygosity_info"]], "get_multilocus_f_stats() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.get_multilocus_f_stats"]], "test_hw_global() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.test_hw_global"]], "test_hw_pop() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.test_hw_pop"]], "test_ld_all_pair() (bio.popgen.genepop.easycontroller.easycontroller method)": [[202, "Bio.PopGen.GenePop.EasyController.EasyController.test_ld_all_pair"]], "bio.popgen.genepop.fileparser": [[203, "module-Bio.PopGen.GenePop.FileParser"]], "filerecord (class in bio.popgen.genepop.fileparser)": [[203, "Bio.PopGen.GenePop.FileParser.FileRecord"]], "__init__() (bio.popgen.genepop.fileparser.filerecord method)": [[203, "Bio.PopGen.GenePop.FileParser.FileRecord.__init__"]], "__str__() (bio.popgen.genepop.fileparser.filerecord method)": [[203, "Bio.PopGen.GenePop.FileParser.FileRecord.__str__"]], "get_individual() (bio.popgen.genepop.fileparser.filerecord method)": [[203, "Bio.PopGen.GenePop.FileParser.FileRecord.get_individual"]], "read() (in module bio.popgen.genepop.fileparser)": [[203, "Bio.PopGen.GenePop.FileParser.read"]], "remove_loci_by_name() (bio.popgen.genepop.fileparser.filerecord method)": [[203, "Bio.PopGen.GenePop.FileParser.FileRecord.remove_loci_by_name"]], "remove_loci_by_position() (bio.popgen.genepop.fileparser.filerecord method)": [[203, "Bio.PopGen.GenePop.FileParser.FileRecord.remove_loci_by_position"]], "remove_locus_by_name() (bio.popgen.genepop.fileparser.filerecord method)": [[203, "Bio.PopGen.GenePop.FileParser.FileRecord.remove_locus_by_name"]], "remove_locus_by_position() (bio.popgen.genepop.fileparser.filerecord method)": [[203, "Bio.PopGen.GenePop.FileParser.FileRecord.remove_locus_by_position"]], "remove_population() (bio.popgen.genepop.fileparser.filerecord method)": [[203, "Bio.PopGen.GenePop.FileParser.FileRecord.remove_population"]], "seek_position() (bio.popgen.genepop.fileparser.filerecord method)": [[203, "Bio.PopGen.GenePop.FileParser.FileRecord.seek_position"]], "skip_header() (bio.popgen.genepop.fileparser.filerecord method)": [[203, "Bio.PopGen.GenePop.FileParser.FileRecord.skip_header"]], "skip_population() (bio.popgen.genepop.fileparser.filerecord method)": [[203, "Bio.PopGen.GenePop.FileParser.FileRecord.skip_population"]], "start_read() (bio.popgen.genepop.fileparser.filerecord method)": [[203, "Bio.PopGen.GenePop.FileParser.FileRecord.start_read"]], "bio.popgen.genepop.largefileparser": [[204, "module-Bio.PopGen.GenePop.LargeFileParser"]], "record (class in bio.popgen.genepop.largefileparser)": [[204, "Bio.PopGen.GenePop.LargeFileParser.Record"]], "__init__() (bio.popgen.genepop.largefileparser.record method)": [[204, "Bio.PopGen.GenePop.LargeFileParser.Record.__init__"]], "data_generator() (bio.popgen.genepop.largefileparser.record method)": [[204, "Bio.PopGen.GenePop.LargeFileParser.Record.data_generator"]], "get_indiv() (in module bio.popgen.genepop.largefileparser)": [[204, "Bio.PopGen.GenePop.LargeFileParser.get_indiv"]], "read() (in module bio.popgen.genepop.largefileparser)": [[204, "Bio.PopGen.GenePop.LargeFileParser.read"]], "bio.restriction": [[205, "module-Bio.Restriction"]], "bio.restriction.printformat": [[206, "module-Bio.Restriction.PrintFormat"]], "cmodulo (bio.restriction.printformat.printformat attribute)": [[206, "Bio.Restriction.PrintFormat.PrintFormat.Cmodulo"]], "consolewidth (bio.restriction.printformat.printformat attribute)": [[206, "Bio.Restriction.PrintFormat.PrintFormat.ConsoleWidth"]], "indent (bio.restriction.printformat.printformat attribute)": [[206, "Bio.Restriction.PrintFormat.PrintFormat.Indent"]], "maxsize (bio.restriction.printformat.printformat attribute)": [[206, "Bio.Restriction.PrintFormat.PrintFormat.MaxSize"]], "namewidth (bio.restriction.printformat.printformat attribute)": [[206, "Bio.Restriction.PrintFormat.PrintFormat.NameWidth"]], "prefwidth (bio.restriction.printformat.printformat attribute)": [[206, "Bio.Restriction.PrintFormat.PrintFormat.PrefWidth"]], "printformat (class in bio.restriction.printformat)": [[206, "Bio.Restriction.PrintFormat.PrintFormat"]], "format_output() (bio.restriction.printformat.printformat method)": [[206, "Bio.Restriction.PrintFormat.PrintFormat.format_output"]], "linesize (bio.restriction.printformat.printformat attribute)": [[206, "Bio.Restriction.PrintFormat.PrintFormat.linesize"]], "make_format() (bio.restriction.printformat.printformat method)": [[206, "Bio.Restriction.PrintFormat.PrintFormat.make_format"]], "print_as() (bio.restriction.printformat.printformat method)": [[206, "Bio.Restriction.PrintFormat.PrintFormat.print_as"]], "print_that() (bio.restriction.printformat.printformat method)": [[206, "Bio.Restriction.PrintFormat.PrintFormat.print_that"]], "bio.restriction.restriction_dictionary": [[207, "module-Bio.Restriction.Restriction_Dictionary"]], "astral (class in bio.scop)": [[208, "Bio.SCOP.Astral"]], "bio.scop": [[208, "module-Bio.SCOP"]], "domain (class in bio.scop)": [[208, "Bio.SCOP.Domain"]], "node (class in bio.scop)": [[208, "Bio.SCOP.Node"]], "scop (class in bio.scop)": [[208, "Bio.SCOP.Scop"]], "__init__() (bio.scop.astral method)": [[208, "Bio.SCOP.Astral.__init__"]], "__init__() (bio.scop.domain method)": [[208, "Bio.SCOP.Domain.__init__"]], "__init__() (bio.scop.node method)": [[208, "Bio.SCOP.Node.__init__"]], "__init__() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.__init__"]], "__str__() (bio.scop.domain method)": [[208, "Bio.SCOP.Domain.__str__"]], "__str__() (bio.scop.node method)": [[208, "Bio.SCOP.Node.__str__"]], "cmp_sccs() (in module bio.scop)": [[208, "Bio.SCOP.cmp_sccs"]], "domainsclusteredbyev() (bio.scop.astral method)": [[208, "Bio.SCOP.Astral.domainsClusteredByEv"]], "domainsclusteredbyid() (bio.scop.astral method)": [[208, "Bio.SCOP.Astral.domainsClusteredById"]], "getascendent() (bio.scop.node method)": [[208, "Bio.SCOP.Node.getAscendent"]], "getascendentfromsql() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.getAscendentFromSQL"]], "getastraldomainsfromfile() (bio.scop.astral method)": [[208, "Bio.SCOP.Astral.getAstralDomainsFromFile"]], "getastraldomainsfromsql() (bio.scop.astral method)": [[208, "Bio.SCOP.Astral.getAstralDomainsFromSQL"]], "getchildren() (bio.scop.node method)": [[208, "Bio.SCOP.Node.getChildren"]], "getdescendents() (bio.scop.node method)": [[208, "Bio.SCOP.Node.getDescendents"]], "getdescendentsfromsql() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.getDescendentsFromSQL"]], "getdomainbysid() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.getDomainBySid"]], "getdomainfromsql() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.getDomainFromSQL"]], "getdomains() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.getDomains"]], "getnodebysunid() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.getNodeBySunid"]], "getparent() (bio.scop.node method)": [[208, "Bio.SCOP.Node.getParent"]], "getroot() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.getRoot"]], "getseq() (bio.scop.astral method)": [[208, "Bio.SCOP.Astral.getSeq"]], "getseqbysid() (bio.scop.astral method)": [[208, "Bio.SCOP.Astral.getSeqBySid"]], "hasheddomainsbyev() (bio.scop.astral method)": [[208, "Bio.SCOP.Astral.hashedDomainsByEv"]], "hasheddomainsbyid() (bio.scop.astral method)": [[208, "Bio.SCOP.Astral.hashedDomainsById"]], "isdomaininev() (bio.scop.astral method)": [[208, "Bio.SCOP.Astral.isDomainInEv"]], "isdomaininid() (bio.scop.astral method)": [[208, "Bio.SCOP.Astral.isDomainInId"]], "parse_domain() (in module bio.scop)": [[208, "Bio.SCOP.parse_domain"]], "search() (in module bio.scop)": [[208, "Bio.SCOP.search"]], "toclarecord() (bio.scop.domain method)": [[208, "Bio.SCOP.Domain.toClaRecord"]], "todesrecord() (bio.scop.domain method)": [[208, "Bio.SCOP.Domain.toDesRecord"]], "todesrecord() (bio.scop.node method)": [[208, "Bio.SCOP.Node.toDesRecord"]], "tohierecord() (bio.scop.node method)": [[208, "Bio.SCOP.Node.toHieRecord"]], "writetosql() (bio.scop.astral method)": [[208, "Bio.SCOP.Astral.writeToSQL"]], "write_cla() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.write_cla"]], "write_cla_sql() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.write_cla_sql"]], "write_des() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.write_des"]], "write_des_sql() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.write_des_sql"]], "write_hie() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.write_hie"]], "write_hie_sql() (bio.scop.scop method)": [[208, "Bio.SCOP.Scop.write_hie_sql"]], "bio.scop.cla": [[209, "module-Bio.SCOP.Cla"]], "index (class in bio.scop.cla)": [[209, "Bio.SCOP.Cla.Index"]], "record (class in bio.scop.cla)": [[209, "Bio.SCOP.Cla.Record"]], "__getitem__() (bio.scop.cla.index method)": [[209, "Bio.SCOP.Cla.Index.__getitem__"]], "__init__() (bio.scop.cla.index method)": [[209, "Bio.SCOP.Cla.Index.__init__"]], "__init__() (bio.scop.cla.record method)": [[209, "Bio.SCOP.Cla.Record.__init__"]], "__str__() (bio.scop.cla.record method)": [[209, "Bio.SCOP.Cla.Record.__str__"]], "parse() (in module bio.scop.cla)": [[209, "Bio.SCOP.Cla.parse"]], "bio.scop.des": [[210, "module-Bio.SCOP.Des"]], "record (class in bio.scop.des)": [[210, "Bio.SCOP.Des.Record"]], "__init__() (bio.scop.des.record method)": [[210, "Bio.SCOP.Des.Record.__init__"]], "__str__() (bio.scop.des.record method)": [[210, "Bio.SCOP.Des.Record.__str__"]], "parse() (in module bio.scop.des)": [[210, "Bio.SCOP.Des.parse"]], "bio.scop.dom": [[211, "module-Bio.SCOP.Dom"]], "record (class in bio.scop.dom)": [[211, "Bio.SCOP.Dom.Record"]], "__init__() (bio.scop.dom.record method)": [[211, "Bio.SCOP.Dom.Record.__init__"]], "__str__() (bio.scop.dom.record method)": [[211, "Bio.SCOP.Dom.Record.__str__"]], "parse() (in module bio.scop.dom)": [[211, "Bio.SCOP.Dom.parse"]], "bio.scop.hie": [[212, "module-Bio.SCOP.Hie"]], "record (class in bio.scop.hie)": [[212, "Bio.SCOP.Hie.Record"]], "__init__() (bio.scop.hie.record method)": [[212, "Bio.SCOP.Hie.Record.__init__"]], "__str__() (bio.scop.hie.record method)": [[212, "Bio.SCOP.Hie.Record.__str__"]], "parse() (in module bio.scop.hie)": [[212, "Bio.SCOP.Hie.parse"]], "bio.scop.raf": [[213, "module-Bio.SCOP.Raf"]], "res (class in bio.scop.raf)": [[213, "Bio.SCOP.Raf.Res"]], "seqmap (class in bio.scop.raf)": [[213, "Bio.SCOP.Raf.SeqMap"]], "seqmapindex (class in bio.scop.raf)": [[213, "Bio.SCOP.Raf.SeqMapIndex"]], "__add__() (bio.scop.raf.seqmap method)": [[213, "Bio.SCOP.Raf.SeqMap.__add__"]], "__getitem__() (bio.scop.raf.seqmap method)": [[213, "Bio.SCOP.Raf.SeqMap.__getitem__"]], "__getitem__() (bio.scop.raf.seqmapindex method)": [[213, "Bio.SCOP.Raf.SeqMapIndex.__getitem__"]], "__iadd__() (bio.scop.raf.seqmap method)": [[213, "Bio.SCOP.Raf.SeqMap.__iadd__"]], "__init__() (bio.scop.raf.res method)": [[213, "Bio.SCOP.Raf.Res.__init__"]], "__init__() (bio.scop.raf.seqmap method)": [[213, "Bio.SCOP.Raf.SeqMap.__init__"]], "__init__() (bio.scop.raf.seqmapindex method)": [[213, "Bio.SCOP.Raf.SeqMapIndex.__init__"]], "append() (bio.scop.raf.seqmap method)": [[213, "Bio.SCOP.Raf.SeqMap.append"]], "extend() (bio.scop.raf.seqmap method)": [[213, "Bio.SCOP.Raf.SeqMap.extend"]], "getatoms() (bio.scop.raf.seqmap method)": [[213, "Bio.SCOP.Raf.SeqMap.getAtoms"]], "getseqmap() (bio.scop.raf.seqmapindex method)": [[213, "Bio.SCOP.Raf.SeqMapIndex.getSeqMap"]], "index() (bio.scop.raf.seqmap method)": [[213, "Bio.SCOP.Raf.SeqMap.index"]], "normalize_letters() (in module bio.scop.raf)": [[213, "Bio.SCOP.Raf.normalize_letters"]], "parse() (in module bio.scop.raf)": [[213, "Bio.SCOP.Raf.parse"]], "bio.scop.residues": [[214, "module-Bio.SCOP.Residues"]], "residues (class in bio.scop.residues)": [[214, "Bio.SCOP.Residues.Residues"]], "__init__() (bio.scop.residues.residues method)": [[214, "Bio.SCOP.Residues.Residues.__init__"]], "__str__() (bio.scop.residues.residues method)": [[214, "Bio.SCOP.Residues.Residues.__str__"]], "bio.svdsuperimposer": [[215, "module-Bio.SVDSuperimposer"]], "svdsuperimposer (class in bio.svdsuperimposer)": [[215, "Bio.SVDSuperimposer.SVDSuperimposer"]], "__init__() (bio.svdsuperimposer.svdsuperimposer method)": [[215, "Bio.SVDSuperimposer.SVDSuperimposer.__init__"]], "get_init_rms() (bio.svdsuperimposer.svdsuperimposer method)": [[215, "Bio.SVDSuperimposer.SVDSuperimposer.get_init_rms"]], "get_rms() (bio.svdsuperimposer.svdsuperimposer method)": [[215, "Bio.SVDSuperimposer.SVDSuperimposer.get_rms"]], "get_rotran() (bio.svdsuperimposer.svdsuperimposer method)": [[215, "Bio.SVDSuperimposer.SVDSuperimposer.get_rotran"]], "get_transformed() (bio.svdsuperimposer.svdsuperimposer method)": [[215, "Bio.SVDSuperimposer.SVDSuperimposer.get_transformed"]], "run() (bio.svdsuperimposer.svdsuperimposer method)": [[215, "Bio.SVDSuperimposer.SVDSuperimposer.run"]], "set() (bio.svdsuperimposer.svdsuperimposer method)": [[215, "Bio.SVDSuperimposer.SVDSuperimposer.set"]], "bio.searchio": [[216, "module-Bio.SearchIO"]], "convert() (in module bio.searchio)": [[216, "Bio.SearchIO.convert"]], "index() (in module bio.searchio)": [[216, "Bio.SearchIO.index"]], "index_db() (in module bio.searchio)": [[216, "Bio.SearchIO.index_db"]], "parse() (in module bio.searchio)": [[216, "Bio.SearchIO.parse"]], "read() (in module bio.searchio)": [[216, "Bio.SearchIO.read"]], "to_dict() (in module bio.searchio)": [[216, "Bio.SearchIO.to_dict"]], "write() (in module bio.searchio)": [[216, "Bio.SearchIO.write"]], "bio.searchio.blastio": [[217, "module-Bio.SearchIO.BlastIO"]], "bio.searchio.blastio.blast_tab": [[218, "module-Bio.SearchIO.BlastIO.blast_tab"]], "blasttabindexer (class in bio.searchio.blastio.blast_tab)": [[218, "Bio.SearchIO.BlastIO.blast_tab.BlastTabIndexer"]], "blasttabparser (class in bio.searchio.blastio.blast_tab)": [[218, "Bio.SearchIO.BlastIO.blast_tab.BlastTabParser"]], "blasttabwriter (class in bio.searchio.blastio.blast_tab)": [[218, "Bio.SearchIO.BlastIO.blast_tab.BlastTabWriter"]], "__abstractmethods__ (bio.searchio.blastio.blast_tab.blasttabindexer attribute)": [[218, "Bio.SearchIO.BlastIO.blast_tab.BlastTabIndexer.__abstractmethods__"]], "__init__() (bio.searchio.blastio.blast_tab.blasttabindexer method)": [[218, "Bio.SearchIO.BlastIO.blast_tab.BlastTabIndexer.__init__"]], "__init__() (bio.searchio.blastio.blast_tab.blasttabparser method)": [[218, "Bio.SearchIO.BlastIO.blast_tab.BlastTabParser.__init__"]], "__init__() (bio.searchio.blastio.blast_tab.blasttabwriter method)": [[218, "Bio.SearchIO.BlastIO.blast_tab.BlastTabWriter.__init__"]], "__iter__() (bio.searchio.blastio.blast_tab.blasttabindexer method)": [[218, "Bio.SearchIO.BlastIO.blast_tab.BlastTabIndexer.__iter__"]], "__iter__() (bio.searchio.blastio.blast_tab.blasttabparser method)": [[218, "Bio.SearchIO.BlastIO.blast_tab.BlastTabParser.__iter__"]], "get_raw() (bio.searchio.blastio.blast_tab.blasttabindexer method)": [[218, "Bio.SearchIO.BlastIO.blast_tab.BlastTabIndexer.get_raw"]], "write_file() (bio.searchio.blastio.blast_tab.blasttabwriter method)": [[218, "Bio.SearchIO.BlastIO.blast_tab.BlastTabWriter.write_file"]], "bio.searchio.blastio.blast_xml": [[219, "module-Bio.SearchIO.BlastIO.blast_xml"]], "blastxmlindexer (class in bio.searchio.blastio.blast_xml)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlIndexer"]], "blastxmlparser (class in bio.searchio.blastio.blast_xml)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlParser"]], "blastxmlwriter (class in bio.searchio.blastio.blast_xml)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlWriter"]], "__abstractmethods__ (bio.searchio.blastio.blast_xml.blastxmlindexer attribute)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlIndexer.__abstractmethods__"]], "__init__() (bio.searchio.blastio.blast_xml.blastxmlindexer method)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlIndexer.__init__"]], "__init__() (bio.searchio.blastio.blast_xml.blastxmlparser method)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlParser.__init__"]], "__init__() (bio.searchio.blastio.blast_xml.blastxmlwriter method)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlWriter.__init__"]], "__iter__() (bio.searchio.blastio.blast_xml.blastxmlindexer method)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlIndexer.__iter__"]], "__iter__() (bio.searchio.blastio.blast_xml.blastxmlparser method)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlParser.__iter__"]], "block_size (bio.searchio.blastio.blast_xml.blastxmlindexer attribute)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlIndexer.block_size"]], "get_raw() (bio.searchio.blastio.blast_xml.blastxmlindexer method)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlIndexer.get_raw"]], "qend_mark (bio.searchio.blastio.blast_xml.blastxmlindexer attribute)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlIndexer.qend_mark"]], "qstart_mark (bio.searchio.blastio.blast_xml.blastxmlindexer attribute)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlIndexer.qstart_mark"]], "write_file() (bio.searchio.blastio.blast_xml.blastxmlwriter method)": [[219, "Bio.SearchIO.BlastIO.blast_xml.BlastXmlWriter.write_file"]], "bio.searchio.blatio": [[220, "module-Bio.SearchIO.BlatIO"]], "blatpslindexer (class in bio.searchio.blatio)": [[220, "Bio.SearchIO.BlatIO.BlatPslIndexer"]], "blatpslparser (class in bio.searchio.blatio)": [[220, "Bio.SearchIO.BlatIO.BlatPslParser"]], "blatpslwriter (class in bio.searchio.blatio)": [[220, "Bio.SearchIO.BlatIO.BlatPslWriter"]], "__abstractmethods__ (bio.searchio.blatio.blatpslindexer attribute)": [[220, "Bio.SearchIO.BlatIO.BlatPslIndexer.__abstractmethods__"]], "__init__() (bio.searchio.blatio.blatpslindexer method)": [[220, "Bio.SearchIO.BlatIO.BlatPslIndexer.__init__"]], "__init__() (bio.searchio.blatio.blatpslparser method)": [[220, "Bio.SearchIO.BlatIO.BlatPslParser.__init__"]], "__init__() (bio.searchio.blatio.blatpslwriter method)": [[220, "Bio.SearchIO.BlatIO.BlatPslWriter.__init__"]], "__iter__() (bio.searchio.blatio.blatpslindexer method)": [[220, "Bio.SearchIO.BlatIO.BlatPslIndexer.__iter__"]], "__iter__() (bio.searchio.blatio.blatpslparser method)": [[220, "Bio.SearchIO.BlatIO.BlatPslParser.__iter__"]], "get_raw() (bio.searchio.blatio.blatpslindexer method)": [[220, "Bio.SearchIO.BlatIO.BlatPslIndexer.get_raw"]], "write_file() (bio.searchio.blatio.blatpslwriter method)": [[220, "Bio.SearchIO.BlatIO.BlatPslWriter.write_file"]], "bio.searchio.exonerateio": [[221, "module-Bio.SearchIO.ExonerateIO"]], "bio.searchio.exonerateio.exonerate_cigar": [[222, "module-Bio.SearchIO.ExonerateIO.exonerate_cigar"]], "exoneratecigarindexer (class in bio.searchio.exonerateio.exonerate_cigar)": [[222, "Bio.SearchIO.ExonerateIO.exonerate_cigar.ExonerateCigarIndexer"]], "exoneratecigarparser (class in bio.searchio.exonerateio.exonerate_cigar)": [[222, "Bio.SearchIO.ExonerateIO.exonerate_cigar.ExonerateCigarParser"]], "__abstractmethods__ (bio.searchio.exonerateio.exonerate_cigar.exoneratecigarindexer attribute)": [[222, "Bio.SearchIO.ExonerateIO.exonerate_cigar.ExonerateCigarIndexer.__abstractmethods__"]], "__abstractmethods__ (bio.searchio.exonerateio.exonerate_cigar.exoneratecigarparser attribute)": [[222, "Bio.SearchIO.ExonerateIO.exonerate_cigar.ExonerateCigarParser.__abstractmethods__"]], "get_qresult_id() (bio.searchio.exonerateio.exonerate_cigar.exoneratecigarindexer method)": [[222, "Bio.SearchIO.ExonerateIO.exonerate_cigar.ExonerateCigarIndexer.get_qresult_id"]], "parse_alignment_block() (bio.searchio.exonerateio.exonerate_cigar.exoneratecigarparser method)": [[222, "Bio.SearchIO.ExonerateIO.exonerate_cigar.ExonerateCigarParser.parse_alignment_block"]], "bio.searchio.exonerateio.exonerate_text": [[223, "module-Bio.SearchIO.ExonerateIO.exonerate_text"]], "exoneratetextindexer (class in bio.searchio.exonerateio.exonerate_text)": [[223, "Bio.SearchIO.ExonerateIO.exonerate_text.ExonerateTextIndexer"]], "exoneratetextparser (class in bio.searchio.exonerateio.exonerate_text)": [[223, "Bio.SearchIO.ExonerateIO.exonerate_text.ExonerateTextParser"]], "__abstractmethods__ (bio.searchio.exonerateio.exonerate_text.exoneratetextindexer attribute)": [[223, "Bio.SearchIO.ExonerateIO.exonerate_text.ExonerateTextIndexer.__abstractmethods__"]], "__abstractmethods__ (bio.searchio.exonerateio.exonerate_text.exoneratetextparser attribute)": [[223, "Bio.SearchIO.ExonerateIO.exonerate_text.ExonerateTextParser.__abstractmethods__"]], "get_qresult_id() (bio.searchio.exonerateio.exonerate_text.exoneratetextindexer method)": [[223, "Bio.SearchIO.ExonerateIO.exonerate_text.ExonerateTextIndexer.get_qresult_id"]], "get_raw() (bio.searchio.exonerateio.exonerate_text.exoneratetextindexer method)": [[223, "Bio.SearchIO.ExonerateIO.exonerate_text.ExonerateTextIndexer.get_raw"]], "parse_alignment_block() (bio.searchio.exonerateio.exonerate_text.exoneratetextparser method)": [[223, "Bio.SearchIO.ExonerateIO.exonerate_text.ExonerateTextParser.parse_alignment_block"]], "bio.searchio.exonerateio.exonerate_vulgar": [[224, "module-Bio.SearchIO.ExonerateIO.exonerate_vulgar"]], "exoneratevulgarindexer (class in bio.searchio.exonerateio.exonerate_vulgar)": [[224, "Bio.SearchIO.ExonerateIO.exonerate_vulgar.ExonerateVulgarIndexer"]], "exoneratevulgarparser (class in bio.searchio.exonerateio.exonerate_vulgar)": [[224, "Bio.SearchIO.ExonerateIO.exonerate_vulgar.ExonerateVulgarParser"]], "__abstractmethods__ (bio.searchio.exonerateio.exonerate_vulgar.exoneratevulgarindexer attribute)": [[224, "Bio.SearchIO.ExonerateIO.exonerate_vulgar.ExonerateVulgarIndexer.__abstractmethods__"]], "__abstractmethods__ (bio.searchio.exonerateio.exonerate_vulgar.exoneratevulgarparser attribute)": [[224, "Bio.SearchIO.ExonerateIO.exonerate_vulgar.ExonerateVulgarParser.__abstractmethods__"]], "__annotations__ (bio.searchio.exonerateio.exonerate_vulgar.exoneratevulgarindexer attribute)": [[224, "Bio.SearchIO.ExonerateIO.exonerate_vulgar.ExonerateVulgarIndexer.__annotations__"]], "get_qresult_id() (bio.searchio.exonerateio.exonerate_vulgar.exoneratevulgarindexer method)": [[224, "Bio.SearchIO.ExonerateIO.exonerate_vulgar.ExonerateVulgarIndexer.get_qresult_id"]], "get_raw() (bio.searchio.exonerateio.exonerate_vulgar.exoneratevulgarindexer method)": [[224, "Bio.SearchIO.ExonerateIO.exonerate_vulgar.ExonerateVulgarIndexer.get_raw"]], "parse_alignment_block() (bio.searchio.exonerateio.exonerate_vulgar.exoneratevulgarparser method)": [[224, "Bio.SearchIO.ExonerateIO.exonerate_vulgar.ExonerateVulgarParser.parse_alignment_block"]], "bio.searchio.fastaio": [[225, "module-Bio.SearchIO.FastaIO"]], "fastam10indexer (class in bio.searchio.fastaio)": [[225, "Bio.SearchIO.FastaIO.FastaM10Indexer"]], "fastam10parser (class in bio.searchio.fastaio)": [[225, "Bio.SearchIO.FastaIO.FastaM10Parser"]], "__abstractmethods__ (bio.searchio.fastaio.fastam10indexer attribute)": [[225, "Bio.SearchIO.FastaIO.FastaM10Indexer.__abstractmethods__"]], "__init__() (bio.searchio.fastaio.fastam10indexer method)": [[225, "Bio.SearchIO.FastaIO.FastaM10Indexer.__init__"]], "__init__() (bio.searchio.fastaio.fastam10parser method)": [[225, "Bio.SearchIO.FastaIO.FastaM10Parser.__init__"]], "__iter__() (bio.searchio.fastaio.fastam10indexer method)": [[225, "Bio.SearchIO.FastaIO.FastaM10Indexer.__iter__"]], "__iter__() (bio.searchio.fastaio.fastam10parser method)": [[225, "Bio.SearchIO.FastaIO.FastaM10Parser.__iter__"]], "get_raw() (bio.searchio.fastaio.fastam10indexer method)": [[225, "Bio.SearchIO.FastaIO.FastaM10Indexer.get_raw"]], "bio.searchio.hhsuiteio": [[226, "module-Bio.SearchIO.HHsuiteIO"]], "bio.searchio.hhsuiteio.hhsuite2_text": [[227, "module-Bio.SearchIO.HHsuiteIO.hhsuite2_text"]], "hhsuite2textparser (class in bio.searchio.hhsuiteio.hhsuite2_text)": [[227, "Bio.SearchIO.HHsuiteIO.hhsuite2_text.Hhsuite2TextParser"]], "__init__() (bio.searchio.hhsuiteio.hhsuite2_text.hhsuite2textparser method)": [[227, "Bio.SearchIO.HHsuiteIO.hhsuite2_text.Hhsuite2TextParser.__init__"]], "__iter__() (bio.searchio.hhsuiteio.hhsuite2_text.hhsuite2textparser method)": [[227, "Bio.SearchIO.HHsuiteIO.hhsuite2_text.Hhsuite2TextParser.__iter__"]], "bio.searchio.hmmerio": [[228, "module-Bio.SearchIO.HmmerIO"]], "bio.searchio.hmmerio.hmmer2_text": [[229, "module-Bio.SearchIO.HmmerIO.hmmer2_text"]], "hmmer2textindexer (class in bio.searchio.hmmerio.hmmer2_text)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextIndexer"]], "hmmer2textparser (class in bio.searchio.hmmerio.hmmer2_text)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextParser"]], "__abstractmethods__ (bio.searchio.hmmerio.hmmer2_text.hmmer2textindexer attribute)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextIndexer.__abstractmethods__"]], "__init__() (bio.searchio.hmmerio.hmmer2_text.hmmer2textparser method)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextParser.__init__"]], "__iter__() (bio.searchio.hmmerio.hmmer2_text.hmmer2textindexer method)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextIndexer.__iter__"]], "__iter__() (bio.searchio.hmmerio.hmmer2_text.hmmer2textparser method)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextParser.__iter__"]], "parse_hits() (bio.searchio.hmmerio.hmmer2_text.hmmer2textparser method)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextParser.parse_hits"]], "parse_hsp_alignments() (bio.searchio.hmmerio.hmmer2_text.hmmer2textparser method)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextParser.parse_hsp_alignments"]], "parse_hsps() (bio.searchio.hmmerio.hmmer2_text.hmmer2textparser method)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextParser.parse_hsps"]], "parse_key_value() (bio.searchio.hmmerio.hmmer2_text.hmmer2textparser method)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextParser.parse_key_value"]], "parse_preamble() (bio.searchio.hmmerio.hmmer2_text.hmmer2textparser method)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextParser.parse_preamble"]], "parse_qresult() (bio.searchio.hmmerio.hmmer2_text.hmmer2textparser method)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextParser.parse_qresult"]], "push_back() (bio.searchio.hmmerio.hmmer2_text.hmmer2textparser method)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextParser.push_back"]], "qresult_end (bio.searchio.hmmerio.hmmer2_text.hmmer2textindexer attribute)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextIndexer.qresult_end"]], "qresult_start (bio.searchio.hmmerio.hmmer2_text.hmmer2textindexer attribute)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextIndexer.qresult_start"]], "read_next() (bio.searchio.hmmerio.hmmer2_text.hmmer2textparser method)": [[229, "Bio.SearchIO.HmmerIO.hmmer2_text.Hmmer2TextParser.read_next"]], "bio.searchio.hmmerio.hmmer3_domtab": [[230, "module-Bio.SearchIO.HmmerIO.hmmer3_domtab"]], "hmmer3domtabhmmhitindexer (class in bio.searchio.hmmerio.hmmer3_domtab)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmhitIndexer"]], "hmmer3domtabhmmhitparser (class in bio.searchio.hmmerio.hmmer3_domtab)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmhitParser"]], "hmmer3domtabhmmhitwriter (class in bio.searchio.hmmerio.hmmer3_domtab)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmhitWriter"]], "hmmer3domtabhmmqueryindexer (class in bio.searchio.hmmerio.hmmer3_domtab)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmqueryIndexer"]], "hmmer3domtabhmmqueryparser (class in bio.searchio.hmmerio.hmmer3_domtab)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmqueryParser"]], "hmmer3domtabhmmquerywriter (class in bio.searchio.hmmerio.hmmer3_domtab)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmqueryWriter"]], "__abstractmethods__ (bio.searchio.hmmerio.hmmer3_domtab.hmmer3domtabhmmhitindexer attribute)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmhitIndexer.__abstractmethods__"]], "__abstractmethods__ (bio.searchio.hmmerio.hmmer3_domtab.hmmer3domtabhmmqueryindexer attribute)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmqueryIndexer.__abstractmethods__"]], "__init__() (bio.searchio.hmmerio.hmmer3_domtab.hmmer3domtabhmmhitwriter method)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmhitWriter.__init__"]], "hmm_as_hit (bio.searchio.hmmerio.hmmer3_domtab.hmmer3domtabhmmhitparser attribute)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmhitParser.hmm_as_hit"]], "hmm_as_hit (bio.searchio.hmmerio.hmmer3_domtab.hmmer3domtabhmmhitwriter attribute)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmhitWriter.hmm_as_hit"]], "hmm_as_hit (bio.searchio.hmmerio.hmmer3_domtab.hmmer3domtabhmmqueryparser attribute)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmqueryParser.hmm_as_hit"]], "hmm_as_hit (bio.searchio.hmmerio.hmmer3_domtab.hmmer3domtabhmmquerywriter attribute)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmqueryWriter.hmm_as_hit"]], "write_file() (bio.searchio.hmmerio.hmmer3_domtab.hmmer3domtabhmmhitwriter method)": [[230, "Bio.SearchIO.HmmerIO.hmmer3_domtab.Hmmer3DomtabHmmhitWriter.write_file"]], "bio.searchio.hmmerio.hmmer3_tab": [[231, "module-Bio.SearchIO.HmmerIO.hmmer3_tab"]], "hmmer3tabindexer (class in bio.searchio.hmmerio.hmmer3_tab)": [[231, "Bio.SearchIO.HmmerIO.hmmer3_tab.Hmmer3TabIndexer"]], "hmmer3tabparser (class in bio.searchio.hmmerio.hmmer3_tab)": [[231, "Bio.SearchIO.HmmerIO.hmmer3_tab.Hmmer3TabParser"]], "hmmer3tabwriter (class in bio.searchio.hmmerio.hmmer3_tab)": [[231, "Bio.SearchIO.HmmerIO.hmmer3_tab.Hmmer3TabWriter"]], "__abstractmethods__ (bio.searchio.hmmerio.hmmer3_tab.hmmer3tabindexer attribute)": [[231, "Bio.SearchIO.HmmerIO.hmmer3_tab.Hmmer3TabIndexer.__abstractmethods__"]], "__init__() (bio.searchio.hmmerio.hmmer3_tab.hmmer3tabparser method)": [[231, "Bio.SearchIO.HmmerIO.hmmer3_tab.Hmmer3TabParser.__init__"]], "__init__() (bio.searchio.hmmerio.hmmer3_tab.hmmer3tabwriter method)": [[231, "Bio.SearchIO.HmmerIO.hmmer3_tab.Hmmer3TabWriter.__init__"]], "__iter__() (bio.searchio.hmmerio.hmmer3_tab.hmmer3tabindexer method)": [[231, "Bio.SearchIO.HmmerIO.hmmer3_tab.Hmmer3TabIndexer.__iter__"]], "__iter__() (bio.searchio.hmmerio.hmmer3_tab.hmmer3tabparser method)": [[231, "Bio.SearchIO.HmmerIO.hmmer3_tab.Hmmer3TabParser.__iter__"]], "get_raw() (bio.searchio.hmmerio.hmmer3_tab.hmmer3tabindexer method)": [[231, "Bio.SearchIO.HmmerIO.hmmer3_tab.Hmmer3TabIndexer.get_raw"]], "write_file() (bio.searchio.hmmerio.hmmer3_tab.hmmer3tabwriter method)": [[231, "Bio.SearchIO.HmmerIO.hmmer3_tab.Hmmer3TabWriter.write_file"]], "bio.searchio.hmmerio.hmmer3_text": [[232, "module-Bio.SearchIO.HmmerIO.hmmer3_text"]], "hmmer3textindexer (class in bio.searchio.hmmerio.hmmer3_text)": [[232, "Bio.SearchIO.HmmerIO.hmmer3_text.Hmmer3TextIndexer"]], "hmmer3textparser (class in bio.searchio.hmmerio.hmmer3_text)": [[232, "Bio.SearchIO.HmmerIO.hmmer3_text.Hmmer3TextParser"]], "__abstractmethods__ (bio.searchio.hmmerio.hmmer3_text.hmmer3textindexer attribute)": [[232, "Bio.SearchIO.HmmerIO.hmmer3_text.Hmmer3TextIndexer.__abstractmethods__"]], "__init__() (bio.searchio.hmmerio.hmmer3_text.hmmer3textparser method)": [[232, "Bio.SearchIO.HmmerIO.hmmer3_text.Hmmer3TextParser.__init__"]], "__iter__() (bio.searchio.hmmerio.hmmer3_text.hmmer3textindexer method)": [[232, "Bio.SearchIO.HmmerIO.hmmer3_text.Hmmer3TextIndexer.__iter__"]], "__iter__() (bio.searchio.hmmerio.hmmer3_text.hmmer3textparser method)": [[232, "Bio.SearchIO.HmmerIO.hmmer3_text.Hmmer3TextParser.__iter__"]], "qresult_end (bio.searchio.hmmerio.hmmer3_text.hmmer3textindexer attribute)": [[232, "Bio.SearchIO.HmmerIO.hmmer3_text.Hmmer3TextIndexer.qresult_end"]], "qresult_start (bio.searchio.hmmerio.hmmer3_text.hmmer3textindexer attribute)": [[232, "Bio.SearchIO.HmmerIO.hmmer3_text.Hmmer3TextIndexer.qresult_start"]], "bio.searchio.interproscanio": [[233, "module-Bio.SearchIO.InterproscanIO"]], "bio.searchio.interproscanio.interproscan_xml": [[234, "module-Bio.SearchIO.InterproscanIO.interproscan_xml"]], "interproscanxmlparser (class in bio.searchio.interproscanio.interproscan_xml)": [[234, "Bio.SearchIO.InterproscanIO.interproscan_xml.InterproscanXmlParser"]], "__init__() (bio.searchio.interproscanio.interproscan_xml.interproscanxmlparser method)": [[234, "Bio.SearchIO.InterproscanIO.interproscan_xml.InterproscanXmlParser.__init__"]], "__iter__() (bio.searchio.interproscanio.interproscan_xml.interproscanxmlparser method)": [[234, "Bio.SearchIO.InterproscanIO.interproscan_xml.InterproscanXmlParser.__iter__"]], "bio.seq": [[235, "module-Bio.Seq"]], "mutableseq (class in bio.seq)": [[235, "Bio.Seq.MutableSeq"]], "seq (class in bio.seq)": [[235, "Bio.Seq.Seq"]], "sequencedataabstractbaseclass (class in bio.seq)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass"]], "undefinedsequenceerror": [[235, "Bio.Seq.UndefinedSequenceError"]], "__abstractmethods__ (bio.seq.mutableseq attribute)": [[235, "Bio.Seq.MutableSeq.__abstractmethods__"]], "__abstractmethods__ (bio.seq.seq attribute)": [[235, "Bio.Seq.Seq.__abstractmethods__"]], "__abstractmethods__ (bio.seq.sequencedataabstractbaseclass attribute)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__abstractmethods__"]], "__add__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__add__"]], "__annotations__ (bio.seq.seq attribute)": [[235, "Bio.Seq.Seq.__annotations__"]], "__bytes__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__bytes__"]], "__contains__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__contains__"]], "__delitem__() (bio.seq.mutableseq method)": [[235, "Bio.Seq.MutableSeq.__delitem__"]], "__eq__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__eq__"]], "__ge__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__ge__"]], "__getitem__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__getitem__"]], "__gt__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__gt__"]], "__hash__() (bio.seq.seq method)": [[235, "Bio.Seq.Seq.__hash__"]], "__hash__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__hash__"]], "__init__() (bio.seq.mutableseq method)": [[235, "Bio.Seq.MutableSeq.__init__"]], "__init__() (bio.seq.seq method)": [[235, "Bio.Seq.Seq.__init__"]], "__init__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__init__"]], "__le__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__le__"]], "__len__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__len__"]], "__lt__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__lt__"]], "__mul__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__mul__"]], "__radd__() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__radd__"]], "__setitem__() (bio.seq.mutableseq method)": [[235, "Bio.Seq.MutableSeq.__setitem__"]], "__slots__ (bio.seq.sequencedataabstractbaseclass attribute)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.__slots__"]], "append() (bio.seq.mutableseq method)": [[235, "Bio.Seq.MutableSeq.append"]], "back_transcribe() (in module bio.seq)": [[235, "Bio.Seq.back_transcribe"]], "complement() (in module bio.seq)": [[235, "Bio.Seq.complement"]], "complement_rna() (in module bio.seq)": [[235, "Bio.Seq.complement_rna"]], "count() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.count"]], "decode() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.decode"]], "defined (bio.seq.sequencedataabstractbaseclass property)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.defined"]], "defined_ranges (bio.seq.sequencedataabstractbaseclass property)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.defined_ranges"]], "endswith() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.endswith"]], "extend() (bio.seq.mutableseq method)": [[235, "Bio.Seq.MutableSeq.extend"]], "find() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.find"]], "index() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.index"]], "insert() (bio.seq.mutableseq method)": [[235, "Bio.Seq.MutableSeq.insert"]], "islower() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.islower"]], "isupper() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.isupper"]], "lower() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.lower"]], "lstrip() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.lstrip"]], "pop() (bio.seq.mutableseq method)": [[235, "Bio.Seq.MutableSeq.pop"]], "remove() (bio.seq.mutableseq method)": [[235, "Bio.Seq.MutableSeq.remove"]], "removeprefix() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.removeprefix"]], "removesuffix() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.removesuffix"]], "replace() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.replace"]], "reverse() (bio.seq.mutableseq method)": [[235, "Bio.Seq.MutableSeq.reverse"]], "reverse_complement() (in module bio.seq)": [[235, "Bio.Seq.reverse_complement"]], "reverse_complement_rna() (in module bio.seq)": [[235, "Bio.Seq.reverse_complement_rna"]], "rfind() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.rfind"]], "rindex() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.rindex"]], "rsplit() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.rsplit"]], "rstrip() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.rstrip"]], "split() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.split"]], "startswith() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.startswith"]], "strip() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.strip"]], "transcribe() (in module bio.seq)": [[235, "Bio.Seq.transcribe"]], "translate() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.translate"]], "translate() (in module bio.seq)": [[235, "Bio.Seq.translate"]], "upper() (bio.seq.sequencedataabstractbaseclass method)": [[235, "Bio.Seq.SequenceDataAbstractBaseClass.upper"]], "afterposition (class in bio.seqfeature)": [[236, "Bio.SeqFeature.AfterPosition"]], "beforeposition (class in bio.seqfeature)": [[236, "Bio.SeqFeature.BeforePosition"]], "betweenposition (class in bio.seqfeature)": [[236, "Bio.SeqFeature.BetweenPosition"]], "bio.seqfeature": [[236, "module-Bio.SeqFeature"]], "compoundlocation (class in bio.seqfeature)": [[236, "Bio.SeqFeature.CompoundLocation"]], "exactposition (class in bio.seqfeature)": [[236, "Bio.SeqFeature.ExactPosition"]], "featurelocation (in module bio.seqfeature)": [[236, "Bio.SeqFeature.FeatureLocation"]], "location (class in bio.seqfeature)": [[236, "Bio.SeqFeature.Location"]], "locationparsererror": [[236, "Bio.SeqFeature.LocationParserError"]], "oneofposition (class in bio.seqfeature)": [[236, "Bio.SeqFeature.OneOfPosition"]], "position (class in bio.seqfeature)": [[236, "Bio.SeqFeature.Position"]], "reference (class in bio.seqfeature)": [[236, "Bio.SeqFeature.Reference"]], "seqfeature (class in bio.seqfeature)": [[236, "Bio.SeqFeature.SeqFeature"]], "simplelocation (class in bio.seqfeature)": [[236, "Bio.SeqFeature.SimpleLocation"]], "uncertainposition (class in bio.seqfeature)": [[236, "Bio.SeqFeature.UncertainPosition"]], "unknownposition (class in bio.seqfeature)": [[236, "Bio.SeqFeature.UnknownPosition"]], "withinposition (class in bio.seqfeature)": [[236, "Bio.SeqFeature.WithinPosition"]], "__abstractmethods__ (bio.seqfeature.afterposition attribute)": [[236, "Bio.SeqFeature.AfterPosition.__abstractmethods__"]], "__abstractmethods__ (bio.seqfeature.beforeposition attribute)": [[236, "Bio.SeqFeature.BeforePosition.__abstractmethods__"]], "__abstractmethods__ (bio.seqfeature.betweenposition attribute)": [[236, "Bio.SeqFeature.BetweenPosition.__abstractmethods__"]], "__abstractmethods__ (bio.seqfeature.compoundlocation attribute)": [[236, "Bio.SeqFeature.CompoundLocation.__abstractmethods__"]], "__abstractmethods__ (bio.seqfeature.exactposition attribute)": [[236, "Bio.SeqFeature.ExactPosition.__abstractmethods__"]], "__abstractmethods__ (bio.seqfeature.location attribute)": [[236, "Bio.SeqFeature.Location.__abstractmethods__"]], "__abstractmethods__ (bio.seqfeature.oneofposition attribute)": [[236, "Bio.SeqFeature.OneOfPosition.__abstractmethods__"]], "__abstractmethods__ (bio.seqfeature.position attribute)": [[236, "Bio.SeqFeature.Position.__abstractmethods__"]], "__abstractmethods__ (bio.seqfeature.simplelocation attribute)": [[236, "Bio.SeqFeature.SimpleLocation.__abstractmethods__"]], "__abstractmethods__ (bio.seqfeature.uncertainposition attribute)": [[236, "Bio.SeqFeature.UncertainPosition.__abstractmethods__"]], "__abstractmethods__ (bio.seqfeature.unknownposition attribute)": [[236, "Bio.SeqFeature.UnknownPosition.__abstractmethods__"]], "__abstractmethods__ (bio.seqfeature.withinposition attribute)": [[236, "Bio.SeqFeature.WithinPosition.__abstractmethods__"]], "__add__() (bio.seqfeature.afterposition method)": [[236, "Bio.SeqFeature.AfterPosition.__add__"]], "__add__() (bio.seqfeature.beforeposition method)": [[236, "Bio.SeqFeature.BeforePosition.__add__"]], "__add__() (bio.seqfeature.betweenposition method)": [[236, "Bio.SeqFeature.BetweenPosition.__add__"]], "__add__() (bio.seqfeature.compoundlocation method)": [[236, "Bio.SeqFeature.CompoundLocation.__add__"]], "__add__() (bio.seqfeature.exactposition method)": [[236, "Bio.SeqFeature.ExactPosition.__add__"]], "__add__() (bio.seqfeature.oneofposition method)": [[236, "Bio.SeqFeature.OneOfPosition.__add__"]], "__add__() (bio.seqfeature.simplelocation method)": [[236, "Bio.SeqFeature.SimpleLocation.__add__"]], "__add__() (bio.seqfeature.unknownposition method)": [[236, "Bio.SeqFeature.UnknownPosition.__add__"]], "__add__() (bio.seqfeature.withinposition method)": [[236, "Bio.SeqFeature.WithinPosition.__add__"]], "__bool__() (bio.seqfeature.seqfeature method)": [[236, "Bio.SeqFeature.SeqFeature.__bool__"]], "__contains__() (bio.seqfeature.compoundlocation method)": [[236, "Bio.SeqFeature.CompoundLocation.__contains__"]], "__contains__() (bio.seqfeature.seqfeature method)": [[236, "Bio.SeqFeature.SeqFeature.__contains__"]], "__contains__() (bio.seqfeature.simplelocation method)": [[236, "Bio.SeqFeature.SimpleLocation.__contains__"]], "__eq__() (bio.seqfeature.compoundlocation method)": [[236, "Bio.SeqFeature.CompoundLocation.__eq__"]], "__eq__() (bio.seqfeature.reference method)": [[236, "Bio.SeqFeature.Reference.__eq__"]], "__eq__() (bio.seqfeature.seqfeature method)": [[236, "Bio.SeqFeature.SeqFeature.__eq__"]], "__eq__() (bio.seqfeature.simplelocation method)": [[236, "Bio.SeqFeature.SimpleLocation.__eq__"]], "__getnewargs__() (bio.seqfeature.betweenposition method)": [[236, "Bio.SeqFeature.BetweenPosition.__getnewargs__"]], "__getnewargs__() (bio.seqfeature.oneofposition method)": [[236, "Bio.SeqFeature.OneOfPosition.__getnewargs__"]], "__getnewargs__() (bio.seqfeature.withinposition method)": [[236, "Bio.SeqFeature.WithinPosition.__getnewargs__"]], "__hash__ (bio.seqfeature.compoundlocation attribute)": [[236, "Bio.SeqFeature.CompoundLocation.__hash__"]], "__hash__ (bio.seqfeature.reference attribute)": [[236, "Bio.SeqFeature.Reference.__hash__"]], "__hash__ (bio.seqfeature.seqfeature attribute)": [[236, "Bio.SeqFeature.SeqFeature.__hash__"]], "__hash__ (bio.seqfeature.simplelocation attribute)": [[236, "Bio.SeqFeature.SimpleLocation.__hash__"]], "__hash__() (bio.seqfeature.unknownposition method)": [[236, "Bio.SeqFeature.UnknownPosition.__hash__"]], "__init__() (bio.seqfeature.compoundlocation method)": [[236, "Bio.SeqFeature.CompoundLocation.__init__"]], "__init__() (bio.seqfeature.reference method)": [[236, "Bio.SeqFeature.Reference.__init__"]], "__init__() (bio.seqfeature.seqfeature method)": [[236, "Bio.SeqFeature.SeqFeature.__init__"]], "__init__() (bio.seqfeature.simplelocation method)": [[236, "Bio.SeqFeature.SimpleLocation.__init__"]], "__iter__() (bio.seqfeature.compoundlocation method)": [[236, "Bio.SeqFeature.CompoundLocation.__iter__"]], "__iter__() (bio.seqfeature.seqfeature method)": [[236, "Bio.SeqFeature.SeqFeature.__iter__"]], "__iter__() (bio.seqfeature.simplelocation method)": [[236, "Bio.SeqFeature.SimpleLocation.__iter__"]], "__len__() (bio.seqfeature.compoundlocation method)": [[236, "Bio.SeqFeature.CompoundLocation.__len__"]], "__len__() (bio.seqfeature.seqfeature method)": [[236, "Bio.SeqFeature.SeqFeature.__len__"]], "__len__() (bio.seqfeature.simplelocation method)": [[236, "Bio.SeqFeature.SimpleLocation.__len__"]], "__new__() (bio.seqfeature.afterposition static method)": [[236, "Bio.SeqFeature.AfterPosition.__new__"]], "__new__() (bio.seqfeature.beforeposition static method)": [[236, "Bio.SeqFeature.BeforePosition.__new__"]], "__new__() (bio.seqfeature.betweenposition static method)": [[236, "Bio.SeqFeature.BetweenPosition.__new__"]], "__new__() (bio.seqfeature.exactposition static method)": [[236, "Bio.SeqFeature.ExactPosition.__new__"]], "__new__() (bio.seqfeature.oneofposition static method)": [[236, "Bio.SeqFeature.OneOfPosition.__new__"]], "__new__() (bio.seqfeature.withinposition static method)": [[236, "Bio.SeqFeature.WithinPosition.__new__"]], "__nonzero__() (bio.seqfeature.compoundlocation method)": [[236, "Bio.SeqFeature.CompoundLocation.__nonzero__"]], "__nonzero__() (bio.seqfeature.simplelocation method)": [[236, "Bio.SeqFeature.SimpleLocation.__nonzero__"]], "__radd__() (bio.seqfeature.compoundlocation method)": [[236, "Bio.SeqFeature.CompoundLocation.__radd__"]], "__radd__() (bio.seqfeature.simplelocation method)": [[236, "Bio.SeqFeature.SimpleLocation.__radd__"]], "__repr__() (bio.seqfeature.afterposition method)": [[236, "Bio.SeqFeature.AfterPosition.__repr__"]], "__repr__() (bio.seqfeature.beforeposition method)": [[236, "Bio.SeqFeature.BeforePosition.__repr__"]], "__repr__() (bio.seqfeature.betweenposition method)": [[236, "Bio.SeqFeature.BetweenPosition.__repr__"]], "__repr__() (bio.seqfeature.compoundlocation method)": [[236, "Bio.SeqFeature.CompoundLocation.__repr__"]], "__repr__() (bio.seqfeature.exactposition method)": [[236, "Bio.SeqFeature.ExactPosition.__repr__"]], "__repr__() (bio.seqfeature.location method)": [[236, "Bio.SeqFeature.Location.__repr__"]], "__repr__() (bio.seqfeature.oneofposition method)": [[236, "Bio.SeqFeature.OneOfPosition.__repr__"]], "__repr__() (bio.seqfeature.position method)": [[236, "Bio.SeqFeature.Position.__repr__"]], "__repr__() (bio.seqfeature.reference method)": [[236, "Bio.SeqFeature.Reference.__repr__"]], "__repr__() (bio.seqfeature.seqfeature method)": [[236, "Bio.SeqFeature.SeqFeature.__repr__"]], "__repr__() (bio.seqfeature.simplelocation method)": [[236, "Bio.SeqFeature.SimpleLocation.__repr__"]], "__repr__() (bio.seqfeature.unknownposition method)": [[236, "Bio.SeqFeature.UnknownPosition.__repr__"]], "__repr__() (bio.seqfeature.withinposition method)": [[236, "Bio.SeqFeature.WithinPosition.__repr__"]], "__str__() (bio.seqfeature.afterposition method)": [[236, "Bio.SeqFeature.AfterPosition.__str__"]], "__str__() (bio.seqfeature.beforeposition method)": [[236, "Bio.SeqFeature.BeforePosition.__str__"]], "__str__() (bio.seqfeature.betweenposition method)": [[236, "Bio.SeqFeature.BetweenPosition.__str__"]], "__str__() (bio.seqfeature.compoundlocation method)": [[236, "Bio.SeqFeature.CompoundLocation.__str__"]], "__str__() (bio.seqfeature.exactposition method)": [[236, "Bio.SeqFeature.ExactPosition.__str__"]], "__str__() (bio.seqfeature.oneofposition method)": [[236, "Bio.SeqFeature.OneOfPosition.__str__"]], "__str__() (bio.seqfeature.reference method)": [[236, "Bio.SeqFeature.Reference.__str__"]], "__str__() (bio.seqfeature.seqfeature method)": [[236, "Bio.SeqFeature.SeqFeature.__str__"]], "__str__() (bio.seqfeature.simplelocation method)": [[236, "Bio.SeqFeature.SimpleLocation.__str__"]], "__str__() (bio.seqfeature.withinposition method)": [[236, "Bio.SeqFeature.WithinPosition.__str__"]], "__sub__() (bio.seqfeature.simplelocation method)": [[236, "Bio.SeqFeature.SimpleLocation.__sub__"]], "end (bio.seqfeature.compoundlocation property)": [[236, "Bio.SeqFeature.CompoundLocation.end"]], "end (bio.seqfeature.simplelocation property)": [[236, "Bio.SeqFeature.SimpleLocation.end"]], "extract() (bio.seqfeature.compoundlocation method)": [[236, "Bio.SeqFeature.CompoundLocation.extract"]], "extract() (bio.seqfeature.seqfeature method)": [[236, "Bio.SeqFeature.SeqFeature.extract"]], "extract() (bio.seqfeature.simplelocation method)": [[236, "Bio.SeqFeature.SimpleLocation.extract"]], "fromstring() (bio.seqfeature.location method)": [[236, "Bio.SeqFeature.Location.fromstring"]], "fromstring() (bio.seqfeature.position static method)": [[236, "Bio.SeqFeature.Position.fromstring"]], "fromstring() (bio.seqfeature.simplelocation static method)": [[236, "Bio.SeqFeature.SimpleLocation.fromstring"]], "parts (bio.seqfeature.simplelocation property)": [[236, "Bio.SeqFeature.SimpleLocation.parts"]], "ref (bio.seqfeature.compoundlocation property)": [[236, "Bio.SeqFeature.CompoundLocation.ref"]], "ref (bio.seqfeature.seqfeature property)": [[236, "Bio.SeqFeature.SeqFeature.ref"]], "ref_db (bio.seqfeature.compoundlocation property)": [[236, "Bio.SeqFeature.CompoundLocation.ref_db"]], "ref_db (bio.seqfeature.seqfeature property)": [[236, "Bio.SeqFeature.SeqFeature.ref_db"]], "start (bio.seqfeature.compoundlocation property)": [[236, "Bio.SeqFeature.CompoundLocation.start"]], "start (bio.seqfeature.simplelocation property)": [[236, "Bio.SeqFeature.SimpleLocation.start"]], "strand (bio.seqfeature.compoundlocation property)": [[236, "Bio.SeqFeature.CompoundLocation.strand"]], "strand (bio.seqfeature.seqfeature property)": [[236, "Bio.SeqFeature.SeqFeature.strand"]], "strand (bio.seqfeature.simplelocation property)": [[236, "Bio.SeqFeature.SimpleLocation.strand"]], "translate() (bio.seqfeature.seqfeature method)": [[236, "Bio.SeqFeature.SeqFeature.translate"]], "bio.seqio": [[237, "module-Bio.SeqIO"]], "convert() (in module bio.seqio)": [[237, "Bio.SeqIO.convert"]], "index() (in module bio.seqio)": [[237, "Bio.SeqIO.index"]], "index_db() (in module bio.seqio)": [[237, "Bio.SeqIO.index_db"]], "parse() (in module bio.seqio)": [[237, "Bio.SeqIO.parse"]], "read() (in module bio.seqio)": [[237, "Bio.SeqIO.read"]], "to_dict() (in module bio.seqio)": [[237, "Bio.SeqIO.to_dict"]], "write() (in module bio.seqio)": [[237, "Bio.SeqIO.write"]], "abiiterator (class in bio.seqio.abiio)": [[238, "Bio.SeqIO.AbiIO.AbiIterator"]], "bio.seqio.abiio": [[238, "module-Bio.SeqIO.AbiIO"]], "__abstractmethods__ (bio.seqio.abiio.abiiterator attribute)": [[238, "Bio.SeqIO.AbiIO.AbiIterator.__abstractmethods__"]], "__init__() (bio.seqio.abiio.abiiterator method)": [[238, "Bio.SeqIO.AbiIO.AbiIterator.__init__"]], "__parameters__ (bio.seqio.abiio.abiiterator attribute)": [[238, "Bio.SeqIO.AbiIO.AbiIterator.__parameters__"]], "iterate() (bio.seqio.abiio.abiiterator method)": [[238, "Bio.SeqIO.AbiIO.AbiIterator.iterate"]], "parse() (bio.seqio.abiio.abiiterator method)": [[238, "Bio.SeqIO.AbiIO.AbiIterator.parse"]], "aceiterator() (in module bio.seqio.aceio)": [[239, "Bio.SeqIO.AceIO.AceIterator"]], "bio.seqio.aceio": [[239, "module-Bio.SeqIO.AceIO"]], "bio.seqio.fastaio": [[240, "module-Bio.SeqIO.FastaIO"]], "fastaiterator (class in bio.seqio.fastaio)": [[240, "Bio.SeqIO.FastaIO.FastaIterator"]], "fastatwolineiterator (class in bio.seqio.fastaio)": [[240, "Bio.SeqIO.FastaIO.FastaTwoLineIterator"]], "fastatwolineparser() (in module bio.seqio.fastaio)": [[240, "Bio.SeqIO.FastaIO.FastaTwoLineParser"]], "fastatwolinewriter (class in bio.seqio.fastaio)": [[240, "Bio.SeqIO.FastaIO.FastaTwoLineWriter"]], "fastawriter (class in bio.seqio.fastaio)": [[240, "Bio.SeqIO.FastaIO.FastaWriter"]], "simplefastaparser() (in module bio.seqio.fastaio)": [[240, "Bio.SeqIO.FastaIO.SimpleFastaParser"]], "__abstractmethods__ (bio.seqio.fastaio.fastaiterator attribute)": [[240, "Bio.SeqIO.FastaIO.FastaIterator.__abstractmethods__"]], "__abstractmethods__ (bio.seqio.fastaio.fastatwolineiterator attribute)": [[240, "Bio.SeqIO.FastaIO.FastaTwoLineIterator.__abstractmethods__"]], "__init__() (bio.seqio.fastaio.fastaiterator method)": [[240, "Bio.SeqIO.FastaIO.FastaIterator.__init__"]], "__init__() (bio.seqio.fastaio.fastatwolineiterator method)": [[240, "Bio.SeqIO.FastaIO.FastaTwoLineIterator.__init__"]], "__init__() (bio.seqio.fastaio.fastatwolinewriter method)": [[240, "Bio.SeqIO.FastaIO.FastaTwoLineWriter.__init__"]], "__init__() (bio.seqio.fastaio.fastawriter method)": [[240, "Bio.SeqIO.FastaIO.FastaWriter.__init__"]], "__parameters__ (bio.seqio.fastaio.fastaiterator attribute)": [[240, "Bio.SeqIO.FastaIO.FastaIterator.__parameters__"]], "__parameters__ (bio.seqio.fastaio.fastatwolineiterator attribute)": [[240, "Bio.SeqIO.FastaIO.FastaTwoLineIterator.__parameters__"]], "as_fasta() (in module bio.seqio.fastaio)": [[240, "Bio.SeqIO.FastaIO.as_fasta"]], "as_fasta_2line() (in module bio.seqio.fastaio)": [[240, "Bio.SeqIO.FastaIO.as_fasta_2line"]], "iterate() (bio.seqio.fastaio.fastaiterator method)": [[240, "Bio.SeqIO.FastaIO.FastaIterator.iterate"]], "iterate() (bio.seqio.fastaio.fastatwolineiterator method)": [[240, "Bio.SeqIO.FastaIO.FastaTwoLineIterator.iterate"]], "parse() (bio.seqio.fastaio.fastaiterator method)": [[240, "Bio.SeqIO.FastaIO.FastaIterator.parse"]], "parse() (bio.seqio.fastaio.fastatwolineiterator method)": [[240, "Bio.SeqIO.FastaIO.FastaTwoLineIterator.parse"]], "write_record() (bio.seqio.fastaio.fastawriter method)": [[240, "Bio.SeqIO.FastaIO.FastaWriter.write_record"]], "bio.seqio.gckio": [[241, "module-Bio.SeqIO.GckIO"]], "gckiterator (class in bio.seqio.gckio)": [[241, "Bio.SeqIO.GckIO.GckIterator"]], "__abstractmethods__ (bio.seqio.gckio.gckiterator attribute)": [[241, "Bio.SeqIO.GckIO.GckIterator.__abstractmethods__"]], "__init__() (bio.seqio.gckio.gckiterator method)": [[241, "Bio.SeqIO.GckIO.GckIterator.__init__"]], "__parameters__ (bio.seqio.gckio.gckiterator attribute)": [[241, "Bio.SeqIO.GckIO.GckIterator.__parameters__"]], "parse() (bio.seqio.gckio.gckiterator method)": [[241, "Bio.SeqIO.GckIO.GckIterator.parse"]], "bio.seqio.gfaio": [[242, "module-Bio.SeqIO.GfaIO"]], "gfa1iterator() (in module bio.seqio.gfaio)": [[242, "Bio.SeqIO.GfaIO.Gfa1Iterator"]], "gfa2iterator() (in module bio.seqio.gfaio)": [[242, "Bio.SeqIO.GfaIO.Gfa2Iterator"]], "bio.seqio.igio": [[243, "module-Bio.SeqIO.IgIO"]], "igiterator (class in bio.seqio.igio)": [[243, "Bio.SeqIO.IgIO.IgIterator"]], "__abstractmethods__ (bio.seqio.igio.igiterator attribute)": [[243, "Bio.SeqIO.IgIO.IgIterator.__abstractmethods__"]], "__init__() (bio.seqio.igio.igiterator method)": [[243, "Bio.SeqIO.IgIO.IgIterator.__init__"]], "__parameters__ (bio.seqio.igio.igiterator attribute)": [[243, "Bio.SeqIO.IgIO.IgIterator.__parameters__"]], "iterate() (bio.seqio.igio.igiterator method)": [[243, "Bio.SeqIO.IgIO.IgIterator.iterate"]], "parse() (bio.seqio.igio.igiterator method)": [[243, "Bio.SeqIO.IgIO.IgIterator.parse"]], "blocks_per_line (bio.seqio.insdcio.emblwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.EmblWriter.BLOCKS_PER_LINE"]], "bio.seqio.insdcio": [[244, "module-Bio.SeqIO.InsdcIO"]], "emblcdsfeatureiterator (class in bio.seqio.insdcio)": [[244, "Bio.SeqIO.InsdcIO.EmblCdsFeatureIterator"]], "embliterator (class in bio.seqio.insdcio)": [[244, "Bio.SeqIO.InsdcIO.EmblIterator"]], "emblwriter (class in bio.seqio.insdcio)": [[244, "Bio.SeqIO.InsdcIO.EmblWriter"]], "feature_header (bio.seqio.insdcio.emblwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.EmblWriter.FEATURE_HEADER"]], "feature_header (bio.seqio.insdcio.imgtwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.ImgtWriter.FEATURE_HEADER"]], "genbankcdsfeatureiterator (class in bio.seqio.insdcio)": [[244, "Bio.SeqIO.InsdcIO.GenBankCdsFeatureIterator"]], "genbankiterator (class in bio.seqio.insdcio)": [[244, "Bio.SeqIO.InsdcIO.GenBankIterator"]], "genbankwriter (class in bio.seqio.insdcio)": [[244, "Bio.SeqIO.InsdcIO.GenBankWriter"]], "header_width (bio.seqio.insdcio.emblwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.EmblWriter.HEADER_WIDTH"]], "header_width (bio.seqio.insdcio.genbankwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.GenBankWriter.HEADER_WIDTH"]], "header_width (bio.seqio.insdcio.imgtwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.ImgtWriter.HEADER_WIDTH"]], "imgtiterator (class in bio.seqio.insdcio)": [[244, "Bio.SeqIO.InsdcIO.ImgtIterator"]], "imgtwriter (class in bio.seqio.insdcio)": [[244, "Bio.SeqIO.InsdcIO.ImgtWriter"]], "letters_per_block (bio.seqio.insdcio.emblwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.EmblWriter.LETTERS_PER_BLOCK"]], "letters_per_line (bio.seqio.insdcio.emblwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.EmblWriter.LETTERS_PER_LINE"]], "letters_per_line (bio.seqio.insdcio.genbankwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.GenBankWriter.LETTERS_PER_LINE"]], "position_padding (bio.seqio.insdcio.emblwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.EmblWriter.POSITION_PADDING"]], "qualifier_indent (bio.seqio.insdcio.emblwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.EmblWriter.QUALIFIER_INDENT"]], "qualifier_indent (bio.seqio.insdcio.genbankwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.GenBankWriter.QUALIFIER_INDENT"]], "qualifier_indent (bio.seqio.insdcio.imgtwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.ImgtWriter.QUALIFIER_INDENT"]], "qualifier_indent_str (bio.seqio.insdcio.emblwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.EmblWriter.QUALIFIER_INDENT_STR"]], "qualifier_indent_str (bio.seqio.insdcio.imgtwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.ImgtWriter.QUALIFIER_INDENT_STR"]], "qualifier_indent_tmp (bio.seqio.insdcio.emblwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.EmblWriter.QUALIFIER_INDENT_TMP"]], "qualifier_indent_tmp (bio.seqio.insdcio.imgtwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.ImgtWriter.QUALIFIER_INDENT_TMP"]], "sequence_indent (bio.seqio.insdcio.genbankwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.GenBankWriter.SEQUENCE_INDENT"]], "structured_comment_delim (bio.seqio.insdcio.genbankwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.GenBankWriter.STRUCTURED_COMMENT_DELIM"]], "structured_comment_end (bio.seqio.insdcio.genbankwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.GenBankWriter.STRUCTURED_COMMENT_END"]], "structured_comment_start (bio.seqio.insdcio.genbankwriter attribute)": [[244, "Bio.SeqIO.InsdcIO.GenBankWriter.STRUCTURED_COMMENT_START"]], "__abstractmethods__ (bio.seqio.insdcio.emblcdsfeatureiterator attribute)": [[244, "Bio.SeqIO.InsdcIO.EmblCdsFeatureIterator.__abstractmethods__"]], "__abstractmethods__ (bio.seqio.insdcio.embliterator attribute)": [[244, "Bio.SeqIO.InsdcIO.EmblIterator.__abstractmethods__"]], "__abstractmethods__ (bio.seqio.insdcio.genbankcdsfeatureiterator attribute)": [[244, "Bio.SeqIO.InsdcIO.GenBankCdsFeatureIterator.__abstractmethods__"]], "__abstractmethods__ (bio.seqio.insdcio.genbankiterator attribute)": [[244, "Bio.SeqIO.InsdcIO.GenBankIterator.__abstractmethods__"]], "__abstractmethods__ (bio.seqio.insdcio.imgtiterator attribute)": [[244, "Bio.SeqIO.InsdcIO.ImgtIterator.__abstractmethods__"]], "__init__() (bio.seqio.insdcio.emblcdsfeatureiterator method)": [[244, "Bio.SeqIO.InsdcIO.EmblCdsFeatureIterator.__init__"]], "__init__() (bio.seqio.insdcio.embliterator method)": [[244, "Bio.SeqIO.InsdcIO.EmblIterator.__init__"]], "__init__() (bio.seqio.insdcio.genbankcdsfeatureiterator method)": [[244, "Bio.SeqIO.InsdcIO.GenBankCdsFeatureIterator.__init__"]], "__init__() (bio.seqio.insdcio.genbankiterator method)": [[244, "Bio.SeqIO.InsdcIO.GenBankIterator.__init__"]], "__init__() (bio.seqio.insdcio.imgtiterator method)": [[244, "Bio.SeqIO.InsdcIO.ImgtIterator.__init__"]], "__parameters__ (bio.seqio.insdcio.emblcdsfeatureiterator attribute)": [[244, "Bio.SeqIO.InsdcIO.EmblCdsFeatureIterator.__parameters__"]], "__parameters__ (bio.seqio.insdcio.embliterator attribute)": [[244, "Bio.SeqIO.InsdcIO.EmblIterator.__parameters__"]], "__parameters__ (bio.seqio.insdcio.genbankcdsfeatureiterator attribute)": [[244, "Bio.SeqIO.InsdcIO.GenBankCdsFeatureIterator.__parameters__"]], "__parameters__ (bio.seqio.insdcio.genbankiterator attribute)": [[244, "Bio.SeqIO.InsdcIO.GenBankIterator.__parameters__"]], "__parameters__ (bio.seqio.insdcio.imgtiterator attribute)": [[244, "Bio.SeqIO.InsdcIO.ImgtIterator.__parameters__"]], "parse() (bio.seqio.insdcio.emblcdsfeatureiterator method)": [[244, "Bio.SeqIO.InsdcIO.EmblCdsFeatureIterator.parse"]], "parse() (bio.seqio.insdcio.embliterator method)": [[244, "Bio.SeqIO.InsdcIO.EmblIterator.parse"]], "parse() (bio.seqio.insdcio.genbankcdsfeatureiterator method)": [[244, "Bio.SeqIO.InsdcIO.GenBankCdsFeatureIterator.parse"]], "parse() (bio.seqio.insdcio.genbankiterator method)": [[244, "Bio.SeqIO.InsdcIO.GenBankIterator.parse"]], "parse() (bio.seqio.insdcio.imgtiterator method)": [[244, "Bio.SeqIO.InsdcIO.ImgtIterator.parse"]], "write_record() (bio.seqio.insdcio.emblwriter method)": [[244, "Bio.SeqIO.InsdcIO.EmblWriter.write_record"]], "write_record() (bio.seqio.insdcio.genbankwriter method)": [[244, "Bio.SeqIO.InsdcIO.GenBankWriter.write_record"]], "bio.seqio.interfaces": [[245, "module-Bio.SeqIO.Interfaces"]], "sequenceiterator (class in bio.seqio.interfaces)": [[245, "Bio.SeqIO.Interfaces.SequenceIterator"]], "sequencewriter (class in bio.seqio.interfaces)": [[245, "Bio.SeqIO.Interfaces.SequenceWriter"]], "__abstractmethods__ (bio.seqio.interfaces.sequenceiterator attribute)": [[245, "Bio.SeqIO.Interfaces.SequenceIterator.__abstractmethods__"]], "__init__() (bio.seqio.interfaces.sequenceiterator method)": [[245, "Bio.SeqIO.Interfaces.SequenceIterator.__init__"]], "__init__() (bio.seqio.interfaces.sequencewriter method)": [[245, "Bio.SeqIO.Interfaces.SequenceWriter.__init__"]], "__iter__() (bio.seqio.interfaces.sequenceiterator method)": [[245, "Bio.SeqIO.Interfaces.SequenceIterator.__iter__"]], "__next__() (bio.seqio.interfaces.sequenceiterator method)": [[245, "Bio.SeqIO.Interfaces.SequenceIterator.__next__"]], "__orig_bases__ (bio.seqio.interfaces.sequenceiterator attribute)": [[245, "Bio.SeqIO.Interfaces.SequenceIterator.__orig_bases__"]], "__parameters__ (bio.seqio.interfaces.sequenceiterator attribute)": [[245, "Bio.SeqIO.Interfaces.SequenceIterator.__parameters__"]], "clean() (bio.seqio.interfaces.sequencewriter method)": [[245, "Bio.SeqIO.Interfaces.SequenceWriter.clean"]], "parse() (bio.seqio.interfaces.sequenceiterator method)": [[245, "Bio.SeqIO.Interfaces.SequenceIterator.parse"]], "write_file() (bio.seqio.interfaces.sequencewriter method)": [[245, "Bio.SeqIO.Interfaces.SequenceWriter.write_file"]], "write_footer() (bio.seqio.interfaces.sequencewriter method)": [[245, "Bio.SeqIO.Interfaces.SequenceWriter.write_footer"]], "write_header() (bio.seqio.interfaces.sequencewriter method)": [[245, "Bio.SeqIO.Interfaces.SequenceWriter.write_header"]], "write_record() (bio.seqio.interfaces.sequencewriter method)": [[245, "Bio.SeqIO.Interfaces.SequenceWriter.write_record"]], "write_records() (bio.seqio.interfaces.sequencewriter method)": [[245, "Bio.SeqIO.Interfaces.SequenceWriter.write_records"]], "bio.seqio.nibio": [[246, "module-Bio.SeqIO.NibIO"]], "nibiterator (class in bio.seqio.nibio)": [[246, "Bio.SeqIO.NibIO.NibIterator"]], "nibwriter (class in bio.seqio.nibio)": [[246, "Bio.SeqIO.NibIO.NibWriter"]], "__abstractmethods__ (bio.seqio.nibio.nibiterator attribute)": [[246, "Bio.SeqIO.NibIO.NibIterator.__abstractmethods__"]], "__init__() (bio.seqio.nibio.nibiterator method)": [[246, "Bio.SeqIO.NibIO.NibIterator.__init__"]], "__init__() (bio.seqio.nibio.nibwriter method)": [[246, "Bio.SeqIO.NibIO.NibWriter.__init__"]], "__parameters__ (bio.seqio.nibio.nibiterator attribute)": [[246, "Bio.SeqIO.NibIO.NibIterator.__parameters__"]], "iterate() (bio.seqio.nibio.nibiterator method)": [[246, "Bio.SeqIO.NibIO.NibIterator.iterate"]], "parse() (bio.seqio.nibio.nibiterator method)": [[246, "Bio.SeqIO.NibIO.NibIterator.parse"]], "write_file() (bio.seqio.nibio.nibwriter method)": [[246, "Bio.SeqIO.NibIO.NibWriter.write_file"]], "write_header() (bio.seqio.nibio.nibwriter method)": [[246, "Bio.SeqIO.NibIO.NibWriter.write_header"]], "write_record() (bio.seqio.nibio.nibwriter method)": [[246, "Bio.SeqIO.NibIO.NibWriter.write_record"]], "atomiterator() (in module bio.seqio.pdbio)": [[247, "Bio.SeqIO.PdbIO.AtomIterator"]], "bio.seqio.pdbio": [[247, "module-Bio.SeqIO.PdbIO"]], "cifatomiterator() (in module bio.seqio.pdbio)": [[247, "Bio.SeqIO.PdbIO.CifAtomIterator"]], "cifseqresiterator() (in module bio.seqio.pdbio)": [[247, "Bio.SeqIO.PdbIO.CifSeqresIterator"]], "pdbatomiterator() (in module bio.seqio.pdbio)": [[247, "Bio.SeqIO.PdbIO.PdbAtomIterator"]], "pdbseqresiterator (class in bio.seqio.pdbio)": [[247, "Bio.SeqIO.PdbIO.PdbSeqresIterator"]], "__abstractmethods__ (bio.seqio.pdbio.pdbseqresiterator attribute)": [[247, "Bio.SeqIO.PdbIO.PdbSeqresIterator.__abstractmethods__"]], "__init__() (bio.seqio.pdbio.pdbseqresiterator method)": [[247, "Bio.SeqIO.PdbIO.PdbSeqresIterator.__init__"]], "__parameters__ (bio.seqio.pdbio.pdbseqresiterator attribute)": [[247, "Bio.SeqIO.PdbIO.PdbSeqresIterator.__parameters__"]], "iterate() (bio.seqio.pdbio.pdbseqresiterator method)": [[247, "Bio.SeqIO.PdbIO.PdbSeqresIterator.iterate"]], "parse() (bio.seqio.pdbio.pdbseqresiterator method)": [[247, "Bio.SeqIO.PdbIO.PdbSeqresIterator.parse"]], "bio.seqio.phdio": [[248, "module-Bio.SeqIO.PhdIO"]], "phditerator() (in module bio.seqio.phdio)": [[248, "Bio.SeqIO.PhdIO.PhdIterator"]], "phdwriter (class in bio.seqio.phdio)": [[248, "Bio.SeqIO.PhdIO.PhdWriter"]], "__init__() (bio.seqio.phdio.phdwriter method)": [[248, "Bio.SeqIO.PhdIO.PhdWriter.__init__"]], "write_record() (bio.seqio.phdio.phdwriter method)": [[248, "Bio.SeqIO.PhdIO.PhdWriter.write_record"]], "bio.seqio.pirio": [[249, "module-Bio.SeqIO.PirIO"]], "piriterator (class in bio.seqio.pirio)": [[249, "Bio.SeqIO.PirIO.PirIterator"]], "pirwriter (class in bio.seqio.pirio)": [[249, "Bio.SeqIO.PirIO.PirWriter"]], "__abstractmethods__ (bio.seqio.pirio.piriterator attribute)": [[249, "Bio.SeqIO.PirIO.PirIterator.__abstractmethods__"]], "__init__() (bio.seqio.pirio.piriterator method)": [[249, "Bio.SeqIO.PirIO.PirIterator.__init__"]], "__init__() (bio.seqio.pirio.pirwriter method)": [[249, "Bio.SeqIO.PirIO.PirWriter.__init__"]], "__parameters__ (bio.seqio.pirio.piriterator attribute)": [[249, "Bio.SeqIO.PirIO.PirIterator.__parameters__"]], "iterate() (bio.seqio.pirio.piriterator method)": [[249, "Bio.SeqIO.PirIO.PirIterator.iterate"]], "parse() (bio.seqio.pirio.piriterator method)": [[249, "Bio.SeqIO.PirIO.PirIterator.parse"]], "write_record() (bio.seqio.pirio.pirwriter method)": [[249, "Bio.SeqIO.PirIO.PirWriter.write_record"]], "bio.seqio.qualityio": [[250, "module-Bio.SeqIO.QualityIO"]], "fastqgeneraliterator() (in module bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.FastqGeneralIterator"]], "fastqilluminaiterator() (in module bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.FastqIlluminaIterator"]], "fastqilluminawriter (class in bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.FastqIlluminaWriter"]], "fastqphrediterator (class in bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.FastqPhredIterator"]], "fastqphredwriter (class in bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.FastqPhredWriter"]], "fastqsolexaiterator() (in module bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.FastqSolexaIterator"]], "fastqsolexawriter (class in bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.FastqSolexaWriter"]], "pairedfastaqualiterator() (in module bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.PairedFastaQualIterator"]], "qualphrediterator (class in bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.QualPhredIterator"]], "qualphredwriter (class in bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.QualPhredWriter"]], "__abstractmethods__ (bio.seqio.qualityio.fastqphrediterator attribute)": [[250, "Bio.SeqIO.QualityIO.FastqPhredIterator.__abstractmethods__"]], "__abstractmethods__ (bio.seqio.qualityio.qualphrediterator attribute)": [[250, "Bio.SeqIO.QualityIO.QualPhredIterator.__abstractmethods__"]], "__init__() (bio.seqio.qualityio.fastqphrediterator method)": [[250, "Bio.SeqIO.QualityIO.FastqPhredIterator.__init__"]], "__init__() (bio.seqio.qualityio.qualphrediterator method)": [[250, "Bio.SeqIO.QualityIO.QualPhredIterator.__init__"]], "__init__() (bio.seqio.qualityio.qualphredwriter method)": [[250, "Bio.SeqIO.QualityIO.QualPhredWriter.__init__"]], "__orig_bases__ (bio.seqio.qualityio.fastqphrediterator attribute)": [[250, "Bio.SeqIO.QualityIO.FastqPhredIterator.__orig_bases__"]], "__parameters__ (bio.seqio.qualityio.fastqphrediterator attribute)": [[250, "Bio.SeqIO.QualityIO.FastqPhredIterator.__parameters__"]], "__parameters__ (bio.seqio.qualityio.qualphrediterator attribute)": [[250, "Bio.SeqIO.QualityIO.QualPhredIterator.__parameters__"]], "as_fastq() (in module bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.as_fastq"]], "as_fastq_illumina() (in module bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.as_fastq_illumina"]], "as_fastq_solexa() (in module bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.as_fastq_solexa"]], "as_qual() (in module bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.as_qual"]], "iterate() (bio.seqio.qualityio.fastqphrediterator method)": [[250, "Bio.SeqIO.QualityIO.FastqPhredIterator.iterate"]], "iterate() (bio.seqio.qualityio.qualphrediterator method)": [[250, "Bio.SeqIO.QualityIO.QualPhredIterator.iterate"]], "parse() (bio.seqio.qualityio.fastqphrediterator method)": [[250, "Bio.SeqIO.QualityIO.FastqPhredIterator.parse"]], "parse() (bio.seqio.qualityio.qualphrediterator method)": [[250, "Bio.SeqIO.QualityIO.QualPhredIterator.parse"]], "phred_quality_from_solexa() (in module bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.phred_quality_from_solexa"]], "solexa_quality_from_phred() (in module bio.seqio.qualityio)": [[250, "Bio.SeqIO.QualityIO.solexa_quality_from_phred"]], "write_record() (bio.seqio.qualityio.fastqilluminawriter method)": [[250, "Bio.SeqIO.QualityIO.FastqIlluminaWriter.write_record"]], "write_record() (bio.seqio.qualityio.fastqphredwriter method)": [[250, "Bio.SeqIO.QualityIO.FastqPhredWriter.write_record"]], "write_record() (bio.seqio.qualityio.fastqsolexawriter method)": [[250, "Bio.SeqIO.QualityIO.FastqSolexaWriter.write_record"]], "write_record() (bio.seqio.qualityio.qualphredwriter method)": [[250, "Bio.SeqIO.QualityIO.QualPhredWriter.write_record"]], "block (bio.seqio.seqxmlio.seqxmliterator attribute)": [[251, "Bio.SeqIO.SeqXmlIO.SeqXmlIterator.BLOCK"]], "bio.seqio.seqxmlio": [[251, "module-Bio.SeqIO.SeqXmlIO"]], "contenthandler (class in bio.seqio.seqxmlio)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler"]], "seqxmliterator (class in bio.seqio.seqxmlio)": [[251, "Bio.SeqIO.SeqXmlIO.SeqXmlIterator"]], "seqxmlwriter (class in bio.seqio.seqxmlio)": [[251, "Bio.SeqIO.SeqXmlIO.SeqXmlWriter"]], "__abstractmethods__ (bio.seqio.seqxmlio.seqxmliterator attribute)": [[251, "Bio.SeqIO.SeqXmlIO.SeqXmlIterator.__abstractmethods__"]], "__init__() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.__init__"]], "__init__() (bio.seqio.seqxmlio.seqxmliterator method)": [[251, "Bio.SeqIO.SeqXmlIO.SeqXmlIterator.__init__"]], "__init__() (bio.seqio.seqxmlio.seqxmlwriter method)": [[251, "Bio.SeqIO.SeqXmlIO.SeqXmlWriter.__init__"]], "__parameters__ (bio.seqio.seqxmlio.seqxmliterator attribute)": [[251, "Bio.SeqIO.SeqXmlIO.SeqXmlIterator.__parameters__"]], "characters() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.characters"]], "enddbrefelement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.endDBRefElement"]], "enddescriptionelement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.endDescriptionElement"]], "endentryelement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.endEntryElement"]], "endpropertyelement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.endPropertyElement"]], "endseqxmlelement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.endSeqXMLElement"]], "endsequenceelement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.endSequenceElement"]], "endspecieselement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.endSpeciesElement"]], "iterate() (bio.seqio.seqxmlio.seqxmliterator method)": [[251, "Bio.SeqIO.SeqXmlIO.SeqXmlIterator.iterate"]], "parse() (bio.seqio.seqxmlio.seqxmliterator method)": [[251, "Bio.SeqIO.SeqXmlIO.SeqXmlIterator.parse"]], "startdbrefelement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.startDBRefElement"]], "startdescriptionelement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.startDescriptionElement"]], "startdocument() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.startDocument"]], "startentryelement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.startEntryElement"]], "startentryfieldelement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.startEntryFieldElement"]], "startentryfieldelementversion01() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.startEntryFieldElementVersion01"]], "startpropertyelement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.startPropertyElement"]], "startseqxmlelement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.startSeqXMLElement"]], "startsequenceelement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.startSequenceElement"]], "startspecieselement() (bio.seqio.seqxmlio.contenthandler method)": [[251, "Bio.SeqIO.SeqXmlIO.ContentHandler.startSpeciesElement"]], "write_footer() (bio.seqio.seqxmlio.seqxmlwriter method)": [[251, "Bio.SeqIO.SeqXmlIO.SeqXmlWriter.write_footer"]], "write_header() (bio.seqio.seqxmlio.seqxmlwriter method)": [[251, "Bio.SeqIO.SeqXmlIO.SeqXmlWriter.write_header"]], "write_record() (bio.seqio.seqxmlio.seqxmlwriter method)": [[251, "Bio.SeqIO.SeqXmlIO.SeqXmlWriter.write_record"]], "bio.seqio.sffio": [[252, "module-Bio.SeqIO.SffIO"]], "readrochexmlmanifest() (in module bio.seqio.sffio)": [[252, "Bio.SeqIO.SffIO.ReadRocheXmlManifest"]], "sffiterator (class in bio.seqio.sffio)": [[252, "Bio.SeqIO.SffIO.SffIterator"]], "sffwriter (class in bio.seqio.sffio)": [[252, "Bio.SeqIO.SffIO.SffWriter"]], "__abstractmethods__ (bio.seqio.sffio.sffiterator attribute)": [[252, "Bio.SeqIO.SffIO.SffIterator.__abstractmethods__"]], "__init__() (bio.seqio.sffio.sffiterator method)": [[252, "Bio.SeqIO.SffIO.SffIterator.__init__"]], "__init__() (bio.seqio.sffio.sffwriter method)": [[252, "Bio.SeqIO.SffIO.SffWriter.__init__"]], "__parameters__ (bio.seqio.sffio.sffiterator attribute)": [[252, "Bio.SeqIO.SffIO.SffIterator.__parameters__"]], "iterate() (bio.seqio.sffio.sffiterator method)": [[252, "Bio.SeqIO.SffIO.SffIterator.iterate"]], "parse() (bio.seqio.sffio.sffiterator method)": [[252, "Bio.SeqIO.SffIO.SffIterator.parse"]], "write_file() (bio.seqio.sffio.sffwriter method)": [[252, "Bio.SeqIO.SffIO.SffWriter.write_file"]], "write_header() (bio.seqio.sffio.sffwriter method)": [[252, "Bio.SeqIO.SffIO.SffWriter.write_header"]], "write_record() (bio.seqio.sffio.sffwriter method)": [[252, "Bio.SeqIO.SffIO.SffWriter.write_record"]], "bio.seqio.snapgeneio": [[253, "module-Bio.SeqIO.SnapGeneIO"]], "snapgeneiterator (class in bio.seqio.snapgeneio)": [[253, "Bio.SeqIO.SnapGeneIO.SnapGeneIterator"]], "__abstractmethods__ (bio.seqio.snapgeneio.snapgeneiterator attribute)": [[253, "Bio.SeqIO.SnapGeneIO.SnapGeneIterator.__abstractmethods__"]], "__init__() (bio.seqio.snapgeneio.snapgeneiterator method)": [[253, "Bio.SeqIO.SnapGeneIO.SnapGeneIterator.__init__"]], "__parameters__ (bio.seqio.snapgeneio.snapgeneiterator attribute)": [[253, "Bio.SeqIO.SnapGeneIO.SnapGeneIterator.__parameters__"]], "iterate() (bio.seqio.snapgeneio.snapgeneiterator method)": [[253, "Bio.SeqIO.SnapGeneIO.SnapGeneIterator.iterate"]], "parse() (bio.seqio.snapgeneio.snapgeneiterator method)": [[253, "Bio.SeqIO.SnapGeneIO.SnapGeneIterator.parse"]], "bio.seqio.swissio": [[254, "module-Bio.SeqIO.SwissIO"]], "swissiterator() (in module bio.seqio.swissio)": [[254, "Bio.SeqIO.SwissIO.SwissIterator"]], "bio.seqio.tabio": [[255, "module-Bio.SeqIO.TabIO"]], "tabiterator (class in bio.seqio.tabio)": [[255, "Bio.SeqIO.TabIO.TabIterator"]], "tabwriter (class in bio.seqio.tabio)": [[255, "Bio.SeqIO.TabIO.TabWriter"]], "__abstractmethods__ (bio.seqio.tabio.tabiterator attribute)": [[255, "Bio.SeqIO.TabIO.TabIterator.__abstractmethods__"]], "__init__() (bio.seqio.tabio.tabiterator method)": [[255, "Bio.SeqIO.TabIO.TabIterator.__init__"]], "__parameters__ (bio.seqio.tabio.tabiterator attribute)": [[255, "Bio.SeqIO.TabIO.TabIterator.__parameters__"]], "as_tab() (in module bio.seqio.tabio)": [[255, "Bio.SeqIO.TabIO.as_tab"]], "iterate() (bio.seqio.tabio.tabiterator method)": [[255, "Bio.SeqIO.TabIO.TabIterator.iterate"]], "parse() (bio.seqio.tabio.tabiterator method)": [[255, "Bio.SeqIO.TabIO.TabIterator.parse"]], "write_record() (bio.seqio.tabio.tabwriter method)": [[255, "Bio.SeqIO.TabIO.TabWriter.write_record"]], "bio.seqio.twobitio": [[256, "module-Bio.SeqIO.TwoBitIO"]], "twobititerator (class in bio.seqio.twobitio)": [[256, "Bio.SeqIO.TwoBitIO.TwoBitIterator"]], "__abstractmethods__ (bio.seqio.twobitio.twobititerator attribute)": [[256, "Bio.SeqIO.TwoBitIO.TwoBitIterator.__abstractmethods__"]], "__getitem__() (bio.seqio.twobitio.twobititerator method)": [[256, "Bio.SeqIO.TwoBitIO.TwoBitIterator.__getitem__"]], "__init__() (bio.seqio.twobitio.twobititerator method)": [[256, "Bio.SeqIO.TwoBitIO.TwoBitIterator.__init__"]], "__len__() (bio.seqio.twobitio.twobititerator method)": [[256, "Bio.SeqIO.TwoBitIO.TwoBitIterator.__len__"]], "__parameters__ (bio.seqio.twobitio.twobititerator attribute)": [[256, "Bio.SeqIO.TwoBitIO.TwoBitIterator.__parameters__"]], "keys() (bio.seqio.twobitio.twobititerator method)": [[256, "Bio.SeqIO.TwoBitIO.TwoBitIterator.keys"]], "parse() (bio.seqio.twobitio.twobititerator method)": [[256, "Bio.SeqIO.TwoBitIO.TwoBitIterator.parse"]], "bio.seqio.uniprotio": [[257, "module-Bio.SeqIO.UniprotIO"]], "parser (class in bio.seqio.uniprotio)": [[257, "Bio.SeqIO.UniprotIO.Parser"]], "uniprotiterator() (in module bio.seqio.uniprotio)": [[257, "Bio.SeqIO.UniprotIO.UniprotIterator"]], "__init__() (bio.seqio.uniprotio.parser method)": [[257, "Bio.SeqIO.UniprotIO.Parser.__init__"]], "parse() (bio.seqio.uniprotio.parser method)": [[257, "Bio.SeqIO.UniprotIO.Parser.parse"]], "bio.seqio.xdnaio": [[258, "module-Bio.SeqIO.XdnaIO"]], "xdnaiterator (class in bio.seqio.xdnaio)": [[258, "Bio.SeqIO.XdnaIO.XdnaIterator"]], "xdnawriter (class in bio.seqio.xdnaio)": [[258, "Bio.SeqIO.XdnaIO.XdnaWriter"]], "__abstractmethods__ (bio.seqio.xdnaio.xdnaiterator attribute)": [[258, "Bio.SeqIO.XdnaIO.XdnaIterator.__abstractmethods__"]], "__init__() (bio.seqio.xdnaio.xdnaiterator method)": [[258, "Bio.SeqIO.XdnaIO.XdnaIterator.__init__"]], "__init__() (bio.seqio.xdnaio.xdnawriter method)": [[258, "Bio.SeqIO.XdnaIO.XdnaWriter.__init__"]], "__parameters__ (bio.seqio.xdnaio.xdnaiterator attribute)": [[258, "Bio.SeqIO.XdnaIO.XdnaIterator.__parameters__"]], "iterate() (bio.seqio.xdnaio.xdnaiterator method)": [[258, "Bio.SeqIO.XdnaIO.XdnaIterator.iterate"]], "parse() (bio.seqio.xdnaio.xdnaiterator method)": [[258, "Bio.SeqIO.XdnaIO.XdnaIterator.parse"]], "write_file() (bio.seqio.xdnaio.xdnawriter method)": [[258, "Bio.SeqIO.XdnaIO.XdnaWriter.write_file"]], "bio.seqrecord": [[259, "module-Bio.SeqRecord"]], "seqrecord (class in bio.seqrecord)": [[259, "Bio.SeqRecord.SeqRecord"]], "__add__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__add__"]], "__annotations__ (bio.seqrecord.seqrecord attribute)": [[259, "Bio.SeqRecord.SeqRecord.__annotations__"]], "__bool__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__bool__"]], "__bytes__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__bytes__"]], "__contains__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__contains__"]], "__eq__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__eq__"]], "__format__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__format__"]], "__ge__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__ge__"]], "__getitem__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__getitem__"]], "__gt__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__gt__"]], "__hash__ (bio.seqrecord.seqrecord attribute)": [[259, "Bio.SeqRecord.SeqRecord.__hash__"]], "__init__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__init__"]], "__iter__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__iter__"]], "__le__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__le__"]], "__len__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__len__"]], "__lt__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__lt__"]], "__ne__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__ne__"]], "__radd__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__radd__"]], "__repr__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__repr__"]], "__str__() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.__str__"]], "annotations (bio.seqrecord.seqrecord attribute)": [[259, "Bio.SeqRecord.SeqRecord.annotations"]], "count() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.count"]], "dbxrefs (bio.seqrecord.seqrecord attribute)": [[259, "Bio.SeqRecord.SeqRecord.dbxrefs"]], "format() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.format"]], "islower() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.islower"]], "isupper() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.isupper"]], "letter_annotations (bio.seqrecord.seqrecord property)": [[259, "Bio.SeqRecord.SeqRecord.letter_annotations"]], "lower() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.lower"]], "reverse_complement() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.reverse_complement"]], "seq (bio.seqrecord.seqrecord property)": [[259, "Bio.SeqRecord.SeqRecord.seq"]], "translate() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.translate"]], "upper() (bio.seqrecord.seqrecord method)": [[259, "Bio.SeqRecord.SeqRecord.upper"]], "bio.sequtils": [[260, "module-Bio.SeqUtils"]], "codonadaptationindex (class in bio.sequtils)": [[260, "Bio.SeqUtils.CodonAdaptationIndex"]], "gc123() (in module bio.sequtils)": [[260, "Bio.SeqUtils.GC123"]], "gc_skew() (in module bio.sequtils)": [[260, "Bio.SeqUtils.GC_skew"]], "__init__() (bio.sequtils.codonadaptationindex method)": [[260, "Bio.SeqUtils.CodonAdaptationIndex.__init__"]], "__str__() (bio.sequtils.codonadaptationindex method)": [[260, "Bio.SeqUtils.CodonAdaptationIndex.__str__"]], "calculate() (bio.sequtils.codonadaptationindex method)": [[260, "Bio.SeqUtils.CodonAdaptationIndex.calculate"]], "gc_fraction() (in module bio.sequtils)": [[260, "Bio.SeqUtils.gc_fraction"]], "molecular_weight() (in module bio.sequtils)": [[260, "Bio.SeqUtils.molecular_weight"]], "nt_search() (in module bio.sequtils)": [[260, "Bio.SeqUtils.nt_search"]], "optimize() (bio.sequtils.codonadaptationindex method)": [[260, "Bio.SeqUtils.CodonAdaptationIndex.optimize"]], "seq1() (in module bio.sequtils)": [[260, "Bio.SeqUtils.seq1"]], "seq3() (in module bio.sequtils)": [[260, "Bio.SeqUtils.seq3"]], "six_frame_translations() (in module bio.sequtils)": [[260, "Bio.SeqUtils.six_frame_translations"]], "xgc_skew() (in module bio.sequtils)": [[260, "Bio.SeqUtils.xGC_skew"]], "bio.sequtils.checksum": [[261, "module-Bio.SeqUtils.CheckSum"]], "crc32() (in module bio.sequtils.checksum)": [[261, "Bio.SeqUtils.CheckSum.crc32"]], "crc64() (in module bio.sequtils.checksum)": [[261, "Bio.SeqUtils.CheckSum.crc64"]], "gcg() (in module bio.sequtils.checksum)": [[261, "Bio.SeqUtils.CheckSum.gcg"]], "seguid() (in module bio.sequtils.checksum)": [[261, "Bio.SeqUtils.CheckSum.seguid"]], "bio.sequtils.isoelectricpoint": [[262, "module-Bio.SeqUtils.IsoelectricPoint"]], "isoelectricpoint (class in bio.sequtils.isoelectricpoint)": [[262, "Bio.SeqUtils.IsoelectricPoint.IsoelectricPoint"]], "__init__() (bio.sequtils.isoelectricpoint.isoelectricpoint method)": [[262, "Bio.SeqUtils.IsoelectricPoint.IsoelectricPoint.__init__"]], "charge_at_ph() (bio.sequtils.isoelectricpoint.isoelectricpoint method)": [[262, "Bio.SeqUtils.IsoelectricPoint.IsoelectricPoint.charge_at_pH"]], "pi() (bio.sequtils.isoelectricpoint.isoelectricpoint method)": [[262, "Bio.SeqUtils.IsoelectricPoint.IsoelectricPoint.pi"]], "bio.sequtils.meltingtemp": [[263, "module-Bio.SeqUtils.MeltingTemp"]], "tm_gc() (in module bio.sequtils.meltingtemp)": [[263, "Bio.SeqUtils.MeltingTemp.Tm_GC"]], "tm_nn() (in module bio.sequtils.meltingtemp)": [[263, "Bio.SeqUtils.MeltingTemp.Tm_NN"]], "tm_wallace() (in module bio.sequtils.meltingtemp)": [[263, "Bio.SeqUtils.MeltingTemp.Tm_Wallace"]], "chem_correction() (in module bio.sequtils.meltingtemp)": [[263, "Bio.SeqUtils.MeltingTemp.chem_correction"]], "make_table() (in module bio.sequtils.meltingtemp)": [[263, "Bio.SeqUtils.MeltingTemp.make_table"]], "salt_correction() (in module bio.sequtils.meltingtemp)": [[263, "Bio.SeqUtils.MeltingTemp.salt_correction"]], "bio.sequtils.protparam": [[264, "module-Bio.SeqUtils.ProtParam"]], "proteinanalysis (class in bio.sequtils.protparam)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis"]], "__init__() (bio.sequtils.protparam.proteinanalysis method)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis.__init__"]], "aromaticity() (bio.sequtils.protparam.proteinanalysis method)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis.aromaticity"]], "charge_at_ph() (bio.sequtils.protparam.proteinanalysis method)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis.charge_at_pH"]], "count_amino_acids() (bio.sequtils.protparam.proteinanalysis method)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis.count_amino_acids"]], "flexibility() (bio.sequtils.protparam.proteinanalysis method)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis.flexibility"]], "get_amino_acids_percent() (bio.sequtils.protparam.proteinanalysis method)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis.get_amino_acids_percent"]], "gravy() (bio.sequtils.protparam.proteinanalysis method)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis.gravy"]], "instability_index() (bio.sequtils.protparam.proteinanalysis method)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis.instability_index"]], "isoelectric_point() (bio.sequtils.protparam.proteinanalysis method)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis.isoelectric_point"]], "molar_extinction_coefficient() (bio.sequtils.protparam.proteinanalysis method)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis.molar_extinction_coefficient"]], "molecular_weight() (bio.sequtils.protparam.proteinanalysis method)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis.molecular_weight"]], "protein_scale() (bio.sequtils.protparam.proteinanalysis method)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis.protein_scale"]], "secondary_structure_fraction() (bio.sequtils.protparam.proteinanalysis method)": [[264, "Bio.SeqUtils.ProtParam.ProteinAnalysis.secondary_structure_fraction"]], "bio.sequtils.protparamdata": [[265, "module-Bio.SeqUtils.ProtParamData"]], "bio.sequtils.lcc": [[266, "module-Bio.SeqUtils.lcc"]], "lcc_mult() (in module bio.sequtils.lcc)": [[266, "Bio.SeqUtils.lcc.lcc_mult"]], "lcc_simp() (in module bio.sequtils.lcc)": [[266, "Bio.SeqUtils.lcc.lcc_simp"]], "bio.sequencing": [[267, "module-Bio.Sequencing"]], "acefilerecord (class in bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.ACEFileRecord"]], "bio.sequencing.ace": [[268, "module-Bio.Sequencing.Ace"]], "contig (class in bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.Contig"]], "reads (class in bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.Reads"]], "__init__() (bio.sequencing.ace.acefilerecord method)": [[268, "Bio.Sequencing.Ace.ACEFileRecord.__init__"]], "__init__() (bio.sequencing.ace.contig method)": [[268, "Bio.Sequencing.Ace.Contig.__init__"]], "__init__() (bio.sequencing.ace.reads method)": [[268, "Bio.Sequencing.Ace.Reads.__init__"]], "__init__() (bio.sequencing.ace.af method)": [[268, "Bio.Sequencing.Ace.af.__init__"]], "__init__() (bio.sequencing.ace.bs method)": [[268, "Bio.Sequencing.Ace.bs.__init__"]], "__init__() (bio.sequencing.ace.ct method)": [[268, "Bio.Sequencing.Ace.ct.__init__"]], "__init__() (bio.sequencing.ace.ds method)": [[268, "Bio.Sequencing.Ace.ds.__init__"]], "__init__() (bio.sequencing.ace.qa method)": [[268, "Bio.Sequencing.Ace.qa.__init__"]], "__init__() (bio.sequencing.ace.rd method)": [[268, "Bio.Sequencing.Ace.rd.__init__"]], "__init__() (bio.sequencing.ace.rt method)": [[268, "Bio.Sequencing.Ace.rt.__init__"]], "__init__() (bio.sequencing.ace.wa method)": [[268, "Bio.Sequencing.Ace.wa.__init__"]], "__init__() (bio.sequencing.ace.wr method)": [[268, "Bio.Sequencing.Ace.wr.__init__"]], "af (class in bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.af"]], "bs (class in bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.bs"]], "ct (class in bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.ct"]], "ds (class in bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.ds"]], "parse() (in module bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.parse"]], "qa (class in bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.qa"]], "rd (class in bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.rd"]], "read() (in module bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.read"]], "rt (class in bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.rt"]], "sort() (bio.sequencing.ace.acefilerecord method)": [[268, "Bio.Sequencing.Ace.ACEFileRecord.sort"]], "wa (class in bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.wa"]], "wr (class in bio.sequencing.ace)": [[268, "Bio.Sequencing.Ace.wr"]], "a (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.A"], [269, "Bio.Sequencing.Applications.BwaMemCommandline.a"]], "a (bio.sequencing.applications.samtoolscalmdcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsCalmdCommandline.A"]], "a (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.A"]], "a (bio.sequencing.applications.samtoolsphasecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsPhaseCommandline.A"]], "b (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.B"], [269, "Bio.Sequencing.Applications.BwaAlignCommandline.b"]], "b (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.B"]], "b (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.B"], [269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.b"]], "bio.sequencing.applications": [[269, "module-Bio.Sequencing.Applications"]], "bwaaligncommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline"]], "bwabwaswcommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline"]], "bwaindexcommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.BwaIndexCommandline"]], "bwamemcommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline"]], "bwasampecommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.BwaSampeCommandline"]], "bwasamsecommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.BwaSamseCommandline"]], "c (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.C"], [269, "Bio.Sequencing.Applications.BwaMemCommandline.c"]], "c (bio.sequencing.applications.samtoolscalmdcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsCalmdCommandline.C"]], "c (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.C"]], "d (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.D"], [269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.d"]], "e (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.E"], [269, "Bio.Sequencing.Applications.BwaAlignCommandline.e"]], "e (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.E"]], "e (bio.sequencing.applications.samtoolscalmdcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsCalmdCommandline.E"], [269, "Bio.Sequencing.Applications.SamtoolsCalmdCommandline.e"]], "e (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.E"], [269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.e"]], "f (bio.sequencing.applications.samtoolsphasecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsPhaseCommandline.F"]], "f (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.F"], [269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.f"]], "h (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.H"]], "h (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.H"], [269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.h"]], "i (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.I"], [269, "Bio.Sequencing.Applications.BwaAlignCommandline.i"]], "i (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.I"]], "i (bio.sequencing.applications.samtoolsversion1xsortcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion1xSortCommandline.I"]], "l (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.L"]], "l (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.L"], [269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.l"]], "m (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.M"]], "m (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.M"]], "m (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.M"]], "n (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.N"], [269, "Bio.Sequencing.Applications.BwaAlignCommandline.n"]], "n (bio.sequencing.applications.bwabwaswcommandline property)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.N"]], "n (bio.sequencing.applications.bwasampecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSampeCommandline.N"], [269, "Bio.Sequencing.Applications.BwaSampeCommandline.n"]], "novoaligncommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline"]], "o (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.O"], [269, "Bio.Sequencing.Applications.BwaAlignCommandline.o"]], "o (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.O"]], "o (bio.sequencing.applications.samtoolsversion1xsortcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion1xSortCommandline.O"], [269, "Bio.Sequencing.Applications.SamtoolsVersion1xSortCommandline.o"]], "p (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.P"], [269, "Bio.Sequencing.Applications.BwaMemCommandline.p"]], "q (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.Q"], [269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.q"]], "q (bio.sequencing.applications.samtoolsphasecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsPhaseCommandline.Q"], [269, "Bio.Sequencing.Applications.SamtoolsPhaseCommandline.q"]], "q (bio.sequencing.applications.samtoolstargetcutcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsTargetcutCommandline.Q"]], "r (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.R"]], "r (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.R"], [269, "Bio.Sequencing.Applications.BwaMemCommandline.r"]], "r (bio.sequencing.applications.samtoolsmergecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMergeCommandline.R"], [269, "Bio.Sequencing.Applications.SamtoolsMergeCommandline.r"]], "r (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.R"], [269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.r"]], "s (bio.sequencing.applications.samtoolscalmdcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsCalmdCommandline.S"]], "s (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.S"]], "s (bio.sequencing.applications.samtoolsrmdupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsRmdupCommandline.S"], [269, "Bio.Sequencing.Applications.SamtoolsRmdupCommandline.s"]], "s (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.S"]], "samtoolscalmdcommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsCalmdCommandline"]], "samtoolscatcommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsCatCommandline"]], "samtoolsfaidxcommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsFaidxCommandline"]], "samtoolsfixmatecommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsFixmateCommandline"]], "samtoolsidxstatscommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsIdxstatsCommandline"]], "samtoolsindexcommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsIndexCommandline"]], "samtoolsmergecommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsMergeCommandline"]], "samtoolsmpileupcommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline"]], "samtoolsphasecommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsPhaseCommandline"]], "samtoolsreheadercommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsReheaderCommandline"]], "samtoolsrmdupcommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsRmdupCommandline"]], "samtoolssortcommandline (in module bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsSortCommandline"]], "samtoolstargetcutcommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsTargetcutCommandline"]], "samtoolsversion0xsortcommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion0xSortCommandline"]], "samtoolsversion1xsortcommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion1xSortCommandline"]], "samtoolsviewcommandline (class in bio.sequencing.applications)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline"]], "t (bio.sequencing.applications.bwabwaswcommandline property)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.T"], [269, "Bio.Sequencing.Applications.BwaBwaswCommandline.t"]], "t (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.T"], [269, "Bio.Sequencing.Applications.BwaMemCommandline.t"]], "t (bio.sequencing.applications.samtoolsversion1xsortcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion1xSortCommandline.T"]], "u (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.U"]], "__init__() (bio.sequencing.applications.bwaaligncommandline method)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.__init__"]], "__init__() (bio.sequencing.applications.bwabwaswcommandline method)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.__init__"]], "__init__() (bio.sequencing.applications.bwaindexcommandline method)": [[269, "Bio.Sequencing.Applications.BwaIndexCommandline.__init__"]], "__init__() (bio.sequencing.applications.bwamemcommandline method)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.__init__"]], "__init__() (bio.sequencing.applications.bwasampecommandline method)": [[269, "Bio.Sequencing.Applications.BwaSampeCommandline.__init__"]], "__init__() (bio.sequencing.applications.bwasamsecommandline method)": [[269, "Bio.Sequencing.Applications.BwaSamseCommandline.__init__"]], "__init__() (bio.sequencing.applications.novoaligncommandline method)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolscalmdcommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsCalmdCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolscatcommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsCatCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolsfaidxcommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsFaidxCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolsfixmatecommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsFixmateCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolsidxstatscommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsIdxstatsCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolsindexcommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsIndexCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolsmergecommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsMergeCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolsmpileupcommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolsphasecommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsPhaseCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolsreheadercommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsReheaderCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolsrmdupcommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsRmdupCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolstargetcutcommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsTargetcutCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolsversion0xsortcommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion0xSortCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolsversion1xsortcommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion1xSortCommandline.__init__"]], "__init__() (bio.sequencing.applications.samtoolsviewcommandline method)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.__init__"]], "a (bio.sequencing.applications.bwabwaswcommandline property)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.a"]], "a (bio.sequencing.applications.bwasampecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSampeCommandline.a"]], "adapter3 (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.adapter3"]], "adapter5 (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.adapter5"]], "algorithm (bio.sequencing.applications.bwaindexcommandline property)": [[269, "Bio.Sequencing.Applications.BwaIndexCommandline.algorithm"]], "b (bio.sequencing.applications.bwabwaswcommandline property)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.b"]], "b (bio.sequencing.applications.samtoolscalmdcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsCalmdCommandline.b"]], "b (bio.sequencing.applications.samtoolsphasecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsPhaseCommandline.b"]], "b (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.b"]], "b1 (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.b1"]], "b2 (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.b2"]], "bam (bio.sequencing.applications.samtoolsmergecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMergeCommandline.bam"]], "bam_file (bio.sequencing.applications.samtoolsreheadercommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsReheaderCommandline.bam_file"]], "bams (bio.sequencing.applications.samtoolscatcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsCatCommandline.bams"]], "c (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.c"]], "c (bio.sequencing.applications.bwabwaswcommandline property)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.c"]], "c (bio.sequencing.applications.bwaindexcommandline property)": [[269, "Bio.Sequencing.Applications.BwaIndexCommandline.c"]], "c (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.c"]], "cores (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.cores"]], "d (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.d"]], "d (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.d"]], "database (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.database"]], "em0 (bio.sequencing.applications.samtoolstargetcutcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsTargetcutCommandline.em0"]], "em1 (bio.sequencing.applications.samtoolstargetcutcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsTargetcutCommandline.em1"]], "em2 (bio.sequencing.applications.samtoolstargetcutcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsTargetcutCommandline.em2"]], "f (bio.sequencing.applications.samtoolsmergecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMergeCommandline.f"]], "f (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.f"]], "f (bio.sequencing.applications.samtoolstargetcutcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsTargetcutCommandline.f"]], "fast_bam (bio.sequencing.applications.samtoolsmergecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMergeCommandline.fast_bam"]], "fast_bam (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.fast_bam"]], "format (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.format"]], "fragment (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.fragment"]], "g (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.g"]], "gap_extend (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.gap_extend"]], "gap_open (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.gap_open"]], "good_bases (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.good_bases"]], "h (bio.sequencing.applications.samtoolscatcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsCatCommandline.h"]], "h (bio.sequencing.applications.samtoolsmergecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMergeCommandline.h"]], "h (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.h"]], "homopolymer (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.homopolymer"]], "i (bio.sequencing.applications.samtoolstargetcutcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsTargetcutCommandline.i"]], "illumina_13 (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.illumina_13"]], "in_bam (bio.sequencing.applications.samtoolsphasecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsPhaseCommandline.in_bam"]], "in_bam (bio.sequencing.applications.samtoolstargetcutcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsTargetcutCommandline.in_bam"]], "infile (bio.sequencing.applications.bwaindexcommandline property)": [[269, "Bio.Sequencing.Applications.BwaIndexCommandline.infile"]], "input (bio.sequencing.applications.samtoolsversion0xsortcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion0xSortCommandline.input"]], "input (bio.sequencing.applications.samtoolsversion1xsortcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion1xSortCommandline.input"]], "input_bam (bio.sequencing.applications.samtoolscalmdcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsCalmdCommandline.input_bam"]], "input_bam (bio.sequencing.applications.samtoolsidxstatscommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsIdxstatsCommandline.input_bam"]], "input_bam (bio.sequencing.applications.samtoolsindexcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsIndexCommandline.input_bam"]], "input_file (bio.sequencing.applications.samtoolsfixmatecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsFixmateCommandline.input_file"]], "input_file (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.input_file"]], "input_file (bio.sequencing.applications.samtoolsrmdupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsRmdupCommandline.input_file"]], "input_file (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.input_file"]], "k (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.k"]], "k (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.k"]], "k (bio.sequencing.applications.samtoolsphasecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsPhaseCommandline.k"]], "l (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.l"]], "l (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.l"]], "m (bio.sequencing.applications.samtoolsversion0xsortcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion0xSortCommandline.m"]], "m (bio.sequencing.applications.samtoolsversion1xsortcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion1xSortCommandline.m"]], "mate_file (bio.sequencing.applications.bwabwaswcommandline property)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.mate_file"]], "mirna (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.miRNA"]], "n (bio.sequencing.applications.bwasamsecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSamseCommandline.n"]], "n (bio.sequencing.applications.samtoolsmergecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMergeCommandline.n"]], "n (bio.sequencing.applications.samtoolsversion0xsortcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion0xSortCommandline.n"]], "n (bio.sequencing.applications.samtoolsversion1xsortcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion1xSortCommandline.n"]], "o (bio.sequencing.applications.bwasampecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSampeCommandline.o"]], "o (bio.sequencing.applications.samtoolscatcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsCatCommandline.o"]], "o (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.o"]], "o (bio.sequencing.applications.samtoolsversion0xsortcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion0xSortCommandline.o"]], "o (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.o"]], "out_prefix (bio.sequencing.applications.samtoolsversion0xsortcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsVersion0xSortCommandline.out_prefix"]], "output (bio.sequencing.applications.samtoolsmergecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMergeCommandline.output"]], "output_file (bio.sequencing.applications.samtoolsfixmatecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsFixmateCommandline.output_file"]], "output_file (bio.sequencing.applications.samtoolsrmdupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsRmdupCommandline.output_file"]], "p (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.p"]], "prefix (bio.sequencing.applications.bwaindexcommandline property)": [[269, "Bio.Sequencing.Applications.BwaIndexCommandline.prefix"]], "q (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.q"]], "q (bio.sequencing.applications.bwabwaswcommandline property)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.q"]], "q (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.q"]], "qual_digits (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.qual_digits"]], "quality (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.quality"]], "r (bio.sequencing.applications.bwabwaswcommandline property)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.r"]], "r (bio.sequencing.applications.bwasampecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSampeCommandline.r"]], "r (bio.sequencing.applications.bwasamsecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSamseCommandline.r"]], "r (bio.sequencing.applications.samtoolscalmdcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsCalmdCommandline.r"]], "r (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.r"]], "r_method (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.r_method"]], "read_cal (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.read_cal"]], "read_file (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.read_file"]], "read_file (bio.sequencing.applications.bwabwaswcommandline property)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.read_file"]], "read_file (bio.sequencing.applications.bwasamsecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSamseCommandline.read_file"]], "read_file1 (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.read_file1"]], "read_file1 (bio.sequencing.applications.bwasampecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSampeCommandline.read_file1"]], "read_file2 (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.read_file2"]], "read_file2 (bio.sequencing.applications.bwasampecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSampeCommandline.read_file2"]], "readfile (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.readfile"]], "recorded (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.recorded"]], "ref (bio.sequencing.applications.samtoolscalmdcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsCalmdCommandline.ref"]], "ref (bio.sequencing.applications.samtoolsfaidxcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsFaidxCommandline.ref"]], "reference (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.reference"]], "reference (bio.sequencing.applications.bwabwaswcommandline property)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.reference"]], "reference (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.reference"]], "reference (bio.sequencing.applications.bwasampecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSampeCommandline.reference"]], "reference (bio.sequencing.applications.bwasamsecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSamseCommandline.reference"]], "region (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.region"]], "repeats (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.repeats"]], "report (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.report"]], "s (bio.sequencing.applications.bwabwaswcommandline property)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.s"]], "sai_file (bio.sequencing.applications.bwasamsecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSamseCommandline.sai_file"]], "sai_file1 (bio.sequencing.applications.bwasampecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSampeCommandline.sai_file1"]], "sai_file2 (bio.sequencing.applications.bwasampecommandline property)": [[269, "Bio.Sequencing.Applications.BwaSampeCommandline.sai_file2"]], "sam_file (bio.sequencing.applications.samtoolsreheadercommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsReheaderCommandline.sam_file"]], "t (bio.sequencing.applications.bwaaligncommandline property)": [[269, "Bio.Sequencing.Applications.BwaAlignCommandline.t"]], "t (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.t"]], "threshold (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.threshold"]], "trimming (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.trimming"]], "truncate (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.truncate"]], "u (bio.sequencing.applications.samtoolscalmdcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsCalmdCommandline.u"]], "u (bio.sequencing.applications.samtoolsmergecommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMergeCommandline.u"]], "u (bio.sequencing.applications.samtoolsmpileupcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsMpileupCommandline.u"]], "u (bio.sequencing.applications.samtoolsviewcommandline property)": [[269, "Bio.Sequencing.Applications.SamtoolsViewCommandline.u"]], "unconverted (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.unconverted"]], "v (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.v"]], "variation (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.variation"]], "w (bio.sequencing.applications.bwabwaswcommandline property)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.w"]], "w (bio.sequencing.applications.bwamemcommandline property)": [[269, "Bio.Sequencing.Applications.BwaMemCommandline.w"]], "write_cal (bio.sequencing.applications.novoaligncommandline property)": [[269, "Bio.Sequencing.Applications.NovoalignCommandline.write_cal"]], "z (bio.sequencing.applications.bwabwaswcommandline property)": [[269, "Bio.Sequencing.Applications.BwaBwaswCommandline.z"]], "bio.sequencing.phd": [[270, "module-Bio.Sequencing.Phd"]], "record (class in bio.sequencing.phd)": [[270, "Bio.Sequencing.Phd.Record"]], "__init__() (bio.sequencing.phd.record method)": [[270, "Bio.Sequencing.Phd.Record.__init__"]], "parse() (in module bio.sequencing.phd)": [[270, "Bio.Sequencing.Phd.parse"]], "read() (in module bio.sequencing.phd)": [[270, "Bio.Sequencing.Phd.read"]], "bio.swissprot": [[271, "module-Bio.SwissProt"]], "featuretable (class in bio.swissprot)": [[271, "Bio.SwissProt.FeatureTable"]], "record (class in bio.swissprot)": [[271, "Bio.SwissProt.Record"]], "reference (class in bio.swissprot)": [[271, "Bio.SwissProt.Reference"]], "swissprotparsererror": [[271, "Bio.SwissProt.SwissProtParserError"]], "__init__() (bio.swissprot.record method)": [[271, "Bio.SwissProt.Record.__init__"]], "__init__() (bio.swissprot.reference method)": [[271, "Bio.SwissProt.Reference.__init__"]], "__init__() (bio.swissprot.swissprotparsererror method)": [[271, "Bio.SwissProt.SwissProtParserError.__init__"]], "parse() (in module bio.swissprot)": [[271, "Bio.SwissProt.parse"]], "read() (in module bio.swissprot)": [[271, "Bio.SwissProt.read"]], "bio.swissprot.keywlist": [[272, "module-Bio.SwissProt.KeyWList"]], "record (class in bio.swissprot.keywlist)": [[272, "Bio.SwissProt.KeyWList.Record"]], "__init__() (bio.swissprot.keywlist.record method)": [[272, "Bio.SwissProt.KeyWList.Record.__init__"]], "parse() (in module bio.swissprot.keywlist)": [[272, "Bio.SwissProt.KeyWList.parse"]], "bio.togows": [[273, "module-Bio.TogoWS"]], "convert() (in module bio.togows)": [[273, "Bio.TogoWS.convert"]], "entry() (in module bio.togows)": [[273, "Bio.TogoWS.entry"]], "search() (in module bio.togows)": [[273, "Bio.TogoWS.search"]], "search_count() (in module bio.togows)": [[273, "Bio.TogoWS.search_count"]], "search_iter() (in module bio.togows)": [[273, "Bio.TogoWS.search_iter"]], "bio.unigene": [[274, "module-Bio.UniGene"]], "protsimline (class in bio.unigene)": [[274, "Bio.UniGene.ProtsimLine"]], "record (class in bio.unigene)": [[274, "Bio.UniGene.Record"]], "stsline (class in bio.unigene)": [[274, "Bio.UniGene.STSLine"]], "sequenceline (class in bio.unigene)": [[274, "Bio.UniGene.SequenceLine"]], "__init__() (bio.unigene.protsimline method)": [[274, "Bio.UniGene.ProtsimLine.__init__"]], "__init__() (bio.unigene.record method)": [[274, "Bio.UniGene.Record.__init__"]], "__init__() (bio.unigene.stsline method)": [[274, "Bio.UniGene.STSLine.__init__"]], "__init__() (bio.unigene.sequenceline method)": [[274, "Bio.UniGene.SequenceLine.__init__"]], "__repr__() (bio.unigene.protsimline method)": [[274, "Bio.UniGene.ProtsimLine.__repr__"]], "__repr__() (bio.unigene.record method)": [[274, "Bio.UniGene.Record.__repr__"]], "__repr__() (bio.unigene.stsline method)": [[274, "Bio.UniGene.STSLine.__repr__"]], "__repr__() (bio.unigene.sequenceline method)": [[274, "Bio.UniGene.SequenceLine.__repr__"]], "parse() (in module bio.unigene)": [[274, "Bio.UniGene.parse"]], "read() (in module bio.unigene)": [[274, "Bio.UniGene.read"]], "bio.uniprot": [[275, "module-Bio.UniProt"]], "search() (in module bio.uniprot)": [[275, "Bio.UniProt.search"]], "bio.uniprot.goa": [[276, "module-Bio.UniProt.GOA"]], "gafbyproteiniterator() (in module bio.uniprot.goa)": [[276, "Bio.UniProt.GOA.gafbyproteiniterator"]], "gafiterator() (in module bio.uniprot.goa)": [[276, "Bio.UniProt.GOA.gafiterator"]], "gpa_iterator() (in module bio.uniprot.goa)": [[276, "Bio.UniProt.GOA.gpa_iterator"]], "gpi_iterator() (in module bio.uniprot.goa)": [[276, "Bio.UniProt.GOA.gpi_iterator"]], "record_has() (in module bio.uniprot.goa)": [[276, "Bio.UniProt.GOA.record_has"]], "writebyproteinrec() (in module bio.uniprot.goa)": [[276, "Bio.UniProt.GOA.writebyproteinrec"]], "writerec() (in module bio.uniprot.goa)": [[276, "Bio.UniProt.GOA.writerec"]], "bgzfblocks() (in module bio.bgzf)": [[277, "Bio.bgzf.BgzfBlocks"]], "bgzfreader (class in bio.bgzf)": [[277, "Bio.bgzf.BgzfReader"]], "bgzfwriter (class in bio.bgzf)": [[277, "Bio.bgzf.BgzfWriter"]], "bio.bgzf": [[277, "module-Bio.bgzf"]], "__enter__() (bio.bgzf.bgzfreader method)": [[277, "Bio.bgzf.BgzfReader.__enter__"]], "__enter__() (bio.bgzf.bgzfwriter method)": [[277, "Bio.bgzf.BgzfWriter.__enter__"]], "__exit__() (bio.bgzf.bgzfreader method)": [[277, "Bio.bgzf.BgzfReader.__exit__"]], "__exit__() (bio.bgzf.bgzfwriter method)": [[277, "Bio.bgzf.BgzfWriter.__exit__"]], "__init__() (bio.bgzf.bgzfreader method)": [[277, "Bio.bgzf.BgzfReader.__init__"]], "__init__() (bio.bgzf.bgzfwriter method)": [[277, "Bio.bgzf.BgzfWriter.__init__"]], "__iter__() (bio.bgzf.bgzfreader method)": [[277, "Bio.bgzf.BgzfReader.__iter__"]], "__next__() (bio.bgzf.bgzfreader method)": [[277, "Bio.bgzf.BgzfReader.__next__"]], "close() (bio.bgzf.bgzfreader method)": [[277, "Bio.bgzf.BgzfReader.close"]], "close() (bio.bgzf.bgzfwriter method)": [[277, "Bio.bgzf.BgzfWriter.close"]], "fileno() (bio.bgzf.bgzfreader method)": [[277, "Bio.bgzf.BgzfReader.fileno"]], "fileno() (bio.bgzf.bgzfwriter method)": [[277, "Bio.bgzf.BgzfWriter.fileno"]], "flush() (bio.bgzf.bgzfwriter method)": [[277, "Bio.bgzf.BgzfWriter.flush"]], "isatty() (bio.bgzf.bgzfreader method)": [[277, "Bio.bgzf.BgzfReader.isatty"]], "isatty() (bio.bgzf.bgzfwriter method)": [[277, "Bio.bgzf.BgzfWriter.isatty"]], "make_virtual_offset() (in module bio.bgzf)": [[277, "Bio.bgzf.make_virtual_offset"]], "open() (in module bio.bgzf)": [[277, "Bio.bgzf.open"]], "read() (bio.bgzf.bgzfreader method)": [[277, "Bio.bgzf.BgzfReader.read"]], "readline() (bio.bgzf.bgzfreader method)": [[277, "Bio.bgzf.BgzfReader.readline"]], "seek() (bio.bgzf.bgzfreader method)": [[277, "Bio.bgzf.BgzfReader.seek"]], "seekable() (bio.bgzf.bgzfreader method)": [[277, "Bio.bgzf.BgzfReader.seekable"]], "seekable() (bio.bgzf.bgzfwriter method)": [[277, "Bio.bgzf.BgzfWriter.seekable"]], "split_virtual_offset() (in module bio.bgzf)": [[277, "Bio.bgzf.split_virtual_offset"]], "tell() (bio.bgzf.bgzfreader method)": [[277, "Bio.bgzf.BgzfReader.tell"]], "tell() (bio.bgzf.bgzfwriter method)": [[277, "Bio.bgzf.BgzfWriter.tell"]], "write() (bio.bgzf.bgzfwriter method)": [[277, "Bio.bgzf.BgzfWriter.write"]], "bio.codonalign": [[278, "module-Bio.codonalign"]], "build() (in module bio.codonalign)": [[278, "Bio.codonalign.build"]], "bio.codonalign.codonalignment": [[279, "module-Bio.codonalign.codonalignment"]], "codonalignment (class in bio.codonalign.codonalignment)": [[279, "Bio.codonalign.codonalignment.CodonAlignment"]], "__add__() (bio.codonalign.codonalignment.codonalignment method)": [[279, "Bio.codonalign.codonalignment.CodonAlignment.__add__"]], "__getitem__() (bio.codonalign.codonalignment.codonalignment method)": [[279, "Bio.codonalign.codonalignment.CodonAlignment.__getitem__"]], "__init__() (bio.codonalign.codonalignment.codonalignment method)": [[279, "Bio.codonalign.codonalignment.CodonAlignment.__init__"]], "__str__() (bio.codonalign.codonalignment.codonalignment method)": [[279, "Bio.codonalign.codonalignment.CodonAlignment.__str__"]], "from_msa() (bio.codonalign.codonalignment.codonalignment class method)": [[279, "Bio.codonalign.codonalignment.CodonAlignment.from_msa"]], "get_aln_length() (bio.codonalign.codonalignment.codonalignment method)": [[279, "Bio.codonalign.codonalignment.CodonAlignment.get_aln_length"]], "get_dn_ds_matrix() (bio.codonalign.codonalignment.codonalignment method)": [[279, "Bio.codonalign.codonalignment.CodonAlignment.get_dn_ds_matrix"]], "get_dn_ds_tree() (bio.codonalign.codonalignment.codonalignment method)": [[279, "Bio.codonalign.codonalignment.CodonAlignment.get_dn_ds_tree"]], "mktest() (in module bio.codonalign.codonalignment)": [[279, "Bio.codonalign.codonalignment.mktest"]], "tomultipleseqalignment() (bio.codonalign.codonalignment.codonalignment method)": [[279, "Bio.codonalign.codonalignment.CodonAlignment.toMultipleSeqAlignment"]], "bio.codonalign.codonseq": [[280, "module-Bio.codonalign.codonseq"]], "codonseq (class in bio.codonalign.codonseq)": [[280, "Bio.codonalign.codonseq.CodonSeq"]], "__abstractmethods__ (bio.codonalign.codonseq.codonseq attribute)": [[280, "Bio.codonalign.codonseq.CodonSeq.__abstractmethods__"]], "__init__() (bio.codonalign.codonseq.codonseq method)": [[280, "Bio.codonalign.codonseq.CodonSeq.__init__"]], "cal_dn_ds() (in module bio.codonalign.codonseq)": [[280, "Bio.codonalign.codonseq.cal_dn_ds"]], "from_seq() (bio.codonalign.codonseq.codonseq class method)": [[280, "Bio.codonalign.codonseq.CodonSeq.from_seq"]], "full_translate() (bio.codonalign.codonseq.codonseq method)": [[280, "Bio.codonalign.codonseq.CodonSeq.full_translate"]], "get_codon() (bio.codonalign.codonseq.codonseq method)": [[280, "Bio.codonalign.codonseq.CodonSeq.get_codon"]], "get_codon_num() (bio.codonalign.codonseq.codonseq method)": [[280, "Bio.codonalign.codonseq.CodonSeq.get_codon_num"]], "get_full_rf_table() (bio.codonalign.codonseq.codonseq method)": [[280, "Bio.codonalign.codonseq.CodonSeq.get_full_rf_table"]], "toseq() (bio.codonalign.codonseq.codonseq method)": [[280, "Bio.codonalign.codonseq.CodonSeq.toSeq"]], "translate() (bio.codonalign.codonseq.codonseq method)": [[280, "Bio.codonalign.codonseq.CodonSeq.translate"]], "ungap() (bio.codonalign.codonseq.codonseq method)": [[280, "Bio.codonalign.codonseq.CodonSeq.ungap"]], "bio.knn": [[281, "module-Bio.kNN"]], "__init__() (bio.knn.knn method)": [[281, "Bio.kNN.kNN.__init__"]], "calculate() (in module bio.knn)": [[281, "Bio.kNN.calculate"]], "classify() (in module bio.knn)": [[281, "Bio.kNN.classify"]], "equal_weight() (in module bio.knn)": [[281, "Bio.kNN.equal_weight"]], "knn (class in bio.knn)": [[281, "Bio.kNN.kNN"]], "train() (in module bio.knn)": [[281, "Bio.kNN.train"]], "bio.motifs": [[282, "module-Bio.motifs"]], "instances (class in bio.motifs)": [[282, "Bio.motifs.Instances"]], "motif (class in bio.motifs)": [[282, "Bio.motifs.Motif"]], "__format__() (bio.motifs.motif method)": [[282, "Bio.motifs.Motif.__format__"]], "__getitem__() (bio.motifs.motif method)": [[282, "Bio.motifs.Motif.__getitem__"]], "__init__() (bio.motifs.instances method)": [[282, "Bio.motifs.Instances.__init__"]], "__init__() (bio.motifs.motif method)": [[282, "Bio.motifs.Motif.__init__"]], "__len__() (bio.motifs.motif method)": [[282, "Bio.motifs.Motif.__len__"]], "__str__() (bio.motifs.instances method)": [[282, "Bio.motifs.Instances.__str__"]], "__str__() (bio.motifs.motif method)": [[282, "Bio.motifs.Motif.__str__"]], "anticonsensus (bio.motifs.motif property)": [[282, "Bio.motifs.Motif.anticonsensus"]], "background (bio.motifs.motif property)": [[282, "Bio.motifs.Motif.background"]], "consensus (bio.motifs.motif property)": [[282, "Bio.motifs.Motif.consensus"]], "count() (bio.motifs.instances method)": [[282, "Bio.motifs.Instances.count"]], "create() (in module bio.motifs)": [[282, "Bio.motifs.create"]], "degenerate_consensus (bio.motifs.motif property)": [[282, "Bio.motifs.Motif.degenerate_consensus"]], "format() (bio.motifs.motif method)": [[282, "Bio.motifs.Motif.format"]], "instances (bio.motifs.motif property)": [[282, "Bio.motifs.Motif.instances"]], "mask (bio.motifs.motif property)": [[282, "Bio.motifs.Motif.mask"]], "parse() (in module bio.motifs)": [[282, "Bio.motifs.parse"]], "pseudocounts (bio.motifs.motif property)": [[282, "Bio.motifs.Motif.pseudocounts"]], "pssm (bio.motifs.motif property)": [[282, "Bio.motifs.Motif.pssm"]], "pwm (bio.motifs.motif property)": [[282, "Bio.motifs.Motif.pwm"]], "read() (in module bio.motifs)": [[282, "Bio.motifs.read"]], "relative_entropy (bio.motifs.motif property)": [[282, "Bio.motifs.Motif.relative_entropy"]], "reverse_complement() (bio.motifs.instances method)": [[282, "Bio.motifs.Instances.reverse_complement"]], "reverse_complement() (bio.motifs.motif method)": [[282, "Bio.motifs.Motif.reverse_complement"]], "search() (bio.motifs.instances method)": [[282, "Bio.motifs.Instances.search"]], "weblogo() (bio.motifs.motif method)": [[282, "Bio.motifs.Motif.weblogo"]], "write() (in module bio.motifs)": [[282, "Bio.motifs.write"]], "bio.motifs.alignace": [[283, "module-Bio.motifs.alignace"]], "record (class in bio.motifs.alignace)": [[283, "Bio.motifs.alignace.Record"]], "__init__() (bio.motifs.alignace.record method)": [[283, "Bio.motifs.alignace.Record.__init__"]], "read() (in module bio.motifs.alignace)": [[283, "Bio.motifs.alignace.read"]], "bio.motifs.applications": [[284, "module-Bio.motifs.applications"]], "bio.motifs.clusterbuster": [[285, "module-Bio.motifs.clusterbuster"]], "record (class in bio.motifs.clusterbuster)": [[285, "Bio.motifs.clusterbuster.Record"]], "__str__() (bio.motifs.clusterbuster.record method)": [[285, "Bio.motifs.clusterbuster.Record.__str__"]], "read() (in module bio.motifs.clusterbuster)": [[285, "Bio.motifs.clusterbuster.read"]], "write() (in module bio.motifs.clusterbuster)": [[285, "Bio.motifs.clusterbuster.write"]], "bio.motifs.jaspar": [[286, "module-Bio.motifs.jaspar"]], "motif (class in bio.motifs.jaspar)": [[286, "Bio.motifs.jaspar.Motif"]], "record (class in bio.motifs.jaspar)": [[286, "Bio.motifs.jaspar.Record"]], "__eq__() (bio.motifs.jaspar.motif method)": [[286, "Bio.motifs.jaspar.Motif.__eq__"]], "__hash__() (bio.motifs.jaspar.motif method)": [[286, "Bio.motifs.jaspar.Motif.__hash__"]], "__init__() (bio.motifs.jaspar.motif method)": [[286, "Bio.motifs.jaspar.Motif.__init__"]], "__init__() (bio.motifs.jaspar.record method)": [[286, "Bio.motifs.jaspar.Record.__init__"]], "__str__() (bio.motifs.jaspar.motif method)": [[286, "Bio.motifs.jaspar.Motif.__str__"]], "__str__() (bio.motifs.jaspar.record method)": [[286, "Bio.motifs.jaspar.Record.__str__"]], "base_id (bio.motifs.jaspar.motif property)": [[286, "Bio.motifs.jaspar.Motif.base_id"]], "calculate_pseudocounts() (in module bio.motifs.jaspar)": [[286, "Bio.motifs.jaspar.calculate_pseudocounts"]], "read() (in module bio.motifs.jaspar)": [[286, "Bio.motifs.jaspar.read"]], "split_jaspar_id() (in module bio.motifs.jaspar)": [[286, "Bio.motifs.jaspar.split_jaspar_id"]], "to_dict() (bio.motifs.jaspar.record method)": [[286, "Bio.motifs.jaspar.Record.to_dict"]], "version (bio.motifs.jaspar.motif property)": [[286, "Bio.motifs.jaspar.Motif.version"]], "write() (in module bio.motifs.jaspar)": [[286, "Bio.motifs.jaspar.write"]], "bio.motifs.jaspar.db": [[287, "module-Bio.motifs.jaspar.db"]], "jaspar5 (class in bio.motifs.jaspar.db)": [[287, "Bio.motifs.jaspar.db.JASPAR5"]], "__init__() (bio.motifs.jaspar.db.jaspar5 method)": [[287, "Bio.motifs.jaspar.db.JASPAR5.__init__"]], "__str__() (bio.motifs.jaspar.db.jaspar5 method)": [[287, "Bio.motifs.jaspar.db.JASPAR5.__str__"]], "fetch_motif_by_id() (bio.motifs.jaspar.db.jaspar5 method)": [[287, "Bio.motifs.jaspar.db.JASPAR5.fetch_motif_by_id"]], "fetch_motifs() (bio.motifs.jaspar.db.jaspar5 method)": [[287, "Bio.motifs.jaspar.db.JASPAR5.fetch_motifs"]], "fetch_motifs_by_name() (bio.motifs.jaspar.db.jaspar5 method)": [[287, "Bio.motifs.jaspar.db.JASPAR5.fetch_motifs_by_name"]], "bio.motifs.mast": [[288, "module-Bio.motifs.mast"]], "record (class in bio.motifs.mast)": [[288, "Bio.motifs.mast.Record"]], "__getitem__() (bio.motifs.mast.record method)": [[288, "Bio.motifs.mast.Record.__getitem__"]], "__init__() (bio.motifs.mast.record method)": [[288, "Bio.motifs.mast.Record.__init__"]], "read() (in module bio.motifs.mast)": [[288, "Bio.motifs.mast.read"]], "bio.motifs.matrix": [[289, "module-Bio.motifs.matrix"]], "frequencypositionmatrix (class in bio.motifs.matrix)": [[289, "Bio.motifs.matrix.FrequencyPositionMatrix"]], "genericpositionmatrix (class in bio.motifs.matrix)": [[289, "Bio.motifs.matrix.GenericPositionMatrix"]], "positionspecificscoringmatrix (class in bio.motifs.matrix)": [[289, "Bio.motifs.matrix.PositionSpecificScoringMatrix"]], "positionweightmatrix (class in bio.motifs.matrix)": [[289, "Bio.motifs.matrix.PositionWeightMatrix"]], "__getitem__() (bio.motifs.matrix.genericpositionmatrix method)": [[289, "Bio.motifs.matrix.GenericPositionMatrix.__getitem__"]], "__init__() (bio.motifs.matrix.genericpositionmatrix method)": [[289, "Bio.motifs.matrix.GenericPositionMatrix.__init__"]], "__init__() (bio.motifs.matrix.positionweightmatrix method)": [[289, "Bio.motifs.matrix.PositionWeightMatrix.__init__"]], "__str__() (bio.motifs.matrix.genericpositionmatrix method)": [[289, "Bio.motifs.matrix.GenericPositionMatrix.__str__"]], "anticonsensus (bio.motifs.matrix.genericpositionmatrix property)": [[289, "Bio.motifs.matrix.GenericPositionMatrix.anticonsensus"]], "calculate() (bio.motifs.matrix.positionspecificscoringmatrix method)": [[289, "Bio.motifs.matrix.PositionSpecificScoringMatrix.calculate"]], "calculate_consensus() (bio.motifs.matrix.genericpositionmatrix method)": [[289, "Bio.motifs.matrix.GenericPositionMatrix.calculate_consensus"]], "consensus (bio.motifs.matrix.genericpositionmatrix property)": [[289, "Bio.motifs.matrix.GenericPositionMatrix.consensus"]], "degenerate_consensus (bio.motifs.matrix.genericpositionmatrix property)": [[289, "Bio.motifs.matrix.GenericPositionMatrix.degenerate_consensus"]], "dist_pearson() (bio.motifs.matrix.positionspecificscoringmatrix method)": [[289, "Bio.motifs.matrix.PositionSpecificScoringMatrix.dist_pearson"]], "dist_pearson_at() (bio.motifs.matrix.positionspecificscoringmatrix method)": [[289, "Bio.motifs.matrix.PositionSpecificScoringMatrix.dist_pearson_at"]], "distribution() (bio.motifs.matrix.positionspecificscoringmatrix method)": [[289, "Bio.motifs.matrix.PositionSpecificScoringMatrix.distribution"]], "gc_content (bio.motifs.matrix.genericpositionmatrix property)": [[289, "Bio.motifs.matrix.GenericPositionMatrix.gc_content"]], "gc_content (bio.motifs.matrix.positionspecificscoringmatrix property)": [[289, "Bio.motifs.matrix.PositionSpecificScoringMatrix.gc_content"]], "log_odds() (bio.motifs.matrix.positionweightmatrix method)": [[289, "Bio.motifs.matrix.PositionWeightMatrix.log_odds"]], "max (bio.motifs.matrix.positionspecificscoringmatrix property)": [[289, "Bio.motifs.matrix.PositionSpecificScoringMatrix.max"]], "mean() (bio.motifs.matrix.positionspecificscoringmatrix method)": [[289, "Bio.motifs.matrix.PositionSpecificScoringMatrix.mean"]], "min (bio.motifs.matrix.positionspecificscoringmatrix property)": [[289, "Bio.motifs.matrix.PositionSpecificScoringMatrix.min"]], "normalize() (bio.motifs.matrix.frequencypositionmatrix method)": [[289, "Bio.motifs.matrix.FrequencyPositionMatrix.normalize"]], "reverse_complement() (bio.motifs.matrix.genericpositionmatrix method)": [[289, "Bio.motifs.matrix.GenericPositionMatrix.reverse_complement"]], "search() (bio.motifs.matrix.positionspecificscoringmatrix method)": [[289, "Bio.motifs.matrix.PositionSpecificScoringMatrix.search"]], "std() (bio.motifs.matrix.positionspecificscoringmatrix method)": [[289, "Bio.motifs.matrix.PositionSpecificScoringMatrix.std"]], "bio.motifs.meme": [[290, "module-Bio.motifs.meme"]], "instance (class in bio.motifs.meme)": [[290, "Bio.motifs.meme.Instance"]], "motif (class in bio.motifs.meme)": [[290, "Bio.motifs.meme.Motif"]], "record (class in bio.motifs.meme)": [[290, "Bio.motifs.meme.Record"]], "__abstractmethods__ (bio.motifs.meme.instance attribute)": [[290, "Bio.motifs.meme.Instance.__abstractmethods__"]], "__getitem__() (bio.motifs.meme.record method)": [[290, "Bio.motifs.meme.Record.__getitem__"]], "__init__() (bio.motifs.meme.instance method)": [[290, "Bio.motifs.meme.Instance.__init__"]], "__init__() (bio.motifs.meme.motif method)": [[290, "Bio.motifs.meme.Motif.__init__"]], "__init__() (bio.motifs.meme.record method)": [[290, "Bio.motifs.meme.Record.__init__"]], "read() (in module bio.motifs.meme)": [[290, "Bio.motifs.meme.read"]], "bio.motifs.minimal": [[291, "module-Bio.motifs.minimal"]], "record (class in bio.motifs.minimal)": [[291, "Bio.motifs.minimal.Record"]], "__getitem__() (bio.motifs.minimal.record method)": [[291, "Bio.motifs.minimal.Record.__getitem__"]], "__init__() (bio.motifs.minimal.record method)": [[291, "Bio.motifs.minimal.Record.__init__"]], "read() (in module bio.motifs.minimal)": [[291, "Bio.motifs.minimal.read"]], "bio.motifs.pfm": [[292, "module-Bio.motifs.pfm"]], "record (class in bio.motifs.pfm)": [[292, "Bio.motifs.pfm.Record"]], "__str__() (bio.motifs.pfm.record method)": [[292, "Bio.motifs.pfm.Record.__str__"]], "read() (in module bio.motifs.pfm)": [[292, "Bio.motifs.pfm.read"]], "write() (in module bio.motifs.pfm)": [[292, "Bio.motifs.pfm.write"]], "bio.motifs.thresholds": [[293, "module-Bio.motifs.thresholds"]], "scoredistribution (class in bio.motifs.thresholds)": [[293, "Bio.motifs.thresholds.ScoreDistribution"]], "__init__() (bio.motifs.thresholds.scoredistribution method)": [[293, "Bio.motifs.thresholds.ScoreDistribution.__init__"]], "modify() (bio.motifs.thresholds.scoredistribution method)": [[293, "Bio.motifs.thresholds.ScoreDistribution.modify"]], "threshold_balanced() (bio.motifs.thresholds.scoredistribution method)": [[293, "Bio.motifs.thresholds.ScoreDistribution.threshold_balanced"]], "threshold_fnr() (bio.motifs.thresholds.scoredistribution method)": [[293, "Bio.motifs.thresholds.ScoreDistribution.threshold_fnr"]], "threshold_fpr() (bio.motifs.thresholds.scoredistribution method)": [[293, "Bio.motifs.thresholds.ScoreDistribution.threshold_fpr"]], "threshold_patser() (bio.motifs.thresholds.scoredistribution method)": [[293, "Bio.motifs.thresholds.ScoreDistribution.threshold_patser"]], "bio.motifs.transfac": [[294, "module-Bio.motifs.transfac"]], "motif (class in bio.motifs.transfac)": [[294, "Bio.motifs.transfac.Motif"]], "record (class in bio.motifs.transfac)": [[294, "Bio.motifs.transfac.Record"]], "__getitem__() (bio.motifs.transfac.motif method)": [[294, "Bio.motifs.transfac.Motif.__getitem__"]], "__init__() (bio.motifs.transfac.record method)": [[294, "Bio.motifs.transfac.Record.__init__"]], "__str__() (bio.motifs.transfac.record method)": [[294, "Bio.motifs.transfac.Record.__str__"]], "multiple_value_keys (bio.motifs.transfac.motif attribute)": [[294, "Bio.motifs.transfac.Motif.multiple_value_keys"]], "read() (in module bio.motifs.transfac)": [[294, "Bio.motifs.transfac.read"]], "reference_keys (bio.motifs.transfac.motif attribute)": [[294, "Bio.motifs.transfac.Motif.reference_keys"]], "write() (in module bio.motifs.transfac)": [[294, "Bio.motifs.transfac.write"]], "bio.motifs.xms": [[295, "module-Bio.motifs.xms"]], "record (class in bio.motifs.xms)": [[295, "Bio.motifs.xms.Record"]], "xmsscanner (class in bio.motifs.xms)": [[295, "Bio.motifs.xms.XMSScanner"]], "__init__() (bio.motifs.xms.xmsscanner method)": [[295, "Bio.motifs.xms.XMSScanner.__init__"]], "__str__() (bio.motifs.xms.record method)": [[295, "Bio.motifs.xms.Record.__str__"]], "get_acgt() (bio.motifs.xms.xmsscanner method)": [[295, "Bio.motifs.xms.XMSScanner.get_acgt"]], "get_property_value() (bio.motifs.xms.xmsscanner method)": [[295, "Bio.motifs.xms.XMSScanner.get_property_value"]], "get_text() (bio.motifs.xms.xmsscanner method)": [[295, "Bio.motifs.xms.XMSScanner.get_text"]], "handle_motif() (bio.motifs.xms.xmsscanner method)": [[295, "Bio.motifs.xms.XMSScanner.handle_motif"]], "read() (in module bio.motifs.xms)": [[295, "Bio.motifs.xms.read"]], "alignment (class in bio.pairwise2)": [[296, "Bio.pairwise2.Alignment"]], "bio.pairwise2": [[296, "module-Bio.pairwise2"]], "__call__() (bio.pairwise2.affine_penalty method)": [[296, "Bio.pairwise2.affine_penalty.__call__"]], "__call__() (bio.pairwise2.dictionary_match method)": [[296, "Bio.pairwise2.dictionary_match.__call__"]], "__call__() (bio.pairwise2.identity_match method)": [[296, "Bio.pairwise2.identity_match.__call__"]], "__getnewargs__() (bio.pairwise2.alignment method)": [[296, "Bio.pairwise2.Alignment.__getnewargs__"]], "__init__() (bio.pairwise2.affine_penalty method)": [[296, "Bio.pairwise2.affine_penalty.__init__"]], "__init__() (bio.pairwise2.dictionary_match method)": [[296, "Bio.pairwise2.dictionary_match.__init__"]], "__init__() (bio.pairwise2.identity_match method)": [[296, "Bio.pairwise2.identity_match.__init__"]], "__new__() (bio.pairwise2.alignment static method)": [[296, "Bio.pairwise2.Alignment.__new__"]], "__repr__() (bio.pairwise2.alignment method)": [[296, "Bio.pairwise2.Alignment.__repr__"]], "__slots__ (bio.pairwise2.alignment attribute)": [[296, "Bio.pairwise2.Alignment.__slots__"]], "affine_penalty (class in bio.pairwise2)": [[296, "Bio.pairwise2.affine_penalty"]], "calc_affine_penalty() (in module bio.pairwise2)": [[296, "Bio.pairwise2.calc_affine_penalty"]], "dictionary_match (class in bio.pairwise2)": [[296, "Bio.pairwise2.dictionary_match"]], "end (bio.pairwise2.alignment attribute)": [[296, "Bio.pairwise2.Alignment.end"]], "format_alignment() (in module bio.pairwise2)": [[296, "Bio.pairwise2.format_alignment"]], "identity_match (class in bio.pairwise2)": [[296, "Bio.pairwise2.identity_match"]], "print_matrix() (in module bio.pairwise2)": [[296, "Bio.pairwise2.print_matrix"]], "score (bio.pairwise2.alignment attribute)": [[296, "Bio.pairwise2.Alignment.score"]], "seqa (bio.pairwise2.alignment attribute)": [[296, "Bio.pairwise2.Alignment.seqA"]], "seqb (bio.pairwise2.alignment attribute)": [[296, "Bio.pairwise2.Alignment.seqB"]], "start (bio.pairwise2.alignment attribute)": [[296, "Bio.pairwise2.Alignment.start"]], "bio.phenotype": [[297, "module-Bio.phenotype"]], "parse() (in module bio.phenotype)": [[297, "Bio.phenotype.parse"]], "read() (in module bio.phenotype)": [[297, "Bio.phenotype.read"]], "write() (in module bio.phenotype)": [[297, "Bio.phenotype.write"]], "bio.phenotype.phen_micro": [[298, "module-Bio.phenotype.phen_micro"]], "csviterator() (in module bio.phenotype.phen_micro)": [[298, "Bio.phenotype.phen_micro.CsvIterator"]], "jsoniterator() (in module bio.phenotype.phen_micro)": [[298, "Bio.phenotype.phen_micro.JsonIterator"]], "jsonwriter (class in bio.phenotype.phen_micro)": [[298, "Bio.phenotype.phen_micro.JsonWriter"]], "platerecord (class in bio.phenotype.phen_micro)": [[298, "Bio.phenotype.phen_micro.PlateRecord"]], "wellrecord (class in bio.phenotype.phen_micro)": [[298, "Bio.phenotype.phen_micro.WellRecord"]], "__add__() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.__add__"]], "__add__() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.__add__"]], "__contains__() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.__contains__"]], "__delitem__() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.__delitem__"]], "__eq__() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.__eq__"]], "__eq__() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.__eq__"]], "__getitem__() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.__getitem__"]], "__getitem__() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.__getitem__"]], "__hash__ (bio.phenotype.phen_micro.platerecord attribute)": [[298, "Bio.phenotype.phen_micro.PlateRecord.__hash__"]], "__hash__ (bio.phenotype.phen_micro.wellrecord attribute)": [[298, "Bio.phenotype.phen_micro.WellRecord.__hash__"]], "__init__() (bio.phenotype.phen_micro.jsonwriter method)": [[298, "Bio.phenotype.phen_micro.JsonWriter.__init__"]], "__init__() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.__init__"]], "__init__() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.__init__"]], "__iter__() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.__iter__"]], "__iter__() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.__iter__"]], "__len__() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.__len__"]], "__len__() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.__len__"]], "__repr__() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.__repr__"]], "__repr__() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.__repr__"]], "__setitem__() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.__setitem__"]], "__setitem__() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.__setitem__"]], "__str__() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.__str__"]], "__str__() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.__str__"]], "__sub__() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.__sub__"]], "__sub__() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.__sub__"]], "fit() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.fit"]], "get_column() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.get_column"]], "get_raw() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.get_raw"]], "get_row() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.get_row"]], "get_signals() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.get_signals"]], "get_times() (bio.phenotype.phen_micro.wellrecord method)": [[298, "Bio.phenotype.phen_micro.WellRecord.get_times"]], "subtract_control() (bio.phenotype.phen_micro.platerecord method)": [[298, "Bio.phenotype.phen_micro.PlateRecord.subtract_control"]], "write() (bio.phenotype.phen_micro.jsonwriter method)": [[298, "Bio.phenotype.phen_micro.JsonWriter.write"]], "bio.phenotype.pm_fitting": [[299, "module-Bio.phenotype.pm_fitting"]], "fit() (in module bio.phenotype.pm_fitting)": [[299, "Bio.phenotype.pm_fitting.fit"]], "get_area() (in module bio.phenotype.pm_fitting)": [[299, "Bio.phenotype.pm_fitting.get_area"]], "gompertz() (in module bio.phenotype.pm_fitting)": [[299, "Bio.phenotype.pm_fitting.gompertz"]], "guess_lag() (in module bio.phenotype.pm_fitting)": [[299, "Bio.phenotype.pm_fitting.guess_lag"]], "guess_plateau() (in module bio.phenotype.pm_fitting)": [[299, "Bio.phenotype.pm_fitting.guess_plateau"]], "logistic() (in module bio.phenotype.pm_fitting)": [[299, "Bio.phenotype.pm_fitting.logistic"]], "richards() (in module bio.phenotype.pm_fitting)": [[299, "Bio.phenotype.pm_fitting.richards"]], "biosql": [[300, "module-BioSQL"]], "biosql.bioseq": [[301, "module-BioSQL.BioSeq"]], "dbseqrecord (class in biosql.bioseq)": [[301, "BioSQL.BioSeq.DBSeqRecord"]], "__init__() (biosql.bioseq.dbseqrecord method)": [[301, "BioSQL.BioSeq.DBSeqRecord.__init__"]], "annotations (biosql.bioseq.dbseqrecord property)": [[301, "BioSQL.BioSeq.DBSeqRecord.annotations"]], "dbxrefs (biosql.bioseq.dbseqrecord property)": [[301, "BioSQL.BioSeq.DBSeqRecord.dbxrefs"]], "features (biosql.bioseq.dbseqrecord property)": [[301, "BioSQL.BioSeq.DBSeqRecord.features"]], "seq (biosql.bioseq.dbseqrecord property)": [[301, "BioSQL.BioSeq.DBSeqRecord.seq"]], "adaptor (class in biosql.bioseqdatabase)": [[302, "BioSQL.BioSeqDatabase.Adaptor"]], "biosql.bioseqdatabase": [[302, "module-BioSQL.BioSeqDatabase"]], "bioseqdatabase (class in biosql.bioseqdatabase)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase"]], "dbserver (class in biosql.bioseqdatabase)": [[302, "BioSQL.BioSeqDatabase.DBServer"]], "mysqlconnectoradaptor (class in biosql.bioseqdatabase)": [[302, "BioSQL.BioSeqDatabase.MysqlConnectorAdaptor"]], "__contains__() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.__contains__"]], "__contains__() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.__contains__"]], "__delitem__() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.__delitem__"]], "__delitem__() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.__delitem__"]], "__getitem__() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.__getitem__"]], "__getitem__() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.__getitem__"]], "__init__() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.__init__"]], "__init__() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.__init__"]], "__init__() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.__init__"]], "__iter__() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.__iter__"]], "__iter__() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.__iter__"]], "__len__() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.__len__"]], "__len__() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.__len__"]], "__repr__() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.__repr__"]], "__repr__() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.__repr__"]], "autocommit() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.autocommit"]], "close() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.close"]], "close() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.close"]], "commit() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.commit"]], "commit() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.commit"]], "execute() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.execute"]], "execute_and_fetch_col0() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.execute_and_fetch_col0"]], "execute_and_fetch_col0() (biosql.bioseqdatabase.mysqlconnectoradaptor method)": [[302, "BioSQL.BioSeqDatabase.MysqlConnectorAdaptor.execute_and_fetch_col0"]], "execute_and_fetchall() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.execute_and_fetchall"]], "execute_and_fetchall() (biosql.bioseqdatabase.mysqlconnectoradaptor method)": [[302, "BioSQL.BioSeqDatabase.MysqlConnectorAdaptor.execute_and_fetchall"]], "execute_one() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.execute_one"]], "execute_one() (biosql.bioseqdatabase.mysqlconnectoradaptor method)": [[302, "BioSQL.BioSeqDatabase.MysqlConnectorAdaptor.execute_one"]], "executemany() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.executemany"]], "fetch_dbid_by_dbname() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.fetch_dbid_by_dbname"]], "fetch_seqid_by_accession() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.fetch_seqid_by_accession"]], "fetch_seqid_by_display_id() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.fetch_seqid_by_display_id"]], "fetch_seqid_by_identifier() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.fetch_seqid_by_identifier"]], "fetch_seqid_by_version() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.fetch_seqid_by_version"]], "fetch_seqids_by_accession() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.fetch_seqids_by_accession"]], "get_seq_by_acc() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.get_Seq_by_acc"]], "get_seq_by_id() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.get_Seq_by_id"]], "get_seq_by_ver() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.get_Seq_by_ver"]], "get_seqs_by_acc() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.get_Seqs_by_acc"]], "get_subseq_as_string() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.get_subseq_as_string"]], "items() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.items"]], "items() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.items"]], "keys() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.keys"]], "keys() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.keys"]], "last_id() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.last_id"]], "list_any_ids() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.list_any_ids"]], "list_biodatabase_names() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.list_biodatabase_names"]], "list_bioentry_display_ids() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.list_bioentry_display_ids"]], "list_bioentry_ids() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.list_bioentry_ids"]], "load() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.load"]], "load_database_sql() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.load_database_sql"]], "lookup() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.lookup"]], "new_database() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.new_database"]], "open_database() (in module biosql.bioseqdatabase)": [[302, "BioSQL.BioSeqDatabase.open_database"]], "rollback() (biosql.bioseqdatabase.adaptor method)": [[302, "BioSQL.BioSeqDatabase.Adaptor.rollback"]], "rollback() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.rollback"]], "values() (biosql.bioseqdatabase.bioseqdatabase method)": [[302, "BioSQL.BioSeqDatabase.BioSeqDatabase.values"]], "values() (biosql.bioseqdatabase.dbserver method)": [[302, "BioSQL.BioSeqDatabase.DBServer.values"]], "biosql.dbutils": [[303, "module-BioSQL.DBUtils"]], "generic_dbutils (class in biosql.dbutils)": [[303, "BioSQL.DBUtils.Generic_dbutils"]], "mysql_dbutils (class in biosql.dbutils)": [[303, "BioSQL.DBUtils.Mysql_dbutils"]], "pgdb_dbutils (class in biosql.dbutils)": [[303, "BioSQL.DBUtils.Pgdb_dbutils"]], "psycopg2_dbutils (class in biosql.dbutils)": [[303, "BioSQL.DBUtils.Psycopg2_dbutils"]], "sqlite_dbutils (class in biosql.dbutils)": [[303, "BioSQL.DBUtils.Sqlite_dbutils"]], "__init__() (biosql.dbutils.generic_dbutils method)": [[303, "BioSQL.DBUtils.Generic_dbutils.__init__"]], "autocommit() (biosql.dbutils.generic_dbutils method)": [[303, "BioSQL.DBUtils.Generic_dbutils.autocommit"]], "autocommit() (biosql.dbutils.pgdb_dbutils method)": [[303, "BioSQL.DBUtils.Pgdb_dbutils.autocommit"]], "autocommit() (biosql.dbutils.psycopg2_dbutils method)": [[303, "BioSQL.DBUtils.Psycopg2_dbutils.autocommit"]], "execute() (biosql.dbutils.generic_dbutils method)": [[303, "BioSQL.DBUtils.Generic_dbutils.execute"]], "execute() (biosql.dbutils.sqlite_dbutils method)": [[303, "BioSQL.DBUtils.Sqlite_dbutils.execute"]], "executemany() (biosql.dbutils.generic_dbutils method)": [[303, "BioSQL.DBUtils.Generic_dbutils.executemany"]], "executemany() (biosql.dbutils.sqlite_dbutils method)": [[303, "BioSQL.DBUtils.Sqlite_dbutils.executemany"]], "get_dbutils() (in module biosql.dbutils)": [[303, "BioSQL.DBUtils.get_dbutils"]], "last_id() (biosql.dbutils.generic_dbutils method)": [[303, "BioSQL.DBUtils.Generic_dbutils.last_id"]], "last_id() (biosql.dbutils.mysql_dbutils method)": [[303, "BioSQL.DBUtils.Mysql_dbutils.last_id"]], "tname() (biosql.dbutils.generic_dbutils method)": [[303, "BioSQL.DBUtils.Generic_dbutils.tname"]], "biosql.loader": [[304, "module-BioSQL.Loader"]], "databaseloader (class in biosql.loader)": [[304, "BioSQL.Loader.DatabaseLoader"]], "databaseremover (class in biosql.loader)": [[304, "BioSQL.Loader.DatabaseRemover"]], "__init__() (biosql.loader.databaseloader method)": [[304, "BioSQL.Loader.DatabaseLoader.__init__"]], "__init__() (biosql.loader.databaseremover method)": [[304, "BioSQL.Loader.DatabaseRemover.__init__"]], "load_seqrecord() (biosql.loader.databaseloader method)": [[304, "BioSQL.Loader.DatabaseLoader.load_seqrecord"]], "remove() (biosql.loader.databaseremover method)": [[304, "BioSQL.Loader.DatabaseRemover.remove"]]}})